paddle.einsum("...ab,...ba,...ab,...ab", Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), Tensor([4, 3, 1, 4],"float64"), )
paddle.matmul(Tensor([1, 2, 2048, 2048],"bfloat16"), Tensor([1, 2, 2048, 128],"bfloat16"), )
paddle.matmul(x=Tensor([1, 2, 2048, 128],"bfloat16"), y=Tensor([1, 2, 2048, 128],"bfloat16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([3, 2, 2, 5],"float64"), y=Tensor([5],"float64"), transpose_x=False, transpose_y=True, )
paddle.Tensor.matmul(Tensor([125, 1],"float32"), Tensor([1, 0],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([12, 512, 10, 10],"float16"), offset=Tensor([12, 18, 10, 10],"float16"), weight=Tensor([512, 512, 3, 3],"float16"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([12, 9, 10, 10],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([12, 512, 20, 20],"float16"), offset=Tensor([12, 18, 10, 10],"float16"), weight=Tensor([512, 512, 3, 3],"float16"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([12, 9, 10, 10],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 128, 76, 136],"float16"), offset=Tensor([20, 18, 76, 136],"float16"), weight=Tensor([64, 128, 3, 3],"float16"), bias=Tensor([64],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 76, 136],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 256, 38, 68],"float16"), offset=Tensor([20, 18, 38, 68],"float16"), weight=Tensor([128, 256, 3, 3],"float16"), bias=Tensor([128],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 38, 68],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 512, 19, 34],"float16"), offset=Tensor([20, 18, 19, 34],"float16"), weight=Tensor([256, 512, 3, 3],"float16"), bias=Tensor([256],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 19, 34],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([6, 128, 100, 100],"float16"), offset=Tensor([6, 36, 100, 100],"float16"), weight=Tensor([128, 128, 3, 3],"float16"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([6, 18, 100, 100],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([6, 128, 200, 200],"float16"), offset=Tensor([6, 36, 100, 100],"float16"), weight=Tensor([128, 128, 3, 3],"float16"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([6, 18, 100, 100],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([6, 256, 100, 100],"float16"), offset=Tensor([6, 36, 50, 50],"float16"), weight=Tensor([256, 256, 3, 3],"float16"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([6, 18, 50, 50],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([6, 256, 50, 50],"float16"), offset=Tensor([6, 36, 50, 50],"float16"), weight=Tensor([256, 256, 3, 3],"float16"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([6, 18, 50, 50],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([6, 512, 25, 25],"float16"), offset=Tensor([6, 36, 25, 25],"float16"), weight=Tensor([512, 512, 3, 3],"float16"), bias=None, stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([6, 18, 25, 25],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([6, 512, 50, 50],"float16"), offset=Tensor([6, 36, 25, 25],"float16"), weight=Tensor([512, 512, 3, 3],"float16"), bias=None, stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=2, groups=1, mask=Tensor([6, 18, 25, 25],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([64, 64, 16, 16],"float16"), offset=Tensor([64, 144, 16, 16],"float16"), weight=Tensor([64, 64, 3, 3],"float16"), bias=Tensor([64],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=8, groups=1, mask=Tensor([64, 72, 16, 16],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([64, 64, 32, 32],"float16"), offset=Tensor([64, 144, 32, 32],"float16"), weight=Tensor([64, 64, 3, 3],"float16"), bias=Tensor([64],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=8, groups=1, mask=Tensor([64, 72, 32, 32],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([64, 64, 64, 64],"float16"), offset=Tensor([64, 144, 64, 64],"float16"), weight=Tensor([64, 64, 3, 3],"float16"), bias=Tensor([64],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=8, groups=1, mask=Tensor([64, 72, 64, 64],"float16"), )
paddle.view(Tensor([10, 10, 10, 20],"float32"), "uint8", )
paddle.view(Tensor([10, 10, 10, 20],"float32"), Dtype(uint8), )
paddle.tensordot(Tensor([1, 5, 5, 5],"float32"), Tensor([0, 5, 5, 5],"float32"), list[list[],list[],], ) 
paddle.vision.ops.decode_jpeg(Tensor([142887],"uint8"), )
paddle.vision.ops.decode_jpeg(Tensor([142887],"uint8"), mode="gray", )
paddle.vision.ops.decode_jpeg(Tensor([142887],"uint8"), mode="rgb", )


paddle.Tensor.matmul(Tensor([0, 1],"float32"), Tensor([1, 0],"float32"), )
paddle.Tensor.matmul(Tensor([0, 1],"float64"), Tensor([1, 0],"float64"), )
paddle.matmul(Tensor([2, 11008],"int8"), Tensor([64, 11008],"int8"), False, True, )
paddle.matmul(Tensor([2, 64],"int8"), Tensor([192, 64],"int8"), False, True, )
paddle.matmul(Tensor([2, 64],"int8"), Tensor([22016, 64],"int8"), False, True, )
paddle.matmul(Tensor([2, 64],"int8"), Tensor([64, 64],"int8"), False, True, )
paddle.matmul(Tensor([464, 11008],"int8"), Tensor([64, 11008],"int8"), False, True, )
paddle.matmul(Tensor([464, 64],"int8"), Tensor([192, 64],"int8"), False, True, )
paddle.matmul(Tensor([464, 64],"int8"), Tensor([22016, 64],"int8"), False, True, )
paddle.matmul(Tensor([464, 64],"int8"), Tensor([64, 64],"int8"), False, True, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 2],"float32"), Tensor([3, 1, 3, 3],"float32"), Tensor([1],"float32"), output_size=Tensor([2],"int64"), )
paddle.nn.functional.conv2d_transpose(x=Tensor([2, 2, 2, 6],"float32"), weight=Tensor([6, 1, 3, 3],"float32"), bias=Tensor([3],"float32"), output_size=Tensor([2],"int32"), stride=2, padding=list[1,0,], groups=3, data_format="NHWC", dilation=1, )
paddle.tensordot(Tensor([0, 0, 5, 5],"float32"), Tensor([0, 0, 5, 5],"float32"), list[list[],list[],], )
paddle.tensordot(Tensor([0, 5, 5, 5],"float64"), Tensor([0, 5, 5, 5],"float64"), list[list[],list[],], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([2, 2],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), list[Tensor([2],"int64"),Tensor([2],"int64"),], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(Tensor([2],"int64"),Tensor([2],"int64"),), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), Tensor([2, 2],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), list[Tensor([2],"int64"),Tensor([2],"int64"),], )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(Tensor([2],"int64"),Tensor([2],"int64"),), )
paddle.tensordot(Tensor([5, 0, 5, 0],"float32"), Tensor([5, 0, 5, 0],"float32"), list[list[],list[],], )
paddle.tensordot(Tensor([5, 5, 0, 5],"float32"), Tensor([5, 5, 0, 5],"float32"), list[list[],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 0],"float32"), Tensor([5, 5, 5, 0],"float32"), list[list[],list[],], )
paddle.vision.ops.distribute_fpn_proposals(fpn_rois=Tensor([10, 4],"float32"), min_level=2, max_level=5, refer_level=4, refer_scale=224, rois_num=Tensor([2],"int32"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([1, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([10, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([1024, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([2],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([106, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([11, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([110, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([113, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([116, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([117, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([119, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([12, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([122, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([123, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([124, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([125, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([126, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([127, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([128, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([129, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([13, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([130, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([131, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([132, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([133, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([134, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([135, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([136, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([137, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([138, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([139, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([14, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([141, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([142, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([143, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([144, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([145, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([147, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([148, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([149, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([15, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([150, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([151, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([152, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([153, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([154, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([155, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([157, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([158, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([159, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([16, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([160, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([161, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([162, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([163, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([164, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([165, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([166, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([167, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([168, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([169, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([17, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([171, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([172, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([173, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([174, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([175, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([176, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([177, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([178, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([179, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([18, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([180, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([181, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([182, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([183, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([184, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([186, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([187, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([188, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([189, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([19, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([190, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([191, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([192, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([193, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([194, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([195, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([196, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([197, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([198, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([199, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([2, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([20, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([200, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([201, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([202, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([203, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([204, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([2048, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([205, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([206, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([207, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([208, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([209, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([21, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([210, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([212, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([213, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([214, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([215, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([216, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([217, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([218, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([219, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([220, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([221, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([222, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([223, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([224, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([225, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([226, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([227, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([228, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([229, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([230, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([231, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([232, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([233, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([234, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([235, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([236, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([237, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([238, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([239, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([24, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([240, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([241, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([242, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([243, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([244, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([245, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([246, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([247, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([248, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([249, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([25, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([250, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([251, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([252, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([253, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([254, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([255, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([256, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([257, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([258, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([259, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([26, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([260, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([261, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([262, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([263, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([264, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([265, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([266, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([267, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([268, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([269, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([270, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([271, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([272, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([273, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([274, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([275, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([276, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([277, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([278, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([279, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([280, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([281, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([282, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([283, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([284, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([285, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([286, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([287, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([288, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([289, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([290, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([291, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([292, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([293, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([294, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([295, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([296, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([297, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([298, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([299, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([3, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([300, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([301, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([302, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([303, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([304, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([305, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([306, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([307, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([308, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([309, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([310, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([311, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([312, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([313, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([314, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([315, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([316, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([317, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([318, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([319, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([320, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([321, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([322, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([323, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([324, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([325, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([326, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([327, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([328, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([329, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([330, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([331, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([332, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([333, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([334, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([335, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([336, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([337, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([338, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([339, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([340, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([341, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([342, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([343, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([344, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([345, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([346, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([347, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([348, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([349, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([350, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([351, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([352, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([353, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([354, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([355, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([356, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([357, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([358, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([359, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([360, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([362, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([364, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([365, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([366, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([367, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([368, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([369, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([371, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([372, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([374, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([375, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([376, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([377, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([378, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([379, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([380, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([381, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([382, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([383, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([384, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([385, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([386, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([387, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([388, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([389, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([392, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([393, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([394, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([395, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([396, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([397, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([398, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([399, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([400, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([401, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([402, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([403, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([405, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([406, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([407, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([408, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([409, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([411, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([413, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([414, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([415, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([416, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([417, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([418, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([419, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([420, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([421, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([422, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([423, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([424, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([425, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([426, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([427, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([428, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([429, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([431, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([432, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([433, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([434, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([435, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([436, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([437, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([439, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([440, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([441, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([444, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([445, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([448, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([449, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([450, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([451, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([452, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([454, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([455, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([457, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([461, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([463, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([464, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([467, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([469, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([470, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([472, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([473, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([474, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([476, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([478, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([483, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([484, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([486, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([494, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([495, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([499, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([502, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([504, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([505, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([510, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([511, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([512, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([512, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([512, 4],"float32"), 2, 6, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([8, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([80, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([9, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([97, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.nms(Tensor([64, 4],"float32"), 0.5, Tensor([64],"float32"), Tensor([64],"int64"), list[0,1,2,3,], 20, )
paddle.vision.ops.roi_align(Tensor([1, 256, 32, 32],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=3, )
paddle.vision.ops.roi_align(Tensor([1, 256, 32, 32],"float32"), Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(3,4,), )
paddle.vision.ops.roi_align(Tensor([3, 3, 8, 6],"float64"), Tensor([6, 4],"float64"), Tensor([3],"int32"), tuple(2,2,), 0.5, -1, False, )
paddle.vision.ops.roi_align(Tensor([3, 3, 8, 6],"float64"), Tensor([6, 4],"float64"), Tensor([3],"int32"), tuple(2,2,), 0.5, -1, True, )
paddle.vision.ops.roi_align(x=Tensor([1, 1, 4, 4],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=1, spatial_scale=1.0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 1024, 40, 60],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 1024, 42, 63],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 1024, 44, 59],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 1024, 44, 66],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 1024, 44, 69],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 1024, 46, 69],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 1024, 48, 72],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 1024, 50, 75],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 1024, 67, 44],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 1024, 70, 46],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 10, 8],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.015625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([124, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([159, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([163, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([168, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([176, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([195, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([197, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([208, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([213, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([228, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([231, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([232, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([237, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 152],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 156],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 156],"float32"), boxes=Tensor([125, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 100, 156],"float32"), boxes=Tensor([208, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 12, 9],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.015625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 12, 9],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.015625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 124, 80],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 124, 80],"float32"), boxes=Tensor([216, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 124, 80],"float32"), boxes=Tensor([223, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 124, 80],"float32"), boxes=Tensor([269, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 128, 84],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 128, 84],"float32"), boxes=Tensor([190, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 136, 88],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 136, 88],"float32"), boxes=Tensor([146, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 136, 88],"float32"), boxes=Tensor([223, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 140, 92],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 140, 92],"float32"), boxes=Tensor([201, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 140, 92],"float32"), boxes=Tensor([97, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 144, 200],"float32"), boxes=Tensor([462, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 148, 96],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 148, 96],"float32"), boxes=Tensor([187, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 152, 100],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 152, 100],"float32"), boxes=Tensor([124, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 152, 100],"float32"), boxes=Tensor([137, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 152, 100],"float32"), boxes=Tensor([154, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 152, 100],"float32"), boxes=Tensor([157, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 152, 100],"float32"), boxes=Tensor([170, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 152, 100],"float32"), boxes=Tensor([183, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 216],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 216],"float32"), boxes=Tensor([200, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 216],"float32"), boxes=Tensor([208, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 240],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 240],"float32"), boxes=Tensor([113, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 240],"float32"), boxes=Tensor([145, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 240],"float32"), boxes=Tensor([178, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 240],"float32"), boxes=Tensor([185, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 240],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 240],"float32"), boxes=Tensor([241, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 240],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 240],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 240],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 248],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 160, 248],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 256],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 256],"float32"), boxes=Tensor([134, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 256],"float32"), boxes=Tensor([222, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 256],"float32"), boxes=Tensor([231, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 256],"float32"), boxes=Tensor([232, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 256],"float32"), boxes=Tensor([239, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 256],"float32"), boxes=Tensor([243, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 256],"float32"), boxes=Tensor([244, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 256],"float32"), boxes=Tensor([247, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 256],"float32"), boxes=Tensor([255, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 256],"float32"), boxes=Tensor([272, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 256],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 256],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 264],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 168, 264],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 176, 240],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 176, 240],"float32"), boxes=Tensor([129, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 176, 240],"float32"), boxes=Tensor([96, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 176, 264],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 176, 264],"float32"), boxes=Tensor([145, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 176, 264],"float32"), boxes=Tensor([161, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 176, 264],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 176, 264],"float32"), boxes=Tensor([231, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 176, 264],"float32"), boxes=Tensor([250, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 176, 264],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 176, 280],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 176, 280],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 18, 25],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 184, 248],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 184, 248],"float32"), boxes=Tensor([123, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 184, 280],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 184, 280],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 184, 280],"float32"), boxes=Tensor([157, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 184, 280],"float32"), boxes=Tensor([218, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 184, 280],"float32"), boxes=Tensor([227, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 184, 280],"float32"), boxes=Tensor([257, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 184, 280],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 184, 280],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 192, 144],"float32"), boxes=Tensor([458, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 192, 288],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 192, 288],"float32"), boxes=Tensor([129, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 192, 288],"float32"), boxes=Tensor([150, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 192, 288],"float32"), boxes=Tensor([157, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 192, 288],"float32"), boxes=Tensor([212, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 192, 288],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 15],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 27],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 27],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 27],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 30],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 31],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 20, 31],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([107, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([143, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([198, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([221, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([225, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([264, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([268, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 304],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 312],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 312],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 200, 312],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 32],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 33],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 21, 33],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 30],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 30],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 30],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 30],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 33],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 35],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 22, 35],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 18],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 31],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 31],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 35],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 35],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 35],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 35],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 35],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 35],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 35],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 35],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 23, 35],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 24, 18],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 24, 36],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 24, 36],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 24, 36],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 24, 36],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 24, 36],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 24, 36],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 24, 36],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 24, 36],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 248, 160],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 248, 160],"float32"), boxes=Tensor([127, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 248, 160],"float32"), boxes=Tensor([150, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 248, 160],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 38],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 39],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 39],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 39],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 25, 39],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 256, 168],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 256, 168],"float32"), boxes=Tensor([127, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 272, 176],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 272, 176],"float32"), boxes=Tensor([143, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 272, 176],"float32"), boxes=Tensor([213, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 280, 184],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 280, 184],"float32"), boxes=Tensor([105, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 280, 184],"float32"), boxes=Tensor([214, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 296, 192],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 296, 192],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 304, 200],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 304, 200],"float32"), boxes=Tensor([126, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 304, 200],"float32"), boxes=Tensor([137, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 304, 200],"float32"), boxes=Tensor([155, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 304, 200],"float32"), boxes=Tensor([161, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 304, 200],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 304, 200],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 31, 20],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 31, 20],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 31, 20],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 31, 20],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 31, 20],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 32, 21],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 32, 21],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 32, 32],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=tuple(4,3,), spatial_scale=1.0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 34, 22],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 34, 22],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 34, 22],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 35, 23],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 35, 23],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 35, 23],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 35, 23],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 36, 50],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 37, 24],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 37, 24],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 38, 25],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 30],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 54],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 54],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 54],"float32"), boxes=Tensor([119, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([142, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([151, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([156, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([164, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([165, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([181, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([190, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 60],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 62],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 40, 62],"float32"), boxes=Tensor([177, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([128, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([140, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([188, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([203, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([96, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 64],"float32"), boxes=Tensor([97, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 66],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 42, 66],"float32"), boxes=Tensor([259, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 60],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 60],"float32"), boxes=Tensor([191, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 60],"float32"), boxes=Tensor([193, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([127, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([128, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([166, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([183, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([222, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 66],"float32"), boxes=Tensor([4, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 70],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 44, 70],"float32"), boxes=Tensor([176, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 45, 36],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 62],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 62],"float32"), boxes=Tensor([140, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 70],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 70],"float32"), boxes=Tensor([113, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 70],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 70],"float32"), boxes=Tensor([134, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 70],"float32"), boxes=Tensor([149, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 70],"float32"), boxes=Tensor([160, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 70],"float32"), boxes=Tensor([179, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 70],"float32"), boxes=Tensor([202, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 46, 70],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 48, 36],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 48, 72],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 48, 72],"float32"), boxes=Tensor([155, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 48, 72],"float32"), boxes=Tensor([165, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 48, 72],"float32"), boxes=Tensor([184, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 48, 72],"float32"), boxes=Tensor([193, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 48, 72],"float32"), boxes=Tensor([237, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 48, 72],"float32"), boxes=Tensor([4, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 48, 72],"float32"), boxes=Tensor([6, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([131, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([137, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([140, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([152, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([168, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([172, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([176, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([190, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([191, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([195, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([197, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([209, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([221, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([259, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([286, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([297, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 76],"float32"), boxes=Tensor([6, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 78],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 78],"float32"), boxes=Tensor([250, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 50, 78],"float32"), boxes=Tensor([326, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 62, 40],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 62, 40],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 62, 40],"float32"), boxes=Tensor([129, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 62, 40],"float32"), boxes=Tensor([144, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 62, 40],"float32"), boxes=Tensor([180, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 64, 42],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 64, 42],"float32"), boxes=Tensor([170, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 68, 44],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 68, 44],"float32"), boxes=Tensor([121, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 68, 44],"float32"), boxes=Tensor([125, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 70, 46],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 70, 46],"float32"), boxes=Tensor([176, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 70, 46],"float32"), boxes=Tensor([177, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 72, 100],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 74, 48],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 74, 48],"float32"), boxes=Tensor([201, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 76, 50],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 76, 50],"float32"), boxes=Tensor([153, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 76, 50],"float32"), boxes=Tensor([165, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 76, 50],"float32"), boxes=Tensor([185, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 76, 50],"float32"), boxes=Tensor([197, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 76, 50],"float32"), boxes=Tensor([273, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 108],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 108],"float32"), boxes=Tensor([172, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 108],"float32"), boxes=Tensor([177, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 120],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 120],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 120],"float32"), boxes=Tensor([142, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 120],"float32"), boxes=Tensor([172, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 120],"float32"), boxes=Tensor([207, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 120],"float32"), boxes=Tensor([224, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 120],"float32"), boxes=Tensor([246, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 120],"float32"), boxes=Tensor([250, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 120],"float32"), boxes=Tensor([277, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 120],"float32"), boxes=Tensor([285, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 124],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 124],"float32"), boxes=Tensor([264, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 80, 60],"float32"), boxes=Tensor([469, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 128],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 128],"float32"), boxes=Tensor([107, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 128],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 128],"float32"), boxes=Tensor([142, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 128],"float32"), boxes=Tensor([148, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 128],"float32"), boxes=Tensor([154, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 128],"float32"), boxes=Tensor([155, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 128],"float32"), boxes=Tensor([157, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 128],"float32"), boxes=Tensor([161, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 128],"float32"), boxes=Tensor([208, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 128],"float32"), boxes=Tensor([211, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 128],"float32"), boxes=Tensor([235, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 128],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 132],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 84, 132],"float32"), boxes=Tensor([179, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 88, 120],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 88, 120],"float32"), boxes=Tensor([177, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 88, 120],"float32"), boxes=Tensor([201, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 88, 132],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 88, 132],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 88, 132],"float32"), boxes=Tensor([144, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 88, 132],"float32"), boxes=Tensor([178, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 88, 132],"float32"), boxes=Tensor([196, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 88, 132],"float32"), boxes=Tensor([210, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 88, 132],"float32"), boxes=Tensor([233, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 88, 140],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 88, 140],"float32"), boxes=Tensor([254, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 89, 72],"float32"), boxes=Tensor([436, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 9, 13],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.015625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 92, 124],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 92, 124],"float32"), boxes=Tensor([225, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 92, 140],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 92, 140],"float32"), boxes=Tensor([117, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 92, 140],"float32"), boxes=Tensor([148, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 92, 140],"float32"), boxes=Tensor([168, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 92, 140],"float32"), boxes=Tensor([220, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 92, 140],"float32"), boxes=Tensor([263, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 92, 140],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 96, 144],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 96, 144],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 96, 144],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 96, 144],"float32"), boxes=Tensor([152, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 96, 144],"float32"), boxes=Tensor([190, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 96, 144],"float32"), boxes=Tensor([191, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([1, 256, 96, 72],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([1],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 54, 60],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 54, 62],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 56, 42],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 59, 44],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 59, 63],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 59, 65],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 59, 81],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 60, 42],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 62, 46],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 62, 64],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 63, 42],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 64, 48],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 64, 63],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 66, 44],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 67, 50],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 67, 74],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 1024, 75, 50],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 108, 132],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 112, 84],"float32"), boxes=Tensor([112, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 112, 84],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 112, 84],"float32"), boxes=Tensor([185, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 112, 84],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 120, 88],"float32"), boxes=Tensor([165, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 120, 88],"float32"), boxes=Tensor([343, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 124, 92],"float32"), boxes=Tensor([150, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 124, 92],"float32"), boxes=Tensor([182, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 124, 92],"float32"), boxes=Tensor([192, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 124, 92],"float32"), boxes=Tensor([359, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 124, 92],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 124, 92],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 128, 120],"float32"), boxes=Tensor([326, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 128, 124],"float32"), boxes=Tensor([213, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 128, 156],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 128, 96],"float32"), boxes=Tensor([108, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 128, 96],"float32"), boxes=Tensor([160, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 128, 96],"float32"), boxes=Tensor([190, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 128, 96],"float32"), boxes=Tensor([198, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 128, 96],"float32"), boxes=Tensor([243, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 128, 96],"float32"), boxes=Tensor([252, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 128, 96],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 128, 96],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 136, 100],"float32"), boxes=Tensor([165, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 136, 100],"float32"), boxes=Tensor([186, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 136, 100],"float32"), boxes=Tensor([241, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 136, 100],"float32"), boxes=Tensor([285, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 136, 100],"float32"), boxes=Tensor([286, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 136, 100],"float32"), boxes=Tensor([288, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 136, 100],"float32"), boxes=Tensor([304, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 136, 100],"float32"), boxes=Tensor([333, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 136, 100],"float32"), boxes=Tensor([373, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 136, 100],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 152, 100],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 216, 264],"float32"), boxes=Tensor([854, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 224, 168],"float32"), boxes=Tensor([676, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 224, 168],"float32"), boxes=Tensor([742, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 224, 168],"float32"), boxes=Tensor([835, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 224, 168],"float32"), boxes=Tensor([876, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 240, 176],"float32"), boxes=Tensor([465, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 240, 176],"float32"), boxes=Tensor([702, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 248, 184],"float32"), boxes=Tensor([424, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 248, 184],"float32"), boxes=Tensor([661, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 248, 184],"float32"), boxes=Tensor([683, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 248, 184],"float32"), boxes=Tensor([753, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 248, 184],"float32"), boxes=Tensor([820, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 248, 184],"float32"), boxes=Tensor([930, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 256, 192],"float32"), boxes=Tensor([531, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 256, 192],"float32"), boxes=Tensor([577, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 256, 192],"float32"), boxes=Tensor([653, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 256, 192],"float32"), boxes=Tensor([659, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 256, 192],"float32"), boxes=Tensor([662, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 256, 192],"float32"), boxes=Tensor([799, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 256, 192],"float32"), boxes=Tensor([812, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 256, 192],"float32"), boxes=Tensor([839, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 256, 240],"float32"), boxes=Tensor([478, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 256, 248],"float32"), boxes=Tensor([598, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 256, 312],"float32"), boxes=Tensor([848, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 27, 33],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 272, 200],"float32"), boxes=Tensor([407, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 272, 200],"float32"), boxes=Tensor([414, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 272, 200],"float32"), boxes=Tensor([447, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 272, 200],"float32"), boxes=Tensor([465, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 272, 200],"float32"), boxes=Tensor([467, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 272, 200],"float32"), boxes=Tensor([501, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 272, 200],"float32"), boxes=Tensor([523, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 272, 200],"float32"), boxes=Tensor([534, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 272, 200],"float32"), boxes=Tensor([693, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 272, 200],"float32"), boxes=Tensor([707, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 272, 200],"float32"), boxes=Tensor([886, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 28, 21],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 28, 21],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 28, 21],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 28, 21],"float32"), boxes=Tensor([6, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 30, 22],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 30, 22],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 304, 200],"float32"), boxes=Tensor([858, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 31, 23],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 31, 23],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 31, 23],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 31, 23],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 31, 23],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 31, 23],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 24],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 24],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 24],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 24],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 24],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 24],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 24],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 30],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 31],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 32, 39],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 34, 25],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 38, 25],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 54, 66],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 56, 42],"float32"), boxes=Tensor([132, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 56, 42],"float32"), boxes=Tensor([147, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 56, 42],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 56, 42],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 60, 44],"float32"), boxes=Tensor([139, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 60, 44],"float32"), boxes=Tensor([193, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 62, 46],"float32"), boxes=Tensor([144, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 62, 46],"float32"), boxes=Tensor([168, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 62, 46],"float32"), boxes=Tensor([208, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 62, 46],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 62, 46],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 62, 46],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 64, 48],"float32"), boxes=Tensor([119, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 64, 48],"float32"), boxes=Tensor([150, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 64, 48],"float32"), boxes=Tensor([177, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 64, 48],"float32"), boxes=Tensor([178, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 64, 48],"float32"), boxes=Tensor([217, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 64, 48],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 64, 48],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 64, 60],"float32"), boxes=Tensor([188, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 64, 62],"float32"), boxes=Tensor([170, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 64, 78],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 68, 50],"float32"), boxes=Tensor([127, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 68, 50],"float32"), boxes=Tensor([153, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 68, 50],"float32"), boxes=Tensor([184, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 68, 50],"float32"), boxes=Tensor([212, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 68, 50],"float32"), boxes=Tensor([220, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 68, 50],"float32"), boxes=Tensor([231, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 68, 50],"float32"), boxes=Tensor([233, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 68, 50],"float32"), boxes=Tensor([251, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 68, 50],"float32"), boxes=Tensor([271, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 68, 50],"float32"), boxes=Tensor([297, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 68, 50],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([2, 256, 76, 50],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([2],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 42, 63],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 42, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 44, 66],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 44, 67],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 46, 62],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 46, 67],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 46, 68],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 46, 69],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 46, 70],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 46, 75],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 46, 80],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 46, 84],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 47, 84],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 48, 62],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 48, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 48, 66],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 48, 67],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 48, 69],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 48, 70],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 48, 72],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 48, 73],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 48, 84],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 50, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 50, 67],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 50, 71],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 50, 72],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 50, 73],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 50, 75],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 50, 76],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 50, 79],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 50, 81],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 50, 82],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 50, 84],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 51, 82],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 52, 75],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 53, 56],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 54, 61],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 54, 63],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 54, 66],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 55, 70],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 56, 62],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 56, 63],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 56, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 56, 67],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 56, 69],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 56, 72],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 56, 75],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 56, 79],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 56, 81],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 57, 67],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 58, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 59, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 59, 84],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 60, 67],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 60, 75],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 60, 76],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 60, 77],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 60, 79],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 61, 56],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 61, 62],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 61, 66],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 61, 69],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 61, 84],"float32"), boxes=Tensor([1950, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 62, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 62, 67],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 62, 69],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 62, 75],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 62, 84],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 63, 59],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 63, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 63, 73],"float32"), boxes=Tensor([2022, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 63, 73],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 63, 84],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 64, 59],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 64, 62],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 64, 63],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 64, 70],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 64, 73],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 64, 75],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 64, 76],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 64, 79],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 64, 83],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 64, 84],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 65, 62],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 65, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 65, 75],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 65, 76],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 65, 77],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 65, 79],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 66, 54],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 66, 62],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 66, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 66, 65],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 66, 67],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 66, 70],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 66, 75],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 66, 76],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 67, 54],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 67, 68],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 67, 72],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 67, 73],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 67, 76],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 67, 80],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 67, 84],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 68, 60],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 68, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 69, 48],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 69, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 69, 67],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 69, 72],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 69, 75],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 69, 76],"float32"), boxes=Tensor([2012, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 69, 84],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 70, 56],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 70, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 71, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 71, 66],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 72, 54],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 72, 56],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 72, 59],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 72, 67],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 72, 82],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 73, 67],"float32"), boxes=Tensor([2036, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 73, 73],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 73, 80],"float32"), boxes=Tensor([2037, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 74, 63],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 75, 50],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 75, 61],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 75, 62],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 75, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 75, 70],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 75, 72],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 75, 73],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 75, 75],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 76, 63],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 76, 67],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 76, 72],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 76, 76],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 76, 83],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 77, 62],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 80, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 82, 84],"float32"), boxes=Tensor([2045, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 84, 64],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 1024, 84, 70],"float32"), boxes=Tensor([2048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 120],"float32"), boxes=Tensor([330, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 120],"float32"), boxes=Tensor([76, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 124],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 124],"float32"), boxes=Tensor([388, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 128],"float32"), boxes=Tensor([134, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 128],"float32"), boxes=Tensor([314, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 128],"float32"), boxes=Tensor([348, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 128],"float32"), boxes=Tensor([475, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 128],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 128],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([102, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([104, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([134, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([161, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([165, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([230, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([257, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([258, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([273, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([339, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([350, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([354, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([364, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([365, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([373, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([374, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([401, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([408, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([435, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([440, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([514, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([530, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([556, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([647, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([92, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([94, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 136],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 140],"float32"), boxes=Tensor([252, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 140],"float32"), boxes=Tensor([350, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 140],"float32"), boxes=Tensor([358, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 140],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 140],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 140],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 144],"float32"), boxes=Tensor([112, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 144],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 144],"float32"), boxes=Tensor([257, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 144],"float32"), boxes=Tensor([308, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 144],"float32"), boxes=Tensor([309, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 144],"float32"), boxes=Tensor([330, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 144],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 144],"float32"), boxes=Tensor([425, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 144],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 144],"float32"), boxes=Tensor([452, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 144],"float32"), boxes=Tensor([462, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 144],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 144],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 144],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 148],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 148],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 148],"float32"), boxes=Tensor([181, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 148],"float32"), boxes=Tensor([281, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 148],"float32"), boxes=Tensor([304, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 148],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 148],"float32"), boxes=Tensor([393, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 148],"float32"), boxes=Tensor([502, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([101, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([110, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([131, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([140, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([152, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([238, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([269, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([278, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([293, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([322, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([330, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([331, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([343, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([345, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([346, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([350, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([358, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([367, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([372, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([379, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([392, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([406, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([410, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([412, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([419, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([420, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([423, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([425, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([436, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([457, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([482, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([485, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([495, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([502, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([525, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([540, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([544, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([548, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([571, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([610, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([616, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 152],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 156],"float32"), boxes=Tensor([322, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 156],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 160],"float32"), boxes=Tensor([154, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 160],"float32"), boxes=Tensor([225, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 160],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 160],"float32"), boxes=Tensor([410, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 160],"float32"), boxes=Tensor([447, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 160],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 164],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 164],"float32"), boxes=Tensor([120, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 164],"float32"), boxes=Tensor([164, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 164],"float32"), boxes=Tensor([302, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 164],"float32"), boxes=Tensor([388, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 164],"float32"), boxes=Tensor([535, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([107, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([123, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([225, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([272, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([358, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([369, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([374, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([404, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([432, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([470, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([563, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 100, 168],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 104, 144],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 104, 144],"float32"), boxes=Tensor([307, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 104, 148],"float32"), boxes=Tensor([372, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 104, 148],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 104, 152],"float32"), boxes=Tensor([380, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 104, 152],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 104, 164],"float32"), boxes=Tensor([212, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 104, 164],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 112],"float32"), boxes=Tensor([108, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 112],"float32"), boxes=Tensor([259, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 124],"float32"), boxes=Tensor([404, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 124],"float32"), boxes=Tensor([446, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 124],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 124],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 128],"float32"), boxes=Tensor([355, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 128],"float32"), boxes=Tensor([465, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 128],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 128],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 132],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 132],"float32"), boxes=Tensor([426, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 136],"float32"), boxes=Tensor([219, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 136],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 140],"float32"), boxes=Tensor([142, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 140],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 140],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 140],"float32"), boxes=Tensor([307, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 140],"float32"), boxes=Tensor([332, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 140],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 144],"float32"), boxes=Tensor([125, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 144],"float32"), boxes=Tensor([167, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 144],"float32"), boxes=Tensor([381, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 144],"float32"), boxes=Tensor([390, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 144],"float32"), boxes=Tensor([401, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 144],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 152],"float32"), boxes=Tensor([477, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 152],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 156],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 156],"float32"), boxes=Tensor([579, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 168],"float32"), boxes=Tensor([245, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 108, 168],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 120],"float32"), boxes=Tensor([204, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 124],"float32"), boxes=Tensor([273, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 124],"float32"), boxes=Tensor([540, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 124],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 128],"float32"), boxes=Tensor([102, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 128],"float32"), boxes=Tensor([170, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 128],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 128],"float32"), boxes=Tensor([336, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 128],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 128],"float32"), boxes=Tensor([453, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 128],"float32"), boxes=Tensor([502, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 128],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 132],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 132],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 132],"float32"), boxes=Tensor([351, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 132],"float32"), boxes=Tensor([391, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 132],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 132],"float32"), boxes=Tensor([645, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 136],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 136],"float32"), boxes=Tensor([143, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 136],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 136],"float32"), boxes=Tensor([367, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 136],"float32"), boxes=Tensor([412, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 136],"float32"), boxes=Tensor([466, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 140],"float32"), boxes=Tensor([327, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 140],"float32"), boxes=Tensor([379, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 140],"float32"), boxes=Tensor([568, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 140],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 140],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 140],"float32"), boxes=Tensor([83, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 144],"float32"), boxes=Tensor([138, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 144],"float32"), boxes=Tensor([261, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 144],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 144],"float32"), boxes=Tensor([356, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 144],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 144],"float32"), boxes=Tensor([539, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 144],"float32"), boxes=Tensor([605, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 144],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 148],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 148],"float32"), boxes=Tensor([265, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 152],"float32"), boxes=Tensor([110, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 152],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 152],"float32"), boxes=Tensor([347, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 152],"float32"), boxes=Tensor([434, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 152],"float32"), boxes=Tensor([453, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 152],"float32"), boxes=Tensor([504, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 152],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 152],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 160],"float32"), boxes=Tensor([371, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 160],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 164],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 112, 164],"float32"), boxes=Tensor([301, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 116, 128],"float32"), boxes=Tensor([102, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 116, 128],"float32"), boxes=Tensor([519, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 116, 132],"float32"), boxes=Tensor([210, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 116, 132],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 116, 136],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 116, 136],"float32"), boxes=Tensor([428, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 116, 136],"float32"), boxes=Tensor([465, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 116, 136],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 104],"float32"), boxes=Tensor([467, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 104],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 112],"float32"), boxes=Tensor([472, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 120],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 120],"float32"), boxes=Tensor([348, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 124],"float32"), boxes=Tensor([303, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 124],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 128],"float32"), boxes=Tensor([348, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 128],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 128],"float32"), boxes=Tensor([373, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 128],"float32"), boxes=Tensor([510, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 128],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 128],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([242, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([377, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([384, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([402, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([504, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([524, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([646, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([76, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 136],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 140],"float32"), boxes=Tensor([125, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 140],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 140],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 140],"float32"), boxes=Tensor([313, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 140],"float32"), boxes=Tensor([383, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 140],"float32"), boxes=Tensor([489, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 144],"float32"), boxes=Tensor([173, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 144],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 144],"float32"), boxes=Tensor([332, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 144],"float32"), boxes=Tensor([337, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 144],"float32"), boxes=Tensor([370, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 148],"float32"), boxes=Tensor([225, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 148],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 148],"float32"), boxes=Tensor([290, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 148],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 152],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 152],"float32"), boxes=Tensor([302, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 152],"float32"), boxes=Tensor([372, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 152],"float32"), boxes=Tensor([424, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 152],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 152],"float32"), boxes=Tensor([455, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 152],"float32"), boxes=Tensor([504, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 152],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 152],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 152],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 156],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 156],"float32"), boxes=Tensor([245, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 156],"float32"), boxes=Tensor([376, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 156],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 160],"float32"), boxes=Tensor([287, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 160],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 164],"float32"), boxes=Tensor([448, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 164],"float32"), boxes=Tensor([452, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 164],"float32"), boxes=Tensor([457, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 168],"float32"), boxes=Tensor([238, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 168],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 168],"float32"), boxes=Tensor([370, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 168],"float32"), boxes=Tensor([412, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 168],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 168],"float32"), boxes=Tensor([92, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 88],"float32"), boxes=Tensor([255, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 88],"float32"), boxes=Tensor([358, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 88],"float32"), boxes=Tensor([451, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 88],"float32"), boxes=Tensor([461, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 88],"float32"), boxes=Tensor([467, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 88],"float32"), boxes=Tensor([477, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 120, 88],"float32"), boxes=Tensor([531, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 108],"float32"), boxes=Tensor([469, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 112],"float32"), boxes=Tensor([439, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 112],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 124],"float32"), boxes=Tensor([105, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 124],"float32"), boxes=Tensor([167, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 124],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 124],"float32"), boxes=Tensor([370, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 124],"float32"), boxes=Tensor([416, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 124],"float32"), boxes=Tensor([467, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 124],"float32"), boxes=Tensor([538, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 124],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 128],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 128],"float32"), boxes=Tensor([304, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 128],"float32"), boxes=Tensor([386, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 128],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 132],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 132],"float32"), boxes=Tensor([438, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 136],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 136],"float32"), boxes=Tensor([321, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 136],"float32"), boxes=Tensor([326, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 136],"float32"), boxes=Tensor([360, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 136],"float32"), boxes=Tensor([4, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 136],"float32"), boxes=Tensor([479, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 136],"float32"), boxes=Tensor([488, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 136],"float32"), boxes=Tensor([505, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 136],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 136],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 136],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 136],"float32"), boxes=Tensor([94, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 140],"float32"), boxes=Tensor([112, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 140],"float32"), boxes=Tensor([123, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 140],"float32"), boxes=Tensor([142, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 140],"float32"), boxes=Tensor([276, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 140],"float32"), boxes=Tensor([310, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 140],"float32"), boxes=Tensor([326, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 140],"float32"), boxes=Tensor([401, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 140],"float32"), boxes=Tensor([536, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 140],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 140],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 140],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 144],"float32"), boxes=Tensor([151, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 144],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 144],"float32"), boxes=Tensor([273, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 144],"float32"), boxes=Tensor([326, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 144],"float32"), boxes=Tensor([407, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 144],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 144],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 144],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 148],"float32"), boxes=Tensor([234, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 148],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 148],"float32"), boxes=Tensor([427, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 148],"float32"), boxes=Tensor([83, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 152],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 152],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 152],"float32"), boxes=Tensor([180, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 152],"float32"), boxes=Tensor([212, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 152],"float32"), boxes=Tensor([255, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 152],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 152],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 152],"float32"), boxes=Tensor([454, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 152],"float32"), boxes=Tensor([565, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 164],"float32"), boxes=Tensor([378, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 164],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 164],"float32"), boxes=Tensor([501, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 164],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 168],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 168],"float32"), boxes=Tensor([161, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 168],"float32"), boxes=Tensor([264, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 168],"float32"), boxes=Tensor([308, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 168],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 168],"float32"), boxes=Tensor([538, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 168],"float32"), boxes=Tensor([593, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 168],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 168],"float32"), boxes=Tensor([652, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 92],"float32"), boxes=Tensor([178, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 92],"float32"), boxes=Tensor([284, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 92],"float32"), boxes=Tensor([346, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 92],"float32"), boxes=Tensor([357, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 92],"float32"), boxes=Tensor([385, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 92],"float32"), boxes=Tensor([387, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 92],"float32"), boxes=Tensor([401, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 92],"float32"), boxes=Tensor([416, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 92],"float32"), boxes=Tensor([514, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 96],"float32"), boxes=Tensor([367, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 124, 96],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 112],"float32"), boxes=Tensor([134, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 112],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 112],"float32"), boxes=Tensor([258, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 112],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 112],"float32"), boxes=Tensor([371, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 112],"float32"), boxes=Tensor([444, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 112],"float32"), boxes=Tensor([550, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 120],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 120],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 120],"float32"), boxes=Tensor([304, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 120],"float32"), boxes=Tensor([519, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 120],"float32"), boxes=Tensor([584, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 120],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 124],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 124],"float32"), boxes=Tensor([310, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 124],"float32"), boxes=Tensor([363, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 124],"float32"), boxes=Tensor([467, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 124],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 124],"float32"), boxes=Tensor([83, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([148, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([209, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([236, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([317, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([322, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([325, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([334, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([369, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([427, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([440, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([553, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 128],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 132],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 132],"float32"), boxes=Tensor([339, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 132],"float32"), boxes=Tensor([376, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 132],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 136],"float32"), boxes=Tensor([275, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 136],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 140],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 140],"float32"), boxes=Tensor([185, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 140],"float32"), boxes=Tensor([273, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 140],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 144],"float32"), boxes=Tensor([166, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 144],"float32"), boxes=Tensor([290, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 144],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 144],"float32"), boxes=Tensor([405, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 144],"float32"), boxes=Tensor([421, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 144],"float32"), boxes=Tensor([540, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 144],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 144],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 144],"float32"), boxes=Tensor([92, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 148],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 148],"float32"), boxes=Tensor([330, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 148],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 148],"float32"), boxes=Tensor([449, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 148],"float32"), boxes=Tensor([458, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 148],"float32"), boxes=Tensor([488, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 148],"float32"), boxes=Tensor([517, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 148],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 148],"float32"), boxes=Tensor([76, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 148],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 152],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 152],"float32"), boxes=Tensor([149, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 152],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 152],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 152],"float32"), boxes=Tensor([295, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 152],"float32"), boxes=Tensor([325, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 152],"float32"), boxes=Tensor([515, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 152],"float32"), boxes=Tensor([522, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 152],"float32"), boxes=Tensor([531, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 152],"float32"), boxes=Tensor([555, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 152],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 152],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 156],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 156],"float32"), boxes=Tensor([461, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 160],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 160],"float32"), boxes=Tensor([322, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 160],"float32"), boxes=Tensor([712, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 160],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 164],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 164],"float32"), boxes=Tensor([217, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 164],"float32"), boxes=Tensor([357, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 164],"float32"), boxes=Tensor([366, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 164],"float32"), boxes=Tensor([382, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 164],"float32"), boxes=Tensor([426, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 168],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 168],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 168],"float32"), boxes=Tensor([167, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 168],"float32"), boxes=Tensor([179, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 168],"float32"), boxes=Tensor([204, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 168],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 168],"float32"), boxes=Tensor([370, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 168],"float32"), boxes=Tensor([384, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 168],"float32"), boxes=Tensor([385, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 168],"float32"), boxes=Tensor([581, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 168],"float32"), boxes=Tensor([606, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 168],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([204, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([296, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([309, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([339, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([360, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([361, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([367, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([391, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([398, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([402, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([417, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([418, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([428, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([441, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([445, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([453, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([456, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([460, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([469, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([475, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([476, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([494, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([509, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([552, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([559, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([571, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([572, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([573, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([589, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 128, 96],"float32"), boxes=Tensor([97, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 100],"float32"), boxes=Tensor([264, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 100],"float32"), boxes=Tensor([285, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 100],"float32"), boxes=Tensor([320, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 108],"float32"), boxes=Tensor([448, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 108],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 124],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 124],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 124],"float32"), boxes=Tensor([275, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 124],"float32"), boxes=Tensor([515, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 128],"float32"), boxes=Tensor([119, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 128],"float32"), boxes=Tensor([371, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 128],"float32"), boxes=Tensor([580, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 128],"float32"), boxes=Tensor([591, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 128],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 128],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 132],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 132],"float32"), boxes=Tensor([327, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 132],"float32"), boxes=Tensor([341, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 132],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 136],"float32"), boxes=Tensor([129, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 136],"float32"), boxes=Tensor([134, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 136],"float32"), boxes=Tensor([386, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 136],"float32"), boxes=Tensor([453, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 140],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 140],"float32"), boxes=Tensor([427, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 140],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 140],"float32"), boxes=Tensor([461, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 140],"float32"), boxes=Tensor([482, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 140],"float32"), boxes=Tensor([510, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 140],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 140],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 144],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 144],"float32"), boxes=Tensor([534, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 152],"float32"), boxes=Tensor([127, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 152],"float32"), boxes=Tensor([134, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 152],"float32"), boxes=Tensor([135, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 152],"float32"), boxes=Tensor([137, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 152],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 152],"float32"), boxes=Tensor([354, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 152],"float32"), boxes=Tensor([419, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 152],"float32"), boxes=Tensor([433, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 152],"float32"), boxes=Tensor([566, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 152],"float32"), boxes=Tensor([599, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 152],"float32"), boxes=Tensor([677, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 152],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 156],"float32"), boxes=Tensor([279, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 156],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 160],"float32"), boxes=Tensor([470, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 160],"float32"), boxes=Tensor([83, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 164],"float32"), boxes=Tensor([269, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 164],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 168],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 168],"float32"), boxes=Tensor([400, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 96],"float32"), boxes=Tensor([266, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 132, 96],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([110, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([121, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([186, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([223, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([231, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([235, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([240, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([248, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([256, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([299, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([312, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([314, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([318, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([324, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([334, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([338, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([343, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([348, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([350, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([371, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([378, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([379, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([382, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([384, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([386, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([388, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([392, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([394, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([397, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([400, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([402, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([404, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([409, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([413, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([422, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([431, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([435, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([454, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([457, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([462, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([464, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([465, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([467, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([469, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([479, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([481, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([484, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([491, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([506, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([514, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([527, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([535, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([540, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([541, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([548, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([552, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([559, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([571, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([583, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([598, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 100],"float32"), boxes=Tensor([606, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 108],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 108],"float32"), boxes=Tensor([451, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 112],"float32"), boxes=Tensor([321, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 112],"float32"), boxes=Tensor([472, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 112],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 116],"float32"), boxes=Tensor([434, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 116],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 116],"float32"), boxes=Tensor([530, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 116],"float32"), boxes=Tensor([552, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 116],"float32"), boxes=Tensor([587, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 120],"float32"), boxes=Tensor([427, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 120],"float32"), boxes=Tensor([467, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 120],"float32"), boxes=Tensor([496, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 120],"float32"), boxes=Tensor([498, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 120],"float32"), boxes=Tensor([506, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 120],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 120],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 124],"float32"), boxes=Tensor([340, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 124],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 124],"float32"), boxes=Tensor([374, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 124],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 128],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 128],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 128],"float32"), boxes=Tensor([252, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 128],"float32"), boxes=Tensor([276, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 128],"float32"), boxes=Tensor([299, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 128],"float32"), boxes=Tensor([392, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 128],"float32"), boxes=Tensor([412, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 128],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 128],"float32"), boxes=Tensor([484, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 128],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 128],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 128],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 136],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 136],"float32"), boxes=Tensor([319, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 136],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 136],"float32"), boxes=Tensor([460, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 136],"float32"), boxes=Tensor([469, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 136],"float32"), boxes=Tensor([470, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 136],"float32"), boxes=Tensor([486, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 136],"float32"), boxes=Tensor([487, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 136],"float32"), boxes=Tensor([505, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 136],"float32"), boxes=Tensor([514, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 136],"float32"), boxes=Tensor([526, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 136],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 140],"float32"), boxes=Tensor([112, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 140],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 140],"float32"), boxes=Tensor([124, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 140],"float32"), boxes=Tensor([306, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 140],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 140],"float32"), boxes=Tensor([377, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 140],"float32"), boxes=Tensor([382, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 140],"float32"), boxes=Tensor([394, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 140],"float32"), boxes=Tensor([484, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 140],"float32"), boxes=Tensor([528, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 140],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 140],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 144],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 144],"float32"), boxes=Tensor([465, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 148],"float32"), boxes=Tensor([334, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 148],"float32"), boxes=Tensor([459, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 148],"float32"), boxes=Tensor([473, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 148],"float32"), boxes=Tensor([489, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 148],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 148],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 148],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 148],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 152],"float32"), boxes=Tensor([111, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 152],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 152],"float32"), boxes=Tensor([364, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 152],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 152],"float32"), boxes=Tensor([421, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 152],"float32"), boxes=Tensor([454, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 152],"float32"), boxes=Tensor([475, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 152],"float32"), boxes=Tensor([587, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 152],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 152],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 160],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 160],"float32"), boxes=Tensor([555, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 164],"float32"), boxes=Tensor([224, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 164],"float32"), boxes=Tensor([332, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 164],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 168],"float32"), boxes=Tensor([194, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 168],"float32"), boxes=Tensor([312, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 168],"float32"), boxes=Tensor([321, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 168],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 168],"float32"), boxes=Tensor([345, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 168],"float32"), boxes=Tensor([389, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 168],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 168],"float32"), boxes=Tensor([437, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 168],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 136, 168],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 112],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 112],"float32"), boxes=Tensor([291, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 112],"float32"), boxes=Tensor([410, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 112],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 112],"float32"), boxes=Tensor([486, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 112],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 120],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 120],"float32"), boxes=Tensor([507, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 124],"float32"), boxes=Tensor([460, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 124],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 128],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 128],"float32"), boxes=Tensor([225, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 128],"float32"), boxes=Tensor([270, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 128],"float32"), boxes=Tensor([296, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 128],"float32"), boxes=Tensor([371, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 128],"float32"), boxes=Tensor([383, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 128],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 128],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 128],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 128],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 132],"float32"), boxes=Tensor([594, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 132],"float32"), boxes=Tensor([660, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 132],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 136],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 136],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 136],"float32"), boxes=Tensor([307, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 136],"float32"), boxes=Tensor([505, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 136],"float32"), boxes=Tensor([526, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 136],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 140],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 140],"float32"), boxes=Tensor([178, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 140],"float32"), boxes=Tensor([290, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 140],"float32"), boxes=Tensor([336, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 140],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 140],"float32"), boxes=Tensor([446, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 144],"float32"), boxes=Tensor([148, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 144],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 144],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 144],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 144],"float32"), boxes=Tensor([575, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 144],"float32"), boxes=Tensor([700, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 148],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 148],"float32"), boxes=Tensor([443, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 152],"float32"), boxes=Tensor([223, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 152],"float32"), boxes=Tensor([279, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 152],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 152],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 152],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 152],"float32"), boxes=Tensor([486, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 152],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 152],"float32"), boxes=Tensor([590, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 168],"float32"), boxes=Tensor([152, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 168],"float32"), boxes=Tensor([196, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 168],"float32"), boxes=Tensor([326, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 168],"float32"), boxes=Tensor([375, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 168],"float32"), boxes=Tensor([430, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 168],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 96],"float32"), boxes=Tensor([303, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 96],"float32"), boxes=Tensor([318, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 96],"float32"), boxes=Tensor([368, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 96],"float32"), boxes=Tensor([462, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 96],"float32"), boxes=Tensor([478, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 96],"float32"), boxes=Tensor([494, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 140, 96],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 100],"float32"), boxes=Tensor([348, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 108],"float32"), boxes=Tensor([282, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 108],"float32"), boxes=Tensor([94, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 112],"float32"), boxes=Tensor([456, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 112],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 116],"float32"), boxes=Tensor([527, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 120],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 120],"float32"), boxes=Tensor([459, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 124],"float32"), boxes=Tensor([360, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 124],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 128],"float32"), boxes=Tensor([129, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 128],"float32"), boxes=Tensor([590, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 132],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 132],"float32"), boxes=Tensor([229, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 132],"float32"), boxes=Tensor([379, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 132],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 136],"float32"), boxes=Tensor([104, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 136],"float32"), boxes=Tensor([112, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 136],"float32"), boxes=Tensor([165, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 136],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 136],"float32"), boxes=Tensor([372, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 136],"float32"), boxes=Tensor([501, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 136],"float32"), boxes=Tensor([616, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 140],"float32"), boxes=Tensor([144, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 140],"float32"), boxes=Tensor([413, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 140],"float32"), boxes=Tensor([501, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 140],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 144],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 144],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 144],"float32"), boxes=Tensor([293, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 144],"float32"), boxes=Tensor([399, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 156],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 156],"float32"), boxes=Tensor([446, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 164],"float32"), boxes=Tensor([243, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 164],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 164],"float32"), boxes=Tensor([460, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 164],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 168],"float32"), boxes=Tensor([362, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 168],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 144, 96],"float32"), boxes=Tensor([363, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 128],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 128],"float32"), boxes=Tensor([251, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 128],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 128],"float32"), boxes=Tensor([651, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 132],"float32"), boxes=Tensor([422, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 132],"float32"), boxes=Tensor([94, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 136],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 136],"float32"), boxes=Tensor([587, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 140],"float32"), boxes=Tensor([360, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 140],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 144],"float32"), boxes=Tensor([128, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 144],"float32"), boxes=Tensor([149, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 144],"float32"), boxes=Tensor([396, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 144],"float32"), boxes=Tensor([435, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 148],"float32"), boxes=Tensor([238, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 148],"float32"), boxes=Tensor([395, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 148],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 152],"float32"), boxes=Tensor([152, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 152],"float32"), boxes=Tensor([301, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 152],"float32"), boxes=Tensor([438, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 152],"float32"), boxes=Tensor([525, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 152],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 152],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 160],"float32"), boxes=Tensor([692, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 160],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 168],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 148, 168],"float32"), boxes=Tensor([338, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 100],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 100],"float32"), boxes=Tensor([412, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 100],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 100],"float32"), boxes=Tensor([490, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 100],"float32"), boxes=Tensor([502, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 100],"float32"), boxes=Tensor([507, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 100],"float32"), boxes=Tensor([511, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 124],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 124],"float32"), boxes=Tensor([353, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 124],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 124],"float32"), boxes=Tensor([387, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 124],"float32"), boxes=Tensor([398, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 124],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 128],"float32"), boxes=Tensor([137, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 128],"float32"), boxes=Tensor([380, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 128],"float32"), boxes=Tensor([466, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 128],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 128],"float32"), boxes=Tensor([656, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 128],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 132],"float32"), boxes=Tensor([153, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 132],"float32"), boxes=Tensor([529, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 132],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 132],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 136],"float32"), boxes=Tensor([132, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 136],"float32"), boxes=Tensor([296, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 136],"float32"), boxes=Tensor([397, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 136],"float32"), boxes=Tensor([408, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 136],"float32"), boxes=Tensor([417, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 136],"float32"), boxes=Tensor([436, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 136],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 136],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 136],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 136],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 140],"float32"), boxes=Tensor([102, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 140],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 140],"float32"), boxes=Tensor([297, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 140],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 140],"float32"), boxes=Tensor([356, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 140],"float32"), boxes=Tensor([398, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 140],"float32"), boxes=Tensor([430, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 140],"float32"), boxes=Tensor([450, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 140],"float32"), boxes=Tensor([552, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 140],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 140],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 140],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 144],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 144],"float32"), boxes=Tensor([182, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 144],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 144],"float32"), boxes=Tensor([295, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 144],"float32"), boxes=Tensor([398, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 144],"float32"), boxes=Tensor([444, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 144],"float32"), boxes=Tensor([468, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 144],"float32"), boxes=Tensor([486, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 144],"float32"), boxes=Tensor([491, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 144],"float32"), boxes=Tensor([533, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 144],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 144],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 144],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 144],"float32"), boxes=Tensor([96, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 148],"float32"), boxes=Tensor([227, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 148],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 148],"float32"), boxes=Tensor([481, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 148],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 152],"float32"), boxes=Tensor([138, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 152],"float32"), boxes=Tensor([308, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 152],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 152],"float32"), boxes=Tensor([412, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 160],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 160],"float32"), boxes=Tensor([270, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 168],"float32"), boxes=Tensor([221, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 168],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 168],"float32"), boxes=Tensor([273, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 168],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 168],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 168],"float32"), boxes=Tensor([571, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 168],"float32"), boxes=Tensor([606, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 152, 168],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 156, 112],"float32"), boxes=Tensor([176, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 156, 112],"float32"), boxes=Tensor([533, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 156, 124],"float32"), boxes=Tensor([136, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 156, 124],"float32"), boxes=Tensor([397, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 156, 140],"float32"), boxes=Tensor([524, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 156, 140],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 160, 128],"float32"), boxes=Tensor([362, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 160, 128],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 160, 136],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 160, 136],"float32"), boxes=Tensor([437, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 160, 144],"float32"), boxes=Tensor([120, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 160, 144],"float32"), boxes=Tensor([556, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 164, 124],"float32"), boxes=Tensor([472, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 164, 124],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 164, 168],"float32"), boxes=Tensor([378, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 164, 168],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 120],"float32"), boxes=Tensor([383, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 120],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 124],"float32"), boxes=Tensor([414, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 124],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 128],"float32"), boxes=Tensor([346, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 128],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 140],"float32"), boxes=Tensor([199, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 140],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 140],"float32"), boxes=Tensor([343, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 140],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 144],"float32"), boxes=Tensor([128, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 144],"float32"), boxes=Tensor([592, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 168],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 168],"float32"), boxes=Tensor([502, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 256],"float32"), boxes=Tensor([1160, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 256],"float32"), boxes=Tensor([1348, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 256],"float32"), boxes=Tensor([148, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 256],"float32"), boxes=Tensor([1504, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 256],"float32"), boxes=Tensor([1535, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 256],"float32"), boxes=Tensor([182, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 256],"float32"), boxes=Tensor([217, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 168, 256],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 176, 240],"float32"), boxes=Tensor([1388, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 176, 240],"float32"), boxes=Tensor([185, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 176, 264],"float32"), boxes=Tensor([1192, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 176, 264],"float32"), boxes=Tensor([1468, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 176, 264],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 176, 264],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 176, 272],"float32"), boxes=Tensor([108, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 176, 272],"float32"), boxes=Tensor([1369, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 176, 272],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 176, 272],"float32"), boxes=Tensor([933, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 176, 336],"float32"), boxes=Tensor([1028, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 176, 336],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 248],"float32"), boxes=Tensor([1061, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 248],"float32"), boxes=Tensor([1377, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 248],"float32"), boxes=Tensor([264, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 248],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 256],"float32"), boxes=Tensor([110, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 256],"float32"), boxes=Tensor([1192, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 256],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 272],"float32"), boxes=Tensor([1303, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 272],"float32"), boxes=Tensor([1401, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 272],"float32"), boxes=Tensor([1489, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 272],"float32"), boxes=Tensor([153, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 272],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 272],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 272],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 272],"float32"), boxes=Tensor([985, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 280],"float32"), boxes=Tensor([1375, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 280],"float32"), boxes=Tensor([1387, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 280],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 280],"float32"), boxes=Tensor([182, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 280],"float32"), boxes=Tensor([241, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 280],"float32"), boxes=Tensor([978, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 296],"float32"), boxes=Tensor([1729, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 296],"float32"), boxes=Tensor([194, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 304],"float32"), boxes=Tensor([1699, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 304],"float32"), boxes=Tensor([320, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 312],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 312],"float32"), boxes=Tensor([990, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 320],"float32"), boxes=Tensor([1592, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 320],"float32"), boxes=Tensor([246, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 328],"float32"), boxes=Tensor([1014, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 328],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 336],"float32"), boxes=Tensor([138, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 336],"float32"), boxes=Tensor([1393, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 336],"float32"), boxes=Tensor([1527, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 184, 336],"float32"), boxes=Tensor([207, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 248],"float32"), boxes=Tensor([1009, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 248],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 256],"float32"), boxes=Tensor([1432, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 256],"float32"), boxes=Tensor([1583, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 256],"float32"), boxes=Tensor([278, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 256],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 264],"float32"), boxes=Tensor([1065, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 264],"float32"), boxes=Tensor([1191, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 264],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 264],"float32"), boxes=Tensor([1303, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 264],"float32"), boxes=Tensor([1312, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 264],"float32"), boxes=Tensor([1630, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 264],"float32"), boxes=Tensor([167, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 264],"float32"), boxes=Tensor([180, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 264],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 264],"float32"), boxes=Tensor([326, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 272],"float32"), boxes=Tensor([1208, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 272],"float32"), boxes=Tensor([126, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 280],"float32"), boxes=Tensor([1260, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 280],"float32"), boxes=Tensor([1330, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 280],"float32"), boxes=Tensor([1508, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 280],"float32"), boxes=Tensor([1511, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 280],"float32"), boxes=Tensor([200, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 280],"float32"), boxes=Tensor([234, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 280],"float32"), boxes=Tensor([308, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 280],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([1090, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([111, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([113, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([1144, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([1182, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([1239, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([1262, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([1294, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([136, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([1398, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([1462, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([152, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([1605, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([1665, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([171, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([221, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([302, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([820, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 288],"float32"), boxes=Tensor([959, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([1173, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([1246, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([1306, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([1363, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([1372, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([138, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([1507, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([161, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([173, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([231, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([824, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([931, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 296],"float32"), boxes=Tensor([96, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 304],"float32"), boxes=Tensor([1204, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 304],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 336],"float32"), boxes=Tensor([1254, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 336],"float32"), boxes=Tensor([135, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 336],"float32"), boxes=Tensor([1377, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 336],"float32"), boxes=Tensor([1426, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 336],"float32"), boxes=Tensor([1475, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 336],"float32"), boxes=Tensor([148, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 336],"float32"), boxes=Tensor([1788, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 336],"float32"), boxes=Tensor([243, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 192, 336],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 240],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 240],"float32"), boxes=Tensor([1325, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 248],"float32"), boxes=Tensor([129, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 248],"float32"), boxes=Tensor([1321, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 256],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 256],"float32"), boxes=Tensor([123, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 256],"float32"), boxes=Tensor([1231, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 256],"float32"), boxes=Tensor([1370, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 256],"float32"), boxes=Tensor([1454, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 256],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1001, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1117, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1163, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1165, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1206, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1208, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1246, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([125, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1253, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1261, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1265, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([131, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1324, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1329, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1332, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1342, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1344, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1419, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([144, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1484, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([151, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1533, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1583, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([160, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([162, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([1620, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([170, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([171, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([197, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([262, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([271, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([275, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([317, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([810, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 272],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 280],"float32"), boxes=Tensor([1320, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 280],"float32"), boxes=Tensor([1402, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 280],"float32"), boxes=Tensor([1552, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 280],"float32"), boxes=Tensor([204, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 280],"float32"), boxes=Tensor([212, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 280],"float32"), boxes=Tensor([232, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([1017, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([1050, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([110, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([1230, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([1322, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([1366, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([1448, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([1556, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([193, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([214, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([235, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 288],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 296],"float32"), boxes=Tensor([1243, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 296],"float32"), boxes=Tensor([1293, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 296],"float32"), boxes=Tensor([1376, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 296],"float32"), boxes=Tensor([1434, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 296],"float32"), boxes=Tensor([159, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 296],"float32"), boxes=Tensor([181, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 296],"float32"), boxes=Tensor([200, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 296],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1010, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1022, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1036, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1043, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1051, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1057, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1063, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1064, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1092, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1094, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1179, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1198, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1212, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1215, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1247, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1275, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1277, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1286, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1295, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1297, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1299, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1310, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1313, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1319, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1327, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1347, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1356, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1381, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([139, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1469, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1482, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1498, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([150, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([154, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1590, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([160, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([163, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([165, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([1741, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([176, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([184, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([193, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([198, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([202, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([207, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([213, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([214, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([222, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([226, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([236, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([294, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([797, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([801, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([843, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([930, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([951, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 304],"float32"), boxes=Tensor([97, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 312],"float32"), boxes=Tensor([1350, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 312],"float32"), boxes=Tensor([137, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 320],"float32"), boxes=Tensor([1149, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 320],"float32"), boxes=Tensor([1290, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 320],"float32"), boxes=Tensor([1413, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 320],"float32"), boxes=Tensor([171, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 320],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 320],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 328],"float32"), boxes=Tensor([135, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 328],"float32"), boxes=Tensor([1399, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 328],"float32"), boxes=Tensor([146, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 328],"float32"), boxes=Tensor([1475, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 328],"float32"), boxes=Tensor([213, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 328],"float32"), boxes=Tensor([965, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([108, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([1143, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([1196, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([1215, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([1297, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([1303, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([1333, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([1554, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([1615, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([170, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([177, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([196, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([201, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([211, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([946, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 200, 336],"float32"), boxes=Tensor([97, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 208, 288],"float32"), boxes=Tensor([1272, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 208, 288],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 208, 296],"float32"), boxes=Tensor([1324, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 208, 296],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 208, 304],"float32"), boxes=Tensor([1247, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 208, 304],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 208, 328],"float32"), boxes=Tensor([1666, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 208, 328],"float32"), boxes=Tensor([237, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 21, 32],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 21, 32],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 21, 32],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 21, 32],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 21, 32],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 21, 32],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 21, 32],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 21, 32],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 224],"float32"), boxes=Tensor([1612, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 224],"float32"), boxes=Tensor([271, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 248],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 248],"float32"), boxes=Tensor([1214, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 248],"float32"), boxes=Tensor([1329, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 248],"float32"), boxes=Tensor([149, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 256],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 256],"float32"), boxes=Tensor([1217, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 256],"float32"), boxes=Tensor([1435, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 256],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 264],"float32"), boxes=Tensor([1134, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 264],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 272],"float32"), boxes=Tensor([1428, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 272],"float32"), boxes=Tensor([234, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 280],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 280],"float32"), boxes=Tensor([1368, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 280],"float32"), boxes=Tensor([1460, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 280],"float32"), boxes=Tensor([1706, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 280],"float32"), boxes=Tensor([315, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 280],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 288],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 288],"float32"), boxes=Tensor([1279, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 288],"float32"), boxes=Tensor([142, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 288],"float32"), boxes=Tensor([1421, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 288],"float32"), boxes=Tensor([1459, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 288],"float32"), boxes=Tensor([196, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 304],"float32"), boxes=Tensor([1149, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 304],"float32"), boxes=Tensor([173, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 312],"float32"), boxes=Tensor([925, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 312],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 336],"float32"), boxes=Tensor([1539, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 216, 336],"float32"), boxes=Tensor([173, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 30],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 30],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 33],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 33],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 33],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 33],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 34],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 34],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 34],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 34],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 42],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 22, 42],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 240],"float32"), boxes=Tensor([1710, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 248],"float32"), boxes=Tensor([1054, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 248],"float32"), boxes=Tensor([1522, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 248],"float32"), boxes=Tensor([213, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 248],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 256],"float32"), boxes=Tensor([1197, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 256],"float32"), boxes=Tensor([1254, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 256],"float32"), boxes=Tensor([1342, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 256],"float32"), boxes=Tensor([1647, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 256],"float32"), boxes=Tensor([204, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 256],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 256],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 256],"float32"), boxes=Tensor([97, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 264],"float32"), boxes=Tensor([1253, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 264],"float32"), boxes=Tensor([1349, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 264],"float32"), boxes=Tensor([144, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 264],"float32"), boxes=Tensor([175, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 264],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 264],"float32"), boxes=Tensor([804, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 272],"float32"), boxes=Tensor([1188, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 272],"float32"), boxes=Tensor([1191, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 272],"float32"), boxes=Tensor([1332, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 272],"float32"), boxes=Tensor([148, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 272],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 272],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 280],"float32"), boxes=Tensor([1139, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 280],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 280],"float32"), boxes=Tensor([1386, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 280],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 280],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 280],"float32"), boxes=Tensor([900, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 288],"float32"), boxes=Tensor([1014, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 288],"float32"), boxes=Tensor([128, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 288],"float32"), boxes=Tensor([1466, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 288],"float32"), boxes=Tensor([1558, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 288],"float32"), boxes=Tensor([205, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 288],"float32"), boxes=Tensor([225, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 288],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 288],"float32"), boxes=Tensor([918, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 296],"float32"), boxes=Tensor([1552, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 296],"float32"), boxes=Tensor([278, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 304],"float32"), boxes=Tensor([102, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 304],"float32"), boxes=Tensor([1032, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 304],"float32"), boxes=Tensor([1087, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 304],"float32"), boxes=Tensor([112, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 304],"float32"), boxes=Tensor([1131, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 304],"float32"), boxes=Tensor([1388, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 304],"float32"), boxes=Tensor([148, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 304],"float32"), boxes=Tensor([159, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 320],"float32"), boxes=Tensor([1229, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 320],"float32"), boxes=Tensor([148, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 328],"float32"), boxes=Tensor([1381, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 224, 328],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 31],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 31],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 31],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 31],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 32],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 32],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 32],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 32],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 34],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 34],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 34],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 34],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 34],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 34],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 34],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 35],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 35],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 35],"float32"), boxes=Tensor([4, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 35],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 35],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 35],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 37],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 37],"float32"), boxes=Tensor([6, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 38],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 38],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 39],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 39],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 40],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 40],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 41],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 41],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 42],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 42],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 42],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 23, 42],"float32"), boxes=Tensor([6, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 232, 256],"float32"), boxes=Tensor([1081, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 232, 256],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 232, 264],"float32"), boxes=Tensor([1605, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 232, 264],"float32"), boxes=Tensor([205, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 232, 272],"float32"), boxes=Tensor([1119, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 232, 272],"float32"), boxes=Tensor([1305, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 232, 272],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 232, 272],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 31],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 31],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 32],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 32],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 32],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 32],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 33],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 34],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 34],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 35],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 35],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 35],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 35],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 35],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 35],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 35],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([108, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 36],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 37],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 38],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 38],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 42],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 42],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 42],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 42],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 42],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 42],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 42],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 42],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 42],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 24, 42],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 176],"float32"), boxes=Tensor([1048, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 176],"float32"), boxes=Tensor([1137, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 176],"float32"), boxes=Tensor([1277, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 176],"float32"), boxes=Tensor([1287, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 176],"float32"), boxes=Tensor([1295, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 176],"float32"), boxes=Tensor([1417, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 176],"float32"), boxes=Tensor([1545, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 208],"float32"), boxes=Tensor([1139, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 208],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 224],"float32"), boxes=Tensor([1137, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 240],"float32"), boxes=Tensor([1356, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 240],"float32"), boxes=Tensor([232, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 248],"float32"), boxes=Tensor([1438, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 248],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 256],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 256],"float32"), boxes=Tensor([1065, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 256],"float32"), boxes=Tensor([1327, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 256],"float32"), boxes=Tensor([1372, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 256],"float32"), boxes=Tensor([159, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 256],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 272],"float32"), boxes=Tensor([1093, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 272],"float32"), boxes=Tensor([1122, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 272],"float32"), boxes=Tensor([117, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 272],"float32"), boxes=Tensor([1256, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 272],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 272],"float32"), boxes=Tensor([1338, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 272],"float32"), boxes=Tensor([1373, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 272],"float32"), boxes=Tensor([1496, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 272],"float32"), boxes=Tensor([178, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 272],"float32"), boxes=Tensor([234, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 272],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 272],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 272],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 272],"float32"), boxes=Tensor([915, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 280],"float32"), boxes=Tensor([1063, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 280],"float32"), boxes=Tensor([1182, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 280],"float32"), boxes=Tensor([1375, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 280],"float32"), boxes=Tensor([264, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 280],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 280],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 288],"float32"), boxes=Tensor([1420, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 288],"float32"), boxes=Tensor([1441, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 288],"float32"), boxes=Tensor([1444, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 288],"float32"), boxes=Tensor([1729, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 288],"float32"), boxes=Tensor([218, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 296],"float32"), boxes=Tensor([131, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 296],"float32"), boxes=Tensor([1409, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 296],"float32"), boxes=Tensor([1544, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 296],"float32"), boxes=Tensor([238, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 304],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 304],"float32"), boxes=Tensor([1044, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 304],"float32"), boxes=Tensor([1146, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 304],"float32"), boxes=Tensor([1160, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 304],"float32"), boxes=Tensor([1379, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 304],"float32"), boxes=Tensor([1418, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 304],"float32"), boxes=Tensor([167, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 304],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 304],"float32"), boxes=Tensor([259, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 304],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 312],"float32"), boxes=Tensor([1194, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 312],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 312],"float32"), boxes=Tensor([1599, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 312],"float32"), boxes=Tensor([275, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 320],"float32"), boxes=Tensor([1418, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 320],"float32"), boxes=Tensor([153, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 328],"float32"), boxes=Tensor([1301, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 328],"float32"), boxes=Tensor([1321, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 336],"float32"), boxes=Tensor([1219, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 336],"float32"), boxes=Tensor([1329, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 336],"float32"), boxes=Tensor([1459, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 336],"float32"), boxes=Tensor([202, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 336],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 240, 336],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 184],"float32"), boxes=Tensor([1016, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 184],"float32"), boxes=Tensor([1273, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 184],"float32"), boxes=Tensor([1341, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 184],"float32"), boxes=Tensor([1356, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 184],"float32"), boxes=Tensor([1376, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 184],"float32"), boxes=Tensor([1389, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 184],"float32"), boxes=Tensor([1404, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 184],"float32"), boxes=Tensor([1524, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 184],"float32"), boxes=Tensor([1694, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 192],"float32"), boxes=Tensor([1331, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 192],"float32"), boxes=Tensor([166, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 216],"float32"), boxes=Tensor([1172, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 224],"float32"), boxes=Tensor([1138, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 224],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 248],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 248],"float32"), boxes=Tensor([1133, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 248],"float32"), boxes=Tensor([1135, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 248],"float32"), boxes=Tensor([120, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 248],"float32"), boxes=Tensor([1226, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 248],"float32"), boxes=Tensor([1294, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 248],"float32"), boxes=Tensor([171, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 248],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 256],"float32"), boxes=Tensor([1358, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 256],"float32"), boxes=Tensor([1477, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 256],"float32"), boxes=Tensor([186, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 256],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 264],"float32"), boxes=Tensor([1162, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 264],"float32"), boxes=Tensor([141, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 272],"float32"), boxes=Tensor([1143, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 272],"float32"), boxes=Tensor([121, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 272],"float32"), boxes=Tensor([1281, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 272],"float32"), boxes=Tensor([1309, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 272],"float32"), boxes=Tensor([1417, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 272],"float32"), boxes=Tensor([220, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 272],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 272],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 272],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 272],"float32"), boxes=Tensor([942, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 272],"float32"), boxes=Tensor([954, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 272],"float32"), boxes=Tensor([96, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 280],"float32"), boxes=Tensor([110, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 280],"float32"), boxes=Tensor([1310, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 280],"float32"), boxes=Tensor([1370, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 280],"float32"), boxes=Tensor([1419, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 280],"float32"), boxes=Tensor([1568, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 280],"float32"), boxes=Tensor([168, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 280],"float32"), boxes=Tensor([1771, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 280],"float32"), boxes=Tensor([183, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 280],"float32"), boxes=Tensor([265, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 280],"float32"), boxes=Tensor([268, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 280],"float32"), boxes=Tensor([999, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 288],"float32"), boxes=Tensor([1189, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 288],"float32"), boxes=Tensor([1364, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 288],"float32"), boxes=Tensor([1505, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 288],"float32"), boxes=Tensor([1726, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 288],"float32"), boxes=Tensor([173, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 288],"float32"), boxes=Tensor([249, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 288],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 288],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 296],"float32"), boxes=Tensor([1217, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 296],"float32"), boxes=Tensor([1560, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 296],"float32"), boxes=Tensor([168, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 296],"float32"), boxes=Tensor([220, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 304],"float32"), boxes=Tensor([1265, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 304],"float32"), boxes=Tensor([1445, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 304],"float32"), boxes=Tensor([149, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 304],"float32"), boxes=Tensor([1552, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 304],"float32"), boxes=Tensor([168, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 304],"float32"), boxes=Tensor([1711, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 304],"float32"), boxes=Tensor([274, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 304],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 304],"float32"), boxes=Tensor([929, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 328],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 328],"float32"), boxes=Tensor([1142, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 328],"float32"), boxes=Tensor([1362, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 328],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 336],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 336],"float32"), boxes=Tensor([107, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 336],"float32"), boxes=Tensor([1120, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 336],"float32"), boxes=Tensor([1364, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 336],"float32"), boxes=Tensor([1577, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 336],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 336],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 336],"float32"), boxes=Tensor([773, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 248, 336],"float32"), boxes=Tensor([847, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 30],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 30],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 31],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 31],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 32],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 32],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 32],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 32],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 32],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 32],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 34],"float32"), boxes=Tensor([96, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 35],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 35],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 35],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 35],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 35],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 35],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 36],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 37],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 37],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 37],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 37],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 37],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 37],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 37],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 37],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([113, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([76, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([83, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 38],"float32"), boxes=Tensor([97, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 39],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 39],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 40],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 40],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 40],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 40],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 40],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 40],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 41],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 41],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 41],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 41],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 41],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 41],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 25, 42],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1073, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1135, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1143, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1144, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1158, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1173, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1186, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1197, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1288, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1292, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1295, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1299, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1302, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1303, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1305, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1307, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1308, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1316, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1399, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1412, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1423, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1437, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1444, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1494, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1567, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1803, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 192],"float32"), boxes=Tensor([1922, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 224],"float32"), boxes=Tensor([1072, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 224],"float32"), boxes=Tensor([1237, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 224],"float32"), boxes=Tensor([1339, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 224],"float32"), boxes=Tensor([1606, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 224],"float32"), boxes=Tensor([229, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 224],"float32"), boxes=Tensor([243, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 224],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 240],"float32"), boxes=Tensor([1125, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 240],"float32"), boxes=Tensor([119, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 240],"float32"), boxes=Tensor([1408, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 240],"float32"), boxes=Tensor([195, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 240],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 240],"float32"), boxes=Tensor([858, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 248],"float32"), boxes=Tensor([1187, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 248],"float32"), boxes=Tensor([1432, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 248],"float32"), boxes=Tensor([1479, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 248],"float32"), boxes=Tensor([159, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 248],"float32"), boxes=Tensor([188, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 248],"float32"), boxes=Tensor([242, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([1198, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([1250, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([1273, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([1335, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([1425, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([1439, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([1457, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([1459, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([152, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([154, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([1629, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([1701, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([1802, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([189, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([235, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([373, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 256],"float32"), boxes=Tensor([964, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 264],"float32"), boxes=Tensor([1266, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 264],"float32"), boxes=Tensor([1290, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 264],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 264],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 272],"float32"), boxes=Tensor([1489, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 272],"float32"), boxes=Tensor([198, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 280],"float32"), boxes=Tensor([1372, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 280],"float32"), boxes=Tensor([1657, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 280],"float32"), boxes=Tensor([277, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 280],"float32"), boxes=Tensor([305, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 288],"float32"), boxes=Tensor([1062, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 288],"float32"), boxes=Tensor([1084, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 288],"float32"), boxes=Tensor([1205, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 288],"float32"), boxes=Tensor([1502, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 288],"float32"), boxes=Tensor([1682, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 288],"float32"), boxes=Tensor([174, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 288],"float32"), boxes=Tensor([206, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 288],"float32"), boxes=Tensor([208, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 288],"float32"), boxes=Tensor([253, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 296],"float32"), boxes=Tensor([104, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 296],"float32"), boxes=Tensor([1127, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 296],"float32"), boxes=Tensor([1151, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 296],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 296],"float32"), boxes=Tensor([1330, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 296],"float32"), boxes=Tensor([155, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 296],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 296],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 296],"float32"), boxes=Tensor([998, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 304],"float32"), boxes=Tensor([1033, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 304],"float32"), boxes=Tensor([1102, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 304],"float32"), boxes=Tensor([111, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 304],"float32"), boxes=Tensor([1328, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 304],"float32"), boxes=Tensor([137, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 304],"float32"), boxes=Tensor([1389, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 304],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 304],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 304],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 304],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 304],"float32"), boxes=Tensor([926, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 304],"float32"), boxes=Tensor([977, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 312],"float32"), boxes=Tensor([1072, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 312],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 320],"float32"), boxes=Tensor([1466, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 320],"float32"), boxes=Tensor([259, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 320],"float32"), boxes=Tensor([672, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 320],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 328],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 328],"float32"), boxes=Tensor([1407, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 328],"float32"), boxes=Tensor([1441, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 328],"float32"), boxes=Tensor([1452, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 328],"float32"), boxes=Tensor([1639, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 328],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 336],"float32"), boxes=Tensor([1107, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 336],"float32"), boxes=Tensor([1276, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 336],"float32"), boxes=Tensor([1303, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 336],"float32"), boxes=Tensor([1325, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 336],"float32"), boxes=Tensor([143, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 336],"float32"), boxes=Tensor([1622, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 336],"float32"), boxes=Tensor([178, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 336],"float32"), boxes=Tensor([192, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 336],"float32"), boxes=Tensor([223, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 336],"float32"), boxes=Tensor([224, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 336],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 256, 336],"float32"), boxes=Tensor([991, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 26, 36],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 26, 36],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 26, 37],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 26, 37],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 26, 38],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 26, 38],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 26, 41],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 26, 41],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 192],"float32"), boxes=Tensor([1493, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 192],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 200],"float32"), boxes=Tensor([1482, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 200],"float32"), boxes=Tensor([1521, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 200],"float32"), boxes=Tensor([1544, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 216],"float32"), boxes=Tensor([1260, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 216],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 248],"float32"), boxes=Tensor([1013, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 248],"float32"), boxes=Tensor([136, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 248],"float32"), boxes=Tensor([1485, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 248],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 256],"float32"), boxes=Tensor([1039, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 256],"float32"), boxes=Tensor([1366, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 256],"float32"), boxes=Tensor([158, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 256],"float32"), boxes=Tensor([163, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 256],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 256],"float32"), boxes=Tensor([943, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 264],"float32"), boxes=Tensor([123, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 264],"float32"), boxes=Tensor([1398, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 264],"float32"), boxes=Tensor([1426, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 264],"float32"), boxes=Tensor([221, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 272],"float32"), boxes=Tensor([104, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 272],"float32"), boxes=Tensor([1273, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 272],"float32"), boxes=Tensor([1411, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 272],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 280],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 280],"float32"), boxes=Tensor([1042, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 280],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 280],"float32"), boxes=Tensor([1075, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 280],"float32"), boxes=Tensor([1141, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 280],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 280],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 280],"float32"), boxes=Tensor([975, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 288],"float32"), boxes=Tensor([1034, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 288],"float32"), boxes=Tensor([97, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 304],"float32"), boxes=Tensor([1049, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 304],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 304],"float32"), boxes=Tensor([1104, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 304],"float32"), boxes=Tensor([1361, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 304],"float32"), boxes=Tensor([1454, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 304],"float32"), boxes=Tensor([170, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 304],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 304],"float32"), boxes=Tensor([234, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 304],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 304],"float32"), boxes=Tensor([828, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 304],"float32"), boxes=Tensor([944, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 304],"float32"), boxes=Tensor([96, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 312],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 312],"float32"), boxes=Tensor([1390, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 320],"float32"), boxes=Tensor([1112, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 320],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 328],"float32"), boxes=Tensor([1413, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 328],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 336],"float32"), boxes=Tensor([110, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 264, 336],"float32"), boxes=Tensor([1102, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 28],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 28],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 31],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 31],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 31],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 31],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 32],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 32],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 32],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 32],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 33],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 33],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 34],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 34],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 35],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 35],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 35],"float32"), boxes=Tensor([4, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 35],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 35],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 35],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 36],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 36],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 36],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 36],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 36],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 36],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 38],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 38],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 39],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 39],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 42],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 27, 42],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1008, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1036, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1043, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1084, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1112, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1119, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1132, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1137, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1138, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1140, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1150, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1153, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1164, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1171, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1198, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1202, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1219, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1227, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1228, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1229, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1235, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1236, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1259, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1261, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1264, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1272, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1282, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1284, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1285, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1288, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1293, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1295, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1314, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1315, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1332, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1336, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1338, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1344, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1352, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1359, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1366, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1381, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1385, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1391, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1400, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1401, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1404, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1405, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1412, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1440, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1457, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1471, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1476, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1478, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1485, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1487, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1491, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1502, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1530, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1552, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1565, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1587, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1589, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1682, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1712, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([1772, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 200],"float32"), boxes=Tensor([997, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 216],"float32"), boxes=Tensor([1129, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 216],"float32"), boxes=Tensor([97, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 224],"float32"), boxes=Tensor([1086, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 224],"float32"), boxes=Tensor([1499, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 224],"float32"), boxes=Tensor([278, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 232],"float32"), boxes=Tensor([1067, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 232],"float32"), boxes=Tensor([1088, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 232],"float32"), boxes=Tensor([1094, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 232],"float32"), boxes=Tensor([1149, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 232],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 240],"float32"), boxes=Tensor([1098, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 240],"float32"), boxes=Tensor([1129, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 240],"float32"), boxes=Tensor([1210, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 240],"float32"), boxes=Tensor([1224, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 240],"float32"), boxes=Tensor([1256, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 240],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 240],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 248],"float32"), boxes=Tensor([1258, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 248],"float32"), boxes=Tensor([1274, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 248],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 248],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 256],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 256],"float32"), boxes=Tensor([1266, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 256],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 256],"float32"), boxes=Tensor([1323, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 256],"float32"), boxes=Tensor([1385, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 256],"float32"), boxes=Tensor([1386, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 256],"float32"), boxes=Tensor([157, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 256],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 256],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 256],"float32"), boxes=Tensor([930, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 256],"float32"), boxes=Tensor([96, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 272],"float32"), boxes=Tensor([1040, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 272],"float32"), boxes=Tensor([1054, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 272],"float32"), boxes=Tensor([1108, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 272],"float32"), boxes=Tensor([1133, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 272],"float32"), boxes=Tensor([1149, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 272],"float32"), boxes=Tensor([1171, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 272],"float32"), boxes=Tensor([1183, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 272],"float32"), boxes=Tensor([1189, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 272],"float32"), boxes=Tensor([1276, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 272],"float32"), boxes=Tensor([187, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 272],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 280],"float32"), boxes=Tensor([1062, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 280],"float32"), boxes=Tensor([1064, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 280],"float32"), boxes=Tensor([112, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 280],"float32"), boxes=Tensor([1140, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 280],"float32"), boxes=Tensor([1265, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 280],"float32"), boxes=Tensor([1360, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 280],"float32"), boxes=Tensor([1486, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 280],"float32"), boxes=Tensor([203, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 280],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 280],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 280],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 280],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 288],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 288],"float32"), boxes=Tensor([892, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 296],"float32"), boxes=Tensor([1101, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 296],"float32"), boxes=Tensor([1109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 296],"float32"), boxes=Tensor([1156, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 296],"float32"), boxes=Tensor([1386, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 296],"float32"), boxes=Tensor([215, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 296],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 296],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 296],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 304],"float32"), boxes=Tensor([1029, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 304],"float32"), boxes=Tensor([1042, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 304],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 304],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 304],"float32"), boxes=Tensor([1176, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 304],"float32"), boxes=Tensor([1193, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 304],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 304],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 304],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 304],"float32"), boxes=Tensor([685, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 320],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 320],"float32"), boxes=Tensor([784, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 328],"float32"), boxes=Tensor([1391, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 328],"float32"), boxes=Tensor([1710, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 328],"float32"), boxes=Tensor([260, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 336],"float32"), boxes=Tensor([1105, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 336],"float32"), boxes=Tensor([1208, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 336],"float32"), boxes=Tensor([125, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 336],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 336],"float32"), boxes=Tensor([131, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 336],"float32"), boxes=Tensor([1412, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 336],"float32"), boxes=Tensor([1481, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 336],"float32"), boxes=Tensor([1497, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 336],"float32"), boxes=Tensor([153, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 272, 336],"float32"), boxes=Tensor([1590, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 30],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 31],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 31],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 31],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 31],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 32],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 32],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 32],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 32],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 32],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 33],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 33],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 33],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 33],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 33],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 33],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 34],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 34],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 34],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 34],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 34],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 34],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 35],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 35],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 35],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 35],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 35],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 35],"float32"), boxes=Tensor([96, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 36],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 36],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 36],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 36],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 36],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 36],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 36],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 36],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 37],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 37],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 38],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 38],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 38],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 38],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 38],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 38],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 38],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 38],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 40],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 40],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 41],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 28, 41],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 192],"float32"), boxes=Tensor([1176, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 192],"float32"), boxes=Tensor([1198, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 192],"float32"), boxes=Tensor([1207, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 192],"float32"), boxes=Tensor([1395, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 192],"float32"), boxes=Tensor([1401, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 192],"float32"), boxes=Tensor([1457, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 192],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 224],"float32"), boxes=Tensor([1120, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 224],"float32"), boxes=Tensor([1246, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 224],"float32"), boxes=Tensor([1337, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 224],"float32"), boxes=Tensor([145, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 224],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 224],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 240],"float32"), boxes=Tensor([1162, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 240],"float32"), boxes=Tensor([168, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 248],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 248],"float32"), boxes=Tensor([1116, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 256],"float32"), boxes=Tensor([1190, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 256],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 256],"float32"), boxes=Tensor([1325, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 256],"float32"), boxes=Tensor([1465, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 256],"float32"), boxes=Tensor([1566, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 256],"float32"), boxes=Tensor([1621, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 256],"float32"), boxes=Tensor([170, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 256],"float32"), boxes=Tensor([179, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 256],"float32"), boxes=Tensor([201, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 256],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 264],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 264],"float32"), boxes=Tensor([873, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 264],"float32"), boxes=Tensor([952, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 272],"float32"), boxes=Tensor([1007, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 272],"float32"), boxes=Tensor([1038, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 272],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 272],"float32"), boxes=Tensor([1268, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 272],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 272],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 280],"float32"), boxes=Tensor([1250, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 280],"float32"), boxes=Tensor([1342, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 280],"float32"), boxes=Tensor([139, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 280],"float32"), boxes=Tensor([1461, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 280],"float32"), boxes=Tensor([149, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 280],"float32"), boxes=Tensor([208, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 288],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 288],"float32"), boxes=Tensor([1640, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 288],"float32"), boxes=Tensor([229, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 288],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 288],"float32"), boxes=Tensor([629, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 288],"float32"), boxes=Tensor([751, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 296],"float32"), boxes=Tensor([1131, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 296],"float32"), boxes=Tensor([149, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 304],"float32"), boxes=Tensor([1042, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 304],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 304],"float32"), boxes=Tensor([1281, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 304],"float32"), boxes=Tensor([1466, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 304],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 304],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 304],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 304],"float32"), boxes=Tensor([880, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 336],"float32"), boxes=Tensor([1205, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 336],"float32"), boxes=Tensor([1293, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 336],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 336],"float32"), boxes=Tensor([1421, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 336],"float32"), boxes=Tensor([177, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 280, 336],"float32"), boxes=Tensor([229, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 192],"float32"), boxes=Tensor([1390, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 200],"float32"), boxes=Tensor([1328, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 216],"float32"), boxes=Tensor([1564, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 216],"float32"), boxes=Tensor([244, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 224],"float32"), boxes=Tensor([1208, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 224],"float32"), boxes=Tensor([144, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 232],"float32"), boxes=Tensor([1149, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 240],"float32"), boxes=Tensor([1067, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 240],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 248],"float32"), boxes=Tensor([1364, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 248],"float32"), boxes=Tensor([156, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 256],"float32"), boxes=Tensor([138, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 256],"float32"), boxes=Tensor([956, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 264],"float32"), boxes=Tensor([1212, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 264],"float32"), boxes=Tensor([1531, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 264],"float32"), boxes=Tensor([203, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 264],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 272],"float32"), boxes=Tensor([1024, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 272],"float32"), boxes=Tensor([107, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 272],"float32"), boxes=Tensor([1288, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 272],"float32"), boxes=Tensor([1714, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 272],"float32"), boxes=Tensor([285, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 272],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 272],"float32"), boxes=Tensor([868, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 280],"float32"), boxes=Tensor([1182, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 280],"float32"), boxes=Tensor([124, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 280],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 280],"float32"), boxes=Tensor([972, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 288],"float32"), boxes=Tensor([1069, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 288],"float32"), boxes=Tensor([108, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 288],"float32"), boxes=Tensor([1428, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 288],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 312],"float32"), boxes=Tensor([1023, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 312],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 328],"float32"), boxes=Tensor([1571, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 328],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 328],"float32"), boxes=Tensor([274, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 328],"float32"), boxes=Tensor([913, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 336],"float32"), boxes=Tensor([1246, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 288, 336],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 29, 32],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 29, 32],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 29, 33],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 29, 33],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 29, 34],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 29, 34],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 29, 34],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 29, 34],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 256],"float32"), boxes=Tensor([1303, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 256],"float32"), boxes=Tensor([6, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 256],"float32"), boxes=Tensor([622, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 256],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 264],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 264],"float32"), boxes=Tensor([1253, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 272],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 272],"float32"), boxes=Tensor([915, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 280],"float32"), boxes=Tensor([1242, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 280],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 288],"float32"), boxes=Tensor([101, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 288],"float32"), boxes=Tensor([1199, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 288],"float32"), boxes=Tensor([1339, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 288],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 296],"float32"), boxes=Tensor([1257, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 296],"float32"), boxes=Tensor([131, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 296],"float32"), boxes=Tensor([1445, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 296],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 304],"float32"), boxes=Tensor([1150, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 304],"float32"), boxes=Tensor([1405, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 304],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 304],"float32"), boxes=Tensor([177, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 304],"float32"), boxes=Tensor([283, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 304],"float32"), boxes=Tensor([852, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 320],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 320],"float32"), boxes=Tensor([578, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 336],"float32"), boxes=Tensor([1341, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 296, 336],"float32"), boxes=Tensor([216, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 22],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 22],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 22],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 22],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 22],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 22],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 26],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 26],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 28],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 30],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 30],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 31],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 31],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 32],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 32],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 32],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 32],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 32],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 32],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 34],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 34],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 34],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 34],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 34],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 34],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 34],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 34],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 34],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 34],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 34],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 34],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 35],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 35],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 35],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 35],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 35],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 35],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 36],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 36],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 36],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 36],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 36],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 37],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 37],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 37],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 37],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 38],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 38],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 38],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 38],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 38],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 38],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 38],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 38],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 38],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 38],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 39],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 39],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 39],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 39],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 40],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 40],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 41],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 41],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 41],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 42],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 42],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 42],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 42],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 42],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 30, 42],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 200],"float32"), boxes=Tensor([1039, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 200],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 200],"float32"), boxes=Tensor([1158, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 200],"float32"), boxes=Tensor([1183, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 200],"float32"), boxes=Tensor([1199, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 200],"float32"), boxes=Tensor([1227, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 200],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 248],"float32"), boxes=Tensor([1210, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 248],"float32"), boxes=Tensor([1236, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 248],"float32"), boxes=Tensor([1274, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 248],"float32"), boxes=Tensor([139, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 248],"float32"), boxes=Tensor([140, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 248],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 256],"float32"), boxes=Tensor([101, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 256],"float32"), boxes=Tensor([1250, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 256],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 256],"float32"), boxes=Tensor([76, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 256],"float32"), boxes=Tensor([811, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 256],"float32"), boxes=Tensor([987, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 264],"float32"), boxes=Tensor([1732, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 264],"float32"), boxes=Tensor([247, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 264],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 264],"float32"), boxes=Tensor([907, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 272],"float32"), boxes=Tensor([1170, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 272],"float32"), boxes=Tensor([1185, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 272],"float32"), boxes=Tensor([1208, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 272],"float32"), boxes=Tensor([1217, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 272],"float32"), boxes=Tensor([124, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 272],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 272],"float32"), boxes=Tensor([1431, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 272],"float32"), boxes=Tensor([176, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 272],"float32"), boxes=Tensor([241, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 272],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 280],"float32"), boxes=Tensor([1187, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 280],"float32"), boxes=Tensor([1254, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 280],"float32"), boxes=Tensor([1345, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 280],"float32"), boxes=Tensor([135, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 280],"float32"), boxes=Tensor([1491, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 280],"float32"), boxes=Tensor([199, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 280],"float32"), boxes=Tensor([225, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 280],"float32"), boxes=Tensor([272, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 280],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 280],"float32"), boxes=Tensor([895, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 280],"float32"), boxes=Tensor([966, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 280],"float32"), boxes=Tensor([97, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 288],"float32"), boxes=Tensor([1002, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 288],"float32"), boxes=Tensor([1116, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 288],"float32"), boxes=Tensor([1179, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 288],"float32"), boxes=Tensor([1249, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 288],"float32"), boxes=Tensor([125, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 288],"float32"), boxes=Tensor([128, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 288],"float32"), boxes=Tensor([1426, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 288],"float32"), boxes=Tensor([145, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 288],"float32"), boxes=Tensor([203, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 288],"float32"), boxes=Tensor([275, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 288],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 288],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 288],"float32"), boxes=Tensor([953, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 288],"float32"), boxes=Tensor([954, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 296],"float32"), boxes=Tensor([1091, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 296],"float32"), boxes=Tensor([1589, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 296],"float32"), boxes=Tensor([180, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 296],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 304],"float32"), boxes=Tensor([1270, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 304],"float32"), boxes=Tensor([1423, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 304],"float32"), boxes=Tensor([177, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 304],"float32"), boxes=Tensor([203, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 320],"float32"), boxes=Tensor([1365, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 320],"float32"), boxes=Tensor([161, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 336],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 336],"float32"), boxes=Tensor([1516, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 336],"float32"), boxes=Tensor([1636, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 336],"float32"), boxes=Tensor([197, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 336],"float32"), boxes=Tensor([315, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 336],"float32"), boxes=Tensor([736, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 336],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 304, 336],"float32"), boxes=Tensor([889, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 23],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 24],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 24],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 27],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 28],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 28],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 31],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 31],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 31],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 31],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 31],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 31],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 31],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 31],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 32],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 32],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 32],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 32],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 33],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 33],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 34],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 34],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 34],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 34],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 34],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 34],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 34],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 34],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 34],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 34],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 34],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 34],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 35],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 35],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 35],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 35],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 35],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 35],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 35],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 35],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 35],"float32"), boxes=Tensor([6, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 35],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 35],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 36],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 36],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 36],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 36],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 36],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 36],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 36],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 36],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 37],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 37],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 37],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 37],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 38],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 38],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 38],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 38],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 38],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 38],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 38],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 38],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 38],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 41],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 41],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 41],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 41],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 42],"float32"), boxes=Tensor([120, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 42],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 42],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 42],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 42],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 42],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 42],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 42],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 31, 42],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 312, 224],"float32"), boxes=Tensor([1119, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 312, 224],"float32"), boxes=Tensor([126, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 312, 248],"float32"), boxes=Tensor([1280, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 312, 248],"float32"), boxes=Tensor([168, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 312, 280],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 312, 280],"float32"), boxes=Tensor([842, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 24],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 28],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 28],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 28],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 28],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 28],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 28],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 28],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 30],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 30],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 30],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 30],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 30],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 30],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 31],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 31],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 31],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 31],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 31],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 31],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 32],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 33],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 33],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 33],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 33],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 34],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 34],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 35],"float32"), boxes=Tensor([1, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 35],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 35],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 35],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 36],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 36],"float32"), boxes=Tensor([112, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 36],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 36],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 36],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 36],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 36],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 36],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 36],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 37],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 37],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 37],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 37],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 37],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 37],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 37],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 37],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 37],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 37],"float32"), boxes=Tensor([76, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 38],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 38],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 38],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 38],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 38],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 38],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 38],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 38],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 38],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 38],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 38],"float32"), boxes=Tensor([92, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 38],"float32"), boxes=Tensor([94, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 39],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 39],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 40],"float32"), boxes=Tensor([105, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 40],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 40],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 40],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 41],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 41],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 41],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 41],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 41],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 41],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 42],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 42],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 42],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 42],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 42],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 42],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 42],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 42],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 42],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 42],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 42],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 32, 42],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 320, 256],"float32"), boxes=Tensor([1311, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 320, 256],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 320, 272],"float32"), boxes=Tensor([1089, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 320, 272],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 320, 288],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 320, 288],"float32"), boxes=Tensor([935, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 328, 248],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 328, 248],"float32"), boxes=Tensor([980, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 328, 336],"float32"), boxes=Tensor([1297, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 328, 336],"float32"), boxes=Tensor([245, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 24],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 24],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 25],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 25],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 25],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 27],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 27],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 31],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 31],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 31],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 31],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 32],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 32],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 32],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 32],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 32],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 32],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 33],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 33],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 33],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 33],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 34],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 34],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 34],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 34],"float32"), boxes=Tensor([9, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 35],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 35],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 35],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 35],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 35],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 35],"float32"), boxes=Tensor([76, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 35],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 35],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 36],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 36],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 38],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 38],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 38],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 38],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 38],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 38],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 38],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 38],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 38],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 38],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 38],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 38],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 39],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 39],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 40],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 40],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 41],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 41],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 42],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 33, 42],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 240],"float32"), boxes=Tensor([112, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 240],"float32"), boxes=Tensor([1149, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 248],"float32"), boxes=Tensor([1290, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 248],"float32"), boxes=Tensor([218, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 256],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 256],"float32"), boxes=Tensor([1351, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 280],"float32"), boxes=Tensor([1284, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 280],"float32"), boxes=Tensor([1648, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 280],"float32"), boxes=Tensor([177, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 280],"float32"), boxes=Tensor([253, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 288],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 288],"float32"), boxes=Tensor([910, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 336],"float32"), boxes=Tensor([1007, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 336, 336],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([104, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([138, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([76, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 25],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 27],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 27],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 28],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 28],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 28],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 29],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 29],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 29],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 29],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 29],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 30],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 30],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 30],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 30],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 30],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 30],"float32"), boxes=Tensor([94, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 30],"float32"), boxes=Tensor([96, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 31],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 31],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 31],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 31],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 32],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 32],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 32],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 32],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 32],"float32"), boxes=Tensor([4, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 32],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 32],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 32],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 32],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 32],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 32],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 34],"float32"), boxes=Tensor([112, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 34],"float32"), boxes=Tensor([158, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 34],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 34],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 34],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 34],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 34],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 34],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 34],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 34],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 34],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 35],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 35],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 35],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 35],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 35],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 35],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 35],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 35],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 35],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 35],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 35],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 36],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 36],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 37],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 37],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 37],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 37],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 37],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 37],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 37],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 37],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 38],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 38],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 38],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 38],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 38],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 38],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 38],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 38],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 38],"float32"), boxes=Tensor([92, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 40],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 40],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 41],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 41],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 41],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 42],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 42],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 42],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 42],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 42],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 42],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 42],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 42],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 42],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 34, 42],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 24],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 24],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 24],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 24],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 24],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 24],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 24],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 28],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 28],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 28],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 28],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 28],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 28],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 30],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 30],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 31],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 31],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 32],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 32],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 32],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 32],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 32],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 32],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 32],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 32],"float32"), boxes=Tensor([6, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 32],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 33],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 33],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 33],"float32"), boxes=Tensor([76, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 34],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 34],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 34],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 34],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 34],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 34],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 35],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 35],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 35],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 35],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 35],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 35],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 36],"float32"), boxes=Tensor([117, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 36],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 36],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 36],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 36],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 36],"float32"), boxes=Tensor([97, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 37],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 37],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 38],"float32"), boxes=Tensor([105, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 38],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 38],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 38],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 38],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 38],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 38],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 38],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 42],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 42],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 42],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 42],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 42],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 35, 42],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 24],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 25],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 27],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 27],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 28],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 28],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 29],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 30],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 30],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 31],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 31],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 32],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 32],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 33],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 33],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 33],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 33],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 34],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 34],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 34],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 34],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 34],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 34],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 34],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 35],"float32"), boxes=Tensor([101, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 35],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 35],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 35],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 36],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 36],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 36],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 36],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 39],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 39],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 41],"float32"), boxes=Tensor([113, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 41],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 41],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 41],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 42],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 36, 42],"float32"), boxes=Tensor([76, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 32],"float32"), boxes=Tensor([126, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 32],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 32],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 32],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 33],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 33],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 34],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 34],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 35],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 35],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 36],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 36],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 36],"float32"), boxes=Tensor([5, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 36],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 37],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 37],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 37],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 37],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 38],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 38],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 38],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 38],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 38],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 38],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 40],"float32"), boxes=Tensor([113, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 40],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 42],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 37, 42],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 25],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 25],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 25],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 25],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 25],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 25],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 25],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 31],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 31],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 31],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 31],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 31],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 31],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 32],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 32],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 32],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 32],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 32],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 32],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 33],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 33],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 33],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 33],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 34],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 34],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 34],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 34],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 34],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 34],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 34],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 34],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 34],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 34],"float32"), boxes=Tensor([92, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 35],"float32"), boxes=Tensor([11, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 35],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 35],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 35],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 35],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 35],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 35],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 35],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 35],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 35],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 35],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 35],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 36],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 36],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 36],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 36],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 36],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 36],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 36],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 36],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 36],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 36],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 36],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 36],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 36],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 37],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 37],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 37],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 37],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 38],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 38],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 38],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 38],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 40],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 40],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 42],"float32"), boxes=Tensor([0, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 42],"float32"), boxes=Tensor([107, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 42],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 42],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 42],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 42],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 42],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 38, 42],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 39, 28],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 39, 28],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 39, 31],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 39, 31],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 39, 35],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 39, 35],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 40, 32],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 40, 32],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 40, 34],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 40, 34],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 40, 36],"float32"), boxes=Tensor([14, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 40, 36],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 41, 31],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 41, 31],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 41, 42],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 41, 42],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 30],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 30],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 31],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 31],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 32],"float32"), boxes=Tensor([3, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 32],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 35],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 35],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 35],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 35],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 36],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 36],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 42],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 42],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 64],"float32"), boxes=Tensor([121, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 64],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 64],"float32"), boxes=Tensor([167, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 64],"float32"), boxes=Tensor([213, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 64],"float32"), boxes=Tensor([295, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 64],"float32"), boxes=Tensor([376, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 64],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 42, 64],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 44, 60],"float32"), boxes=Tensor([261, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 44, 60],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 44, 66],"float32"), boxes=Tensor([220, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 44, 66],"float32"), boxes=Tensor([323, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 44, 66],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 44, 66],"float32"), boxes=Tensor([92, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 44, 68],"float32"), boxes=Tensor([160, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 44, 68],"float32"), boxes=Tensor([267, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 44, 68],"float32"), boxes=Tensor([480, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 44, 68],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 44, 84],"float32"), boxes=Tensor([147, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 44, 84],"float32"), boxes=Tensor([434, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 62],"float32"), boxes=Tensor([256, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 62],"float32"), boxes=Tensor([422, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 62],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 62],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 64],"float32"), boxes=Tensor([117, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 64],"float32"), boxes=Tensor([332, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 64],"float32"), boxes=Tensor([346, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 64],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 68],"float32"), boxes=Tensor([117, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 68],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 68],"float32"), boxes=Tensor([220, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 68],"float32"), boxes=Tensor([280, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 68],"float32"), boxes=Tensor([281, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 68],"float32"), boxes=Tensor([480, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 68],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 70],"float32"), boxes=Tensor([170, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 70],"float32"), boxes=Tensor([284, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 70],"float32"), boxes=Tensor([294, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 70],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 70],"float32"), boxes=Tensor([458, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 70],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 74],"float32"), boxes=Tensor([139, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 74],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 76],"float32"), boxes=Tensor([153, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 76],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 78],"float32"), boxes=Tensor([482, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 78],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 80],"float32"), boxes=Tensor([134, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 80],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 82],"float32"), boxes=Tensor([454, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 82],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 84],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 84],"float32"), boxes=Tensor([221, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 84],"float32"), boxes=Tensor([332, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 46, 84],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 62],"float32"), boxes=Tensor([123, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 62],"float32"), boxes=Tensor([434, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 64],"float32"), boxes=Tensor([182, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 64],"float32"), boxes=Tensor([222, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 64],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 64],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 66],"float32"), boxes=Tensor([162, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 66],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 66],"float32"), boxes=Tensor([263, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 66],"float32"), boxes=Tensor([281, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 66],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 66],"float32"), boxes=Tensor([449, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 66],"float32"), boxes=Tensor([493, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 66],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 66],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 66],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 68],"float32"), boxes=Tensor([310, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 68],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 70],"float32"), boxes=Tensor([158, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 70],"float32"), boxes=Tensor([205, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 70],"float32"), boxes=Tensor([317, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 70],"float32"), boxes=Tensor([328, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 70],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 70],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 70],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 70],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([134, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([161, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([189, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([233, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([273, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([342, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([350, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([365, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([379, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([384, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([427, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([436, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([538, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 72],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([127, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([211, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([295, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([305, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([347, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([354, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([405, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([474, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([480, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([76, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 74],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 76],"float32"), boxes=Tensor([354, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 76],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 84],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 84],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 84],"float32"), boxes=Tensor([209, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 84],"float32"), boxes=Tensor([261, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 84],"float32"), boxes=Tensor([263, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 84],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 84],"float32"), boxes=Tensor([314, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 84],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 84],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 48, 84],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 60],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 60],"float32"), boxes=Tensor([349, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 62],"float32"), boxes=Tensor([294, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 62],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 64],"float32"), boxes=Tensor([126, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 64],"float32"), boxes=Tensor([217, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 64],"float32"), boxes=Tensor([288, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 64],"float32"), boxes=Tensor([307, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 64],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 64],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([134, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([139, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([159, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([168, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([230, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([256, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([283, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([286, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([301, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([303, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([308, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([313, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([329, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([340, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([352, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([357, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([363, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([367, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([376, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([389, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([411, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([495, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 68],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 70],"float32"), boxes=Tensor([198, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 70],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 70],"float32"), boxes=Tensor([263, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 70],"float32"), boxes=Tensor([309, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 70],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 70],"float32"), boxes=Tensor([83, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 72],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 72],"float32"), boxes=Tensor([189, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 72],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 72],"float32"), boxes=Tensor([227, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 72],"float32"), boxes=Tensor([295, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 72],"float32"), boxes=Tensor([303, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 72],"float32"), boxes=Tensor([351, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 72],"float32"), boxes=Tensor([468, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 72],"float32"), boxes=Tensor([508, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 72],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 72],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 72],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 72],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 72],"float32"), boxes=Tensor([96, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 74],"float32"), boxes=Tensor([2, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 74],"float32"), boxes=Tensor([215, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 74],"float32"), boxes=Tensor([269, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 74],"float32"), boxes=Tensor([289, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 74],"float32"), boxes=Tensor([350, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 74],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 74],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 74],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([111, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([120, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([121, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([127, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([136, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([147, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([163, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([176, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([220, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([227, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([235, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([281, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([283, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([290, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([298, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([308, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([309, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([312, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([313, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([315, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([332, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([343, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([347, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([353, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([358, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([371, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([396, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([4, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([400, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([403, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([412, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([427, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([432, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([436, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([437, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([458, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([475, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([489, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([504, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([529, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([562, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([609, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([83, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([92, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 76],"float32"), boxes=Tensor([94, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 78],"float32"), boxes=Tensor([289, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 78],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 80],"float32"), boxes=Tensor([299, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 80],"float32"), boxes=Tensor([355, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 80],"float32"), boxes=Tensor([389, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 80],"float32"), boxes=Tensor([76, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 80],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 80],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 82],"float32"), boxes=Tensor([148, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 82],"float32"), boxes=Tensor([210, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 82],"float32"), boxes=Tensor([229, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 82],"float32"), boxes=Tensor([481, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 82],"float32"), boxes=Tensor([70, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 82],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([120, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([176, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([193, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([279, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([297, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([318, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([357, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([374, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([398, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([458, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 50, 84],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 52, 72],"float32"), boxes=Tensor([392, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 52, 72],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 52, 74],"float32"), boxes=Tensor([272, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 52, 74],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 52, 76],"float32"), boxes=Tensor([360, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 52, 76],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 52, 82],"float32"), boxes=Tensor([137, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 52, 82],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 56],"float32"), boxes=Tensor([158, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 56],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 62],"float32"), boxes=Tensor([264, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 62],"float32"), boxes=Tensor([342, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 62],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 62],"float32"), boxes=Tensor([92, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 64],"float32"), boxes=Tensor([105, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 64],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 64],"float32"), boxes=Tensor([236, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 64],"float32"), boxes=Tensor([319, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 66],"float32"), boxes=Tensor([435, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 66],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 68],"float32"), boxes=Tensor([112, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 68],"float32"), boxes=Tensor([341, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 70],"float32"), boxes=Tensor([178, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 70],"float32"), boxes=Tensor([239, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 70],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 70],"float32"), boxes=Tensor([299, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 70],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 70],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 72],"float32"), boxes=Tensor([166, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 72],"float32"), boxes=Tensor([200, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 72],"float32"), boxes=Tensor([326, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 72],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 72],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 72],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 76],"float32"), boxes=Tensor([108, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 76],"float32"), boxes=Tensor([363, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 78],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 78],"float32"), boxes=Tensor([464, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 84],"float32"), boxes=Tensor([209, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 54, 84],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 60],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 62],"float32"), boxes=Tensor([214, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 62],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 62],"float32"), boxes=Tensor([402, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 62],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 64],"float32"), boxes=Tensor([196, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 64],"float32"), boxes=Tensor([287, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 64],"float32"), boxes=Tensor([302, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 64],"float32"), boxes=Tensor([316, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 64],"float32"), boxes=Tensor([4, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 64],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 64],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 66],"float32"), boxes=Tensor([113, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 66],"float32"), boxes=Tensor([290, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 66],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 66],"float32"), boxes=Tensor([337, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 66],"float32"), boxes=Tensor([529, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 66],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 68],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 68],"float32"), boxes=Tensor([247, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 68],"float32"), boxes=Tensor([324, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 68],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 68],"float32"), boxes=Tensor([432, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 68],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 70],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 70],"float32"), boxes=Tensor([273, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 70],"float32"), boxes=Tensor([29, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 70],"float32"), boxes=Tensor([434, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 70],"float32"), boxes=Tensor([494, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 70],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 72],"float32"), boxes=Tensor([195, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 72],"float32"), boxes=Tensor([200, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 72],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 72],"float32"), boxes=Tensor([4, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 72],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 72],"float32"), boxes=Tensor([416, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 72],"float32"), boxes=Tensor([445, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 72],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 74],"float32"), boxes=Tensor([208, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 74],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 76],"float32"), boxes=Tensor([162, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 76],"float32"), boxes=Tensor([267, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 76],"float32"), boxes=Tensor([377, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 76],"float32"), boxes=Tensor([384, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 76],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 76],"float32"), boxes=Tensor([484, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 76],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 76],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 80],"float32"), boxes=Tensor([382, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 80],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 82],"float32"), boxes=Tensor([12, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 56, 82],"float32"), boxes=Tensor([309, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 58, 64],"float32"), boxes=Tensor([399, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 58, 64],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 58, 66],"float32"), boxes=Tensor([19, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 58, 66],"float32"), boxes=Tensor([191, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 58, 68],"float32"), boxes=Tensor([107, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 58, 68],"float32"), boxes=Tensor([265, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 58, 68],"float32"), boxes=Tensor([391, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 58, 68],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 44],"float32"), boxes=Tensor([213, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 44],"float32"), boxes=Tensor([238, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 44],"float32"), boxes=Tensor([274, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 44],"float32"), boxes=Tensor([283, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 44],"float32"), boxes=Tensor([302, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 44],"float32"), boxes=Tensor([386, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 44],"float32"), boxes=Tensor([423, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 52],"float32"), boxes=Tensor([376, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 52],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 56],"float32"), boxes=Tensor([389, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 60],"float32"), boxes=Tensor([296, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 60],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 62],"float32"), boxes=Tensor([248, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 62],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 64],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 64],"float32"), boxes=Tensor([296, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 64],"float32"), boxes=Tensor([409, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 64],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 64],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 68],"float32"), boxes=Tensor([238, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 68],"float32"), boxes=Tensor([253, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 68],"float32"), boxes=Tensor([287, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 68],"float32"), boxes=Tensor([341, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 68],"float32"), boxes=Tensor([355, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 68],"float32"), boxes=Tensor([363, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 68],"float32"), boxes=Tensor([415, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 68],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 68],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 68],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 68],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 68],"float32"), boxes=Tensor([94, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 68],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 70],"float32"), boxes=Tensor([156, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 70],"float32"), boxes=Tensor([305, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 70],"float32"), boxes=Tensor([417, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 70],"float32"), boxes=Tensor([434, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 70],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 70],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 72],"float32"), boxes=Tensor([117, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 72],"float32"), boxes=Tensor([220, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 72],"float32"), boxes=Tensor([223, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 72],"float32"), boxes=Tensor([228, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 72],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 74],"float32"), boxes=Tensor([224, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 74],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 74],"float32"), boxes=Tensor([301, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 74],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 76],"float32"), boxes=Tensor([145, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 76],"float32"), boxes=Tensor([208, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 76],"float32"), boxes=Tensor([300, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 76],"float32"), boxes=Tensor([351, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 76],"float32"), boxes=Tensor([370, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 76],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 76],"float32"), boxes=Tensor([511, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 76],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 76],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 76],"float32"), boxes=Tensor([82, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 78],"float32"), boxes=Tensor([189, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 78],"float32"), boxes=Tensor([25, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 78],"float32"), boxes=Tensor([397, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 78],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 80],"float32"), boxes=Tensor([289, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 80],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 82],"float32"), boxes=Tensor([226, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 82],"float32"), boxes=Tensor([228, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 82],"float32"), boxes=Tensor([260, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 84],"float32"), boxes=Tensor([287, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 84],"float32"), boxes=Tensor([292, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 84],"float32"), boxes=Tensor([364, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 84],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 84],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 60, 84],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 46],"float32"), boxes=Tensor([161, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 46],"float32"), boxes=Tensor([202, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 46],"float32"), boxes=Tensor([207, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 46],"float32"), boxes=Tensor([213, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 46],"float32"), boxes=Tensor([251, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 46],"float32"), boxes=Tensor([262, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 46],"float32"), boxes=Tensor([289, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 46],"float32"), boxes=Tensor([341, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 46],"float32"), boxes=Tensor([464, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 48],"float32"), boxes=Tensor([301, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 48],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 54],"float32"), boxes=Tensor([367, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 56],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 56],"float32"), boxes=Tensor([406, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 62],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 62],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 62],"float32"), boxes=Tensor([305, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 62],"float32"), boxes=Tensor([316, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 62],"float32"), boxes=Tensor([323, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 62],"float32"), boxes=Tensor([435, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 62],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 62],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 64],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 64],"float32"), boxes=Tensor([227, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 64],"float32"), boxes=Tensor([267, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 64],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 66],"float32"), boxes=Tensor([388, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 66],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 68],"float32"), boxes=Tensor([10, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 68],"float32"), boxes=Tensor([269, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 68],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 68],"float32"), boxes=Tensor([331, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 68],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 68],"float32"), boxes=Tensor([356, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 68],"float32"), boxes=Tensor([362, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 68],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 68],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 68],"float32"), boxes=Tensor([520, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 68],"float32"), boxes=Tensor([522, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 68],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 70],"float32"), boxes=Tensor([102, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 70],"float32"), boxes=Tensor([175, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 70],"float32"), boxes=Tensor([237, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 70],"float32"), boxes=Tensor([24, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 70],"float32"), boxes=Tensor([257, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 70],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 70],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 70],"float32"), boxes=Tensor([367, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 70],"float32"), boxes=Tensor([446, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 70],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 70],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 72],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 72],"float32"), boxes=Tensor([139, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 72],"float32"), boxes=Tensor([226, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 72],"float32"), boxes=Tensor([297, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 72],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 72],"float32"), boxes=Tensor([384, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 72],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 72],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 74],"float32"), boxes=Tensor([211, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 74],"float32"), boxes=Tensor([351, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 74],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 74],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 76],"float32"), boxes=Tensor([105, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 76],"float32"), boxes=Tensor([126, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 76],"float32"), boxes=Tensor([15, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 76],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 76],"float32"), boxes=Tensor([234, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 76],"float32"), boxes=Tensor([272, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 76],"float32"), boxes=Tensor([296, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 76],"float32"), boxes=Tensor([474, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 76],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 82],"float32"), boxes=Tensor([263, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 82],"float32"), boxes=Tensor([343, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 82],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 82],"float32"), boxes=Tensor([8, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 84],"float32"), boxes=Tensor([112, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 84],"float32"), boxes=Tensor([126, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 84],"float32"), boxes=Tensor([178, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 84],"float32"), boxes=Tensor([295, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 84],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 84],"float32"), boxes=Tensor([320, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 84],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 84],"float32"), boxes=Tensor([474, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 62, 84],"float32"), boxes=Tensor([617, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([125, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([163, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([179, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([184, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([202, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([204, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([218, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([225, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([226, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([228, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([232, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([236, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([238, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([239, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([240, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([243, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([251, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([256, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([258, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([265, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([270, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([274, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([290, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([291, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([294, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([311, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([357, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([388, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([416, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 48],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 56],"float32"), boxes=Tensor([157, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 56],"float32"), boxes=Tensor([304, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 56],"float32"), boxes=Tensor([324, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 56],"float32"), boxes=Tensor([355, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 56],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 56],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 56],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 60],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 60],"float32"), boxes=Tensor([154, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 60],"float32"), boxes=Tensor([287, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 60],"float32"), boxes=Tensor([356, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 60],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 60],"float32"), boxes=Tensor([552, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 62],"float32"), boxes=Tensor([146, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 62],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 62],"float32"), boxes=Tensor([207, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 62],"float32"), boxes=Tensor([210, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 62],"float32"), boxes=Tensor([349, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 62],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([102, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([132, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([177, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([207, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([220, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([253, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([260, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([315, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([325, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([341, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([349, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([456, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 64],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 66],"float32"), boxes=Tensor([310, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 66],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 66],"float32"), boxes=Tensor([382, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 66],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 68],"float32"), boxes=Tensor([223, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 68],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 70],"float32"), boxes=Tensor([174, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 70],"float32"), boxes=Tensor([325, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 70],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 70],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 72],"float32"), boxes=Tensor([125, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 72],"float32"), boxes=Tensor([149, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 72],"float32"), boxes=Tensor([203, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 72],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 72],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 72],"float32"), boxes=Tensor([372, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 72],"float32"), boxes=Tensor([376, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 72],"float32"), boxes=Tensor([447, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 74],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 74],"float32"), boxes=Tensor([313, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 74],"float32"), boxes=Tensor([370, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 74],"float32"), boxes=Tensor([387, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 74],"float32"), boxes=Tensor([415, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 74],"float32"), boxes=Tensor([457, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 74],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 74],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 74],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 74],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 76],"float32"), boxes=Tensor([278, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 76],"float32"), boxes=Tensor([353, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 76],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 76],"float32"), boxes=Tensor([412, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 76],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 76],"float32"), boxes=Tensor([448, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 76],"float32"), boxes=Tensor([473, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 76],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 76],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 76],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 76],"float32"), boxes=Tensor([94, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 78],"float32"), boxes=Tensor([417, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 78],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 80],"float32"), boxes=Tensor([157, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 80],"float32"), boxes=Tensor([217, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 80],"float32"), boxes=Tensor([559, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 80],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 82],"float32"), boxes=Tensor([152, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 82],"float32"), boxes=Tensor([182, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 82],"float32"), boxes=Tensor([188, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 82],"float32"), boxes=Tensor([223, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 82],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 82],"float32"), boxes=Tensor([510, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 84],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 84],"float32"), boxes=Tensor([176, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 84],"float32"), boxes=Tensor([261, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 84],"float32"), boxes=Tensor([287, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 84],"float32"), boxes=Tensor([309, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 84],"float32"), boxes=Tensor([343, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 84],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 84],"float32"), boxes=Tensor([422, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 84],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 84],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 64, 84],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 48],"float32"), boxes=Tensor([252, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 48],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 50],"float32"), boxes=Tensor([183, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 50],"float32"), boxes=Tensor([202, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 50],"float32"), boxes=Tensor([218, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 54],"float32"), boxes=Tensor([294, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 54],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 62],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 62],"float32"), boxes=Tensor([248, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 62],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 62],"float32"), boxes=Tensor([446, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 64],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 64],"float32"), boxes=Tensor([264, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 64],"float32"), boxes=Tensor([372, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 64],"float32"), boxes=Tensor([46, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 64],"float32"), boxes=Tensor([460, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 64],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 66],"float32"), boxes=Tensor([237, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 66],"float32"), boxes=Tensor([285, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 66],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 66],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 68],"float32"), boxes=Tensor([203, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 68],"float32"), boxes=Tensor([275, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 68],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 68],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 70],"float32"), boxes=Tensor([390, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 70],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 70],"float32"), boxes=Tensor([442, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 70],"float32"), boxes=Tensor([448, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 70],"float32"), boxes=Tensor([474, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 70],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 70],"float32"), boxes=Tensor([7, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 72],"float32"), boxes=Tensor([398, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 72],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 76],"float32"), boxes=Tensor([104, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 76],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 76],"float32"), boxes=Tensor([184, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 76],"float32"), boxes=Tensor([224, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 76],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 76],"float32"), boxes=Tensor([361, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 76],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 76],"float32"), boxes=Tensor([423, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 76],"float32"), boxes=Tensor([437, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 76],"float32"), boxes=Tensor([457, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 76],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 76],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 78],"float32"), boxes=Tensor([317, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 78],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 80],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 80],"float32"), boxes=Tensor([407, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 82],"float32"), boxes=Tensor([125, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 82],"float32"), boxes=Tensor([310, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 84],"float32"), boxes=Tensor([437, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 66, 84],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([129, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([148, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([154, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([161, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([171, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([172, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([177, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([192, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([197, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([200, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([201, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([209, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([217, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([223, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([224, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([225, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([226, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([230, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([234, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([237, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([238, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([242, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([245, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([249, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([251, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([255, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([256, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([257, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([258, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([260, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([268, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([269, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([270, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([271, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([272, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([280, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([285, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([286, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([292, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([295, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([296, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([302, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([306, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([315, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([318, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([321, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([325, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([333, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([349, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([357, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([360, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([366, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([368, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([369, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([372, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([374, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([381, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([402, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([416, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([422, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([436, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 50],"float32"), boxes=Tensor([466, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 54],"float32"), boxes=Tensor([396, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 54],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 56],"float32"), boxes=Tensor([199, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 56],"float32"), boxes=Tensor([424, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 56],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 58],"float32"), boxes=Tensor([326, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 58],"float32"), boxes=Tensor([360, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 58],"float32"), boxes=Tensor([393, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 58],"float32"), boxes=Tensor([421, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 58],"float32"), boxes=Tensor([96, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 60],"float32"), boxes=Tensor([246, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 60],"float32"), boxes=Tensor([258, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 60],"float32"), boxes=Tensor([291, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 60],"float32"), boxes=Tensor([385, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 60],"float32"), boxes=Tensor([396, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 60],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 60],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 62],"float32"), boxes=Tensor([107, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 62],"float32"), boxes=Tensor([332, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 62],"float32"), boxes=Tensor([384, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 62],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 64],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 64],"float32"), boxes=Tensor([270, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 64],"float32"), boxes=Tensor([306, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 64],"float32"), boxes=Tensor([314, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 64],"float32"), boxes=Tensor([328, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 64],"float32"), boxes=Tensor([348, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 64],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 64],"float32"), boxes=Tensor([48, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 64],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 64],"float32"), boxes=Tensor([557, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 64],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 68],"float32"), boxes=Tensor([288, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 68],"float32"), boxes=Tensor([301, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 68],"float32"), boxes=Tensor([310, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 68],"float32"), boxes=Tensor([312, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 68],"float32"), boxes=Tensor([334, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 68],"float32"), boxes=Tensor([345, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 68],"float32"), boxes=Tensor([374, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 68],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 68],"float32"), boxes=Tensor([415, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 68],"float32"), boxes=Tensor([456, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 68],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 68],"float32"), boxes=Tensor([83, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 70],"float32"), boxes=Tensor([137, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 70],"float32"), boxes=Tensor([186, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 70],"float32"), boxes=Tensor([213, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 70],"float32"), boxes=Tensor([22, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 70],"float32"), boxes=Tensor([258, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 70],"float32"), boxes=Tensor([343, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 70],"float32"), boxes=Tensor([404, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 70],"float32"), boxes=Tensor([435, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 70],"float32"), boxes=Tensor([436, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 70],"float32"), boxes=Tensor([58, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 70],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 70],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 72],"float32"), boxes=Tensor([582, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 72],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 74],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 74],"float32"), boxes=Tensor([121, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 74],"float32"), boxes=Tensor([283, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 74],"float32"), boxes=Tensor([352, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 74],"float32"), boxes=Tensor([387, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 74],"float32"), boxes=Tensor([408, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 74],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 74],"float32"), boxes=Tensor([96, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 76],"float32"), boxes=Tensor([105, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 76],"float32"), boxes=Tensor([374, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 76],"float32"), boxes=Tensor([402, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 76],"float32"), boxes=Tensor([455, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 76],"float32"), boxes=Tensor([460, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 76],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 76],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 76],"float32"), boxes=Tensor([660, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 76],"float32"), boxes=Tensor([71, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 76],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 80],"float32"), boxes=Tensor([595, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 80],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 82],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 82],"float32"), boxes=Tensor([287, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 82],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 84],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 84],"float32"), boxes=Tensor([205, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 84],"float32"), boxes=Tensor([213, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 84],"float32"), boxes=Tensor([216, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 84],"float32"), boxes=Tensor([233, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 84],"float32"), boxes=Tensor([374, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 84],"float32"), boxes=Tensor([433, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 84],"float32"), boxes=Tensor([53, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 84],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 68, 84],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 48],"float32"), boxes=Tensor([225, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 48],"float32"), boxes=Tensor([246, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 48],"float32"), boxes=Tensor([280, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 48],"float32"), boxes=Tensor([291, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 48],"float32"), boxes=Tensor([292, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 48],"float32"), boxes=Tensor([31, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 48],"float32"), boxes=Tensor([334, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 56],"float32"), boxes=Tensor([339, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 56],"float32"), boxes=Tensor([349, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 56],"float32"), boxes=Tensor([392, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 56],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 56],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 56],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 60],"float32"), boxes=Tensor([321, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 60],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 62],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 62],"float32"), boxes=Tensor([413, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 64],"float32"), boxes=Tensor([161, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 64],"float32"), boxes=Tensor([176, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 64],"float32"), boxes=Tensor([21, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 64],"float32"), boxes=Tensor([236, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 64],"float32"), boxes=Tensor([291, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 64],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 64],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 64],"float32"), boxes=Tensor([418, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 64],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 66],"float32"), boxes=Tensor([426, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 66],"float32"), boxes=Tensor([447, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 66],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 68],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 68],"float32"), boxes=Tensor([121, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 68],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 68],"float32"), boxes=Tensor([400, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 68],"float32"), boxes=Tensor([421, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 68],"float32"), boxes=Tensor([449, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 70],"float32"), boxes=Tensor([242, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 70],"float32"), boxes=Tensor([292, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 70],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 70],"float32"), boxes=Tensor([300, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 70],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 70],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 72],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 72],"float32"), boxes=Tensor([206, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 72],"float32"), boxes=Tensor([500, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 72],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 72],"float32"), boxes=Tensor([727, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 72],"float32"), boxes=Tensor([92, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 74],"float32"), boxes=Tensor([400, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 74],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 76],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 76],"float32"), boxes=Tensor([305, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 76],"float32"), boxes=Tensor([383, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 76],"float32"), boxes=Tensor([440, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 76],"float32"), boxes=Tensor([487, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 76],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 76],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 76],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 84],"float32"), boxes=Tensor([102, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 84],"float32"), boxes=Tensor([108, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 84],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 84],"float32"), boxes=Tensor([206, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 84],"float32"), boxes=Tensor([354, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 70, 84],"float32"), boxes=Tensor([355, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 48],"float32"), boxes=Tensor([260, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 50],"float32"), boxes=Tensor([318, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 54],"float32"), boxes=Tensor([167, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 54],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 56],"float32"), boxes=Tensor([27, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 56],"float32"), boxes=Tensor([318, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 58],"float32"), boxes=Tensor([322, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 60],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 60],"float32"), boxes=Tensor([442, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 62],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 62],"float32"), boxes=Tensor([288, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 64],"float32"), boxes=Tensor([105, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 64],"float32"), boxes=Tensor([433, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 66],"float32"), boxes=Tensor([242, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 66],"float32"), boxes=Tensor([385, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 66],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 66],"float32"), boxes=Tensor([92, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 68],"float32"), boxes=Tensor([107, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 68],"float32"), boxes=Tensor([140, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 68],"float32"), boxes=Tensor([18, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 68],"float32"), boxes=Tensor([306, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 68],"float32"), boxes=Tensor([462, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 68],"float32"), boxes=Tensor([469, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 68],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 70],"float32"), boxes=Tensor([121, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 70],"float32"), boxes=Tensor([34, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 70],"float32"), boxes=Tensor([368, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 70],"float32"), boxes=Tensor([474, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 72],"float32"), boxes=Tensor([257, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 72],"float32"), boxes=Tensor([495, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 72],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 72],"float32"), boxes=Tensor([83, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 78],"float32"), boxes=Tensor([486, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 78],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 82],"float32"), boxes=Tensor([200, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 82],"float32"), boxes=Tensor([562, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 82],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 82],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 84],"float32"), boxes=Tensor([28, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 72, 84],"float32"), boxes=Tensor([364, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 64],"float32"), boxes=Tensor([405, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 64],"float32"), boxes=Tensor([649, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 64],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 64],"float32"), boxes=Tensor([93, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 66],"float32"), boxes=Tensor([314, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 66],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 68],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 68],"float32"), boxes=Tensor([460, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 70],"float32"), boxes=Tensor([391, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 70],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 72],"float32"), boxes=Tensor([270, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 72],"float32"), boxes=Tensor([346, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 72],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 72],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 74],"float32"), boxes=Tensor([297, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 74],"float32"), boxes=Tensor([327, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 74],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 74],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 76],"float32"), boxes=Tensor([151, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 76],"float32"), boxes=Tensor([288, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 76],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 76],"float32"), boxes=Tensor([374, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 76],"float32"), boxes=Tensor([578, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 76],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 80],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 80],"float32"), boxes=Tensor([665, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 84],"float32"), boxes=Tensor([301, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 74, 84],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 50],"float32"), boxes=Tensor([17, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 50],"float32"), boxes=Tensor([284, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 50],"float32"), boxes=Tensor([310, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 50],"float32"), boxes=Tensor([329, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 50],"float32"), boxes=Tensor([348, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 50],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 50],"float32"), boxes=Tensor([435, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 62],"float32"), boxes=Tensor([23, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 62],"float32"), boxes=Tensor([312, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 62],"float32"), boxes=Tensor([371, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 62],"float32"), boxes=Tensor([376, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 62],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 62],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 64],"float32"), boxes=Tensor([108, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 64],"float32"), boxes=Tensor([117, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 64],"float32"), boxes=Tensor([348, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 64],"float32"), boxes=Tensor([489, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 64],"float32"), boxes=Tensor([497, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 64],"float32"), boxes=Tensor([65, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 66],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 66],"float32"), boxes=Tensor([124, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 66],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 66],"float32"), boxes=Tensor([543, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 68],"float32"), boxes=Tensor([104, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 68],"float32"), boxes=Tensor([266, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 68],"float32"), boxes=Tensor([345, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 68],"float32"), boxes=Tensor([364, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 68],"float32"), boxes=Tensor([372, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 68],"float32"), boxes=Tensor([374, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 68],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 68],"float32"), boxes=Tensor([51, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 68],"float32"), boxes=Tensor([56, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 68],"float32"), boxes=Tensor([87, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 70],"float32"), boxes=Tensor([211, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 70],"float32"), boxes=Tensor([295, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 70],"float32"), boxes=Tensor([33, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 70],"float32"), boxes=Tensor([334, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 70],"float32"), boxes=Tensor([356, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 70],"float32"), boxes=Tensor([38, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 70],"float32"), boxes=Tensor([41, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 70],"float32"), boxes=Tensor([50, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 70],"float32"), boxes=Tensor([514, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 70],"float32"), boxes=Tensor([52, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 70],"float32"), boxes=Tensor([533, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 70],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 72],"float32"), boxes=Tensor([102, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 72],"float32"), boxes=Tensor([135, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 72],"float32"), boxes=Tensor([272, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 72],"float32"), boxes=Tensor([323, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 72],"float32"), boxes=Tensor([328, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 72],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 72],"float32"), boxes=Tensor([353, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 72],"float32"), boxes=Tensor([45, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 72],"float32"), boxes=Tensor([465, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 72],"float32"), boxes=Tensor([47, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 72],"float32"), boxes=Tensor([519, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 72],"float32"), boxes=Tensor([535, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 72],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 72],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 74],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 74],"float32"), boxes=Tensor([186, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 74],"float32"), boxes=Tensor([418, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 74],"float32"), boxes=Tensor([60, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 76],"float32"), boxes=Tensor([268, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 76],"float32"), boxes=Tensor([271, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 76],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 76],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 80],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 80],"float32"), boxes=Tensor([329, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 84],"float32"), boxes=Tensor([150, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 84],"float32"), boxes=Tensor([188, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 84],"float32"), boxes=Tensor([32, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 84],"float32"), boxes=Tensor([36, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 84],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 84],"float32"), boxes=Tensor([466, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 84],"float32"), boxes=Tensor([599, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 76, 84],"float32"), boxes=Tensor([76, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 78, 56],"float32"), boxes=Tensor([348, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 78, 56],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 78, 62],"float32"), boxes=Tensor([316, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 78, 62],"float32"), boxes=Tensor([94, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 78, 70],"float32"), boxes=Tensor([123, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 78, 70],"float32"), boxes=Tensor([582, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 80, 64],"float32"), boxes=Tensor([298, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 80, 64],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 80, 68],"float32"), boxes=Tensor([443, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 80, 68],"float32"), boxes=Tensor([68, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 80, 72],"float32"), boxes=Tensor([135, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 80, 72],"float32"), boxes=Tensor([480, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 82, 62],"float32"), boxes=Tensor([113, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 82, 62],"float32"), boxes=Tensor([521, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 82, 84],"float32"), boxes=Tensor([305, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 82, 84],"float32"), boxes=Tensor([62, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 128],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 128],"float32"), boxes=Tensor([139, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 128],"float32"), boxes=Tensor([290, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 128],"float32"), boxes=Tensor([322, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 128],"float32"), boxes=Tensor([372, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 128],"float32"), boxes=Tensor([456, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 128],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 60],"float32"), boxes=Tensor([101, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 60],"float32"), boxes=Tensor([445, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 62],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 62],"float32"), boxes=Tensor([275, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 64],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 64],"float32"), boxes=Tensor([301, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 70],"float32"), boxes=Tensor([160, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 70],"float32"), boxes=Tensor([347, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 70],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 70],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 72],"float32"), boxes=Tensor([137, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 72],"float32"), boxes=Tensor([475, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 84],"float32"), boxes=Tensor([433, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 84, 84],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 88, 120],"float32"), boxes=Tensor([349, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 88, 120],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 88, 132],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 88, 132],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 88, 132],"float32"), boxes=Tensor([301, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 88, 132],"float32"), boxes=Tensor([495, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 88, 136],"float32"), boxes=Tensor([373, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 88, 136],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 88, 136],"float32"), boxes=Tensor([575, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 88, 136],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 88, 168],"float32"), boxes=Tensor([110, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 88, 168],"float32"), boxes=Tensor([514, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 124],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 124],"float32"), boxes=Tensor([366, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 124],"float32"), boxes=Tensor([490, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 124],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 128],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 128],"float32"), boxes=Tensor([129, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 128],"float32"), boxes=Tensor([439, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 128],"float32"), boxes=Tensor([482, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 136],"float32"), boxes=Tensor([111, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 136],"float32"), boxes=Tensor([20, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 136],"float32"), boxes=Tensor([306, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 136],"float32"), boxes=Tensor([314, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 136],"float32"), boxes=Tensor([37, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 136],"float32"), boxes=Tensor([417, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 136],"float32"), boxes=Tensor([523, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 136],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 140],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 140],"float32"), boxes=Tensor([331, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 140],"float32"), boxes=Tensor([531, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 140],"float32"), boxes=Tensor([67, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 140],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 148],"float32"), boxes=Tensor([142, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 148],"float32"), boxes=Tensor([39, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 152],"float32"), boxes=Tensor([176, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 152],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 156],"float32"), boxes=Tensor([486, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 156],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 160],"float32"), boxes=Tensor([152, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 160],"float32"), boxes=Tensor([305, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 164],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 164],"float32"), boxes=Tensor([505, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 168],"float32"), boxes=Tensor([140, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 168],"float32"), boxes=Tensor([267, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 168],"float32"), boxes=Tensor([272, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 92, 168],"float32"), boxes=Tensor([57, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 124],"float32"), boxes=Tensor([40, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 124],"float32"), boxes=Tensor([547, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 128],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 128],"float32"), boxes=Tensor([240, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 128],"float32"), boxes=Tensor([348, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 128],"float32"), boxes=Tensor([54, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 132],"float32"), boxes=Tensor([147, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 132],"float32"), boxes=Tensor([214, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 132],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 132],"float32"), boxes=Tensor([326, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 132],"float32"), boxes=Tensor([35, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 132],"float32"), boxes=Tensor([411, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 132],"float32"), boxes=Tensor([426, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 132],"float32"), boxes=Tensor([435, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 132],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 132],"float32"), boxes=Tensor([64, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 136],"float32"), boxes=Tensor([131, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 136],"float32"), boxes=Tensor([464, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 140],"float32"), boxes=Tensor([119, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 140],"float32"), boxes=Tensor([270, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 140],"float32"), boxes=Tensor([339, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 140],"float32"), boxes=Tensor([346, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 140],"float32"), boxes=Tensor([396, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 140],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 140],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 140],"float32"), boxes=Tensor([83, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([150, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([172, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([214, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([26, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([307, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([316, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([334, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([339, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([385, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([427, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([43, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([458, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([489, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([49, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([55, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([582, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([588, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([59, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([61, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 144],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([16, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([263, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([282, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([313, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([354, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([379, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([454, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([549, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([636, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([73, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([74, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([77, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([78, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 148],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 152],"float32"), boxes=Tensor([13, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 152],"float32"), boxes=Tensor([424, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 168],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 168],"float32"), boxes=Tensor([113, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 168],"float32"), boxes=Tensor([30, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 168],"float32"), boxes=Tensor([312, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 168],"float32"), boxes=Tensor([318, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 168],"float32"), boxes=Tensor([358, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 168],"float32"), boxes=Tensor([411, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 168],"float32"), boxes=Tensor([66, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 168],"float32"), boxes=Tensor([72, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([4, 256, 96, 168],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([4],"int32"), output_size=14, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 136],"float32"), boxes=Tensor([754, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 140],"float32"), boxes=Tensor([721, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 140],"float32"), boxes=Tensor([738, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 140],"float32"), boxes=Tensor([835, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 144],"float32"), boxes=Tensor([752, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 144],"float32"), boxes=Tensor([822, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 148],"float32"), boxes=Tensor([663, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 148],"float32"), boxes=Tensor([706, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 152],"float32"), boxes=Tensor([1018, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 152],"float32"), boxes=Tensor([1026, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 152],"float32"), boxes=Tensor([1133, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 152],"float32"), boxes=Tensor([589, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 152],"float32"), boxes=Tensor([601, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 152],"float32"), boxes=Tensor([643, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 152],"float32"), boxes=Tensor([759, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 152],"float32"), boxes=Tensor([764, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 152],"float32"), boxes=Tensor([824, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 152],"float32"), boxes=Tensor([885, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 152],"float32"), boxes=Tensor([926, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 152],"float32"), boxes=Tensor([977, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 164],"float32"), boxes=Tensor([882, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 164],"float32"), boxes=Tensor([896, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 168],"float32"), boxes=Tensor([636, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 100, 168],"float32"), boxes=Tensor([737, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 104, 152],"float32"), boxes=Tensor([969, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 104, 168],"float32"), boxes=Tensor([960, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 108, 152],"float32"), boxes=Tensor([589, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 108, 152],"float32"), boxes=Tensor([745, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 108, 152],"float32"), boxes=Tensor([846, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 108, 164],"float32"), boxes=Tensor([762, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 108, 168],"float32"), boxes=Tensor([671, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 112, 136],"float32"), boxes=Tensor([1020, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 112, 140],"float32"), boxes=Tensor([603, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 112, 140],"float32"), boxes=Tensor([714, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 112, 148],"float32"), boxes=Tensor([621, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 112, 148],"float32"), boxes=Tensor([739, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 112, 152],"float32"), boxes=Tensor([872, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 112, 152],"float32"), boxes=Tensor([891, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 112, 156],"float32"), boxes=Tensor([909, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 116, 124],"float32"), boxes=Tensor([998, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 120, 136],"float32"), boxes=Tensor([1025, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 120, 136],"float32"), boxes=Tensor([768, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 120, 140],"float32"), boxes=Tensor([864, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 120, 144],"float32"), boxes=Tensor([612, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 120, 148],"float32"), boxes=Tensor([606, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 120, 148],"float32"), boxes=Tensor([726, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 120, 152],"float32"), boxes=Tensor([1098, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 120, 152],"float32"), boxes=Tensor([659, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 120, 160],"float32"), boxes=Tensor([561, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 120, 160],"float32"), boxes=Tensor([975, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 120, 168],"float32"), boxes=Tensor([675, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 128],"float32"), boxes=Tensor([1003, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 136],"float32"), boxes=Tensor([998, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 136],"float32"), boxes=Tensor([999, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 140],"float32"), boxes=Tensor([519, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 140],"float32"), boxes=Tensor([844, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 140],"float32"), boxes=Tensor([951, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 144],"float32"), boxes=Tensor([665, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 144],"float32"), boxes=Tensor([678, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 144],"float32"), boxes=Tensor([767, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 148],"float32"), boxes=Tensor([892, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 152],"float32"), boxes=Tensor([613, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 152],"float32"), boxes=Tensor([620, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 152],"float32"), boxes=Tensor([776, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 152],"float32"), boxes=Tensor([921, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 160],"float32"), boxes=Tensor([758, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 164],"float32"), boxes=Tensor([628, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 168],"float32"), boxes=Tensor([872, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 124, 168],"float32"), boxes=Tensor([953, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 124],"float32"), boxes=Tensor([721, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 128],"float32"), boxes=Tensor([776, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 136],"float32"), boxes=Tensor([550, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 136],"float32"), boxes=Tensor([885, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 136],"float32"), boxes=Tensor([929, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 140],"float32"), boxes=Tensor([688, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 140],"float32"), boxes=Tensor([831, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 144],"float32"), boxes=Tensor([633, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 144],"float32"), boxes=Tensor([845, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 144],"float32"), boxes=Tensor([854, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 148],"float32"), boxes=Tensor([680, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 148],"float32"), boxes=Tensor([910, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 148],"float32"), boxes=Tensor([929, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 152],"float32"), boxes=Tensor([1018, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 152],"float32"), boxes=Tensor([1019, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 152],"float32"), boxes=Tensor([632, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 152],"float32"), boxes=Tensor([659, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 152],"float32"), boxes=Tensor([712, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 152],"float32"), boxes=Tensor([802, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 152],"float32"), boxes=Tensor([842, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 152],"float32"), boxes=Tensor([872, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 152],"float32"), boxes=Tensor([955, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 156],"float32"), boxes=Tensor([820, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 160],"float32"), boxes=Tensor([1006, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 160],"float32"), boxes=Tensor([594, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 160],"float32"), boxes=Tensor([751, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 164],"float32"), boxes=Tensor([886, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 168],"float32"), boxes=Tensor([1068, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 168],"float32"), boxes=Tensor([635, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 168],"float32"), boxes=Tensor([684, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 128, 168],"float32"), boxes=Tensor([795, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 124],"float32"), boxes=Tensor([706, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 124],"float32"), boxes=Tensor([865, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 140],"float32"), boxes=Tensor([890, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 140],"float32"), boxes=Tensor([892, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 140],"float32"), boxes=Tensor([994, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 148],"float32"), boxes=Tensor([851, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 152],"float32"), boxes=Tensor([1030, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 152],"float32"), boxes=Tensor([1111, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 152],"float32"), boxes=Tensor([1186, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 152],"float32"), boxes=Tensor([654, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 152],"float32"), boxes=Tensor([751, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 152],"float32"), boxes=Tensor([857, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 152],"float32"), boxes=Tensor([965, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 164],"float32"), boxes=Tensor([1115, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 164],"float32"), boxes=Tensor([808, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 132, 168],"float32"), boxes=Tensor([953, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 120],"float32"), boxes=Tensor([836, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 124],"float32"), boxes=Tensor([750, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 128],"float32"), boxes=Tensor([601, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 128],"float32"), boxes=Tensor([819, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 136],"float32"), boxes=Tensor([1298, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 140],"float32"), boxes=Tensor([1015, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 140],"float32"), boxes=Tensor([868, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 148],"float32"), boxes=Tensor([819, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 148],"float32"), boxes=Tensor([847, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 148],"float32"), boxes=Tensor([980, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 152],"float32"), boxes=Tensor([731, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 152],"float32"), boxes=Tensor([805, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 152],"float32"), boxes=Tensor([902, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 152],"float32"), boxes=Tensor([949, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 152],"float32"), boxes=Tensor([953, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 160],"float32"), boxes=Tensor([1006, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 160],"float32"), boxes=Tensor([495, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 160],"float32"), boxes=Tensor([876, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 160],"float32"), boxes=Tensor([926, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 164],"float32"), boxes=Tensor([649, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 168],"float32"), boxes=Tensor([536, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 168],"float32"), boxes=Tensor([648, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 168],"float32"), boxes=Tensor([744, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 168],"float32"), boxes=Tensor([745, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 168],"float32"), boxes=Tensor([801, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 136, 168],"float32"), boxes=Tensor([829, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 128],"float32"), boxes=Tensor([888, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 136],"float32"), boxes=Tensor([736, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 136],"float32"), boxes=Tensor([864, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 140],"float32"), boxes=Tensor([1067, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 140],"float32"), boxes=Tensor([611, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 144],"float32"), boxes=Tensor([724, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 148],"float32"), boxes=Tensor([666, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 148],"float32"), boxes=Tensor([691, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 148],"float32"), boxes=Tensor([723, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 148],"float32"), boxes=Tensor([755, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 152],"float32"), boxes=Tensor([1070, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 152],"float32"), boxes=Tensor([513, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 152],"float32"), boxes=Tensor([581, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 152],"float32"), boxes=Tensor([726, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 152],"float32"), boxes=Tensor([974, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 152],"float32"), boxes=Tensor([985, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 156],"float32"), boxes=Tensor([628, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 156],"float32"), boxes=Tensor([744, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 156],"float32"), boxes=Tensor([940, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 164],"float32"), boxes=Tensor([810, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 168],"float32"), boxes=Tensor([1080, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 168],"float32"), boxes=Tensor([587, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 168],"float32"), boxes=Tensor([666, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 168],"float32"), boxes=Tensor([672, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 140, 168],"float32"), boxes=Tensor([733, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 128],"float32"), boxes=Tensor([813, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 128],"float32"), boxes=Tensor([875, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 136],"float32"), boxes=Tensor([774, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 136],"float32"), boxes=Tensor([822, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 140],"float32"), boxes=Tensor([715, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 144],"float32"), boxes=Tensor([815, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 148],"float32"), boxes=Tensor([904, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 148],"float32"), boxes=Tensor([918, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 152],"float32"), boxes=Tensor([550, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 152],"float32"), boxes=Tensor([749, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 152],"float32"), boxes=Tensor([782, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 152],"float32"), boxes=Tensor([941, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 160],"float32"), boxes=Tensor([425, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 160],"float32"), boxes=Tensor([603, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 164],"float32"), boxes=Tensor([825, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 168],"float32"), boxes=Tensor([584, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 144, 168],"float32"), boxes=Tensor([883, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 132],"float32"), boxes=Tensor([770, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 136],"float32"), boxes=Tensor([751, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 136],"float32"), boxes=Tensor([915, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 140],"float32"), boxes=Tensor([796, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 144],"float32"), boxes=Tensor([807, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 144],"float32"), boxes=Tensor([909, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 148],"float32"), boxes=Tensor([631, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 152],"float32"), boxes=Tensor([1039, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 152],"float32"), boxes=Tensor([1202, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 152],"float32"), boxes=Tensor([634, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 152],"float32"), boxes=Tensor([941, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 156],"float32"), boxes=Tensor([857, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 160],"float32"), boxes=Tensor([806, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 164],"float32"), boxes=Tensor([1014, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 168],"float32"), boxes=Tensor([1163, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 168],"float32"), boxes=Tensor([1259, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 168],"float32"), boxes=Tensor([825, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 148, 168],"float32"), boxes=Tensor([961, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 124],"float32"), boxes=Tensor([652, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 128],"float32"), boxes=Tensor([1035, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 136],"float32"), boxes=Tensor([1061, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 136],"float32"), boxes=Tensor([822, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 136],"float32"), boxes=Tensor([823, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 140],"float32"), boxes=Tensor([693, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 140],"float32"), boxes=Tensor([818, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 144],"float32"), boxes=Tensor([1029, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 144],"float32"), boxes=Tensor([755, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 144],"float32"), boxes=Tensor([819, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 144],"float32"), boxes=Tensor([930, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 148],"float32"), boxes=Tensor([1071, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 148],"float32"), boxes=Tensor([663, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 148],"float32"), boxes=Tensor([819, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 148],"float32"), boxes=Tensor([913, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 152],"float32"), boxes=Tensor([1087, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 152],"float32"), boxes=Tensor([518, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 152],"float32"), boxes=Tensor([671, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 152],"float32"), boxes=Tensor([674, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 152],"float32"), boxes=Tensor([793, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 152],"float32"), boxes=Tensor([894, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 152],"float32"), boxes=Tensor([941, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 164],"float32"), boxes=Tensor([788, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 168],"float32"), boxes=Tensor([1002, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 168],"float32"), boxes=Tensor([685, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 168],"float32"), boxes=Tensor([765, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 152, 168],"float32"), boxes=Tensor([989, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 156, 148],"float32"), boxes=Tensor([920, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 156, 152],"float32"), boxes=Tensor([1003, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 156, 152],"float32"), boxes=Tensor([686, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 160, 152],"float32"), boxes=Tensor([912, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 160, 152],"float32"), boxes=Tensor([929, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 160, 168],"float32"), boxes=Tensor([609, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 164, 168],"float32"), boxes=Tensor([626, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 168, 128],"float32"), boxes=Tensor([903, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 168, 132],"float32"), boxes=Tensor([975, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 168, 144],"float32"), boxes=Tensor([687, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 168, 152],"float32"), boxes=Tensor([1141, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 168, 152],"float32"), boxes=Tensor([570, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 168, 152],"float32"), boxes=Tensor([812, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 168, 152],"float32"), boxes=Tensor([819, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 168, 152],"float32"), boxes=Tensor([848, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 168, 168],"float32"), boxes=Tensor([926, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 184, 272],"float32"), boxes=Tensor([2770, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 192, 288],"float32"), boxes=Tensor([2600, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 192, 296],"float32"), boxes=Tensor([3011, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 272],"float32"), boxes=Tensor([2656, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 280],"float32"), boxes=Tensor([2357, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 280],"float32"), boxes=Tensor([2496, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 280],"float32"), boxes=Tensor([2666, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 288],"float32"), boxes=Tensor([2600, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 288],"float32"), boxes=Tensor([2669, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 296],"float32"), boxes=Tensor([2829, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 296],"float32"), boxes=Tensor([2937, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 304],"float32"), boxes=Tensor([1798, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 304],"float32"), boxes=Tensor([2028, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 304],"float32"), boxes=Tensor([2041, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 304],"float32"), boxes=Tensor([2232, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 304],"float32"), boxes=Tensor([2272, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 304],"float32"), boxes=Tensor([2386, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 304],"float32"), boxes=Tensor([2515, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 304],"float32"), boxes=Tensor([2592, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 304],"float32"), boxes=Tensor([2641, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 304],"float32"), boxes=Tensor([2832, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 304],"float32"), boxes=Tensor([2861, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 304],"float32"), boxes=Tensor([2865, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 328],"float32"), boxes=Tensor([2204, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 328],"float32"), boxes=Tensor([2346, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 336],"float32"), boxes=Tensor([2711, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 200, 336],"float32"), boxes=Tensor([2855, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 208, 304],"float32"), boxes=Tensor([2218, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 208, 336],"float32"), boxes=Tensor([2349, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 216, 304],"float32"), boxes=Tensor([2314, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 216, 304],"float32"), boxes=Tensor([2601, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 216, 304],"float32"), boxes=Tensor([3193, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 216, 328],"float32"), boxes=Tensor([2349, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 216, 336],"float32"), boxes=Tensor([2731, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 224, 272],"float32"), boxes=Tensor([2318, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 224, 280],"float32"), boxes=Tensor([2481, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 224, 280],"float32"), boxes=Tensor([2863, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 224, 296],"float32"), boxes=Tensor([2670, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 224, 296],"float32"), boxes=Tensor([2872, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 224, 304],"float32"), boxes=Tensor([2163, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 224, 304],"float32"), boxes=Tensor([2238, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 224, 312],"float32"), boxes=Tensor([2276, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 23, 34],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 232, 248],"float32"), boxes=Tensor([2198, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 24, 36],"float32"), boxes=Tensor([104, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 24, 37],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 240, 272],"float32"), boxes=Tensor([2266, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 240, 272],"float32"), boxes=Tensor([2572, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 240, 280],"float32"), boxes=Tensor([2435, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 240, 288],"float32"), boxes=Tensor([2805, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 240, 296],"float32"), boxes=Tensor([2438, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 240, 296],"float32"), boxes=Tensor([2840, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 240, 304],"float32"), boxes=Tensor([2129, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 240, 304],"float32"), boxes=Tensor([2821, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 240, 320],"float32"), boxes=Tensor([2363, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 240, 320],"float32"), boxes=Tensor([2987, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 240, 336],"float32"), boxes=Tensor([2831, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 256],"float32"), boxes=Tensor([2018, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 272],"float32"), boxes=Tensor([1996, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 272],"float32"), boxes=Tensor([2292, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 280],"float32"), boxes=Tensor([2259, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 280],"float32"), boxes=Tensor([2412, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 280],"float32"), boxes=Tensor([3116, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 288],"float32"), boxes=Tensor([2439, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 288],"float32"), boxes=Tensor([2587, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 288],"float32"), boxes=Tensor([2772, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 296],"float32"), boxes=Tensor([2136, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 304],"float32"), boxes=Tensor([2357, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 304],"float32"), boxes=Tensor([2488, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 304],"float32"), boxes=Tensor([2653, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 304],"float32"), boxes=Tensor([2693, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 320],"float32"), boxes=Tensor([2661, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 328],"float32"), boxes=Tensor([2969, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 336],"float32"), boxes=Tensor([2323, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 248, 336],"float32"), boxes=Tensor([2352, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 34],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 35],"float32"), boxes=Tensor([110, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 35],"float32"), boxes=Tensor([127, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 35],"float32"), boxes=Tensor([99, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 36],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 36],"float32"), boxes=Tensor([92, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 37],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 37],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 38],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 38],"float32"), boxes=Tensor([107, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 38],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 38],"float32"), boxes=Tensor([128, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 38],"float32"), boxes=Tensor([147, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 38],"float32"), boxes=Tensor([150, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 38],"float32"), boxes=Tensor([151, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 38],"float32"), boxes=Tensor([159, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 38],"float32"), boxes=Tensor([175, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 38],"float32"), boxes=Tensor([178, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 38],"float32"), boxes=Tensor([75, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 38],"float32"), boxes=Tensor([97, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 41],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 41],"float32"), boxes=Tensor([128, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 42],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 25, 42],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 248],"float32"), boxes=Tensor([2744, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 256],"float32"), boxes=Tensor([2371, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 272],"float32"), boxes=Tensor([2276, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 272],"float32"), boxes=Tensor([2379, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 272],"float32"), boxes=Tensor([2996, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 280],"float32"), boxes=Tensor([2584, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 280],"float32"), boxes=Tensor([2596, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 288],"float32"), boxes=Tensor([2202, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 288],"float32"), boxes=Tensor([2409, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 288],"float32"), boxes=Tensor([2775, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 296],"float32"), boxes=Tensor([2314, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 296],"float32"), boxes=Tensor([2459, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 296],"float32"), boxes=Tensor([2861, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 304],"float32"), boxes=Tensor([2006, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 304],"float32"), boxes=Tensor([2068, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 304],"float32"), boxes=Tensor([2176, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 304],"float32"), boxes=Tensor([2311, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 304],"float32"), boxes=Tensor([2420, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 304],"float32"), boxes=Tensor([2521, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 304],"float32"), boxes=Tensor([2593, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 304],"float32"), boxes=Tensor([2783, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 304],"float32"), boxes=Tensor([2868, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 312],"float32"), boxes=Tensor([2348, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 320],"float32"), boxes=Tensor([2050, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 320],"float32"), boxes=Tensor([2637, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 320],"float32"), boxes=Tensor([2950, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 328],"float32"), boxes=Tensor([2191, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 336],"float32"), boxes=Tensor([2138, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 336],"float32"), boxes=Tensor([2482, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 336],"float32"), boxes=Tensor([2548, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 256, 336],"float32"), boxes=Tensor([2793, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 26, 38],"float32"), boxes=Tensor([129, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 26, 42],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 248],"float32"), boxes=Tensor([2421, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 248],"float32"), boxes=Tensor([2743, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 280],"float32"), boxes=Tensor([2077, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 280],"float32"), boxes=Tensor([2330, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 280],"float32"), boxes=Tensor([2414, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 296],"float32"), boxes=Tensor([2321, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 304],"float32"), boxes=Tensor([1831, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 304],"float32"), boxes=Tensor([2014, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 304],"float32"), boxes=Tensor([2080, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 304],"float32"), boxes=Tensor([2129, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 304],"float32"), boxes=Tensor([2300, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 304],"float32"), boxes=Tensor([2643, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 304],"float32"), boxes=Tensor([2763, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 328],"float32"), boxes=Tensor([2001, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 328],"float32"), boxes=Tensor([2562, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 264, 336],"float32"), boxes=Tensor([2334, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 27, 38],"float32"), boxes=Tensor([139, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 27, 38],"float32"), boxes=Tensor([154, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 27, 38],"float32"), boxes=Tensor([42, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 27, 41],"float32"), boxes=Tensor([160, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 27, 42],"float32"), boxes=Tensor([113, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 240],"float32"), boxes=Tensor([2393, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 248],"float32"), boxes=Tensor([2510, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 256],"float32"), boxes=Tensor([2600, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 256],"float32"), boxes=Tensor([2818, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 272],"float32"), boxes=Tensor([1557, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 280],"float32"), boxes=Tensor([2212, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 280],"float32"), boxes=Tensor([2405, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 296],"float32"), boxes=Tensor([2172, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 296],"float32"), boxes=Tensor([2369, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 296],"float32"), boxes=Tensor([2424, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 304],"float32"), boxes=Tensor([2025, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 304],"float32"), boxes=Tensor([2167, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 304],"float32"), boxes=Tensor([2300, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 304],"float32"), boxes=Tensor([2341, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 304],"float32"), boxes=Tensor([2425, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 320],"float32"), boxes=Tensor([2015, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 320],"float32"), boxes=Tensor([2039, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 320],"float32"), boxes=Tensor([2206, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 320],"float32"), boxes=Tensor([3097, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 328],"float32"), boxes=Tensor([2946, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 336],"float32"), boxes=Tensor([2330, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 336],"float32"), boxes=Tensor([2364, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 336],"float32"), boxes=Tensor([2568, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 336],"float32"), boxes=Tensor([2663, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 336],"float32"), boxes=Tensor([2670, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 272, 336],"float32"), boxes=Tensor([2911, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 28, 34],"float32"), boxes=Tensor([126, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 28, 35],"float32"), boxes=Tensor([125, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 28, 35],"float32"), boxes=Tensor([126, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 28, 37],"float32"), boxes=Tensor([123, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 28, 38],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 28, 38],"float32"), boxes=Tensor([138, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 28, 39],"float32"), boxes=Tensor([170, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 256],"float32"), boxes=Tensor([2459, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 272],"float32"), boxes=Tensor([2551, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 272],"float32"), boxes=Tensor([2720, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 280],"float32"), boxes=Tensor([2174, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 280],"float32"), boxes=Tensor([2749, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 288],"float32"), boxes=Tensor([2385, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 296],"float32"), boxes=Tensor([2520, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 296],"float32"), boxes=Tensor([2573, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 296],"float32"), boxes=Tensor([2658, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 296],"float32"), boxes=Tensor([2821, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 304],"float32"), boxes=Tensor([1933, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 304],"float32"), boxes=Tensor([2046, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 304],"float32"), boxes=Tensor([2331, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 304],"float32"), boxes=Tensor([2335, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 304],"float32"), boxes=Tensor([2875, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 304],"float32"), boxes=Tensor([3036, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 312],"float32"), boxes=Tensor([2337, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 312],"float32"), boxes=Tensor([2585, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 312],"float32"), boxes=Tensor([2799, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 328],"float32"), boxes=Tensor([2541, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 336],"float32"), boxes=Tensor([2004, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 336],"float32"), boxes=Tensor([2461, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 336],"float32"), boxes=Tensor([2611, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 336],"float32"), boxes=Tensor([2785, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 280, 336],"float32"), boxes=Tensor([3062, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 256],"float32"), boxes=Tensor([2348, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 256],"float32"), boxes=Tensor([2579, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 272],"float32"), boxes=Tensor([2397, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 272],"float32"), boxes=Tensor([2507, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 280],"float32"), boxes=Tensor([2744, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 288],"float32"), boxes=Tensor([2483, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 296],"float32"), boxes=Tensor([2066, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 296],"float32"), boxes=Tensor([2332, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 304],"float32"), boxes=Tensor([2102, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 304],"float32"), boxes=Tensor([2412, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 304],"float32"), boxes=Tensor([2593, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 304],"float32"), boxes=Tensor([3046, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 320],"float32"), boxes=Tensor([2878, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 320],"float32"), boxes=Tensor([3332, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 328],"float32"), boxes=Tensor([2477, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 336],"float32"), boxes=Tensor([2256, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 288, 336],"float32"), boxes=Tensor([2803, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 29, 31],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 264],"float32"), boxes=Tensor([2574, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 272],"float32"), boxes=Tensor([2079, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 272],"float32"), boxes=Tensor([2579, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 280],"float32"), boxes=Tensor([2522, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 288],"float32"), boxes=Tensor([2153, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 288],"float32"), boxes=Tensor([2648, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 296],"float32"), boxes=Tensor([2940, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 304],"float32"), boxes=Tensor([1573, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 304],"float32"), boxes=Tensor([1975, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 304],"float32"), boxes=Tensor([2240, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 304],"float32"), boxes=Tensor([2508, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 312],"float32"), boxes=Tensor([2225, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 320],"float32"), boxes=Tensor([2360, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 328],"float32"), boxes=Tensor([1850, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 336],"float32"), boxes=Tensor([1610, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 336],"float32"), boxes=Tensor([1987, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 336],"float32"), boxes=Tensor([2287, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 296, 336],"float32"), boxes=Tensor([2534, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 30, 34],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 30, 34],"float32"), boxes=Tensor([112, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 30, 35],"float32"), boxes=Tensor([126, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 30, 36],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 30, 37],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 30, 37],"float32"), boxes=Tensor([132, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 30, 38],"float32"), boxes=Tensor([102, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 30, 38],"float32"), boxes=Tensor([105, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 30, 40],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 30, 40],"float32"), boxes=Tensor([81, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 30, 42],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 248],"float32"), boxes=Tensor([2615, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 256],"float32"), boxes=Tensor([2117, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 272],"float32"), boxes=Tensor([2023, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 272],"float32"), boxes=Tensor([2418, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 272],"float32"), boxes=Tensor([2520, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 280],"float32"), boxes=Tensor([2438, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 280],"float32"), boxes=Tensor([2629, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 288],"float32"), boxes=Tensor([2120, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 288],"float32"), boxes=Tensor([2327, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 288],"float32"), boxes=Tensor([2359, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 288],"float32"), boxes=Tensor([2571, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 296],"float32"), boxes=Tensor([2020, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 296],"float32"), boxes=Tensor([2305, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 296],"float32"), boxes=Tensor([2545, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 296],"float32"), boxes=Tensor([2748, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 304],"float32"), boxes=Tensor([2011, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 304],"float32"), boxes=Tensor([2045, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 304],"float32"), boxes=Tensor([2282, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 304],"float32"), boxes=Tensor([2609, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 304],"float32"), boxes=Tensor([2718, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 304],"float32"), boxes=Tensor([2759, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 304],"float32"), boxes=Tensor([3025, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 328],"float32"), boxes=Tensor([2319, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 336],"float32"), boxes=Tensor([2031, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 336],"float32"), boxes=Tensor([2038, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 336],"float32"), boxes=Tensor([2562, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 304, 336],"float32"), boxes=Tensor([2879, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 32],"float32"), boxes=Tensor([120, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 34],"float32"), boxes=Tensor([145, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 34],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 35],"float32"), boxes=Tensor([107, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 35],"float32"), boxes=Tensor([156, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 35],"float32"), boxes=Tensor([63, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 36],"float32"), boxes=Tensor([105, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 36],"float32"), boxes=Tensor([150, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 36],"float32"), boxes=Tensor([152, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 37],"float32"), boxes=Tensor([163, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 38],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 38],"float32"), boxes=Tensor([117, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 38],"float32"), boxes=Tensor([128, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 38],"float32"), boxes=Tensor([84, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 40],"float32"), boxes=Tensor([110, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 41],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 42],"float32"), boxes=Tensor([120, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 31, 42],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 312, 296],"float32"), boxes=Tensor([2326, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 312, 304],"float32"), boxes=Tensor([2072, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 312, 304],"float32"), boxes=Tensor([2739, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 31],"float32"), boxes=Tensor([102, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 32],"float32"), boxes=Tensor([120, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 34],"float32"), boxes=Tensor([110, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 34],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 34],"float32"), boxes=Tensor([132, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 35],"float32"), boxes=Tensor([136, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 35],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 36],"float32"), boxes=Tensor([107, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 36],"float32"), boxes=Tensor([166, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 36],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 37],"float32"), boxes=Tensor([105, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 37],"float32"), boxes=Tensor([121, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 37],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 38],"float32"), boxes=Tensor([107, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 38],"float32"), boxes=Tensor([111, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 38],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 38],"float32"), boxes=Tensor([119, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 38],"float32"), boxes=Tensor([153, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 38],"float32"), boxes=Tensor([173, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 38],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 39],"float32"), boxes=Tensor([143, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 40],"float32"), boxes=Tensor([111, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 40],"float32"), boxes=Tensor([155, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 40],"float32"), boxes=Tensor([69, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 41],"float32"), boxes=Tensor([145, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 42],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 42],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 42],"float32"), boxes=Tensor([144, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 32, 42],"float32"), boxes=Tensor([151, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 320, 304],"float32"), boxes=Tensor([2246, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 320, 304],"float32"), boxes=Tensor([2308, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 320, 336],"float32"), boxes=Tensor([2857, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 328, 336],"float32"), boxes=Tensor([2908, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 31],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 31],"float32"), boxes=Tensor([88, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 35],"float32"), boxes=Tensor([111, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 35],"float32"), boxes=Tensor([125, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 35],"float32"), boxes=Tensor([129, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 37],"float32"), boxes=Tensor([143, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 38],"float32"), boxes=Tensor([126, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 38],"float32"), boxes=Tensor([128, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 38],"float32"), boxes=Tensor([145, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 38],"float32"), boxes=Tensor([153, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 38],"float32"), boxes=Tensor([156, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 38],"float32"), boxes=Tensor([160, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 38],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 41],"float32"), boxes=Tensor([143, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 41],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 33, 42],"float32"), boxes=Tensor([111, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 336, 256],"float32"), boxes=Tensor([2400, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 336, 264],"float32"), boxes=Tensor([2203, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 336, 288],"float32"), boxes=Tensor([2375, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 336, 304],"float32"), boxes=Tensor([1968, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 336, 304],"float32"), boxes=Tensor([2192, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 336, 304],"float32"), boxes=Tensor([2377, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 336, 304],"float32"), boxes=Tensor([2420, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 336, 304],"float32"), boxes=Tensor([2817, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 336, 336],"float32"), boxes=Tensor([2245, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.25, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 30],"float32"), boxes=Tensor([129, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 31],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 32],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 32],"float32"), boxes=Tensor([92, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 34],"float32"), boxes=Tensor([167, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 35],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 35],"float32"), boxes=Tensor([128, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 37],"float32"), boxes=Tensor([121, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 37],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 37],"float32"), boxes=Tensor([145, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 38],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 38],"float32"), boxes=Tensor([136, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 38],"float32"), boxes=Tensor([171, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 38],"float32"), boxes=Tensor([178, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 38],"float32"), boxes=Tensor([185, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 40],"float32"), boxes=Tensor([148, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 40],"float32"), boxes=Tensor([159, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 40],"float32"), boxes=Tensor([91, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 41],"float32"), boxes=Tensor([79, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 42],"float32"), boxes=Tensor([101, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 42],"float32"), boxes=Tensor([120, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 42],"float32"), boxes=Tensor([142, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 42],"float32"), boxes=Tensor([150, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 42],"float32"), boxes=Tensor([156, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 34, 42],"float32"), boxes=Tensor([158, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 32],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 34],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 34],"float32"), boxes=Tensor([85, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 35],"float32"), boxes=Tensor([102, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 35],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 36],"float32"), boxes=Tensor([177, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 37],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 37],"float32"), boxes=Tensor([123, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 37],"float32"), boxes=Tensor([134, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 37],"float32"), boxes=Tensor([142, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 38],"float32"), boxes=Tensor([104, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 38],"float32"), boxes=Tensor([111, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 38],"float32"), boxes=Tensor([143, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 38],"float32"), boxes=Tensor([151, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 38],"float32"), boxes=Tensor([189, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 38],"float32"), boxes=Tensor([80, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 39],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 39],"float32"), boxes=Tensor([116, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 41],"float32"), boxes=Tensor([132, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 42],"float32"), boxes=Tensor([105, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 42],"float32"), boxes=Tensor([111, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 42],"float32"), boxes=Tensor([138, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 35, 42],"float32"), boxes=Tensor([153, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 32],"float32"), boxes=Tensor([105, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 32],"float32"), boxes=Tensor([134, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 34],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 34],"float32"), boxes=Tensor([128, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 35],"float32"), boxes=Tensor([89, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 36],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 37],"float32"), boxes=Tensor([104, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 37],"float32"), boxes=Tensor([197, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 38],"float32"), boxes=Tensor([105, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 38],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 38],"float32"), boxes=Tensor([124, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 38],"float32"), boxes=Tensor([148, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 40],"float32"), boxes=Tensor([44, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 40],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 41],"float32"), boxes=Tensor([100, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 42],"float32"), boxes=Tensor([112, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 36, 42],"float32"), boxes=Tensor([172, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 33],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 34],"float32"), boxes=Tensor([117, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 34],"float32"), boxes=Tensor([176, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 35],"float32"), boxes=Tensor([109, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 36],"float32"), boxes=Tensor([157, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 36],"float32"), boxes=Tensor([90, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 37],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 38],"float32"), boxes=Tensor([146, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 38],"float32"), boxes=Tensor([154, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 38],"float32"), boxes=Tensor([182, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 38],"float32"), boxes=Tensor([196, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 39],"float32"), boxes=Tensor([160, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 40],"float32"), boxes=Tensor([156, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 41],"float32"), boxes=Tensor([185, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 42],"float32"), boxes=Tensor([115, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 42],"float32"), boxes=Tensor([124, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 42],"float32"), boxes=Tensor([127, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 37, 42],"float32"), boxes=Tensor([183, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 31],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 32],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 34],"float32"), boxes=Tensor([130, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 34],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 34],"float32"), boxes=Tensor([150, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 35],"float32"), boxes=Tensor([108, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 35],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 36],"float32"), boxes=Tensor([111, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 36],"float32"), boxes=Tensor([139, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 36],"float32"), boxes=Tensor([148, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 36],"float32"), boxes=Tensor([150, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 37],"float32"), boxes=Tensor([114, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 37],"float32"), boxes=Tensor([117, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 37],"float32"), boxes=Tensor([144, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 37],"float32"), boxes=Tensor([165, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 38],"float32"), boxes=Tensor([103, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 38],"float32"), boxes=Tensor([117, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 38],"float32"), boxes=Tensor([133, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 38],"float32"), boxes=Tensor([135, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 38],"float32"), boxes=Tensor([168, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 38],"float32"), boxes=Tensor([95, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 41],"float32"), boxes=Tensor([167, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 42],"float32"), boxes=Tensor([119, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 42],"float32"), boxes=Tensor([171, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 42],"float32"), boxes=Tensor([196, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 38, 42],"float32"), boxes=Tensor([86, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 39, 37],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 39, 38],"float32"), boxes=Tensor([106, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 39, 38],"float32"), boxes=Tensor([151, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 40, 38],"float32"), boxes=Tensor([123, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 40, 38],"float32"), boxes=Tensor([157, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 40, 42],"float32"), boxes=Tensor([118, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 41, 42],"float32"), boxes=Tensor([98, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 42, 32],"float32"), boxes=Tensor([119, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 42, 33],"float32"), boxes=Tensor([129, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 42, 36],"float32"), boxes=Tensor([181, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 42, 38],"float32"), boxes=Tensor([122, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 42, 38],"float32"), boxes=Tensor([123, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 42, 38],"float32"), boxes=Tensor([127, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 42, 38],"float32"), boxes=Tensor([134, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 42, 38],"float32"), boxes=Tensor([163, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 42, 42],"float32"), boxes=Tensor([162, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.03125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 46, 68],"float32"), boxes=Tensor([530, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 48, 72],"float32"), boxes=Tensor([576, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 48, 74],"float32"), boxes=Tensor([462, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 68],"float32"), boxes=Tensor([586, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 70],"float32"), boxes=Tensor([593, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 70],"float32"), boxes=Tensor([752, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 70],"float32"), boxes=Tensor([794, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 72],"float32"), boxes=Tensor([513, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 72],"float32"), boxes=Tensor([644, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 74],"float32"), boxes=Tensor([415, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 74],"float32"), boxes=Tensor([473, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 76],"float32"), boxes=Tensor([425, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 76],"float32"), boxes=Tensor([506, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 76],"float32"), boxes=Tensor([520, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 76],"float32"), boxes=Tensor([589, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 76],"float32"), boxes=Tensor([599, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 76],"float32"), boxes=Tensor([711, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 76],"float32"), boxes=Tensor([714, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 76],"float32"), boxes=Tensor([736, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 76],"float32"), boxes=Tensor([795, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 76],"float32"), boxes=Tensor([870, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 76],"float32"), boxes=Tensor([900, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 76],"float32"), boxes=Tensor([987, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 82],"float32"), boxes=Tensor([750, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 82],"float32"), boxes=Tensor([868, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 84],"float32"), boxes=Tensor([514, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 50, 84],"float32"), boxes=Tensor([530, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 52, 76],"float32"), boxes=Tensor([780, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 52, 84],"float32"), boxes=Tensor([671, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 54, 76],"float32"), boxes=Tensor([272, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 54, 76],"float32"), boxes=Tensor([596, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 54, 76],"float32"), boxes=Tensor([797, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 54, 82],"float32"), boxes=Tensor([825, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 54, 84],"float32"), boxes=Tensor([581, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 56, 68],"float32"), boxes=Tensor([632, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 56, 70],"float32"), boxes=Tensor([505, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 56, 70],"float32"), boxes=Tensor([775, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 56, 74],"float32"), boxes=Tensor([480, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 56, 74],"float32"), boxes=Tensor([564, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 56, 76],"float32"), boxes=Tensor([848, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 56, 76],"float32"), boxes=Tensor([909, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 56, 78],"float32"), boxes=Tensor([741, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 58, 62],"float32"), boxes=Tensor([778, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 60, 68],"float32"), boxes=Tensor([644, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 60, 68],"float32"), boxes=Tensor([705, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 60, 70],"float32"), boxes=Tensor([671, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 60, 72],"float32"), boxes=Tensor([588, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 60, 74],"float32"), boxes=Tensor([534, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 60, 74],"float32"), boxes=Tensor([800, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 60, 76],"float32"), boxes=Tensor([514, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 60, 76],"float32"), boxes=Tensor([764, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 60, 80],"float32"), boxes=Tensor([467, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 60, 80],"float32"), boxes=Tensor([655, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 60, 84],"float32"), boxes=Tensor([490, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 64],"float32"), boxes=Tensor([955, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 68],"float32"), boxes=Tensor([715, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 68],"float32"), boxes=Tensor([957, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 70],"float32"), boxes=Tensor([398, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 70],"float32"), boxes=Tensor([684, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 70],"float32"), boxes=Tensor([779, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 72],"float32"), boxes=Tensor([554, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 72],"float32"), boxes=Tensor([679, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 72],"float32"), boxes=Tensor([740, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 74],"float32"), boxes=Tensor([905, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 76],"float32"), boxes=Tensor([677, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 76],"float32"), boxes=Tensor([701, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 76],"float32"), boxes=Tensor([702, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 76],"float32"), boxes=Tensor([748, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 80],"float32"), boxes=Tensor([567, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 82],"float32"), boxes=Tensor([413, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 84],"float32"), boxes=Tensor([700, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 62, 84],"float32"), boxes=Tensor([742, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 62],"float32"), boxes=Tensor([529, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 64],"float32"), boxes=Tensor([829, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 68],"float32"), boxes=Tensor([436, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 68],"float32"), boxes=Tensor([722, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 68],"float32"), boxes=Tensor([759, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 70],"float32"), boxes=Tensor([574, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 70],"float32"), boxes=Tensor([688, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 72],"float32"), boxes=Tensor([590, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 72],"float32"), boxes=Tensor([726, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 72],"float32"), boxes=Tensor([883, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 74],"float32"), boxes=Tensor([470, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 74],"float32"), boxes=Tensor([606, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 74],"float32"), boxes=Tensor([748, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 76],"float32"), boxes=Tensor([510, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 76],"float32"), boxes=Tensor([547, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 76],"float32"), boxes=Tensor([654, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 76],"float32"), boxes=Tensor([677, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 76],"float32"), boxes=Tensor([723, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 76],"float32"), boxes=Tensor([794, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 76],"float32"), boxes=Tensor([812, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 76],"float32"), boxes=Tensor([837, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 76],"float32"), boxes=Tensor([898, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 78],"float32"), boxes=Tensor([785, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 80],"float32"), boxes=Tensor([483, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 80],"float32"), boxes=Tensor([597, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 80],"float32"), boxes=Tensor([885, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 82],"float32"), boxes=Tensor([874, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 84],"float32"), boxes=Tensor([546, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 84],"float32"), boxes=Tensor([675, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 84],"float32"), boxes=Tensor([713, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 64, 84],"float32"), boxes=Tensor([774, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 62],"float32"), boxes=Tensor([559, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 62],"float32"), boxes=Tensor([694, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 70],"float32"), boxes=Tensor([681, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 70],"float32"), boxes=Tensor([749, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 70],"float32"), boxes=Tensor([896, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 74],"float32"), boxes=Tensor([781, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 76],"float32"), boxes=Tensor([553, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 76],"float32"), boxes=Tensor([612, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 76],"float32"), boxes=Tensor([779, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 76],"float32"), boxes=Tensor([792, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 76],"float32"), boxes=Tensor([843, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 76],"float32"), boxes=Tensor([898, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 76],"float32"), boxes=Tensor([923, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 82],"float32"), boxes=Tensor([628, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 82],"float32"), boxes=Tensor([837, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 66, 84],"float32"), boxes=Tensor([698, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 60],"float32"), boxes=Tensor([738, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 62],"float32"), boxes=Tensor([718, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 64],"float32"), boxes=Tensor([568, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 64],"float32"), boxes=Tensor([585, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 68],"float32"), boxes=Tensor([1074, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 70],"float32"), boxes=Tensor([695, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 70],"float32"), boxes=Tensor([754, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 74],"float32"), boxes=Tensor([723, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 74],"float32"), boxes=Tensor([759, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 74],"float32"), boxes=Tensor([799, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 76],"float32"), boxes=Tensor([758, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 76],"float32"), boxes=Tensor([765, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 76],"float32"), boxes=Tensor([805, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 76],"float32"), boxes=Tensor([807, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 76],"float32"), boxes=Tensor([944, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 80],"float32"), boxes=Tensor([413, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 80],"float32"), boxes=Tensor([855, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 80],"float32"), boxes=Tensor([903, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 80],"float32"), boxes=Tensor([996, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 82],"float32"), boxes=Tensor([422, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 84],"float32"), boxes=Tensor([529, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 84],"float32"), boxes=Tensor([581, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 84],"float32"), boxes=Tensor([627, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 84],"float32"), boxes=Tensor([643, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 84],"float32"), boxes=Tensor([753, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 68, 84],"float32"), boxes=Tensor([807, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 64],"float32"), boxes=Tensor([646, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 68],"float32"), boxes=Tensor([540, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 68],"float32"), boxes=Tensor([596, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 70],"float32"), boxes=Tensor([634, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 70],"float32"), boxes=Tensor([722, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 72],"float32"), boxes=Tensor([810, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 74],"float32"), boxes=Tensor([481, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 74],"float32"), boxes=Tensor([630, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 74],"float32"), boxes=Tensor([677, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 74],"float32"), boxes=Tensor([687, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 76],"float32"), boxes=Tensor([467, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 76],"float32"), boxes=Tensor([536, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 76],"float32"), boxes=Tensor([680, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 76],"float32"), boxes=Tensor([876, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 76],"float32"), boxes=Tensor([884, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 76],"float32"), boxes=Tensor([950, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 78],"float32"), boxes=Tensor([554, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 78],"float32"), boxes=Tensor([652, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 78],"float32"), boxes=Tensor([703, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 82],"float32"), boxes=Tensor([613, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 84],"float32"), boxes=Tensor([342, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 84],"float32"), boxes=Tensor([534, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 84],"float32"), boxes=Tensor([675, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 84],"float32"), boxes=Tensor([749, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 70, 84],"float32"), boxes=Tensor([874, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 64],"float32"), boxes=Tensor([599, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 64],"float32"), boxes=Tensor([739, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 68],"float32"), boxes=Tensor([645, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 68],"float32"), boxes=Tensor([797, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 70],"float32"), boxes=Tensor([548, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 72],"float32"), boxes=Tensor([689, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 74],"float32"), boxes=Tensor([756, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 74],"float32"), boxes=Tensor([915, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 76],"float32"), boxes=Tensor([395, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 76],"float32"), boxes=Tensor([630, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 76],"float32"), boxes=Tensor([754, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 76],"float32"), boxes=Tensor([935, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 80],"float32"), boxes=Tensor([295, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 80],"float32"), boxes=Tensor([520, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 82],"float32"), boxes=Tensor([694, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 84],"float32"), boxes=Tensor([597, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 72, 84],"float32"), boxes=Tensor([785, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 66],"float32"), boxes=Tensor([637, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 68],"float32"), boxes=Tensor([649, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 68],"float32"), boxes=Tensor([926, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 70],"float32"), boxes=Tensor([669, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 72],"float32"), boxes=Tensor([551, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 72],"float32"), boxes=Tensor([877, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 74],"float32"), boxes=Tensor([439, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 76],"float32"), boxes=Tensor([1125, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 76],"float32"), boxes=Tensor([733, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 76],"float32"), boxes=Tensor([808, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 76],"float32"), boxes=Tensor([928, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 78],"float32"), boxes=Tensor([854, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 80],"float32"), boxes=Tensor([774, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 82],"float32"), boxes=Tensor([1047, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 84],"float32"), boxes=Tensor([1044, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 84],"float32"), boxes=Tensor([622, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 84],"float32"), boxes=Tensor([724, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 74, 84],"float32"), boxes=Tensor([819, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 62],"float32"), boxes=Tensor([711, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 64],"float32"), boxes=Tensor([814, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 68],"float32"), boxes=Tensor([620, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 68],"float32"), boxes=Tensor([726, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 68],"float32"), boxes=Tensor([862, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 70],"float32"), boxes=Tensor([666, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 70],"float32"), boxes=Tensor([722, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 72],"float32"), boxes=Tensor([657, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 72],"float32"), boxes=Tensor([659, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 72],"float32"), boxes=Tensor([802, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 72],"float32"), boxes=Tensor([808, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 74],"float32"), boxes=Tensor([571, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 74],"float32"), boxes=Tensor([615, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 74],"float32"), boxes=Tensor([734, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 74],"float32"), boxes=Tensor([840, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 76],"float32"), boxes=Tensor([420, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 76],"float32"), boxes=Tensor([549, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 76],"float32"), boxes=Tensor([591, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 76],"float32"), boxes=Tensor([609, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 76],"float32"), boxes=Tensor([785, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 76],"float32"), boxes=Tensor([865, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 76],"float32"), boxes=Tensor([942, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 82],"float32"), boxes=Tensor([822, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 84],"float32"), boxes=Tensor([446, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 84],"float32"), boxes=Tensor([650, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 84],"float32"), boxes=Tensor([867, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 76, 84],"float32"), boxes=Tensor([898, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 78, 74],"float32"), boxes=Tensor([728, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 78, 76],"float32"), boxes=Tensor([565, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 78, 76],"float32"), boxes=Tensor([870, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 80, 76],"float32"), boxes=Tensor([736, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 80, 76],"float32"), boxes=Tensor([781, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 80, 84],"float32"), boxes=Tensor([512, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 82, 84],"float32"), boxes=Tensor([464, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 84, 64],"float32"), boxes=Tensor([674, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 84, 66],"float32"), boxes=Tensor([789, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 84, 72],"float32"), boxes=Tensor([853, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 84, 76],"float32"), boxes=Tensor([582, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 84, 76],"float32"), boxes=Tensor([730, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 84, 76],"float32"), boxes=Tensor([748, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 84, 76],"float32"), boxes=Tensor([865, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 84, 76],"float32"), boxes=Tensor([922, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 84, 84],"float32"), boxes=Tensor([763, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.0625, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 92, 136],"float32"), boxes=Tensor([681, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 96, 144],"float32"), boxes=Tensor([816, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.roi_align(x=Tensor([8, 256, 96, 148],"float32"), boxes=Tensor([517, 4],"float32"), boxes_num=Tensor([8],"int32"), output_size=7, spatial_scale=0.125, sampling_ratio=0, aligned=True, )
paddle.vision.ops.psroi_pool(Tensor([2, 128, 32, 32],"float32"), Tensor([4, 4],"float32"), Tensor([2],"int32"), 8, 1.1, )
paddle.vision.ops.psroi_pool(Tensor([2, 128, 32, 32],"float64"), Tensor([4, 4],"float64"), Tensor([2],"int32"), 8, 1.1, )
paddle.vision.ops.psroi_pool(Tensor([2, 490, 28, 28],"float32"), Tensor([3, 4],"float32"), Tensor([2],"int32"), 7, )
paddle.vision.ops.psroi_pool(Tensor([2, 490, 28, 28],"float32"), Tensor([3, 4],"float32"), Tensor([2],"int32"), tuple(7,7,), )
paddle.vision.ops.psroi_pool(Tensor([2, 490, 28, 28],"float64"), Tensor([3, 4],"float64"), Tensor([2],"int32"), tuple(7,7,), )
paddle.vision.ops.psroi_pool(Tensor([3, 12, 6, 4],"float64"), Tensor([6, 4],"float64"), Tensor([3],"int32"), tuple(2,2,), 0.25, )
paddle.Tensor.reshape(Tensor([1, 1, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 10, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 100, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 101, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 102, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 103, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 104, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 105, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 106, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 107, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 108, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 108],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 109, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 11, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 110, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 111, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 112, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 113, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 114, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 115, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 116, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 117, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 117],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 118, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 119, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 12, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 120, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 1200],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 121, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 122, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 123, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 124, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 125, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 126, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 127, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 128, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 129, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 13, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 130, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 131, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 132, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 133, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 134, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 135, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 136, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 137, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 138, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 139, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 14, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 140, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 141, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 142, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 143, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 144, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 145, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 146, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 147, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 148, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 149, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 15, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 150, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 151, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 152, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 153, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 154, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 155, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 156, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 157, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 158, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 159, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 16, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 160, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 161, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 162, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 1620],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 163, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 164, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 165, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 166, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 167, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 168, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 169, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 17, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 170, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 171, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 172, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 1728],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 173, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 174, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 175, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 176, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 177, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 178, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 179, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 18, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 180, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 1800],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 181, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 182, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 183, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 184, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 185, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 186, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 187, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 188, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 189, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 19, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 190, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 191, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 192, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 193, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 194, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 195, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 196, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 197, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 198, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 199, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 2, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 20, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 200, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 201, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 202, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 203, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 204, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 205, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 206, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 207, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 208, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 209, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 21, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 210, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 211, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 212, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 213, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 214, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 215, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 21504, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 216, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 217, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 218, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 219, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 22, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 220, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 221, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 222, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 223, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 224, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 225, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 226, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 227, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 228, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 229, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 23, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 230, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 231, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 232, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 233, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 234, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 235, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 236, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 237, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 238, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 239, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 24, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 240, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 241, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 242, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 24276, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 243, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 244, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 245, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 246, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 247, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 248, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 249, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 25, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 250, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 108],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 117],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 1200],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 1296],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 1600],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 1620],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 1728],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 1800],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 1936],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 2116],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 2304],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 27648],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 28800],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 300],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 324],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 400],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 414],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 432],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 450],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 4800],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 484],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 5184],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 529],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 576],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 6400],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 6408],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 6912],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 7200],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 7744],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 80],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 8464],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 256, 9216],"float32"), list[8,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 26, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 261, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 27, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 27216, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 27648],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 28, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 28800],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 29, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 3, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 30, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 300],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 30324, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 31, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 32, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 33, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 33600, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 34, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 35, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 36, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 37, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 37044, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 38, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 385, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 39, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 4, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 40, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 40656, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 41, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 414],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 42, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 43, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 432],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 44, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 44436, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 45, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 450],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 46, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 47, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 48, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 4800],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 48384, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 49, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 5, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 50, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 51, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 52, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 52500, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 53, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 54, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 55, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 56, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 56784, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 57, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 58, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 59, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 6, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 60, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 61, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 61236, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 62, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 63, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 64, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 6408],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 65, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 65856, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 66, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 67, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 68, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 69, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 6912],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 7, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 70, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 70644, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 71, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 72, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 7200],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 73, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 74, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 75, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 75600, 88],"float32"), list[-1,Tensor([],"int64"),4,22,], )
paddle.Tensor.reshape(Tensor([1, 76, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 77, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 78, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 79, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 8, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 80, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 80],"float32"), list[1,Tensor([],"int64"),Tensor([],"int64"),1,], )
paddle.Tensor.reshape(Tensor([1, 81, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 82, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 83, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 84, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 8400, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([1, 85, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 86, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 87, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 88, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 89, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 9, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 90, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 91, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 92, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 93, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 94, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 95, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 96, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 97, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 98, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([1, 99, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 1, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 10, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 100, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 101, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 102, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 103, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 104, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 105, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 106, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 107, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 108, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 109, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 11, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 110, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 111, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 112, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 113, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 114, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 115, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 116, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 117, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 118, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 119, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 12, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 120, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 121, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 122, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 123, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 124, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 125, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 126, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 127, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 128, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 129, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 13, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 130, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 131, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 132, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 133, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 134, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 135, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 136, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 137, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 138, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 139, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 14, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 140, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 141, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 142, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 143, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 144, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 145, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 146, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 147, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 148, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 149, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 15, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 150, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 151, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 152, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 153, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 154, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 155, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 156, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 157, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 158, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 159, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 16, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 160, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 161, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 162, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 163, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 164, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 165, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 166, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 167, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 168, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 169, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 17, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 170, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 171, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 172, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 173, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 174, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 175, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 176, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 177, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 178, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 179, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 18, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 180, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 181, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 182, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 183, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 184, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 185, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 19, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 2, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 20, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 21, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 22, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 23, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 24, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 25, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 26, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 27, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 28, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 29, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 3, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 30, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 31, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 32, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 33, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 34, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 35, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 36, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 37, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 38, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 39, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 4, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 40, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 41, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 42, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 43, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 44, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 45, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 46, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 47, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 48, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 49, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 5, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 50, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 51, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 52, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 53, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 54, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 55, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 56, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 57, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 58, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 59, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 6, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 60, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 61, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 62, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 63, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 64, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 65, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 66, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 67, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 68, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 69, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 7, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 70, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 71, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 72, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 73, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 74, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 75, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 76, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 77, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 78, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 79, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 8, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 80, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 81, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 82, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 83, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 84, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 85, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 86, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 87, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 88, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 89, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 9, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 90, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 91, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 92, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 93, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 94, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 95, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 96, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 97, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 98, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([10, 99, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([112, 165, 165],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),165,], )
paddle.Tensor.reshape(Tensor([112, 165, 64],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),64,], )
paddle.Tensor.reshape(Tensor([112, 186, 186],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),186,], )
paddle.Tensor.reshape(Tensor([112, 186, 64],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),64,], )
paddle.Tensor.reshape(Tensor([112, 206, 206],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),206,], )
paddle.Tensor.reshape(Tensor([112, 206, 64],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),64,], )
paddle.Tensor.reshape(Tensor([112, 209, 209],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),209,], )
paddle.Tensor.reshape(Tensor([112, 209, 64],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),64,], )
paddle.Tensor.reshape(Tensor([112, 220, 220],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),220,], )
paddle.Tensor.reshape(Tensor([112, 220, 64],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),64,], )
paddle.Tensor.reshape(Tensor([112, 286, 286],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),286,], )
paddle.Tensor.reshape(Tensor([112, 286, 64],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),64,], )
paddle.Tensor.reshape(Tensor([112, 435, 435],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),435,], )
paddle.Tensor.reshape(Tensor([112, 435, 64],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),64,], )
paddle.Tensor.reshape(Tensor([128, 1, 14, 2, 7, 128],"float32"), list[Tensor([],"int32"),14,14,128,], )
paddle.Tensor.reshape(Tensor([128, 1, 28, 14, 2, 64],"float32"), list[Tensor([],"int32"),28,28,64,], )
paddle.Tensor.reshape(Tensor([128, 1, 56, 56, 1, 32],"float32"), list[Tensor([],"int32"),56,56,32,], )
paddle.Tensor.reshape(Tensor([128, 1, 7, 1, 7, 512],"float32"), list[Tensor([],"int32"),7,7,512,], )
paddle.Tensor.reshape(Tensor([128, 14, 2, 1, 28, 64],"float32"), list[Tensor([],"int32"),28,28,64,], )
paddle.Tensor.reshape(Tensor([128, 2, 7, 1, 14, 128],"float32"), list[Tensor([],"int32"),14,14,128,], )
paddle.Tensor.reshape(Tensor([128, 49, 512],"float32"), list[Tensor([],"int32"),1,1,7,7,512,], )
paddle.Tensor.reshape(Tensor([128, 56, 1, 1, 56, 32],"float32"), list[Tensor([],"int32"),56,56,32,], )
paddle.Tensor.reshape(Tensor([14, 144, 384],"float32"), list[Tensor([],"int64"),-1,16,24,], )
paddle.Tensor.reshape(Tensor([14, 16, 144, 24],"float32"), tuple(Tensor([],"int64"),-1,24,), )
paddle.Tensor.reshape(Tensor([14, 16, 209, 209],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),209,], )
paddle.Tensor.reshape(Tensor([14, 16, 209, 24],"float32"), tuple(Tensor([],"int64"),-1,24,), )
paddle.Tensor.reshape(Tensor([14, 209, 16, 24],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),384,], )
paddle.Tensor.reshape(Tensor([14, 209, 384],"float32"), list[Tensor([],"int64"),-1,16,24,], )
paddle.Tensor.reshape(Tensor([14, 209, 384],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),16,24,], )
paddle.Tensor.reshape(Tensor([16, 10164, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([16, 11109, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([16, 12096, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([16, 2100, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([16, 2541, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([16, 256, 1600],"float32"), list[128,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([16, 256, 400],"float32"), list[128,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([16, 256, 6400],"float32"), list[128,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([16, 3024, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([16, 3549, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([16, 4116, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([16, 4725, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([16, 5376, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([16, 6069, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([16, 6804, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([16, 7581, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([16, 8400, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([16, 9261, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([1792, 56, 64],"float32"), list[Tensor([],"int32"),1,14,28,2,64,], )
paddle.Tensor.reshape(Tensor([1792, 56, 64],"float32"), list[Tensor([],"int32"),14,1,2,28,64,], )
paddle.Tensor.reshape(Tensor([1],"float64"), tuple(Tensor([],"int64"),1,), )
paddle.Tensor.reshape(Tensor([2, 1, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 10, 15, 4],"float32"), list[-1,Tensor([],"int64"),4,], )
paddle.Tensor.reshape(Tensor([2, 10, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 100, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 101, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 10164, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 10164, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 102, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 103, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 104, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 105, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 106, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 107, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 108, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 109, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 11, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 110, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 111, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 11109, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 11109, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 112, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 113, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 114, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 115, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 116, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 117, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 118, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 119, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 12, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 120, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 12096, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 12096, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 121, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 122, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 123, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 124, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 125, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 126, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 127, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 128, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 129, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 13, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 130, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 131, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 132, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 133, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 134, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 135, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 136, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 137, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 138, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 139, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 14, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 140, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 141, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 142, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 143, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 144, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 145, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 146, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 147, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 148, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 149, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 15, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 150, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 150],"float32"), list[-1,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 151, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 152, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 153, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 154, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 155, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 156, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 157, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 158, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 159, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 16, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 160, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 161, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 162, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 163, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 164, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 165, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 166, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 167, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 168, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 169, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 17, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 170, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 171, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 172, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 173, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 174, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 175, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 176, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 177, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 178, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 179, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 18, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 180, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 181, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 182, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 183, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 184, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 185, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 186, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 187, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 188, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 189, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 19, 29, 4],"float32"), list[-1,Tensor([],"int64"),4,], )
paddle.Tensor.reshape(Tensor([2, 19, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 190, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 191, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 192, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 193, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 194, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 195, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 196, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 197, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 198, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 199, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 2, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 20, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 200, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 201, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 202, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 203, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 204, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 205, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 206, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 207, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 208, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 209, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 21, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 2100, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 2100, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 22, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 2204],"float32"), list[-1,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 23, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 24, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 25, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 2541, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 2541, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 256, 1156],"float32"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 150],"float16"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 150],"float32"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 1600],"float32"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 2204],"float16"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 2204],"float32"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 225],"float32"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 289],"float32"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 3600],"float32"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 400],"float32"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 4624],"float32"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 551],"float16"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 551],"float32"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 6400],"float32"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 8740],"float16"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 8740],"float32"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 256, 900],"float32"), list[16,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 26, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 27, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 28, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 29, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 3, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 30, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 3024, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 3024, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 31, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 32, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 33, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 34, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 35, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 3549, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 3549, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 36, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 37, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 38, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 38, 58, 4],"float32"), list[-1,Tensor([],"int64"),4,], )
paddle.Tensor.reshape(Tensor([2, 39, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 4, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 40, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 41, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 4116, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 4116, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 42, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 43, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 44, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 45, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 46, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 47, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 4725, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 4725, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 48, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 49, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 5, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 50, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 51, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 52, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 53, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 5376, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 5376, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 54, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 55, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 551],"float32"), list[-1,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 56, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 57, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 58, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 59, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 6, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 60, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 6069, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 6069, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 61, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 62, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 63, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 64, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 65, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 66, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 67, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 68, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 6804, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 6804, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 69, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 7, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 70, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 71, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 72, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 73, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 74, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 75, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 7581, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 7581, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 76, 115, 4],"float32"), list[-1,Tensor([],"int64"),4,], )
paddle.Tensor.reshape(Tensor([2, 76, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 77, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 78, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 79, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 8, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 80, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 81, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 82, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 83, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 84, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 8400, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 8400, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 85, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 86, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 87, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 8740],"float32"), list[-1,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 88, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 89, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 9, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 90, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 91, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 92, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 9261, 40],"float32"), list[-1,Tensor([],"int64"),4,10,], )
paddle.Tensor.reshape(Tensor([2, 9261, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([2, 93, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 94, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 95, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 96, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 97, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 98, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([2, 99, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([224, 209, 209],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),209,], )
paddle.Tensor.reshape(Tensor([224, 209, 24],"float32"), list[Tensor([],"int64"),16,Tensor([],"int64"),24,], )
paddle.Tensor.reshape(Tensor([256, 98, 128],"float32"), list[Tensor([],"int32"),1,2,14,7,128,], )
paddle.Tensor.reshape(Tensor([256, 98, 128],"float32"), list[Tensor([],"int32"),2,1,7,14,128,], )
paddle.Tensor.reshape(Tensor([2],"float32"), tuple(Tensor([],"int64"),1,), )
paddle.Tensor.reshape(Tensor([2],"float64"), tuple(Tensor([],"int64"),1,), )
paddle.Tensor.reshape(Tensor([3, 1, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 10, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 100, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 101, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 102, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 103, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 104, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 105, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 106, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 107, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 108, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 109, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 11, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 110, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 111, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 112, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 113, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 114, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 115, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 116, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 117, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 118, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 119, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 12, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 120, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 121, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 122, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 123, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 124, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 125, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 126, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 127, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 128, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 129, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 13, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 130, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 131, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 132, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 133, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 134, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 135, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 136, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 137, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 138, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 139, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 14, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 140, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 141, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 142, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 143, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 144, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 145, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 146, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 147, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 148, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 149, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 15, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 150, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 151, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 152, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 153, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 154, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 155, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 156, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 157, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 158, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 159, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 16, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 160, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 161, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 162, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 163, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 169, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 17, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 18, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 19, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 2, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 20, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 21, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 22, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 23, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 24, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 25, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 26, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 27, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 28, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 29, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 3, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 30, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 31, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 32, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 33, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 34, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 35, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 36, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 37, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 38, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 39, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 4, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 40, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 41, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 42, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 43, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 44, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 45, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 46, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 47, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 48, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 49, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 5, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 50, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 51, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 52, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 53, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 54, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 55, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 56, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 57, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 58, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 59, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 6, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 60, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 61, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 62, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 63, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 64, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 65, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 66, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 67, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 68, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 69, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 7, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 70, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 71, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 72, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 73, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 74, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 75, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 76, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 77, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 78, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 79, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 8, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 80, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 81, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 82, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 83, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 84, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 85, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 86, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 87, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 88, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 89, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 9, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 90, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 91, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 92, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 93, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 94, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 95, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 96, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 97, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 98, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3, 99, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([3],"float64"), tuple(Tensor([],"int64"),1,), )
paddle.Tensor.reshape(Tensor([4, 1, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 10, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 100, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 101, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 10164, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 102, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 103, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 104, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 105, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 106, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 107, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 108, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 109, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 11, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 110, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 111, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 11109, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 112, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 113, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 114, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 115, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 116, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 117, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 118, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 119, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 12, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 120, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 12096, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 121, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 122, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 123, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 124, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 125, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 126, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 127, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 128, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 129, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 13, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 130, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 131, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 132, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 133, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 134, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 135, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 136, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 137, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 138, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 139, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 14, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 140, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 141, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 142, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 143, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 144, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 145, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 146, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 147, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 148, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 149, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 15, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 150, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 151, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 152, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 153, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 154, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 155, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 156, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 157, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 158, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 159, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 16, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 160, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 1600, 376, 280],"float32"), list[Tensor([],"int64"),1600,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 161, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 162, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 163, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 164, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 165, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 166, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 167, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 168, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 169, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 17, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 170, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 171, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 172, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 173, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 174, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 175, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 176, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 177, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 178, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 179, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 18, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 180, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 19, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 2, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 20, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 21, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 2100, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 22, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 23, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 24, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 25, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 2541, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 256, 1024],"float32"), list[32,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 256, 1600],"float32"), list[32,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 256, 256],"float32"), list[32,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 256, 400],"float32"), list[32,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 256, 4096],"float32"), list[32,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 256, 6400],"float32"), list[32,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 26, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 2632000, 3],"float32"), list[4,Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),3,], )
paddle.Tensor.reshape(Tensor([4, 27, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 28, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 280, 376, 25, 3],"float32"), list[-1,Tensor([],"int64"),3,], )
paddle.Tensor.reshape(Tensor([4, 280, 376, 25, 3],"float32"), list[-1,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 29, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 3, 375, 1242],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 3, 465750],"float32"), Tensor([4],"int64"), )
paddle.Tensor.reshape(Tensor([4, 3, 4],"float32"), list[Tensor([],"int64"),1,1,3,4,], )
paddle.Tensor.reshape(Tensor([4, 3, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 30, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 3024, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 31, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 32, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 33, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 34, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 35, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 3549, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 36, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 37, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 38, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 39, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 4, 4],"float32"), tuple(Tensor([],"int64"),1,1,4,4,), )
paddle.Tensor.reshape(Tensor([4, 4, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 40, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 41, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 4116, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 42, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 43, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 44, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 45, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 46, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 47, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 4725, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 48, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 49, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 5, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 50, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 51, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 52, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 53, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 5376, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 54, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 55, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 56, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 57, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 58, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 59, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 6, 16],"float32"), Tensor([4],"int64"), )
paddle.Tensor.reshape(Tensor([4, 6, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 60, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 6069, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 61, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 62, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 63, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 64, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 65, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 66, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 67, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 68, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 6804, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 69, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 7, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 70, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 71, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 72, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 73, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 74, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 75, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 7581, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 76, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 77, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 78, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 79, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 8, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 80, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 81, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 82, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 83, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 84, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 8400, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 85, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 86, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 87, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 88, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 89, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 9, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 90, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 91, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 92, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 9261, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([4, 93, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 94, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 95, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 96, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 97, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 98, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([4, 99, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([421120, 25, 3],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([421120, 25, 4],"float32"), list[Tensor([],"int64"),-1,Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 1, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 10, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 100, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 101, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 102, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 103, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 104, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 105, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 106, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 107, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 108, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 109, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 11, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 110, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 111, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 112, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 113, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 114, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 115, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 116, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 117, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 118, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 119, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 12, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 120, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 121, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 122, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 123, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 124, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 125, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 126, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 127, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 128, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 129, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 13, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 130, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 131, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 132, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 133, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 134, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 135, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 136, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 137, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 138, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 139, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 14, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 140, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 141, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 142, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 145, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 15, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 16, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 17, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 18, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 19, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 2, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 20, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 21, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 22, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 23, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 24, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 25, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 26, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 27, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 28, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 29, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 3, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 30, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 31, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 32, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 33, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 34, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 35, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 36, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 37, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 38, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 39, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 4, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 40, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 41, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 42, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 43, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 44, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 45, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 46, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 47, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 48, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 49, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 5, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 50, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 51, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 52, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 53, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 54, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 55, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 56, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 57, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 58, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 59, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 6, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 60, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 61, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 62, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 63, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 64, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 65, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 66, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 67, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 68, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 69, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 7, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 70, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 71, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 72, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 73, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 74, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 75, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 76, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 77, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 78, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 79, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 8, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 80, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 81, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 82, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 83, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 84, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 85, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 86, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 87, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 88, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 89, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 9, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 90, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 91, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 92, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 93, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 94, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 95, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 96, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 97, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 98, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5, 99, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([5],"float64"), tuple(Tensor([],"int64"),1,), )
paddle.Tensor.reshape(Tensor([6, 1, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 10, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 100, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 101, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 102, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 103, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 104, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 105, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 106, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 107, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 108, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 109, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 11, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 110, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 111, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 112, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 113, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 114, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 115, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 116, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 117, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 118, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 119, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 12, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 120, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 121, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 122, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 123, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 124, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 125, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 126, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 127, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 128, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 129, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 13, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 130, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 131, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 132, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 133, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 134, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 135, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 136, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 137, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 138, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 139, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 14, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 140, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 141, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 142, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 143, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 144, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 145, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 146, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 147, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 148, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 149, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 15, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 150, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 151, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 152, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 153, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 154, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 155, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 156, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 157, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 158, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 159, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 16, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 160, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 161, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 162, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 163, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 164, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 165, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 166, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 167, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 168, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 169, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 17, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 170, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 171, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 172, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 173, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 174, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 175, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 176, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 177, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 178, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 179, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 18, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 180, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 181, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 182, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 183, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 184, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 185, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 19, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 2, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 20, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 21, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 22, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 23, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 24, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 25, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 26, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 27, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 28, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 29, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 3, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 30, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 31, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 32, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 33, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 34, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 35, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 36, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 37, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 38, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 39, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 4, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 40, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 41, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 42, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 43, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 44, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 45, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 46, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 47, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 48, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 49, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 5, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 50, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 51, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 52, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 53, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 54, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 55, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 56, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 57, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 58, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 59, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 6, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 60, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 61, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 62, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 63, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 64, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 65, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 66, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 67, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 68, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 69, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 7, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 70, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 71, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 72, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 73, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 74, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 75, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 76, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 77, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 78, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 79, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 8, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 80, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 81, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 82, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 83, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 84, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 85, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 86, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 87, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 88, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 89, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 9, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 90, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 91, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 92, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 93, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 94, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 95, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 96, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 97, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 98, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([6, 99, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 1, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 10, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 100, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 101, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 102, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 103, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 104, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 105, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 106, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 107, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 108, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 109, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 11, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 110, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 111, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 112, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 113, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 114, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 115, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 116, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 117, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 118, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 119, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 12, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 120, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 121, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 122, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 123, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 124, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 125, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 126, 1024],"float32"), list[Tensor([],"int64"),-1,16,64,], )
paddle.Tensor.reshape(Tensor([7, 126, 3072],"float32"), list[7,126,3,Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 126, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 127, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 128, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 129, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 13, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 130, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 131, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 132, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 133, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 134, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 135, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 136, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 137, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 138, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 139, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 14, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 140, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 141, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 142, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 143, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 144, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 145, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 146, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 147, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 148, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 149, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 15, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 150, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 151, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 152, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 153, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 154, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 155, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 156, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 157, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 158, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 159, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 16, 126, 64],"float32"), tuple(Tensor([],"int64"),-1,64,), )
paddle.Tensor.reshape(Tensor([7, 16, 165, 165],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),165,], )
paddle.Tensor.reshape(Tensor([7, 16, 165, 64],"float32"), tuple(Tensor([],"int64"),-1,64,), )
paddle.Tensor.reshape(Tensor([7, 16, 186, 186],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),186,], )
paddle.Tensor.reshape(Tensor([7, 16, 186, 64],"float32"), tuple(Tensor([],"int64"),-1,64,), )
paddle.Tensor.reshape(Tensor([7, 16, 206, 206],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),206,], )
paddle.Tensor.reshape(Tensor([7, 16, 206, 64],"float32"), tuple(Tensor([],"int64"),-1,64,), )
paddle.Tensor.reshape(Tensor([7, 16, 209, 209],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),209,], )
paddle.Tensor.reshape(Tensor([7, 16, 209, 64],"float32"), tuple(Tensor([],"int64"),-1,64,), )
paddle.Tensor.reshape(Tensor([7, 16, 220, 220],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),220,], )
paddle.Tensor.reshape(Tensor([7, 16, 220, 64],"float32"), tuple(Tensor([],"int64"),-1,64,), )
paddle.Tensor.reshape(Tensor([7, 16, 286, 286],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),286,], )
paddle.Tensor.reshape(Tensor([7, 16, 286, 64],"float32"), tuple(Tensor([],"int64"),-1,64,), )
paddle.Tensor.reshape(Tensor([7, 16, 435, 435],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),435,], )
paddle.Tensor.reshape(Tensor([7, 16, 435, 64],"float32"), tuple(Tensor([],"int64"),-1,64,), )
paddle.Tensor.reshape(Tensor([7, 16, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 160, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 161, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 162, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 163, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 164, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 165, 1024],"float32"), list[Tensor([],"int64"),-1,16,64,], )
paddle.Tensor.reshape(Tensor([7, 165, 1024],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),16,64,], )
paddle.Tensor.reshape(Tensor([7, 165, 16, 64],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),1024,], )
paddle.Tensor.reshape(Tensor([7, 165, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 166, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 167, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 168, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 169, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 17, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 170, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 171, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 172, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 173, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 174, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 175, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 176, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 177, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 178, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 179, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 18, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 180, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 186, 1024],"float32"), list[Tensor([],"int64"),-1,16,64,], )
paddle.Tensor.reshape(Tensor([7, 186, 1024],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),16,64,], )
paddle.Tensor.reshape(Tensor([7, 186, 16, 64],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),1024,], )
paddle.Tensor.reshape(Tensor([7, 19, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 2, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 20, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 206, 1024],"float32"), list[Tensor([],"int64"),-1,16,64,], )
paddle.Tensor.reshape(Tensor([7, 206, 1024],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),16,64,], )
paddle.Tensor.reshape(Tensor([7, 206, 16, 64],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),1024,], )
paddle.Tensor.reshape(Tensor([7, 209, 1024],"float32"), list[Tensor([],"int64"),-1,16,64,], )
paddle.Tensor.reshape(Tensor([7, 209, 1024],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),16,64,], )
paddle.Tensor.reshape(Tensor([7, 209, 16, 64],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),1024,], )
paddle.Tensor.reshape(Tensor([7, 21, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 22, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 220, 1024],"float32"), list[Tensor([],"int64"),-1,16,64,], )
paddle.Tensor.reshape(Tensor([7, 220, 1024],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),16,64,], )
paddle.Tensor.reshape(Tensor([7, 220, 16, 64],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),1024,], )
paddle.Tensor.reshape(Tensor([7, 23, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 24, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 25, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 26, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 27, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 28, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 286, 1024],"float32"), list[Tensor([],"int64"),-1,16,64,], )
paddle.Tensor.reshape(Tensor([7, 286, 1024],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),16,64,], )
paddle.Tensor.reshape(Tensor([7, 286, 16, 64],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),1024,], )
paddle.Tensor.reshape(Tensor([7, 29, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 3, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 30, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 31, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 32, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 33, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 34, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 35, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 36, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 37, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 38, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 39, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 4, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 40, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 41, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 42, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 43, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 435, 1024],"float32"), list[Tensor([],"int64"),-1,16,64,], )
paddle.Tensor.reshape(Tensor([7, 435, 1024],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),16,64,], )
paddle.Tensor.reshape(Tensor([7, 435, 16, 64],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),1024,], )
paddle.Tensor.reshape(Tensor([7, 44, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 45, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 46, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 47, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 48, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 49, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 5, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 50, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 51, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 52, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 53, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 54, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 55, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 56, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 57, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 58, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 59, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 6, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 60, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 61, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 62, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 63, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 64, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 65, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 66, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 67, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 68, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 69, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 7, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 70, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 71, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 72, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 73, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 74, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 75, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 76, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 77, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 78, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 79, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 8, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 80, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 81, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 82, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 83, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 84, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 85, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 86, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 87, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 88, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 89, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 9, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 90, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 91, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 92, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 93, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 94, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 95, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 96, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 97, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 98, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7, 99, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([7168, 56, 32],"float32"), list[Tensor([],"int32"),1,56,56,1,32,], )
paddle.Tensor.reshape(Tensor([7168, 56, 32],"float32"), list[Tensor([],"int32"),56,1,1,56,32,], )
paddle.Tensor.reshape(Tensor([8, 1, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 10, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 100, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 101, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 10164, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 10164, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 102, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 103, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 104, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 105, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 106, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 107, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 108, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 109, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 11, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 110, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 111, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 11109, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 11109, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 112, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 113, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 114, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 115, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 116, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 117, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 118, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 119, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 12, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 120, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 12096, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 12096, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 121, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 122, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 123, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 124, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 125, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 126, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 127, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 128, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 129, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 13, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 130, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 131, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 132, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 133, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 134, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 135, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 136, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 137, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 138, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 139, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 14, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 140, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 141, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 142, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 143, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 144, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 145, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 146, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 147, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 148, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 149, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 15, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 150, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 151, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 152, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 153, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 154, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 155, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 156, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 157, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 158, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 159, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 16, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 160, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 161, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 162, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 163, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 164, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 165, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 166, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 167, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 168, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 169, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 17, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 170, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 171, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 172, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 173, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 174, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 175, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 176, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 177, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 178, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 179, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 18, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 180, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 181, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 182, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 183, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 184, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 185, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 186, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 187, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 188, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 189, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 19, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 190, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 191, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 192, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 193, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 194, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 195, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 196, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 197, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 198, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 199, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 2, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 20, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 200, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 201, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 202, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 203, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 204, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 205, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 206, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 207, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 208, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 209, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 21, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 210, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 2100, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 2100, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 211, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 212, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 213, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 214, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 215, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 216, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 217, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 218, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 219, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 22, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 220, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 221, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 222, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 223, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 224, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 225, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 226, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 227, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 228, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 229, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 23, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 230, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 231, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 232, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 233, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 234, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 235, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 236, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 237, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 238, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 239, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 24, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 240, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 241, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 242, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 243, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 244, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 245, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 246, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 247, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 248, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 249, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 25, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 250, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 251, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 252, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 253, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 254, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 2541, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 2541, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 255, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 256, 1156],"float32"), list[64,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 256, 289],"float32"), list[64,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 256, 4624],"float32"), list[64,32,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 256, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 257, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 258, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 259, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 26, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 260, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 261, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 262, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 263, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 264, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 265, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 266, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 267, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 268, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 269, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 27, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 270, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 271, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 272, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 273, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 274, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 275, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 276, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 277, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 278, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 279, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 28, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 280, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 281, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 282, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 283, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 284, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 285, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 286, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 287, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 288, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 289, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 29, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 290, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 291, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 292, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 293, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 3, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 30, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 3024, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 3024, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 31, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 32, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 33, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 34, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 35, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 3549, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 3549, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 36, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 37, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 38, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 39, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 4, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 40, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 41, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 4116, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 4116, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 42, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 43, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 44, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 45, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 46, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 47, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 4725, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 4725, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 48, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 49, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 5, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 50, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 51, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 52, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 53, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 5376, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 5376, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 54, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 55, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 56, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 57, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 58, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 59, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 6, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 60, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 6069, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 6069, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 61, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 62, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 63, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 64, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 65, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 66, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 67, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 68, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 6804, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 6804, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 69, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 7, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 70, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 71, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 72, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 73, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 74, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 75, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 7581, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 7581, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 76, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 77, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 78, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 79, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 8, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 80, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 81, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 82, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 83, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 84, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 8400, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 8400, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 85, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 86, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 87, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 88, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 89, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 9, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 90, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 91, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 92, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 9261, 68],"float16"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 9261, 68],"float32"), list[-1,Tensor([],"int64"),4,17,], )
paddle.Tensor.reshape(Tensor([8, 93, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 94, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 95, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 96, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 97, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 98, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([8, 99, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 1, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 10, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 100, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 101, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 102, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 103, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 104, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 105, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 106, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 107, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 108, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 109, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 11, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 110, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 111, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 112, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 113, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 114, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 115, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 116, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 117, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 118, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 119, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 12, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 13, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 14, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 15, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 16, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 17, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 18, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 19, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 2, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 20, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 21, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 22, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 23, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 24, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 25, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 26, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 27, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 28, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 29, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 3, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 30, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 31, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 32, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 33, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 34, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 35, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 36, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 37, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 38, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 39, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 4, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 40, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 41, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 42, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 43, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 44, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 45, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 46, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 47, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 48, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 49, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 5, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 50, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 51, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 52, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 53, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 54, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 55, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 56, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 57, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 58, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 59, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 6, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 60, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 61, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 62, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 63, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 64, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 65, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 66, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 67, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 68, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 69, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 7, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 70, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 71, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 72, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 73, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 74, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 75, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 76, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 77, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 78, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 79, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 8, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 80, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 81, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 82, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 83, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 84, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 85, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 86, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 87, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 88, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 89, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 9, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 90, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 91, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 92, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 93, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 94, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 95, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 96, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 97, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 98, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([9, 99, 512],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),8,Tensor([1],"int64"),], )
paddle.Tensor.reshape(Tensor([],"float16"), tuple(Tensor([],"int64"),1,), )
paddle.Tensor.reshape(Tensor([],"float32"), tuple(Tensor([],"int64"),1,), )
paddle.Tensor.reshape(Tensor([],"float64"), tuple(Tensor([],"int64"),1,), )
paddle.Tensor.reshape(Tensor([],"int32"), tuple(Tensor([],"int64"),1,), )
paddle.Tensor.reshape(Tensor([],"int64"), tuple(Tensor([],"int64"),1,), )
paddle.reshape(Tensor([1, 100],"float64"), Tensor([2],"int64"), )
paddle.reshape(Tensor([1, 1],"float32"), Tensor([1],"int32"), )
paddle.reshape(Tensor([1, 1],"float32"), Tensor([3],"int32"), )
paddle.reshape(Tensor([1, 1],"float32"), list[Tensor([],"int32"),Tensor([],"int32"),], )
paddle.reshape(Tensor([1, 2, 3],"float32"), Tensor([3],"int64"), )
paddle.reshape(Tensor([1, 2, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([1, 2, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([1, 4, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([1, 4, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([10, 20, 1],"float32"), Tensor([1],"int64"), )
paddle.reshape(Tensor([1000, 2],"float64"), Tensor([2],"int64"), )
paddle.reshape(Tensor([100],"float32"), Tensor([1],"int64"), )
paddle.reshape(Tensor([100],"float64"), Tensor([1],"int64"), )
paddle.reshape(Tensor([12, 24, 19, 34],"float16"), list[Tensor([],"int64"),4,6,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([12, 24, 19, 34],"float32"), list[Tensor([],"int64"),4,6,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([12, 24, 38, 68],"float16"), list[Tensor([],"int64"),4,6,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([12, 24, 38, 68],"float32"), list[Tensor([],"int64"),4,6,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([12, 24, 76, 136],"float16"), list[Tensor([],"int64"),4,6,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([12, 24, 76, 136],"float32"), list[Tensor([],"int64"),4,6,Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([2, 1, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 1, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 1, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 64, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 8, 16],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 8, 8, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 25],"float32"), shape=Tensor([3],"int32"), )
paddle.reshape(Tensor([2, 25],"float32"), shape=list[Tensor([1],"int32"),10,], )
paddle.reshape(Tensor([2, 4, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 4, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 8, 1, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 8, 64, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([3, 3, 1],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([3, 3, 3],"float32"), list[3,Tensor([],"int32"),3,], )
paddle.reshape(Tensor([3],"float32"), Tensor([1],"int64"), )
paddle.reshape(Tensor([3],"float64"), Tensor([1],"int64"), )
paddle.reshape(Tensor([4, 1],"float32"), list[Tensor([],"int64"),1,Tensor([],"int64"),], )
paddle.reshape(Tensor([4, 256, 7332],"float32"), tuple(0,256,Tensor([],"int64"),Tensor([],"int64"),), )
paddle.reshape(Tensor([5, 7],"int32"), shape=tuple(Tensor([],"int64"),Tensor([],"int64"),), )
paddle.reshape(Tensor([64, 26, 1, 40, 1],"float16"), list[Tensor([],"int64"),Tensor([],"int64"),-1,], )
paddle.reshape(Tensor([64, 26, 1, 40, 1],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),-1,], )
paddle.reshape(Tensor([64, 26, 40],"float16"), list[Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([64, 26, 40],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([8, 26, 1, 40, 1],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),-1,], )
paddle.reshape(Tensor([8, 26, 40],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([],"float32"), Tensor([0],"int64"), )
paddle.reshape(x=Tensor([2, 2],"float64"), shape=Tensor([2],"int32"), )
paddle.arange(0, Tensor([],"float32"), dtype="float32", )
paddle.arange(0, Tensor([],"float64"), dtype="float64", )
paddle.arange(0, Tensor([],"int32"), dtype="float32", )
paddle.arange(0, Tensor([],"int32"), dtype="float64", )
paddle.arange(0, Tensor([],"int64"), 1, dtype=Dtype(int64), )
paddle.arange(Tensor([1],"float32"), )
paddle.arange(Tensor([1],"float32"), 1, )
paddle.arange(Tensor([1],"float32"), Tensor([1],"float32"), 1, )
paddle.arange(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), "float32", )
paddle.arange(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), "float64", )
paddle.arange(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), "int64", )
paddle.arange(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), )
paddle.arange(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), type(numpy.float32), )
paddle.arange(Tensor([1],"int32"), Tensor([1],"int32"), Tensor([1],"int32"), type(numpy.int32), )
paddle.arange(Tensor([1],"int64"), dtype="int64", )
paddle.arange(Tensor([],"float32"), Tensor([],"float32"), -1, dtype=Dtype(int64), )
paddle.arange(Tensor([],"float32"), Tensor([],"float32"), -2, dtype=Dtype(int64), )
paddle.arange(Tensor([],"float32"), Tensor([],"float32"), -4, dtype=Dtype(int64), )
paddle.arange(Tensor([],"float32"), Tensor([],"float32"), Tensor([],"float32"), )
paddle.arange(Tensor([],"int64"), )
paddle.arange(Tensor([],"int64"), Tensor([],"int64"), )
paddle.arange(Tensor([],"int64"), Tensor([],"int64"), dtype=Dtype(int32), )
paddle.arange(Tensor([],"int64"), dtype="float32", )
paddle.arange(Tensor([],"int64"), dtype="int64", )
paddle.arange(end=Tensor([],"int64"), )
paddle.arange(start=0, end=Tensor([],"int64"), dtype="float32", )
paddle.arange(start=1, end=20, step=Tensor([1],"int64"), dtype=type(numpy.float32), )
paddle.arange(start=Tensor([1],"int64"), end=20, step=3, dtype=type(numpy.int64), )
paddle.arange(start=Tensor([1],"int64"), end=Tensor([1],"int64"), step=Tensor([1],"int64"), dtype=type(numpy.float32), )
paddle.eye(Tensor([],"int64"), Tensor([],"int64"), )
paddle.eye(num_rows=Tensor([1],"float64"), num_columns=Tensor([1],"float64"), dtype="float32", )
paddle.Tensor.unflatten(Tensor([7, 126, 3072],"float32"), -1, tuple(3,Tensor([],"int64"),), )
paddle.unflatten(x=Tensor([4, 6, 16],"float32"), axis=0, shape=Tensor([2],"int64"), )
paddle.full(shape=Tensor([2],"int64"), fill_value=1, dtype=type(numpy.int32), )
paddle.full(shape=Tensor([2],"int64"), fill_value=1, dtype=type(numpy.int64), )
paddle.full(shape=Tensor([2],"int64"), fill_value=1.1, dtype=type(numpy.float16), )
paddle.full(shape=Tensor([2],"int64"), fill_value=1.1, dtype=type(numpy.float32), )
paddle.full(shape=Tensor([2],"int64"), fill_value=False, dtype=type(bool), )
paddle.full(shape=Tensor([2],"int64"), fill_value=Tensor([1],"float32"), dtype="float32", )
paddle.full(shape=Tensor([2],"int64"), fill_value=True, dtype=type(bool), )
paddle.full(shape=list[1,2,], dtype=type(numpy.float32), fill_value=Tensor([1],"float32"), )
paddle.full(shape=list[3,2,], fill_value=Tensor([1],"float32"), dtype="float32", )
paddle.full(shape=list[3,2,], fill_value=Tensor([1],"float32"), dtype=type(numpy.float32), )
paddle.full(shape=list[3,2,], fill_value=Tensor([1],"int32"), dtype=type(numpy.int32), )
paddle.full(shape=list[Tensor([],"int64"),4,], fill_value=False, dtype="bool", )
paddle.full(shape=list[Tensor([],"int64"),8,], fill_value=Tensor([1],"int64"), dtype=Dtype(int64), )
paddle.full(shape=list[], fill_value=Tensor([1],"int64"), dtype="int64", )
paddle.full(shape=tuple(3,2,), fill_value=Tensor([1],"float32"), dtype="float32", )
paddle.full(shape=tuple(3,2,), fill_value=Tensor([1],"float32"), dtype=type(numpy.float32), )
paddle.full(shape=tuple(3,2,), fill_value=Tensor([1],"int32"), dtype=type(numpy.int32), )
paddle.full(list[Tensor([],"int32"),Tensor([],"int32"),Tensor([],"int32"),], 0.5, )
paddle.full(shape=list[Tensor([],"int64"),4,], fill_value=Tensor([1],"int64"), dtype=Dtype(int64), )
paddle.full(shape=list[Tensor([],"int64"),8,], fill_value=False, dtype="bool", )
paddle.full(shape=list[Tensor([1],"int32"),Tensor([1],"int32"),], fill_value=0.0, )
paddle.full(shape=list[Tensor([1],"int32"),Tensor([1],"int32"),], fill_value=10000000000, )
paddle.full(shape=list[Tensor([1],"int32"),Tensor([1],"int32"),], fill_value=3, )
paddle.full(shape=list[Tensor([1],"int32"),Tensor([1],"int32"),], fill_value=3.8, )
paddle.full(shape=list[Tensor([1],"int32"),Tensor([1],"int64"),Tensor([1],"int64"),], dtype="float32", fill_value=1.1, )
paddle.full(shape=Tensor([1],"int32"), dtype="float32", fill_value=1.1, )
paddle.full(shape=Tensor([2],"int32"), fill_value=3.8, )
paddle.full(shape=Tensor([2],"int32"), fill_value=Tensor([1],"float32"), )
paddle.full(shape=Tensor([2],"int32"), fill_value=Tensor([1],"int32"), )
paddle.full(shape=Tensor([2],"int64"), fill_value=Tensor([1],"float32"), dtype=type(numpy.float32), )
paddle.full(shape=Tensor([2],"int64"), fill_value=Tensor([1],"int32"), dtype=type(numpy.int32), )
paddle.full(shape=Tensor([5],"int64"), fill_value=-2, )
paddle.slice(Tensor([1, 11, 32],"float64"), axes=list[1,], starts=list[Tensor([1],"int32"),], ends=list[Tensor([1],"int32"),], )
paddle.slice(Tensor([1000],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1001],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1002],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1004],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1005],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1008],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1009],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([100],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([101066],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1010],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1011],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1012],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1013],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1014],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1016],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([101946],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([101950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([101],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1020],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1022],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1024],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1026],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1028],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([102973],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1029],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([102],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1030],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1031],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1033],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1034],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1038],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1039],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([103],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([104156],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1041],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1042],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1044],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1046],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1047],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1048],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1049],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([104],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1050],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1052],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1053],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1054],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1056],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1057],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1059],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([105],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1060],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1061],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1062],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1063],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1064],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1065],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1066],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1068],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1069],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([106],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1073],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1075],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1078],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1079],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([107],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1081],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1082],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1084],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1085],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1086],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1087],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1089],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([108],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1091],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1093],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1094],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1095],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1097],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1099],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([109],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([10],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1100],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1101],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1102],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1103],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1104],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1105],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1106],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1107],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1109],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([110],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1110],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1112],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1113],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1116],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1117],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1118],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1119],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([111],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1121],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1122],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1123],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1128],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([112],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1134],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1135],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1136],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([113],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1140],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1143],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1144],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1146],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1148],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1149],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([114],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1150],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1153],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1154],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1156],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1158],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1159],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([115],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1161],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1162],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1163],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1165],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1166],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1167],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([116],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1170],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1171],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1177],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1178],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([117],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1180],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1182],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1183],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1184],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1185],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1187],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([118],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1190],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1191],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1196],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1199],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([119],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([11],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1201],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1202],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1204],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1206],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1207],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1209],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([120],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1210],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1211],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1212],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1215],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1218],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([121],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1221],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1222],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1223],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1224],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1225],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1226],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1227],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([122],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1234],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1235],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1236],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([123],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1240],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1241],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1242],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1243],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1247],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1248],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1250],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1251],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1255],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1256],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1257],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1258],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1259],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([125],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1260],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1262],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1263],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1264],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1265],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1266],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1267],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1268],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1269],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([126],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1270],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1273],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1279],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([127],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1280],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1281],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1282],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1283],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1284],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1285],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1286],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1287],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1289],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([128],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1292],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1293],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1294],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1295],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1296],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1297],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1299],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([12],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1300],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1301],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1302],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1308],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1309],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1310],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1313],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1314],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1315],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1317],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1319],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1320],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1321],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1323],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1325],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1328],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1329],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1332],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1333],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1334],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1336],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1345],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1349],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1350],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1351],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1354],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1357],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1358],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1359],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1360],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1361],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1362],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1364],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1366],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1367],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1368],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1371],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1372],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1373],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1375],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1376],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1377],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1378],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([137966],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1382],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1384],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1390],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1391],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1392],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1393],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1394],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1395],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1396],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1398],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1399],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([13],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1400],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1401],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1403],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1405],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1406],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1407],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1411],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1417],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1425],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1428],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1429],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1430],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1431],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1432],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1433],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1434],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1435],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1437],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1438],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1441],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1442],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1443],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1444],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1445],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1446],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1447],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1448],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1449],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1451],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1452],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1456],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1457],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1458],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1459],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1465],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1466],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1467],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1468],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1469],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1472],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1476],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1477],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1481],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1482],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1484],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1487],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1489],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1490],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1495],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([149661],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1497],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([149934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([14],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1500],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([150162],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1501],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([150254],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([150255],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([150265],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([150269],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1502],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([150308],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1503],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1504],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1505],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1507],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1509],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1511],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1515],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1518],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1521],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1522],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1523],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1524],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1529],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([153205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([153209],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([153286],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([153288],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([153313],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1534],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1535],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1538],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1542],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1544],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1545],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1547],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1548],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1549],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1551],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1556],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1557],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1559],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1562],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1567],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1570],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1575],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1578],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1581],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1582],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([158424],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([158439],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1584],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1585],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1586],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1588],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1589],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1590],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1591],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1593],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1594],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1596],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1597],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1598],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([15],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1602],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1603],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1604],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1616],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1617],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1620],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1621],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1622],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1623],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1624],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1626],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1629],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1630],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1631],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1634],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1635],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1636],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1638],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1639],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1641],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1642],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1643],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1647],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1652],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1654],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1655],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1656],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([165833],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1658],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1660],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([166167],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1661],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([166324],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([166386],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1663],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1664],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1665],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1666],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1669],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([167083],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1671],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([167248],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1672],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1674],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1676],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([167843],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1679],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1680],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168147],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168253],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1682],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168308],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168316],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168324],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168376],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168383],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1683],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168462],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168510],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168511],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168527],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168534],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168550],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168563],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168565],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168585],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168596],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168600],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168611],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168623],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168647],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168649],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168656],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168672],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([168686],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1686],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1687],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([169574],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([169584],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([169692],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1696],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([169762],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1698],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1699],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([16],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1701],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([170208],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([170297],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1702],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([170488],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([170712],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([170745],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([170748],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1709],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171010],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1710],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171119],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171187],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171188],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1711],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171245],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1712],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171363],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1714],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171533],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171677],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1716],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171726],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171728],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171729],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171732],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171736],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([171752],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1718],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1720],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1723],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1724],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1725],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1726],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1729],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1731],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1732],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1733],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1736],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1740],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1741],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1746],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1747],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1749],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1751],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1753],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1754],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1755],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1756],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1759],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([176111],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1761],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([176326],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([176338],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([176344],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([176348],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1763],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1766],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1770],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([177135],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1771],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1773],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1776],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1777],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1780],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1782],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([178355],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1783],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1785],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1786],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1787],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1788],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([179179],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1792],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([179362],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1794],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1796],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1797],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([17],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1801],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1802],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1805],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([180630],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1808],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1809],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([181252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1813],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([181441],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1815],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([181715],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1817],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([181807],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([181847],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([181897],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([181920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([181938],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([181939],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([181946],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182024],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182030],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182034],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182042],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1820],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182115],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182146],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182151],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182156],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182158],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182160],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182161],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182174],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182178],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182182],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182186],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182188],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182189],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1821],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182204],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182206],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182209],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182242],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182247],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182249],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182253],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182258],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182259],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182263],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([182276],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1823],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1828],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([183022],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1830],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([183121],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([183402],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([183536],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1835],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1836],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([183743],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([183870],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1839],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1841],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([184246],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([184356],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([184516],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([184532],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1845],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([184636],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1846],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1847],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([184944],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([185094],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([185156],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1851],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([185213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([185240],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([185354],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([185409],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([185440],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([185529],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([185534],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([185536],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([185549],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1856],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1859],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([186087],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1860],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([186157],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1861],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1863],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1865],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([186611],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1866],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1867],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1868],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([186974],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([187122],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([187145],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([187155],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([187426],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([187543],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([187555],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([187606],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([187630],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1876],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([187730],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1877],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([187879],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1878],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1879],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([188093],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1881],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1882],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1884],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1885],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1886],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1887],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([188866],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1888],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([188926],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1890],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1891],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1892],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([189362],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1893],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1894],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1895],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([189617],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1896],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1897],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([189842],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1898],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([189967],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1899],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([18],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190035],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1900],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190248],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190289],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190293],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1902],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1903],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190404],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1904],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1905],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190635],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190637],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190671],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190675],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1906],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190702],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1907],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1908],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190911],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([190946],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1909],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([191016],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([191081],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1910],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([191150],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([191153],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1911],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1912],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([191364],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1913],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([191404],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([191488],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1914],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1915],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1916],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1917],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([191868],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1918],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([191974],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1919],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([192175],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([192195],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1921],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1922],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1923],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([192438],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([192480],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1924],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1925],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([192661],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1926],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([192712],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([192721],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1927],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1928],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1929],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([193003],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([193006],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([193009],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1930],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1932],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1933],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([193432],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([193528],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1935],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1936],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([193706],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1937],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([193820],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1938],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1939],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([194033],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1940],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1941],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1942],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1943],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1944],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([194577],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1945],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([194661],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1946],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([194714],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1947],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([194804],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([194859],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1948],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1949],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195224],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1952],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1953],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195429],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195466],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1954],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195516],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195550],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195559],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1955],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195616],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195651],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195660],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1956],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195743],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195797],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1957],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1958],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195927],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195929],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195930],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195943],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195958],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195970],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([195992],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1959],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196006],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196007],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196009],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196011],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196033],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196045],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196059],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196086],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196090],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1960],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196101],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196116],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196127],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196131],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196155],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196160],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196165],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196166],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196167],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196169],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196170],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196171],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196172],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196174],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196181],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196183],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196184],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196186],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196192],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196195],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196197],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196199],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1961],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196200],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196202],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196204],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196208],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196210],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196234],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196237],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196238],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196253],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196264],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196265],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196266],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196267],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196268],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196270],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196271],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196272],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196274],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196277],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196278],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196284],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196287],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196293],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196294],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1962],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196303],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1963],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1964],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1965],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1966],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1967],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([196832],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1968],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1969],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1970],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1971],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1972],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1973],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([197432],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([197483],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1974],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1975],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1976],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([197789],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1977],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([197879],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1978],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1979],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198088],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1980],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198153],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198160],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1981],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198281],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1982],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198322],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198334],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1983],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198439],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1984],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1985],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1986],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198742],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198745],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1987],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198815],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198843],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198844],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1988],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198911],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198912],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198921],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([198976],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1989],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199016],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199032],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199064],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1990],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199104],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199133],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1991],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1992],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199307],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199313],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199315],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199324],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199330],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199372],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1993],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199433],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199444],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199496],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1994],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1995],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199613],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199629],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199664],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199669],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199671],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199681],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1996],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1997],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199856],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199861],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199881],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199891],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1998],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([199939],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([19],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([1],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([200062],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([200721],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([200768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201251],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201287],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201379],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201403],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201628],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201658],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201707],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201777],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201806],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201814],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201817],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201863],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201888],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([201941],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202054],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202066],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202074],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202091],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202100],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202102],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202154],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202190],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202237],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202316],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202329],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202387],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202388],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202513],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202559],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202722],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([202742],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([203052],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([203117],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([203150],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([203305],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([203473],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([203708],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([203775],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([203851],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([203971],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204075],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204091],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204115],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204129],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204136],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204141],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204327],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204347],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204352],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204358],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204363],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204397],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204459],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204585],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204614],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204701],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204714],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204764],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204786],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204792],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204866],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([204993],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205068],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205090],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205094],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205233],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205241],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205243],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205246],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205297],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205353],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205360],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205427],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205487],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205544],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205548],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205557],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205571],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205573],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205599],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205622],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205623],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205664],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205678],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205682],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205686],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205689],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205756],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205757],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205761],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205766],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205772],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205774],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205783],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205784],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205813],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([205859],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([206417],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([206426],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([206857],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([206860],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([206991],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([207154],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([207321],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([207350],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([207491],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([207856],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([207875],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([207876],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([207901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([207966],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([208058],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([208064],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([208207],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([208310],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([208348],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([208467],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([209964],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([20],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([210319],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([210406],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([210542],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([210644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([210808],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([210948],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([211359],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([212073],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([212078],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([212079],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([212232],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([212244],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([212367],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([212387],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([212548],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([212570],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([212578],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([212876],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([212965],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213072],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213236],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213268],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213429],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213431],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213441],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213535],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213565],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213604],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213648],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213653],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213704],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213732],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213737],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213847],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213855],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213861],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213906],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213957],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213972],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([213978],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214022],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214099],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214155],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214197],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214206],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214289],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214330],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214344],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214408],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214431],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214435],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214448],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214463],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214476],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214488],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214493],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214496],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214498],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214517],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214520],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214570],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214584],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214589],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214595],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214603],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214606],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214615],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214618],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214624],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214625],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214626],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214629],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214631],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214643],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214646],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214650],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214659],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214682],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214696],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214697],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214700],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214701],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214722],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214733],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214744],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214754],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214761],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214895],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214929],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214938],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214961],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([214977],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215008],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215151],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215227],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215236],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215267],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215357],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215372],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215373],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215460],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215473],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215500],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215508],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215527],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215529],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215575],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215628],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215631],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215681],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215687],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215694],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215713],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215725],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215764],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215806],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215807],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215891],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215933],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215968],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([215990],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216001],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216010],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216032],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216091],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216092],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216097],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216139],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216188],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216237],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216253],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216275],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216276],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216287],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216318],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216329],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216356],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216362],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216370],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216384],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216399],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216404],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216420],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216475],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216477],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216485],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216491],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216526],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216537],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216546],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216548],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216549],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216554],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216577],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216581],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216584],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216590],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216606],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216615],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216642],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216672],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216691],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216693],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216697],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216704],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216716],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216745],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216762],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216770],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216782],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216800],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216804],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216808],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216835],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216844],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216845],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216860],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216895],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216903],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216904],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216917],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216919],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216921],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216922],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216927],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216928],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216938],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216939],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216940],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216942],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216944],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216952],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216953],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216955],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216956],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216957],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216960],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216962],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216964],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216967],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216968],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216977],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216981],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216982],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216989],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216994],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([216998],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217001],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217006],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217007],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217011],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217012],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217019],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217020],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217033],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217034],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217036],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217039],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217041],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217044],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217048],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217051],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217053],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217073],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217083],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217086],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217097],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217102],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217109],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217113],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217119],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217127],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217146],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217147],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217150],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217152],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217153],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217154],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217155],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217157],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217159],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217160],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217161],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217162],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217163],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217164],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217166],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217167],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217168],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217169],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217171],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217175],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217177],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217178],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217179],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217180],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217181],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217183],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217184],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217185],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217189],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217190],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217191],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217192],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217196],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217197],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217200],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217201],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217203],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217204],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217207],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217208],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217209],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217211],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217215],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217216],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217217],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217226],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217228],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217229],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217235],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217251],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217255],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217261],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217262],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217264],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217265],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217266],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217269],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217271],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217272],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217273],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217274],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217275],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217276],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217277],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217278],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217279],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217280],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217281],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217282],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217283],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217285],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217290],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217294],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217298],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217303],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217304],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217317],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217329],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217364],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217375],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217446],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([217905],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([218193],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([218196],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([218557],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([218665],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([218736],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([218776],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([218799],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([218827],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([218930],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([218955],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219048],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219096],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219098],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219133],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219168],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219199],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219281],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219300],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219341],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219346],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219347],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219366],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219380],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219381],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219457],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219473],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219500],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219671],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219685],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219735],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219773],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219851],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219921],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219923],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219924],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219947],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219953],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219959],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([219989],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([21],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220017],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220032],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220088],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220155],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220168],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220180],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220197],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220223],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220227],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220257],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220264],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220285],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220291],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220298],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220303],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220309],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220320],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220370],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220406],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220408],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220431],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220442],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220470],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220474],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220477],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220496],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220497],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220507],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220509],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220512],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220522],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220567],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220582],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220589],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220591],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220598],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220606],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220613],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220616],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220623],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220625],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220629],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220635],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220639],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220641],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220654],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220656],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220663],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220664],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220676],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220680],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220683],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220697],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220699],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220729],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220739],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220753],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220778],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220793],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220795],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220809],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220810],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220814],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220817],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220819],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220820],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220824],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220827],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220828],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220838],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220840],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220852],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220856],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220857],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220864],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([220929],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221043],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221063],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221065],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221254],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221280],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221534],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221565],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221577],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221603],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221628],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221630],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221633],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221637],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221674],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221694],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221767],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221771],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221775],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221779],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221835],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221860],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([221862],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([222101],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([222133],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([222424],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([222521],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([222531],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([222580],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([222588],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([222598],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([222785],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([222792],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([222822],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([222824],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([222885],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([222988],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223004],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223020],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223061],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223072],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223093],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223258],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223268],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223324],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223352],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223357],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223358],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223373],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223379],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223413],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223432],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223459],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223471],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223492],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223533],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223539],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223583],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223596],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223614],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223621],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223704],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223715],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([223735],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([224349],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([224353],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([224819],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([224822],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([224825],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([224835],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([224880],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([224973],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([225354],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([225423],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([225514],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([225597],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([225600],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([225605],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([225726],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([225727],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([225888],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([225920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([225944],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([225998],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226090],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226116],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226142],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226178],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226267],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226319],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226365],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226422],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226449],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226461],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226508],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226542],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226652],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226664],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226673],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226680],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226684],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226687],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226697],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226709],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226728],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226752],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226794],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226821],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226836],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226848],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226853],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226872],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226899],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226925],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226943],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226977],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([226997],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227030],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227044],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227160],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227245],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227358],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227433],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227453],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227494],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227528],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227533],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227538],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227571],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227592],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227635],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227639],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227685],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227686],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227693],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227705],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227743],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227788],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227796],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227798],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227799],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227928],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([227995],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228024],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228025],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228080],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228109],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228267],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228289],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228297],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228327],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228355],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228371],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228376],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228382],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228389],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228419],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228462],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228518],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228550],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228568],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228569],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228582],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228634],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228698],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228715],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228736],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228756],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228776],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228846],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228864],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228866],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228868],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228877],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228889],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228904],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228905],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228907],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228914],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228930],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228937],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228939],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228989],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([228995],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229004],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229031],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229067],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229090],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229186],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229286],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229304],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229322],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229409],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229417],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229437],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229460],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229464],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229478],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229522],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229571],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229589],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229596],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229624],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229627],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229638],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229677],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229686],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229731],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229732],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229733],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229738],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229780],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229793],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229796],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229803],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229813],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229821],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229834],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229843],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229882],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229896],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229918],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229938],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229942],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([229960],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([22],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([230008],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([230045],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([230057],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([230086],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([230118],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([230795],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([231389],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([231697],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([231796],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([231951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([232007],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([232128],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([232143],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([232505],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([232644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([232748],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([232754],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([232814],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([232922],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([232961],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([232966],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233001],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233085],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233162],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233324],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233325],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233373],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233374],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233404],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233408],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233603],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233774],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233777],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233779],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([233933],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234009],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234042],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234108],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234111],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234117],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234125],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234132],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234206],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234235],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234288],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234311],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234371],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234373],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234453],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234465],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234550],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234551],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234560],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234596],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234612],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234616],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234651],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234774],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234778],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([234838],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235039],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235040],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235071],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235081],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235085],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235092],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235097],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235113],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235163],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235246],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235355],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235356],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235401],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235428],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235493],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235565],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235568],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235619],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235633],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235713],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235715],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235733],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235769],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235772],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235847],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235877],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235882],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235925],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235958],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235966],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([235969],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236020],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236061],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236063],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236134],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236144],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236145],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236164],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236177],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236238],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236248],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236295],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236310],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236320],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236337],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236364],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236381],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236454],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236460],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236461],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236483],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236491],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236501],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236534],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236791],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236835],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236933],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236975],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236979],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([236980],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([237001],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([237077],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([237120],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([237456],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([237562],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([237633],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([237651],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([238641],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([238820],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([238956],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([238965],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239036],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239037],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239094],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239096],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239098],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239160],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239210],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239236],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239327],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239566],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239582],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239627],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239677],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239705],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239710],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239744],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239786],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([239821],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([23],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240001],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240041],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240093],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240104],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240128],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240129],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240196],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240216],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240220],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240251],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240278],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240310],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240318],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240324],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240370],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240413],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240424],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240425],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240446],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240460],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240543],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240565],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240572],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240638],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240666],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240669],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240678],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240688],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240692],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240726],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240735],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240739],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240740],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240758],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240760],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240761],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240779],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240785],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240814],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240859],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240889],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240899],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240900],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240948],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240957],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240961],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240965],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([240994],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241002],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241007],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241008],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241028],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241030],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241104],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241107],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241110],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241123],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241128],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241167],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241182],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241219],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241221],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241237],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241238],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241240],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241254],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241260],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241297],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241298],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241303],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241304],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241344],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241354],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241364],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241373],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241386],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241388],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241390],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241400],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241414],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241423],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241438],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241467],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241471],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241478],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241500],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241517],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241518],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241526],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241527],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241528],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241541],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241562],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241588],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241589],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241603],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241604],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241611],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241621],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241630],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241636],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241637],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241653],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241656],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241669],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241682],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241690],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241706],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241711],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241734],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241740],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241769],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241771],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241787],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241790],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241815],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241820],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241839],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241846],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241858],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241877],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241909],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241932],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241967],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241971],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241980],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241983],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241989],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([241998],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242012],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242022],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242037],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242039],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242055],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242059],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242064],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242075],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242085],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242100],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242112],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242120],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242123],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242128],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242138],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242139],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242153],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242154],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242155],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242158],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242175],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242195],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242197],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242210],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242222],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242224],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242230],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242251],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242258],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242265],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242268],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242274],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242275],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242280],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242283],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242290],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242308],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242313],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242317],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242320],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242325],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242334],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242335],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242336],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242342],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242350],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242365],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242367],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242369],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242374],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242376],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242377],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242380],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242387],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242394],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242396],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242404],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242407],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242414],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242417],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242424],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242432],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242438],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242456],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242462],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242463],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242466],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242469],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242484],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242497],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242498],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242499],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242507],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242512],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242517],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242518],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242520],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242526],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242527],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242528],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242534],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242538],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242539],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242540],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242544],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242547],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242554],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242555],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242563],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242569],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242573],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242574],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242575],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242578],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242583],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242585],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242590],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242596],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242605],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242612],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242621],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242623],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242625],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242631],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242634],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242635],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242636],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242642],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242646],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242647],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242655],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242656],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242661],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242662],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242667],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242670],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242678],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242679],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242689],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242694],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242698],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242699],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242701],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242704],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242710],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242712],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242715],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242716],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242720],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242723],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242728],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242729],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242730],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242732],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242735],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242737],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242742],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242745],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242746],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242749],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242754],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242755],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242757],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242758],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242763],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242764],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242776],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242781],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242783],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242786],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242787],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242788],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242791],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242797],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242810],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242820],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242823],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242824],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242827],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242828],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242830],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242832],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242833],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242834],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242835],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242836],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242839],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242841],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242842],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242843],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242846],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242847],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242848],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242854],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242855],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242856],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242857],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242858],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242859],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242862],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242863],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242866],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242868],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242875],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242881],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242883],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242885],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242887],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242888],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242905],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242910],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242927],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242955],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242966],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([242983],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243042],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243050],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243074],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243136],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243159],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243225],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243232],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243242],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243266],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243308],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243312],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243320],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243325],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243334],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243339],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243345],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243388],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243404],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243412],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243454],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243456],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243499],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243505],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243695],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243697],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243723],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243800],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243803],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243817],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([243981],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244022],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244049],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244121],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244189],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244228],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244230],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244321],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244358],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244486],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244504],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244565],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244598],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244626],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244651],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244677],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244707],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244710],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244711],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244717],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244729],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244840],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244848],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244911],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244957],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([244969],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245010],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245042],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245069],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245109],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245133],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245140],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245141],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245162],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245165],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245180],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245200],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245203],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245210],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245230],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245232],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245233],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245273],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245281],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245307],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245324],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245331],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245339],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245340],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245362],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245370],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245378],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245388],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245389],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245392],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245405],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245413],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245416],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245421],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245442],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245514],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245516],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245523],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245602],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245624],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245659],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245670],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245675],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245806],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245939],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([245988],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246140],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246203],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246311],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246321],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246330],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246451],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246507],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246530],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246596],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246681],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246752],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246757],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246866],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246903],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([246994],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247074],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247203],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247229],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247295],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247296],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247434],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247585],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247594],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247607],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247772],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247821],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247851],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247855],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247871],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([247954],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248029],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248182],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248184],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248209],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248297],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248305],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248341],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248360],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248363],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248410],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248419],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248456],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248498],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248503],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248517],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248559],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248583],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248584],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248673],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248721],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248724],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248780],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248861],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248865],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248879],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248884],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248907],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([248987],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249037],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249076],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249163],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249256],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249263],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249279],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249314],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249333],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249338],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249412],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249487],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249511],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249573],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249598],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249654],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249695],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249700],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249701],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249711],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249804],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249859],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249913],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249924],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249932],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([249939],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([24],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250029],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250113],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250198],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250199],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250204],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250208],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250216],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250237],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250246],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250247],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250254],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250314],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250322],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250401],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250405],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250410],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250414],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250476],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250491],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250495],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250506],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250518],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250524],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250547],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250669],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250696],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([250780],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251072],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251162],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251318],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251424],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251456],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251483],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251590],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251593],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251597],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251673],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251687],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251699],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251734],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251747],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251818],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251861],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251877],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251943],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251944],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251955],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251977],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([251986],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252016],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252017],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252056],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252071],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252085],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252177],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252183],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252238],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252242],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252305],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252321],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252373],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252375],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252382],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252399],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252400],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252500],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252702],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252709],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([252776],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253033],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253068],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253070],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253108],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253165],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253219],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253241],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253248],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253272],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253308],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253318],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253321],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253330],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253387],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253409],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253429],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253458],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253463],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253475],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253507],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253513],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253549],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253556],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253566],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253575],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253580],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253605],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253674],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([253952],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([254000],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([254223],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([254279],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([254371],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([254372],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([254445],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([254790],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([254904],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([254991],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255035],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255079],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255084],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255143],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255153],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255167],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255283],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255301],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255359],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255404],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255427],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255428],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255487],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255496],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255522],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255534],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255536],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255551],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255571],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255574],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255611],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255628],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255635],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255638],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255680],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255681],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255783],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255836],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255874],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255924],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([255936],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256105],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256198],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256333],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256350],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256483],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256488],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256572],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256682],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256692],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256724],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256753],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256780],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256827],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256910],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256914],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256944],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([256983],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257025],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257037],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257040],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257066],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257078],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257122],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257153],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257223],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257226],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257234],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257253],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257276],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257294],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257304],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257313],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257316],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257319],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257321],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257337],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257338],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257353],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257393],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257396],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257397],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257418],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257419],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257422],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257465],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257471],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257474],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257490],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257507],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257527],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257536],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257538],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257544],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257557],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257578],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257592],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257615],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257625],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257638],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257649],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257654],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257684],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257693],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([257696],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([258290],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([258419],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([258611],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([258619],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([258689],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([258763],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([258829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([258963],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([258983],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([258995],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259047],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259070],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259085],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259203],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259291],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259293],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259370],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259377],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259381],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259401],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259403],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259409],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259416],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259436],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259469],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259478],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259485],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259538],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259550],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259596],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259599],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259611],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259626],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259633],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259635],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259637],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259693],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259796],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259804],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259841],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259867],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259869],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259876],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259877],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259882],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259891],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259896],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259919],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259937],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259949],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([259963],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([25],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260009],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260020],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260025],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260149],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260153],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260157],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260161],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260163],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260164],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260165],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260192],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260244],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260278],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260296],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260332],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260342],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260350],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260354],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260359],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260360],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260365],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260383],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260403],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260407],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260432],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260450],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260456],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260472],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260475],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260479],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260490],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260496],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260524],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260532],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260542],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260544],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260563],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260611],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260619],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260625],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260638],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260647],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260665],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260668],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260672],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260678],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260681],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260703],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260704],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260711],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260713],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260715],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260719],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260722],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260733],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260734],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260736],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260738],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260750],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260770],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260777],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260810],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260827],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260850],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260851],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260869],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260885],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260898],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260923],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260963],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([260993],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261000],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261046],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261049],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261055],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261073],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261097],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261111],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261115],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261117],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261144],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261155],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261156],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261168],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261212],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261218],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261227],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261235],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261236],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261247],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261303],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261318],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261335],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261337],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261339],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261359],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261363],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261377],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261383],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261396],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261398],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261402],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261414],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261424],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261427],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261434],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261437],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261439],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261443],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261451],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261472],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261476],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261491],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261498],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261511],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261513],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261514],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261530],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261533],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261548],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261550],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261554],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261558],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261559],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261568],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261605],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261618],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261622],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261629],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261648],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261649],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261650],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261653],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261673],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261689],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261692],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261697],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261700],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261707],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261711],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261715],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261731],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261738],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261740],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261744],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261762],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261813],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261818],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261824],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261828],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261831],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261861],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261867],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261870],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261875],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261902],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261909],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261912],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261935],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261952],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261974],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261982],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([261999],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([262004],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([262009],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([262011],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([262015],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([262080],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([262082],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([262085],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([262219],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([262265],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([262270],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([262287],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([262392],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([263265],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([263341],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([263777],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([263781],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264111],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264134],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264217],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264345],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264495],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264530],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264546],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264560],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264604],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264632],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264689],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264841],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([264867],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([265101],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([265128],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([265156],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([265157],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([265195],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([265473],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([265601],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([265691],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([265917],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([265985],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266081],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266164],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266167],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266529],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266533],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266561],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266601],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266657],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266682],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266688],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266697],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266704],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266719],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266723],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266775],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266780],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266781],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266786],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266803],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266818],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266821],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266827],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266880],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266898],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266906],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266909],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266924],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([266934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267006],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267022],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267060],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267104],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267108],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267110],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267163],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267183],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267204],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267265],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267274],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267307],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267311],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267318],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267476],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267492],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267525],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267559],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267580],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267596],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267600],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267618],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267623],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267641],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267642],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267647],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267655],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267673],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267685],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267719],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267750],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267755],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267758],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267765],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267773],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267783],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267790],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267813],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267836],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267846],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267856],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267863],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267865],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267880],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267910],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267945],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267964],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267965],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([267982],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268012],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268031],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268039],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268047],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268072],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268088],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268104],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268107],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268113],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268119],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268128],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268152],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268165],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268169],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268172],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268177],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268187],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268197],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268202],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268211],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268253],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268255],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268258],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268267],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268271],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268280],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268287],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268308],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268311],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268316],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268320],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268321],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268324],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268327],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268329],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268336],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268340],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268348],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268349],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268359],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268360],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268366],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268373],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268374],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268389],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268406],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268408],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268416],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268428],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268431],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268436],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268450],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268464],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268474],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268475],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268480],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268523],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268555],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268593],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268645],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268729],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268739],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268741],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268784],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268861],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268863],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268871],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268872],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268885],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268902],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268904],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268973],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268979],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268998],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([268999],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269010],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269016],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269025],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269033],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269050],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269054],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269070],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269081],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269099],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269130],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269143],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269154],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269167],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269172],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269187],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269209],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269212],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269218],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269220],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269247],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269274],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269280],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269287],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269301],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269303],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269310],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269311],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269314],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269329],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269338],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269349],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269375],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269381],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269383],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269387],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269392],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269409],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269420],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269422],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269424],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269429],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269432],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269433],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269442],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269449],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269503],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269541],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269562],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269598],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269694],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269706],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269707],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269714],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269718],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269728],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269742],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269757],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269780],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269867],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269879],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269891],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([269958],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([26],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([270009],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([270225],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([270325],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([270347],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([270358],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([270393],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([270577],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([270715],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([270837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([270879],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271083],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271096],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271115],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271187],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271191],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271256],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271322],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271480],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271481],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271483],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271592],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271604],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271609],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271671],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271682],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271754],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271802],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271804],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271806],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271818],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271869],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271874],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271938],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271943],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271955],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271959],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([271966],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([272354],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([272683],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([272684],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([273276],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([273280],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([273286],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([273289],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([273600],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([274030],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([274034],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([274054],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([274323],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([274463],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([274470],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([274539],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([274736],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([274790],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([274842],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([274894],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275035],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275040],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275055],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275057],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275130],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275141],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275289],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275292],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275304],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275317],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275373],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275374],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275485],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275486],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275496],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275506],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275532],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275538],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275578],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275595],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275633],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275634],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275640],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275657],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275660],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275684],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275690],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275726],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275741],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275751],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275759],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275766],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275809],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275850],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275853],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275873],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275921],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275971],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275973],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([275978],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276007],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276023],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276060],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276063],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276064],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276079],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276082],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276142],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276144],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276232],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276292],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276412],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276416],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276417],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276470],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276486],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276493],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276502],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276520],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276531],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276592],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276626],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276636],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276649],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276650],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276708],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276710],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276756],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276769],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276787],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276788],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276800],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276801],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276833],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276843],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276846],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276888],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276889],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276908],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276932],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276941],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276947],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276949],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276955],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([276993],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277010],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277015],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277021],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277028],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277033],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277043],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277062],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277066],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277080],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277087],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277094],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277096],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277099],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277107],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277119],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277159],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277160],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277171],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277192],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277193],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277195],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277206],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277237],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277291],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277292],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277293],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277301],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277309],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277312],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277319],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277325],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277328],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277331],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277340],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277349],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277379],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277401],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277402],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277405],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277414],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277423],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277436],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277440],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277452],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277524],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277554],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277582],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277584],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277593],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277620],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277651],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277652],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277713],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277725],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277733],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277745],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277747],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277778],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277782],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277832],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277834],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277835],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277859],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277868],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277869],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277881],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277886],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277907],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277923],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277928],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277986],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([277994],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278011],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278019],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278045],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278061],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278074],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278107],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278115],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278117],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278121],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278158],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278159],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278166],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278171],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278181],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278250],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278253],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278271],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278449],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278549],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278653],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278668],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278696],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278706],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278754],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278818],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278881],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278922],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([278962],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([279004],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([279129],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([279134],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([279146],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([27],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([280173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([280452],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([280453],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([280636],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([280915],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([280916],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([281384],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([281568],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([281682],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([281773],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([281830],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282087],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282129],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282202],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282203],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282235],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282293],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282338],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282417],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282449],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282747],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282764],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282798],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282913],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282916],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([282947],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283006],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283014],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283015],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283042],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283055],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283062],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283075],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283090],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283155],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283178],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283187],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283330],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283346],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283374],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283446],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283466],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283491],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283504],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283517],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283560],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283597],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283636],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283686],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283698],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283709],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283727],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283742],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283743],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283744],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283783],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283876],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283906],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283940],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([283976],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284045],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284053],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284133],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284147],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284161],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284184],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284211],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284212],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284306],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284318],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284325],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284360],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284372],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284397],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284400],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284476],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284593],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284619],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284620],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284622],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284633],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284643],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284645],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284647],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284651],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284695],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284703],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284708],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284723],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284727],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284744],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284745],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284763],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284776],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284795],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284813],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284833],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284838],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284856],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284873],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284881],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284902],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284923],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284924],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284938],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284957],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284962],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([284975],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285000],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285005],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285079],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285097],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285100],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285103],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285109],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285123],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285140],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285164],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285172],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285179],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285186],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285203],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285206],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285211],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285223],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285248],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285260],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285292],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285311],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285323],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285355],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285527],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285557],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285623],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285683],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285693],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285702],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285734],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285747],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285748],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285778],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285811],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285915],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285917],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285958],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285983],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([285996],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286006],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286031],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286072],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286074],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286075],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286076],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286082],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286092],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286100],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286125],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286134],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286140],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286143],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286157],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286170],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286193],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286203],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286222],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286224],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286230],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286251],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286255],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286257],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286259],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286265],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286276],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286277],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286309],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286311],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286326],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286333],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286363],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286495],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286523],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286560],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286693],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286745],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286787],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([286800],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([287321],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([287591],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([288298],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([288510],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([288769],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([288948],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289141],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289219],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289349],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289539],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289615],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289667],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289670],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289692],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289703],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289722],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289783],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289816],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289821],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289825],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289902],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289913],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([289989],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([28],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290054],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290062],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290064],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290219],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290244],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290251],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290266],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290385],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290471],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290487],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290490],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290495],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290545],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290668],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290680],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290696],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290748],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290752],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290815],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290819],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290824],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290859],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290906],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290910],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290912],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290927],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290940],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290948],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290963],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290965],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([290973],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291032],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291078],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291102],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291119],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291126],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291127],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291138],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291140],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291158],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291165],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291169],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291183],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291208],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291210],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291221],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291230],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291244],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291255],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291270],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291299],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291305],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291319],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291337],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291338],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291377],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291387],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291388],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291393],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291404],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291406],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291413],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291418],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291627],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291844],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([291999],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292039],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292167],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292283],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292325],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292407],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292411],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292420],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292440],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292452],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292462],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292574],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292580],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292581],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292598],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292630],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292662],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292680],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292685],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292687],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292700],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292718],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292732],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292805],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292814],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292828],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292836],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292841],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292854],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292863],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292971],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292981],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([292982],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293021],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293032],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293035],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293038],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293048],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293054],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293093],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293117],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293141],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293179],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293215],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293224],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293234],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293258],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293294],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293297],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293325],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293329],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293337],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293376],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293412],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293438],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293446],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293473],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293478],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293482],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293507],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293522],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293524],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293581],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293588],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293597],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293655],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293669],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293674],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293698],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293746],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293812],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293814],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293825],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293906],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([293959],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294021],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294056],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294068],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294075],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294104],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294127],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294129],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294136],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294150],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294184],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294189],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294203],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294217],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294235],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294238],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294239],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294249],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294267],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294269],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294272],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294273],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294284],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294293],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294295],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294303],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294304],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294315],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294319],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294325],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294338],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294339],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294348],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294350],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294366],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294372],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294373],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294380],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294412],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294432],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294437],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294443],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294447],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294465],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294490],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294492],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294503],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294571],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294607],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294622],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294685],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294720],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294787],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294843],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294861],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294906],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294907],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294913],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294930],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294953],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294967],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294983],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294986],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294993],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([294995],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295030],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295036],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295061],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295062],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295065],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295067],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295073],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295077],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295086],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295091],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295094],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295096],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295103],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295134],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295144],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295166],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295183],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295186],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295192],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295199],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295202],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295204],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295217],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295218],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295246],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295253],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295258],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295273],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295275],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295282],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295287],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295289],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295291],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295296],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295301],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295302],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295306],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295308],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295313],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295317],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295343],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295407],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295415],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295416],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295422],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295435],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295443],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295448],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295458],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295485],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295488],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295491],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295508],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295511],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295515],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([295520],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([296423],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([296453],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([296460],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([296553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([296699],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([296966],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([297134],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([297933],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298156],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298328],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298451],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298484],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298495],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298496],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298555],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298574],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298655],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298681],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298730],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298780],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298812],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298813],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298838],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([298925],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299046],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299063],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299072],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299076],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299095],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299114],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299133],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299151],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299163],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299164],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299188],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299200],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299208],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299355],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299380],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299551],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299578],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299675],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299929],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299933],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299941],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([299955],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([29],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([2],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300044],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300100],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300112],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300123],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300188],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300221],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300233],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300250],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300331],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300339],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300345],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300379],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300437],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300490],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300521],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300527],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300528],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300535],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300544],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300547],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300577],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300591],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300596],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300617],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300622],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300639],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300650],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300692],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300710],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300712],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300726],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300744],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300745],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300746],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300757],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300776],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300796],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300816],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300817],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300819],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300846],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300850],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300858],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300878],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300884],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300894],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300919],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300923],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300925],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300956],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300957],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300961],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300969],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300971],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300976],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([300984],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301008],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301049],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301055],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301071],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301092],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301098],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301099],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301100],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301106],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301108],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301113],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301115],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301116],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301118],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301128],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301137],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301145],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301151],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301156],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301157],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301163],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301170],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301171],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301178],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301187],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301206],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301234],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301258],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301269],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301270],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301272],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301297],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301301],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301329],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301335],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301346],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301364],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301507],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301556],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301582],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301604],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301606],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301680],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301683],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301687],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301701],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301812],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301836],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301851],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([301963],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302011],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302027],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302035],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302040],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302065],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302086],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302108],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302132],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302150],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302169],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302193],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302210],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302219],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302223],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302253],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302273],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302316],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302335],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302359],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302376],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302388],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302392],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302403],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302408],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302449],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302481],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302487],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302512],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302514],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302518],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302559],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302563],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302568],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302572],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302586],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302590],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302600],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302601],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302606],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302619],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302665],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302669],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302672],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302676],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302678],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302684],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302699],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302700],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302720],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302790],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302814],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302844],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302845],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302907],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302928],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302943],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302945],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302967],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([302974],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303004],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303025],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303063],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303072],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303075],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303085],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303140],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303141],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303143],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303145],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303197],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303227],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303240],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303303],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303308],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303310],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303350],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303365],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303381],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303428],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303447],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303448],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303461],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303484],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303492],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303495],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303528],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303530],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303555],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303563],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303569],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303597],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303606],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303639],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303652],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303663],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303665],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303674],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303694],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303706],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303722],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303731],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303734],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303794],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303799],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303803],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303846],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303871],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303904],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303905],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303911],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303916],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303929],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303935],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303944],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303947],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303948],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303949],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303965],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303973],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([303984],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304002],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304004],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304009],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304031],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304058],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304061],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304084],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304121],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304123],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304132],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304135],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304141],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304145],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304148],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304207],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304218],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304228],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304236],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304240],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304241],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304248],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([304452],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([305128],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([305164],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([305429],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([305539],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([305547],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([305578],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([305730],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([306013],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([306091],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([306093],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([306288],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([306413],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([306480],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([306484],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([306534],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([306560],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([306641],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([306644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([306659],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([306755],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([307106],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([307454],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([307822],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([307827],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([307840],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([307875],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([307901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([307953],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([307967],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([307971],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308000],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308031],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308077],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308136],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308257],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308317],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308342],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308344],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308490],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308493],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308499],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308525],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308699],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308819],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308852],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308853],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308886],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308896],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308927],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308962],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308969],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([308975],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309009],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309022],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309048],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309068],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309149],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309211],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309219],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309224],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309232],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309261],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309272],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309279],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309286],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309300],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309326],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309411],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309449],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309464],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309588],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309604],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309656],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309719],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309720],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309732],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309747],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309760],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309812],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309935],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309982],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309983],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([309986],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([30],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310013],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310017],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310025],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310029],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310041],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310054],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310131],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310142],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310154],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310190],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310230],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310238],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310245],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310249],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310263],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310294],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310302],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310313],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310321],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310324],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310336],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310340],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310346],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310356],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310387],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310403],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310425],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310436],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310439],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310448],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310465],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310469],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310487],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310489],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310495],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310497],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310522],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310538],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310554],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310562],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310564],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310565],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310596],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310616],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310617],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310624],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310626],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310639],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310643],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310645],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310656],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310664],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310667],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310672],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310675],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310682],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310688],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310694],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310696],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310697],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310705],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310709],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310721],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310727],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310728],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310732],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310735],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310743],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310760],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310769],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310775],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310781],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310789],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310795],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310811],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310821],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310823],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310832],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310835],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310838],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310841],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310842],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310849],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310850],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310852],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310860],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310871],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310892],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310897],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310903],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310945],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([310962],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311058],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311088],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311093],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311125],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311224],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311228],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311234],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311235],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311249],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311345],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311381],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311410],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311436],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311500],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311512],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311585],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311606],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311614],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311622],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311667],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311683],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311684],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311685],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311688],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311730],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311732],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311744],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311767],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311814],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311828],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311914],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311936],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311952],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311992],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([311997],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312017],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312077],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312143],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312168],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312182],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312208],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312241],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312243],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312259],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312267],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312275],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312302],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312306],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312310],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312325],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312361],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312397],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312404],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312430],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312436],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312440],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312441],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312500],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312517],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312542],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312546],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312561],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312566],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312569],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312571],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312588],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312599],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312606],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312626],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312629],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312631],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312647],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312665],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312671],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312673],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312676],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312685],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312697],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312709],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312731],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312753],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312761],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312769],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312772],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312775],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312788],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312811],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312815],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312826],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312859],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312873],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312884],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312894],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312899],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312942],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312955],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312966],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([312973],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([313019],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([313023],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([313045],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([313053],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([313067],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([313127],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([313171],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([313175],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([313216],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([313217],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([314015],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([314118],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([314166],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([314240],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([314345],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([314457],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([314543],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([314696],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([314893],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([315689],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([315789],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([315825],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([315870],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([316126],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([316155],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([316170],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([316198],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([316202],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([316206],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([316291],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([316324],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([316530],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([316807],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([316810],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([316951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([316971],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([317004],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([317061],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([317280],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([317281],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([317377],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([317523],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([317679],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([317700],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([317974],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([317996],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318034],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318039],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318088],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318089],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318099],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318216],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318217],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318430],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318454],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318531],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318540],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318554],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318572],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318624],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318654],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318683],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318762],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318773],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318800],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318809],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318922],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318937],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318977],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([318995],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319034],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319127],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319232],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319291],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319332],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319422],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319463],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319481],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319591],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319603],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319736],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319773],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319776],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319791],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319825],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319846],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319858],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319921],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319928],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319941],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([319959],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([31],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320027],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320038],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320044],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320050],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320055],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320087],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320120],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320126],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320139],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320146],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320162],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320170],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320172],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320192],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320195],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320224],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320249],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320266],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320273],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320274],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320281],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320303],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320306],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320316],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320326],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320339],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320355],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320358],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320360],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320372],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320389],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320396],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320422],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320440],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320442],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320447],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320456],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320457],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320460],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320462],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320464],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320474],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320480],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320494],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320499],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320510],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320512],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320526],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320546],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320574],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320580],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320583],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320585],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320590],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320594],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320611],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320615],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320632],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320655],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320672],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320687],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320694],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320695],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320699],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320711],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320713],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320721],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320724],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320725],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320746],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320761],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320764],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320776],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320796],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320797],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320804],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320806],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320809],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320832],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320833],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320848],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320860],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320886],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320908],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320911],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320923],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320928],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320932],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320937],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320944],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([320999],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321006],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321026],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321041],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321052],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321069],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321100],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321102],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321106],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321119],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321125],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321168],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321202],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321204],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321224],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321237],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321265],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321298],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321326],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321327],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321338],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321339],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321340],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321343],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321359],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321361],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321363],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321366],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321373],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321402],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321406],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321418],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321426],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321437],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321440],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321441],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321452],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321460],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321472],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321506],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321510],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321512],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321513],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321514],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321518],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321525],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321528],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321532],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321534],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321537],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321572],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321583],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321600],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321603],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321605],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321627],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321633],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321650],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321662],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321675],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321677],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321680],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321685],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321694],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321701],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321703],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321707],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321715],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321719],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321725],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321741],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321743],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321752],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321780],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321786],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321802],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321810],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321822],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321824],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321828],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321830],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321832],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321842],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321862],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321865],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321881],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321897],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321898],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321914],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321924],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321927],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321929],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321937],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321952],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321968],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321971],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([321983],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322015],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322017],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322025],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322033],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322039],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322043],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322067],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322069],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322071],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322074],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322080],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322089],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322107],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322128],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322145],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322158],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322178],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322190],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322240],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([322306],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([323078],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([323234],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([323235],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([323458],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([323479],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([323746],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324008],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324019],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324110],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324111],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324452],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324522],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324568],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324674],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324741],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324745],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324800],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324817],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324869],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324905],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324942],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324948],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324953],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([324992],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([325070],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([325154],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([325346],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([325588],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([325780],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326129],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326239],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326258],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326299],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326317],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326593],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326615],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326625],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326684],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326800],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326844],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326960],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326961],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326963],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([326969],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327005],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327011],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327043],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327072],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327141],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327147],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327337],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327525],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327531],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327536],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327669],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327745],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327830],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327939],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327940],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327963],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327994],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([327995],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328130],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328133],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328185],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328193],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328195],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328204],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328255],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328256],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328260],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328269],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328361],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328362],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328482],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328499],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328594],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328602],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328604],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328612],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328617],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328634],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328658],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328665],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328677],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328827],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328854],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328861],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328865],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([328995],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329066],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329072],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329108],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329137],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329148],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329151],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329166],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329282],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329288],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329355],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329357],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329362],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329381],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329404],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329414],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329415],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329459],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329463],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329473],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329499],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329525],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329527],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329563],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329574],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329587],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329589],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329595],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329599],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329607],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329632],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329653],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329656],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329662],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329664],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329674],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329704],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329705],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329723],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329732],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329733],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329745],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329819],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329830],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329831],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329843],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329867],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329881],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329902],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329906],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329910],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329922],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329928],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329935],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329943],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329956],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329958],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329967],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329974],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329976],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([329977],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([32],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330000],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330015],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330022],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330025],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330042],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330045],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330047],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330053],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330063],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330064],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330065],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330077],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330083],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330090],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330092],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330101],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330108],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330110],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330122],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330129],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330143],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330158],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330163],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330169],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330174],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330175],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330179],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330180],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330182],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330184],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330185],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330207],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330225],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330227],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330232],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330235],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330237],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330250],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330256],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330270],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330272],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330275],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330284],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330301],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330310],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330315],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330319],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330356],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330363],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330382],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330460],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330478],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330519],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330533],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330549],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330552],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330572],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330669],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330681],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330702],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330704],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330705],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330786],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330794],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330813],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330818],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330832],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330861],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330862],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330874],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330879],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330887],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330889],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330903],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330927],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330957],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330978],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([330996],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331021],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331062],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331064],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331103],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331107],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331112],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331117],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331122],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331135],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331136],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331142],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331168],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331171],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331188],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331261],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331318],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331393],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331398],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331425],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331446],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331453],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331515],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331640],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331787],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331850],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331902],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331905],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331923],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331965],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([331981],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332126],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332143],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332219],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332279],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332280],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332287],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332294],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332343],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332374],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332408],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332428],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332475],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332480],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332534],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332537],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332547],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332566],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332601],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332624],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332637],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332638],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332653],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332675],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332685],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332719],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332756],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332770],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332772],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332782],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332791],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332818],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332854],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332857],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332858],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332873],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332879],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332893],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([332902],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([334505],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([334744],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([334894],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([334977],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([334981],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335002],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335008],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335009],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335067],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335079],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335091],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335149],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335180],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335183],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335184],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335204],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335254],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335268],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335293],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335305],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335320],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335337],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335341],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335369],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335425],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335691],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335701],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([335874],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([336431],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([336566],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([336771],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([336821],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([336993],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337141],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337225],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337237],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337244],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337279],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337405],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337419],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337598],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337618],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337692],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337740],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337772],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337813],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337845],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337885],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337906],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337930],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337946],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([337951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338063],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338075],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338201],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338239],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338338],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338352],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338371],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338414],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338506],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338563],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338568],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338598],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338614],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338619],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338621],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338635],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338703],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338736],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338748],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338751],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338779],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338791],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338801],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338817],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338854],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338893],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338946],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338954],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338979],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338980],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([338984],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339016],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339019],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339062],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339131],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339169],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339196],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339217],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339232],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339251],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339302],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339307],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339308],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339314],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339321],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339331],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339410],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339418],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339420],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339453],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339457],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339489],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339492],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339504],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339505],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339533],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339551],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339574],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339600],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339605],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339638],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339668],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339680],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339689],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339696],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339698],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339706],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339711],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339713],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339716],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339717],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339719],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339720],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339747],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339750],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339752],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339755],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339757],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339758],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339780],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339784],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339793],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339794],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339822],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339823],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339824],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339827],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339828],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339830],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339831],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339833],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339835],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339850],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339852],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339857],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339862],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339869],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339872],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339876],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339879],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339881],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339886],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339887],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339897],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339912],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339919],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339925],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339926],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339928],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339932],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339938],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339940],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339943],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339945],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339946],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339949],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339954],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339956],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339963],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339972],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339977],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339987],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339992],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([339994],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([33],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340004],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340011],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340013],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340014],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340016],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340021],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340023],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340024],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340028],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340030],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340033],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340044],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340048],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340054],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340072],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340076],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340107],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340145],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340152],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340235],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340263],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340278],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340292],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340305],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340321],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340335],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340357],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340366],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340374],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340402],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340426],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340444],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340463],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340482],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340490],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340526],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340584],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340694],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340706],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340709],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([340722],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([341218],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([341246],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([341253],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([341349],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([341426],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([341456],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([341563],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([34170],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([341950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([341],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342038],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342065],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342108],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342114],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342132],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342138],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342187],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342193],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342211],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342232],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342233],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342290],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342325],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342400],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342419],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342471],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342486],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342651],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342880],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342984],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342988],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342994],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342996],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([342],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343038],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343055],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343083],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343084],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343132],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343147],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343178],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343181],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343185],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343190],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343201],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343206],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343207],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343215],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343217],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343235],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343243],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343277],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343281],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([34328],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343305],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343308],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343327],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343331],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343347],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343353],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343361],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343384],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343390],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343396],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343426],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343446],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343461],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343493],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343501],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343508],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343528],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343586],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343588],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343592],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343615],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343617],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343618],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343692],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([343899],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([34389],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([344208],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([344412],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([344567],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([344898],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([344900],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([344932],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([344944],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345221],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345251],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345344],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345363],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345389],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345402],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345453],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345504],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345564],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345614],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345655],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345663],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345705],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345737],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345787],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345856],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([345896],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([346273],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([346277],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([346459],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([346467],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([346493],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([346515],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([346521],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([346616],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([346760],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([346866],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([346871],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([346934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([346942],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([346950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347013],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347043],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347053],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347075],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347083],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347126],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347143],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347160],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347167],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347172],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347219],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347257],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347265],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347275],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347300],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347302],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347317],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347333],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347339],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347341],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347399],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347446],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347448],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([34744],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347466],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347517],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347532],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347538],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347552],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347564],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347566],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347573],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347577],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347636],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347641],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347663],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347668],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347670],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347673],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347687],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347712],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347713],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347725],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347752],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347767],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347825],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347857],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347915],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347927],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347938],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347944],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([347960],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348014],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348036],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348136],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348154],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348174],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348196],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348266],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348328],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348356],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348375],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348377],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348380],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348381],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348394],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348415],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348424],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348447],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348461],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348464],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348509],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348528],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348541],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348571],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348599],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348609],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348635],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348723],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348724],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348730],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348738],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348743],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348759],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348782],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348794],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348797],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348800],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348805],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348806],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348815],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348830],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348849],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348875],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348891],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348896],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348929],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348957],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348967],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348977],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348980],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348985],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348997],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([348],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349005],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349006],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349017],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349019],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349029],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349035],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349052],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349069],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349079],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349117],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349118],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349119],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349131],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349132],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349165],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349169],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349179],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349180],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349199],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349211],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349222],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349239],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349271],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349279],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349284],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349301],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349303],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349318],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349325],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349328],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349330],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349339],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349351],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349357],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349361],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349363],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349373],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349378],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349379],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349401],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349416],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349418],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349424],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349432],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349460],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349465],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349472],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349477],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349479],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349482],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349486],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349489],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349503],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349521],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349526],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349536],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349538],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349564],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349570],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349573],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349581],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349583],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349598],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349602],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349603],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349624],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349629],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349657],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349662],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349668],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349704],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349706],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349712],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349713],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349719],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([34971],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349720],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349733],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349758],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349772],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349820],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349857],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([349973],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([34],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([350053],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([35097],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([351127],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([35129],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([35137],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([35161],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([35191],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([351987],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([351992],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([352328],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([352406],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([35242],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([35245],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([35247],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([352486],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([35248],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([352589],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([35263],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([352650],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([352697],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([35273],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([352845],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([352],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([353022],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([353042],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([353214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([353635],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([353704],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([353706],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([353886],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([353951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([353988],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354027],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354041],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354084],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354107],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354126],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354210],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354221],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354241],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354245],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354253],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354256],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354266],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354323],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354355],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354462],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([354565],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355227],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355357],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355374],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355385],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355469],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355534],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355604],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355717],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355766],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355767],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355835],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355853],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355961],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355965],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355970],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355981],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([355996],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356045],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356111],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356142],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356145],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356153],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356239],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356256],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356266],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356291],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356320],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356339],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356348],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356362],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356370],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356383],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356442],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356506],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356561],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([356985],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([357055],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([357209],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([357231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([357240],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([357381],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([357383],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([357661],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([357664],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([357683],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([357885],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358030],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358184],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358198],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358203],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358204],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358263],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358302],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358309],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358319],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358342],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358386],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358467],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358482],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358489],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358491],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358505],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358548],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358550],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358594],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358638],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358643],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358647],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358709],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358711],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358714],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358737],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358753],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358763],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358780],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358799],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358806],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358813],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358815],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358816],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358834],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358857],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358944],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358946],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([358974],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([35904],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359072],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359107],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359130],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359136],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359146],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359148],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359153],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359184],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359187],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359202],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359207],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359220],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359238],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359249],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359262],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359268],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359275],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359278],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359283],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359285],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359297],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359302],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359333],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359337],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359340],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359357],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359362],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359366],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359367],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359375],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359377],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359380],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359421],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359424],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359456],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359462],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([359519],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([35],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([361],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([362077],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([362338],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([362350],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([362746],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([362894],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([362913],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([362915],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([363104],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([363172],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([363194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([363235],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([363351],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([363520],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([363647],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([363754],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([363788],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([363829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([363858],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([363873],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([363965],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364085],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364100],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364209],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364238],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364242],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364243],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364274],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364385],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364391],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364395],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364438],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364451],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364542],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364561],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364563],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364574],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364577],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364591],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364649],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364657],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364685],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364702],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364708],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364734],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364740],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364755],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364760],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364772],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364782],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364784],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364788],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364790],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364793],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364797],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364808],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364810],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364814],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364818],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364827],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364847],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364880],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364883],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364889],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364927],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364939],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364952],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364966],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364981],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([364997],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365009],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365022],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365032],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365046],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365052],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365068],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365080],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365109],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([36512],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365220],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365248],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365297],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365514],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365652],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365882],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([365934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366095],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366098],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366099],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366130],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366375],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366513],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366586],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366664],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([36666],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366683],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366696],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366700],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366721],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366727],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366772],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366940],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366947],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([366990],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367019],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367022],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367023],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367067],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367118],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367134],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367143],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367201],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367220],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([36722],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367236],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367249],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367277],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367282],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367321],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367364],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367389],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367429],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367535],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367537],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367538],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367545],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367585],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367586],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367611],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367690],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367693],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367714],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367739],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367770],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367773],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367776],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367863],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367874],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367933],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367959],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367981],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([367982],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368045],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368060],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368120],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368208],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368233],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368260],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368267],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368316],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368395],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368464],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368473],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368492],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368548],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368557],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368568],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368623],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368653],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368675],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368681],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368694],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368699],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368711],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368736],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368755],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368761],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368808],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368820],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368832],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368833],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368834],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368835],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368839],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368851],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368868],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368869],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368885],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368906],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368910],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368926],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368930],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368937],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368940],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368947],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368974],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([368999],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369036],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369042],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369049],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369058],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369059],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369064],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369076],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369079],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369103],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369115],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369138],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369158],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369159],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369162],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369167],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369179],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369191],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369198],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([369218],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([36],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([370712],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([37071],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([37072],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([37074],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([371193],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([371719],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([371939],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([371940],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([37196],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([37221],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([37222],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([372908],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([372987],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([373146],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([37316],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([373184],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([373441],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([373450],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([373788],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([373803],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([373815],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374236],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374245],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374322],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374619],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374622],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374637],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([37469],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374712],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374723],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374731],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374830],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374841],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374843],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374847],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374849],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374913],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([374934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375025],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375026],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375068],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375069],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375120],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375139],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375186],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375242],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375257],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375322],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375329],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375357],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375358],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375359],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375413],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375440],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375476],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375477],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375479],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375495],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375497],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375499],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375516],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375524],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375533],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375534],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375543],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375550],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375566],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375577],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375597],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375614],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375627],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375641],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375642],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375659],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375688],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375694],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375695],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375734],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375755],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([37577],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375824],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375844],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375851],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375892],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([375894],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376084],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376303],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376401],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376465],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376516],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376550],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376554],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376719],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376818],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376826],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376859],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376868],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376874],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376894],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376928],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376945],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([376968],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377093],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377107],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377155],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377239],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377290],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377292],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377294],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377303],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377360],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377382],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377617],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377635],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377685],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377686],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377702],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377868],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377909],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([377931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378081],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378090],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378112],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378119],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378138],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378148],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378187],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378240],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378243],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378275],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378276],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378288],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378313],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378386],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378394],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378396],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([37839],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378409],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([37840],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378717],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378845],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378859],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([378954],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([37],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([382399],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([382],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([38362],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([383752],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([383925],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([384210],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([384212],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([384529],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([38506],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385147],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385220],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385223],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([38536],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385470],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385475],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385492],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385504],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385509],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385519],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385527],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385547],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385654],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385694],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385835],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385964],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385985],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([385],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386039],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386061],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386069],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386090],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386092],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386097],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386105],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386137],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386138],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386152],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386168],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386186],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386187],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386209],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386210],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386225],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([38623],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386244],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386247],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386281],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386308],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386345],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386347],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386360],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386387],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386413],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386429],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386461],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386505],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386531],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386564],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386566],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([386664],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([387308],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([387380],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([387434],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([387457],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([38748],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([387526],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([387617],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([387624],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([38766],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([387706],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([387878],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([38792],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([38801],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([38804],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388080],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388084],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388237],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388307],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388364],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388404],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388433],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388437],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388467],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388472],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388496],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388546],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([388572],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([38904],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([38],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([39019],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([39082],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([394202],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([39424],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([394666],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([394736],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([39479],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([395032],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([395175],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([395214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([395964],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396286],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396434],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396437],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396443],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396445],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396479],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396481],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396762],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396765],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396766],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396789],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([39678],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396828],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396835],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396858],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396888],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396898],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396941],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([396951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397001],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397006],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397010],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397013],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397043],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397050],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397070],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397085],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397091],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397101],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397110],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397118],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397146],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397151],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397153],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397181],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397192],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397220],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397221],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397243],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397262],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397287],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397291],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397300],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397311],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397328],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397334],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397365],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397461],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397769],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([397888],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([398326],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([398329],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([39],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([3],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([4, 5, 6],"float32"), axes=list[0,1,2,], starts=Tensor([3],"int32"), ends=Tensor([3],"int32"), )
paddle.slice(Tensor([4, 5, 6],"float32"), axes=list[0,1,2,], starts=Tensor([3],"int64"), ends=Tensor([3],"int64"), )
paddle.slice(Tensor([40002],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([40109],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([40164],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([40226],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([40228],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([40231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([40251],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([40257],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([40397],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([404132],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([404133],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([40451],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([40539],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([405599],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([405649],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([40566],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([405708],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([405736],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([405751],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([405843],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([405984],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406008],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406076],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406078],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406083],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406084],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406108],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406250],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406257],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406302],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406314],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406429],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406438],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406449],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406511],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406516],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406563],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406587],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406684],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406722],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406739],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406754],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406796],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406806],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406817],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406825],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406841],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406870],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([406953],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407043],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407133],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407134],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407149],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407158],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407164],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407228],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407286],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407296],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407305],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407318],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407368],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407372],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407447],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407453],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407454],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407468],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407484],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407557],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407606],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407613],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407625],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407634],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407647],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407669],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407670],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407675],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407694],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407709],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407755],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407774],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407780],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407800],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407812],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407813],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407830],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407835],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407846],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407853],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407865],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407866],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407880],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407885],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407916],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407917],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407938],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407939],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407989],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([407993],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408001],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408021],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408024],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408025],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408031],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408033],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408037],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408039],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408041],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408045],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408046],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408064],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408072],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([408089],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([40827],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([40],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([41010],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([41186],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([41315],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([413],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([41498],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([41784],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([41785],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([41828],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([41862],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([41867],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([41900],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([41936],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([41],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42010],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42081],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42100],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42317],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42405],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42445],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42458],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42462],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42486],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42548],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42557],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42563],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42635],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42637],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42647],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42675],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42695],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42702],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42713],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42715],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42745],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42757],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([428591],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([428],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([429100],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([429129],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([429260],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([429261],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([429400],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([429460],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([429514],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([42],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43067],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43089],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43126],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43183],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43218],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43220],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43221],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43229],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43237],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43249],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43297],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([433],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43421],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43477],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43486],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43509],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43539],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43569],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43612],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43704],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43737],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([437957],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([437958],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([438164],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43862],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43863],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([439075],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([439399],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([439864],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([439938],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([439958],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([43],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44003],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44024],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44076],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44249],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44300],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44338],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44349],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44367],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44796],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44886],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44888],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44889],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44903],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44910],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44919],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44926],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([449348],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([449586],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([449587],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([449654],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([449901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([449],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([44],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([450058],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([450063],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45047],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([450651],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([450671],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([450779],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([450793],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([450862],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([450871],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([450913],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([450925],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([450980],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([451002],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45104],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45105],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45151],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([451],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45222],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45238],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45244],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45284],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45301],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45402],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45410],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45447],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45500],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45517],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45533],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45535],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45563],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45628],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45639],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45657],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45668],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45698],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45702],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45748],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45772],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45795],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45800],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45827],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45832],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45833],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45859],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45875],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([458],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45913],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45914],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45926],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45932],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45935],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45937],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45940],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45942],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45944],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45945],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45947],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45948],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45952],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45956],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45957],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45960],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45970],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45984],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45986],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45992],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45996],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([45],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46003],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46009],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46019],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46037],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46043],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46045],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46046],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46052],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46053],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46084],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([460],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46265],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46300],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46313],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46346],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46353],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46394],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46476],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46485],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([465],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46635],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46677],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46716],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46717],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46846],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46885],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([468],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46905],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46940],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46943],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46972],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([46],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47034],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47042],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47150],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47151],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47158],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47162],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47238],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47244],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([472],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47416],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47424],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47437],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47488],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([474],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47521],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47623],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47653],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47654],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47655],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47671],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47677],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47681],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47691],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47705],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([477],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47804],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47805],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47827],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47868],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([478],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47955],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47985],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([479],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([47],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48023],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48047],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48056],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48060],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([480],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48106],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48137],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48157],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48161],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48175],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48178],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48222],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48241],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48243],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48252],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([482],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48300],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48323],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48348],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48355],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48357],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48361],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48378],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48395],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([483],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48484],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48504],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48540],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48551],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48572],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48599],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([485],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48630],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48632],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48663],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([486],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48736],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48739],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48772],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48805],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48832],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48833],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48878],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48896],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([488],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48959],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48965],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([48],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49079],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49107],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49110],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49206],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49213],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49237],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49248],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49261],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49262],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49285],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([492],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49332],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49355],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49358],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49372],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49377],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49387],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49395],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49397],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49406],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49420],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49437],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49440],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49483],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49492],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49501],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49518],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49549],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49600],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49601],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49626],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49672],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49677],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49689],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49729],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49730],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49746],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49747],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49749],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49750],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49772],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49796],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49798],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49800],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49803],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49816],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49818],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49828],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49831],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49845],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49850],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49872],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49904],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49932],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49953],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49958],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49988],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49989],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([49],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([4],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([5, 3, 3],"float32"), list[1,2,], list[Tensor([],"int32"),Tensor([],"int32"),], list[Tensor([],"int32"),Tensor([],"int32"),], )
paddle.slice(Tensor([50014],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50047],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50058],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50075],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50077],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50084],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50090],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50101],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50102],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50106],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50111],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50112],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50114],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50118],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50147],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50165],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50180],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50187],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50188],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50189],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50193],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([501],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50223],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50241],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50244],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50246],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([502],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50300],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50382],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50444],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50466],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([504],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50536],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50572],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50607],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50622],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50631],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50633],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50646],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50657],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50664],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([506],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50773],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50784],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50786],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([507],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50800],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50810],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50826],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50834],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50839],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50861],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50904],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50929],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50939],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50963],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50970],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([50],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51012],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51083],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51103],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51104],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51122],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51150],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51174],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51220],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51221],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51274],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51278],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51289],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([512],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51309],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51310],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51338],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51339],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51345],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51394],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51488],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51493],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51517],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51530],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51532],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51598],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([515],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51604],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51631],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51655],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51699],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51710],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51718],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51720],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51729],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51749],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51752],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51795],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51817],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51819],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51823],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51828],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51831],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51880],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51891],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51921],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51960],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51961],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([51],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52064],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52095],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([520],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52122],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52138],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52139],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52189],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52195],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52198],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52269],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52295],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([522],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52326],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52343],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52355],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52432],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52503],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52524],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52531],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52614],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52632],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52695],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52704],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52749],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52759],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52764],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52787],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52805],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52838],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52844],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52876],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52927],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52928],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52937],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52963],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52974],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52987],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52997],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([52],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53002],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53014],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53016],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53039],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53041],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53108],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53125],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53140],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53153],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53174],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53175],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53248],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53264],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53268],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53281],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53370],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53390],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53424],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53474],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53494],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53522],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53523],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53531],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53532],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53533],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53539],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53588],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53592],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53596],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53627],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53645],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53646],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53667],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53669],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53696],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53712],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53714],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53790],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53794],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([537],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53842],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53866],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53879],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53883],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53885],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53899],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([538],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53913],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53915],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53925],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53928],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53977],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([53],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54025],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54046],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54071],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54077],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54085],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54086],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54088],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54091],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54092],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54218],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54240],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54267],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54271],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([542],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54310],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54322],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([543],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54401],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54404],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54425],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54439],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54496],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54501],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54509],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54519],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54534],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54555],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54559],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54583],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54584],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54585],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54672],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54679],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54695],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54701],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54765],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54766],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54810],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54914],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54919],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54932],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54968],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54994],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([54],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55006],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55064],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55078],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([550],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55150],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55164],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55188],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([551],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55218],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55220],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55237],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55289],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([552],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55301],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55310],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55380],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55396],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55406],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55425],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55446],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55448],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55458],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55465],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55481],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([554],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55522],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55554],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55558],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55604],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55616],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55621],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55629],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55630],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55640],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55641],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55645],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55652],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55660],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55662],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55670],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55681],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55686],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55708],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55721],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55749],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55750],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55752],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55757],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55762],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55788],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([557],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55839],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55842],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55849],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55867],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55871],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55903],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55914],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55921],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55925],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55970],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55989],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55990],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([559],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([55],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56000],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56003],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56023],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56041],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56067],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56073],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56098],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([560],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56102],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56111],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56116],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([561],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56201],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56206],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56274],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56289],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([562],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56339],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56344],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56364],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56416],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56436],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56437],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56439],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56449],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56483],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56488],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56496],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56596],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56614],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56635],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56637],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56639],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56699],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56706],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56709],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56723],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56730],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56744],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56797],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56817],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56851],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56877],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56903],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56963],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56979],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56994],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([56],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57012],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57037],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57050],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57059],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57150],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57178],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57179],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57221],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57227],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57255],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57257],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57273],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57292],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([572],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57304],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57305],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57345],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57347],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57363],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57367],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57369],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57423],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57459],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57472],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57493],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([574],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57530],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57566],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57581],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57603],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57613],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57615],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57667],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57709],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57755],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57756],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57757],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57760],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57777],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57802],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57838],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57860],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57899],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57906],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57917],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57945],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57947],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57970],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([57],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58017],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58064],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58146],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58147],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58177],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58207],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58257],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58267],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([582],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58300],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58321],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58391],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58443],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58463],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58468],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58482],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58502],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58551],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58586],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58607],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58627],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58674],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58688],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58728],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58738],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58748],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58750],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58789],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58811],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58825],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58830],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58861],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58862],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58876],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58893],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58989],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([589],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([58],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59017],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59021],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59073],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59075],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59099],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59102],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59186],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([591],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59201],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59202],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59232],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59233],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59297],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59368],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59373],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59386],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([593],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59400],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59463],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59467],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59481],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59501],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59569],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59570],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59577],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([595],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59606],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59678],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59683],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59751],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59785],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59795],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([597],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59803],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59808],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59822],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59832],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59841],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59890],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([598],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59903],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59919],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59949],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59976],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59991],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59999],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([59],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([5],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60007],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60014],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60019],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60033],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60056],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60063],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60085],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([600],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60129],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60147],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60172],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([601],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60255],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60270],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60284],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60341],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60409],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60441],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60444],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60450],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60460],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60462],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60479],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60483],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([604],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60517],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60518],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60544],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60582],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60613],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60624],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60625],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60639],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60754],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60757],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([607],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60942],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([60],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([610],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61110],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61166],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61168],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61183],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61184],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([611],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61230],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61251],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61266],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61278],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61283],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61293],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61294],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61295],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([613],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61410],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61479],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([614],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61573],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61598],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61639],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61646],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61652],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61676],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61677],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61699],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([616],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61700],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61739],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61752],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61785],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([617],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61841],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61843],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([618],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61908],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61910],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61919],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61942],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61996],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([61],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62015],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62037],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62077],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62090],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([620],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62117],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62141],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62147],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62151],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62173],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62194],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62225],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62231],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62273],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62295],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62298],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([623],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62450],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([624],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62503],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62508],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62527],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62584],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([625],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62602],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62628],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62629],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62633],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62644],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62668],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62734],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62740],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62762],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62783],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([627],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62867],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62868],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62873],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([628],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([62],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63023],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63032],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63048],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63054],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([630],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63105],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63122],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63184],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63192],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63220],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63267],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63344],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63365],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([633],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63433],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63461],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63471],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63674],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63675],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63676],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63689],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([636],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63739],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63799],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63871],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63895],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([638],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63913],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63932],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63941],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63952],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63958],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([639],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([63],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64060],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64079],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64095],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([640],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([641],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64260],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64263],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64286],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64307],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64366],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64390],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([643],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64641],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([646],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64739],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64748],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64766],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64791],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64792],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64798],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([647],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64845],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64859],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64889],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64902],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([649],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([64],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65040],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65100],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([651],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65204],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65219],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65260],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65279],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65301],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65305],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65368],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([653],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65411],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65416],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65478],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([654],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65507],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65525],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65551],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([655],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65622],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65650],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65709],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65736],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65758],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65762],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65820],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65824],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65842],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65853],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65854],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65877],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65880],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65883],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([658],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65992],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65993],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65997],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([659],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([65],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66029],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66037],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66096],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66097],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([660],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66133],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66157],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66180],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66208],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66233],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66275],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66282],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([662],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66317],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66320],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66326],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66378],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66416],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66461],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66463],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66482],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([664],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66514],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66569],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([665],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66603],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66614],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66622],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66653],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66655],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66666],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66683],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([666],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66703],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66737],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66739],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66763],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66776],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66790],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([667],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66857],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66868],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([668],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66940],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66990],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([669],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([66],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67004],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67010],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([670],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67165],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([671],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67206],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67283],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([672],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67348],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67399],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([673],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67520],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67521],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67561],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67574],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67577],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([675],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67603],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67614],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67636],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67637],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67674],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67684],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([676],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67719],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67741],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67753],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67759],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67772],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67773],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([677],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67811],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67824],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67837],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67875],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67876],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67891],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([678],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67909],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67913],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67941],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([67],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68004],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68024],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68026],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68091],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([680],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68148],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68163],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68164],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([681],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68288],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68290],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68295],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([683],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68400],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68469],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68535],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68537],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68619],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68648],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68743],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68750],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68774],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([687],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68849],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([688],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68924],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68949],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68991],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([689],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([68],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([691],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69218],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69233],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69247],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69263],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([692],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69328],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69377],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69378],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([693],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69456],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69464],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69499],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([694],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69528],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69529],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69579],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([695],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([696],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69754],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69775],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69792],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([697],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([698],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69999],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([699],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([69],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([6],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70070],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70119],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70127],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70130],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70145],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70212],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70283],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([702],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70304],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70310],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70353],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70387],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70412],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70414],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70424],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70458],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70535],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70536],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70561],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70575],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([705],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70696],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([706],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70718],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70753],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70793],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([707],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70857],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70898],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([708],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70977],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([70],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71011],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71034],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71042],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([710],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71182],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([711],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71214],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71251],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([712],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71337],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71352],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([713],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71404],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71448],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([714],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71539],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71553],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71564],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([715],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71643],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71675],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71680],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71684],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([716],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71710],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71727],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71794],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71795],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([717],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71879],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([718],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71946],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71956],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([71],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72147],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([722],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72305],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72306],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72310],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72329],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72353],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72367],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72406],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72410],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72477],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72496],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72498],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([724],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72529],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72552],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72592],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([725],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72611],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72668],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([726],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72778],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72794],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72802],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72803],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72843],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72880],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([728],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72993],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([72],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73015],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73052],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73077],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73087],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73095],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73160],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73272],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73273],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([732],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73310],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73390],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73491],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([734],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73554],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73587],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73595],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([735],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73604],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73607],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([736],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73720],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73721],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73770],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73773],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73826],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73887],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([738],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73943],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73961],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73962],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73969],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73985],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([73],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74024],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([740],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([741],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74205],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74226],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74253],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74269],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([742],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74406],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74432],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74451],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74474],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74480],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74501],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74509],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74571],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([746],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74730],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74744],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74761],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74781],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([747],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74809],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74862],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74892],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([748],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74904],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74926],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74971],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([749],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([74],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75083],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75084],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75159],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([751],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75242],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75273],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([752],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75383],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75397],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([753],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75423],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([754],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75574],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75583],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([755],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75646],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75652],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75656],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75685],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75710],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75730],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75802],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75883],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75988],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([75],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76008],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76009],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76034],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76073],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76083],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76098],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([760],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76136],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76144],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76233],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76234],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76250],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76253],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([762],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76320],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76323],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76324],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76398],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([763],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76415],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([764],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76520],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76589],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([765],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76608],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76649],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76692],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([766],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76724],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76890],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([768],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76904],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76970],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76998],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([769],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([76],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77065],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77095],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77098],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([770],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77191],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([771],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77282],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77304],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77307],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77361],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([773],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77458],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77494],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77564],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77565],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([775],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77602],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77617],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77652],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77674],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([776],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([777],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77890],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77894],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([778],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77989],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([779],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([77],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78013],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78025],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78026],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78028],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78043],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78090],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78115],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78148],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([781],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([782],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78309],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78311],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([783],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78488],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([784],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78552],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78707],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78708],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78759],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78761],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([787],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78863],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([788],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78983],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([78],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79062],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79157],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79165],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79179],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79277],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([792],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79334],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79335],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79337],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79368],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79394],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([793],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79467],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([794],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79504],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([795],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79624],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79679],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79760],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([799],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([79],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([7],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([80018],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([800],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([80124],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([80126],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([80180],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([801],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([80274],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([80317],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([803],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([80462],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([80495],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([804],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([80578],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([805],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([80684],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([806],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([807],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([808],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([809],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([80],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([81033],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([81040],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([810],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([812],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([81394],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([81400],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([81465],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([81490],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([81530],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([81576],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([81599],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([815],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([81708],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([81782],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([817],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([81986],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([819],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([81],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([82006],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([82126],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([821],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([822],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([82356],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([823],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([82493],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([824],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([82728],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([82741],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([828],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([829],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([82],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([83000],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([833],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([83455],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([834],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([83504],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([83613],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([836],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([83816],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([83870],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([83877],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([83],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([84262],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([84274],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([84280],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([842],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([843],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([84415],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([84491],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([844],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([84691],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([84997],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([84],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([85092],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([850],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([85147],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([85261],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([852],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([85323],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([85405],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([85473],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([854],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([855],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([857],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([85],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([86090],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([86120],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([86123],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([861],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([862],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([86521],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([865],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([868],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([869],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([86],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([871],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([87264],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([87299],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([87300],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([873],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([87524],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([875],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([876],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([878],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([87980],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([879],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([87],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([88095],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([880],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([88176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([881],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([88241],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([882],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([883],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([884],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([885],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([88629],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([886],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([88784],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([887],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([888],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([889],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([88],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([890],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([891],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([89208],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([892],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([89369],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([893],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([894],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([895],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([896],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([897],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([89843],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([89886],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([898],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([89985],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([899],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([89],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([8],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([90043],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([900],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([901],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([902],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([903],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([904],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([905],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([906],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([907],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([908],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([909],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([90],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([910],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([911],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([912],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([913],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([914],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([915],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([916],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([91744],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([917],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([918],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([91971],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([919],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([91],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([920],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([921],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([922],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([923],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([92426],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([924],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([92565],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([925],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([92612],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([926],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([927],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([928],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([929],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([92],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([930],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([931],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([93243],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([932],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([933],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([934],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([935],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([936],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([937],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([93882],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([938],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([939],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([93],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([94062],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([940],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([94176],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([941],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([942],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([943],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([944],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([945],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([946],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([947],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([948],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([949],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([94],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([950],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([951],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([952],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([953],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([954],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([955],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([956],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([957],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([958],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([959],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([95],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([960],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([961],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([962],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([963],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([964],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([965],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([966],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([967],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([968],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([969],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([96],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([970],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([971],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([972],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([973],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([974],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([975],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([976],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([977],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([978],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([979],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([97],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([980],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([981],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([982],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([983],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([984],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([985],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([986],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([987],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([988],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([989],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([98],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([990],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([991],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([992],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([993],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([994],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([995],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([996],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([997],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([998],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([999],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([99],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.slice(Tensor([9],"int32"), axes=list[0,], starts=list[0,], ends=list[Tensor([],"int64"),], )
paddle.zeros(Tensor([1],"int64"), )
paddle.zeros(Tensor([2],"int32"), dtype=Dtype(float32), )
paddle.zeros(Tensor([2],"int32"), dtype=Dtype(int64), )
paddle.zeros(Tensor([2],"int64"), )
paddle.zeros(Tensor([],"int64"), dtype=VarType(float32), )
paddle.zeros(list[Tensor([1],"int64"),], dtype="int64", )
paddle.zeros(list[Tensor([],"int32"),Tensor([],"int32"),Tensor([],"int32"),], )
paddle.zeros(shape=Tensor([0],"int32"), )
paddle.zeros(shape=Tensor([1],"int32"), )
paddle.zeros(shape=Tensor([1],"int32"), dtype=type(numpy.int64), )
paddle.zeros(shape=Tensor([2],"int32"), )
paddle.zeros(shape=Tensor([2],"int32"), dtype="int32", )
paddle.zeros(shape=Tensor([],"int64"), dtype="int32", )
paddle.zeros(tuple(Tensor([],"int64"),1,), dtype="float32", )
paddle.zeros(tuple(Tensor([],"int64"),2,), dtype="float32", )
