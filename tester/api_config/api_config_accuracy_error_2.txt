paddle.Tensor.__matmul__(Tensor([1, 1, 65536, 1024],"float32"), Tensor([1, 1, 1024, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 65536, 32],"float32"), Tensor([1, 1, 32, 1024],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 1, 65536, 1024],"float32"), Tensor([2, 1, 1024, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 1, 65536, 64],"float32"), Tensor([2, 1, 64, 1024],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 1, 65536, 1024],"float32"), Tensor([4, 1, 1024, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 1, 65536, 32],"float32"), Tensor([4, 1, 32, 1024],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 2, 16384, 1024],"float32"), Tensor([4, 2, 1024, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 2, 16384, 32],"float32"), Tensor([4, 2, 32, 1024],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 304, 36, 306],"float16"), Tensor([306, 306],"float16"), )
paddle.Tensor.__matmul__(Tensor([4, 346, 36, 306],"float16"), Tensor([306, 306],"float16"), )
paddle.Tensor.__matmul__(Tensor([4, 377, 36, 306],"float16"), Tensor([306, 306],"float16"), )
paddle.Tensor.__matmul__(Tensor([4, 396, 36, 306],"float16"), Tensor([306, 306],"float16"), )
paddle.Tensor.__matmul__(Tensor([5, 1, 1024],"float32"), Tensor([1024, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 1, 768],"float32"), Tensor([768, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 3, 1024],"float32"), Tensor([1024, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 3, 1280],"float32"), Tensor([1280, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 3, 768],"float32"), Tensor([768, 51865],"float32"), )
paddle.Tensor.__truediv__(Tensor([4, 256, 256, 2],"float16"), Tensor([1, 1, 1, 2],"float16"), )
paddle.incubate.nn.functional.fused_bias_dropout_residual_layer_norm(Tensor([8, 128, 1024],"float32"), Tensor([8, 128, 1024],"float32"), None, Tensor([1024],"float32"), Tensor([1024],"float32"), 0.0, 1e-05, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 16, 1024],"float16"), Tensor([1024, 512],"float16"), Tensor([512],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 2048],"float16"), Tensor([2048, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 512],"float16"), Tensor([512, 2048],"float16"), Tensor([2048],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 784, 256],"float16"), Tensor([256, 1024],"float16"), Tensor([1024],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([16, 1024, 1024],"float16"), Tensor([1024, 512],"float16"), Tensor([512],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([2048, 49, 256],"float16"), Tensor([256, 256],"float16"), Tensor([256],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([512, 49, 512],"float16"), Tensor([512, 1536],"float16"), Tensor([1536],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([512, 49, 512],"float16"), Tensor([512, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([4, 128],"float64"), Tensor([128],"float64"), False, False, "gelu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 4],"float64"), Tensor([4, 128],"float64"), Tensor([128],"float64"), False, False, "relu", )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([1, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([1, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([100, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([100, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([104, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([104, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([123, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([123, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([131, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([131, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([136, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([136, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([145, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([145, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([154, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([154, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([167, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([167, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([172, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([172, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([181, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([181, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([2, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([2, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([2, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([203, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([203, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([221, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([221, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([31, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([31, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([464, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([464, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([58, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([58, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([60, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([64, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([64, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([67, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([68, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([68, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([71, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([71, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([74, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([74, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([76, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([76, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([77, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([77, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([78, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([78, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([78, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([78, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([81, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([81, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([87, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([87, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([88, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([88, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([89, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([89, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([90, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([90, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([91, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([91, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([92, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([92, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([97, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([97, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([98, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([98, 64],"float16"), )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 128, 768],"float16"), Tensor([768, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([3072],"float16"), Tensor([768],"float16"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, quant_scale=0.15, quant_round_type=1, quant_max_bound=127, quant_min_bound=-127, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 1, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([68, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([76, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([78, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([90, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([91, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([98, 64],"float16"), Tensor([64],"float32"), Tensor([64],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([32, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([64, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
paddle.incubate.nn.functional.fused_feedforward(Tensor([96, 128, 768],"float32"), Tensor([768, 3072],"float32"), Tensor([3072, 768],"float32"), Tensor([3072],"float32"), Tensor([768],"float32"), None, None, Tensor([768],"float32"), Tensor([768],"float32"), dropout1_rate=0.0, dropout2_rate=0.1, activation="gelu", ln1_epsilon=1e-05, ln2_epsilon=1e-05, pre_layer_norm=False, training=True, ring_id=-1, name=None, )
