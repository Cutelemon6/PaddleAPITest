paddle.max(Tensor([10, 10, 9, 9],"float64"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.max(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.max(Tensor([2, 3],"float32"), axis=Tensor([],"int64"), )
paddle.max(x=Tensor([2, 3],"float32"), axis=Tensor([1],"int64"), )
paddle.mean(Tensor([1, 4],"float32"), axis=Tensor([],"int64"), )
paddle.mean(x=Tensor([2, 1, 3],"float64"), axis=Tensor([2],"int64"), )
paddle.min(Tensor([10, 10, 9, 9],"float64"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.min(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.min(x=Tensor([2, 3],"float32"), axis=Tensor([1],"int32"), )
paddle.prod(Tensor([10, 10, 9, 9],"float64"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.prod(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.prod(Tensor([2, 2],"float64"), axis=Tensor([1],"int64"), )
paddle.prod(x=Tensor([2, 2],"float64"), axis=Tensor([1],"int64"), )
paddle.sum(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.sum(Tensor([2, 2],"float64"), axis=Tensor([2],"int64"), )
paddle.sum(x=Tensor([2, 2],"float64"), axis=Tensor([1],"int64"), )
paddle.split(Tensor([3, 8, 5],"float64"), num_or_sections=2, axis=Tensor([1],"int64"), )
paddle.split(Tensor([4, 6, 6],"int32"), num_or_sections=list[-1,], axis=Tensor([1],"int32"), )
paddle.split(Tensor([4, 6, 6],"int32"), num_or_sections=list[2,2,2,], axis=Tensor([1],"int32"), )
paddle.split(x=Tensor([2, 3],"int32"), num_or_sections=3, axis=Tensor([1],"int32"), )
paddle.square(Tensor([0, 0, 0],"float32"), )
paddle.square(Tensor([0],"float32"), )
paddle.squeeze(Tensor([],"float32"), axis=Tensor([1],"int32"), )
paddle.squeeze(Tensor([1, 2, 1, 3],"float32"), axis=Tensor([2],"int64"), )
paddle.squeeze(Tensor([5, 1, 10],"float32"), Tensor([],"int64"), )
paddle.squeeze(x=Tensor([1, 2, 1, 3],"float64"), axis=Tensor([2],"int64"), )
paddle.stack(list[Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),], axis=-1, )
paddle.unsqueeze(Tensor([],"float32"), axis=Tensor([],"int32"), )
paddle.unsqueeze(Tensor([5, 10],"float32"), Tensor([2],"int64"), )
paddle.unsqueeze(x=Tensor([2, 3],"float64"), axis=Tensor([3],"int64"), )
paddle.isfinite(Tensor([11, 17],"complex64"), )
paddle.isfinite(Tensor([2, 3, 4, 5],"complex128"), )
paddle.isinf(Tensor([11, 17],"complex64"), )
paddle.isinf(Tensor([2, 3, 4, 5],"complex128"), )
paddle.isnan(Tensor([11, 17],"complex64"), )
paddle.isnan(Tensor([2, 3, 4, 5],"complex128"), )
paddle.log(x=Tensor([2, 2],"int32"), )
paddle.logaddexp(Tensor([10, 200, 300],"int32"), Tensor([10, 200, 300],"int32"), )
paddle.logaddexp(Tensor([10, 200, 300],"int64"), Tensor([10, 200, 300],"int64"), )
paddle.logspace(Tensor([],"float32"), Tensor([],"float32"), Tensor([],"int32"), Tensor([],"float32"), )
paddle.logspace(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"int32"), Tensor([1],"float32"), dtype="float32", )
paddle.linalg.cholesky(Tensor([2, 2],"float32"), )
paddle.linalg.cholesky(Tensor([2, 2],"float64"), )
paddle.linalg.cholesky(Tensor([3, 3],"float64"), )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=None, aweights=Tensor([10],"int32"), )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int64"), aweights=Tensor([10],"float64"), )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=None, aweights=Tensor([10],"int32"), )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int64"), aweights=Tensor([10],"float64"), )
paddle.linalg.eigh(Tensor([0, 0],"float32"), )
paddle.linalg.eigh(Tensor([0, 5, 5],"float32"), )
paddle.linalg.lstsq(Tensor([2, 3, 10],"float32"), Tensor([2, 3, 4],"float32"), rcond=1e-15, driver="gelss", )
paddle.linalg.lstsq(Tensor([200, 100],"float64"), Tensor([200, 50],"float64"), rcond=1e-15, driver="gelsd", )
paddle.linalg.lstsq(Tensor([3, 2],"float64"), Tensor([3, 3],"float64"), rcond=1e-07, driver="gelsd", )
paddle.linalg.lstsq(Tensor([5, 4],"float64"), Tensor([5, 3],"float64"), rcond=1e-15, driver="gelsd", )
paddle.linalg.lstsq(Tensor([5, 5],"float64"), Tensor([5, 1],"float64"), rcond=None, driver="gelss", )
paddle.linalg.lstsq(Tensor([50, 600],"float64"), Tensor([50, 300],"float64"), rcond=1e-15, driver="gelss", )
paddle.linalg.lstsq(Tensor([8, 2],"float32"), Tensor([8, 10],"float32"), rcond=1e-15, driver="gelsy", )
