paddle.nn.functional.gaussian_nll_loss(Tensor([715827883, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2, 1],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 143165577, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2, 1],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 214748365],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2, 1],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([715827883, 2, 3],"float32"), Tensor([10, 2, 1],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 143165577, 3],"float32"), Tensor([10, 2, 1],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 214748365],"float32"), Tensor([10, 2, 1],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([2147483648, 2, 1],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 429496730, 1],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2, 214748365],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([715827883, 2, 3],"float32"), Tensor([715827883, 2, 3],"float32"), Tensor([715827883, 2, 1],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 143165577, 3],"float32"), Tensor([10, 143165577, 3],"float32"), Tensor([10, 143165577, 1],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 214748365],"float32"), Tensor([10, 2, 214748365],"float32"), Tensor([10, 2, 214748365],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([715827883, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2, 1],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 143165577, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2, 1],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 214748365],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2, 1],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([715827883, 2, 3],"float32"), Tensor([10, 2, 1],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 143165577, 3],"float32"), Tensor([10, 2, 1],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 214748365],"float32"), Tensor([10, 2, 1],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([2147483648, 2, 1],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 429496730, 1],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2, 214748365],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([715827883, 2, 3],"float32"), Tensor([715827883, 2, 3],"float32"), Tensor([715827883, 2, 1],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 143165577, 3],"float32"), Tensor([10, 143165577, 3],"float32"), Tensor([10, 143165577, 1],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 214748365],"float32"), Tensor([10, 2, 214748365],"float32"), Tensor([10, 2, 214748365],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([715827883, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 143165577, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 214748365],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([715827883, 2, 3],"float32"), Tensor([10, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 143165577, 3],"float32"), Tensor([10, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 214748365],"float32"), Tensor([10, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([2147483648, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 429496730],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([715827883, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 143165577, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 214748365],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([715827883, 2, 3],"float32"), Tensor([10, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 143165577, 3],"float32"), Tensor([10, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 214748365],"float32"), Tensor([10, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([2147483648, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 3],"float32"), Tensor([10, 2, 3],"float32"), Tensor([10, 429496730],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), full=True, reduction="mean", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), full=True, reduction="mean", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), full=True, reduction="mean", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), full=True, reduction="mean", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), full=True, reduction="mean", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), full=True, reduction="mean", )
paddle.nn.functional.gaussian_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), full=True, reduction="mean", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), full=True, reduction="mean", )
paddle.nn.functional.gaussian_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), full=True, reduction="sum", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), full=True, reduction="sum", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), full=True, reduction="sum", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), full=True, reduction="sum", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), full=True, reduction="sum", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), full=True, reduction="sum", )
paddle.nn.functional.gaussian_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), full=True, reduction="sum", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), full=True, reduction="sum", )
paddle.nn.functional.gaussian_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), True, 1e-06, "mean", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), True, 1e-06, "mean", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), True, 1e-06, "mean", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), True, 1e-06, "mean", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), True, 1e-06, "mean", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), True, 1e-06, "mean", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), True, 1e-06, "mean", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), True, 1e-06, "mean", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), True, 1e-06, "sum", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), True, 1e-06, "sum", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), Tensor([10, 2],"float32"), True, 1e-06, "sum", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), Tensor([10, 2],"float32"), True, 1e-06, "sum", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([2147483648, 2],"float32"), True, 1e-06, "sum", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float32"), Tensor([10, 2],"float32"), Tensor([10, 429496730],"float32"), True, 1e-06, "sum", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), True, 1e-06, "sum", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), True, 1e-06, "sum", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([1073741825, 2],"float64"), Tensor([10, 2],"float64"), Tensor([10, 2],"float64"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 214748365],"float64"), Tensor([10, 2],"float64"), Tensor([10, 2],"float64"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float64"), Tensor([1073741825, 2],"float64"), Tensor([10, 2],"float64"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 2],"float64"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float64"), Tensor([10, 2],"float64"), Tensor([1073741825, 2],"float64"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float64"), Tensor([10, 2],"float64"), Tensor([10, 214748365],"float64"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), False, 1e-06, "none", None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([1073741825, 2],"float64"), Tensor([10, 2],"float64"), Tensor([10, 2],"float64"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 214748365],"float64"), Tensor([10, 2],"float64"), Tensor([10, 2],"float64"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float64"), Tensor([1073741825, 2],"float64"), Tensor([10, 2],"float64"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 2],"float64"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float64"), Tensor([10, 2],"float64"), Tensor([1073741825, 2],"float64"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2],"float64"), Tensor([10, 2],"float64"), Tensor([10, 214748365],"float64"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), full=False, reduction="none", )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), Tensor([10, 214748365],"float64"), full=False, reduction="none", )
paddle.argmax(Tensor([429496730, 10],"float32"), axis=-1, keepdim=True, dtype="int32", )
paddle.argmax(Tensor([10, 429496730],"float32"), axis=-1, keepdim=True, dtype="int32", )
paddle.argmin(Tensor([429496730, 10],"float32"), axis=-1, keepdim=True, dtype="int32", )
paddle.argmin(Tensor([10, 429496730],"float32"), axis=-1, keepdim=True, dtype="int32", )
paddle.as_strided(Tensor([1431655765, 3],"float32"), list[15,3,], list[2,], 0, )
paddle.as_strided(Tensor([15, 286331153],"float32"), list[15,3,], list[2,], 0, )
paddle.as_strided(Tensor([1431655765, 3],"float32"), list[15,3,], list[3,1,], 0, )
paddle.as_strided(Tensor([15, 286331153],"float32"), list[15,3,], list[3,1,], 0, )
paddle.as_strided(Tensor([1431655765, 3],"float32"), list[20,], list[1,], 0, )
paddle.as_strided(Tensor([15, 286331153],"float32"), list[20,], list[1,], 0, )
paddle.as_strided(Tensor([1431655765, 3],"float32"), list[20,], list[2,], 0, )
paddle.as_strided(Tensor([15, 286331153],"float32"), list[20,], list[2,], 0, )
paddle.as_strided(Tensor([178956971, 4, 6],"float32"), list[8,6,], list[6,1,], )
paddle.as_strided(Tensor([2, 357913942, 6],"float32"), list[8,6,], list[6,1,], )
paddle.as_strided(Tensor([2, 4, 536870912],"float32"), list[8,6,], list[6,1,], )
paddle.as_strided(Tensor([134217728, 32],"float16"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 134217728],"float16"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([134217728, 32],"float16"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 134217728],"float16"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([134217728, 32],"float32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 134217728],"float32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([134217728, 32],"float32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 134217728],"float32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([67108865, 32],"float64"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 67108865],"float64"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([67108865, 32],"float64"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 67108865],"float64"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([134217728, 32],"int32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 134217728],"int32"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([134217728, 32],"int32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 134217728],"int32"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([67108865, 32],"int64"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([32, 67108865],"int64"), shape=tuple(3,), stride=tuple(1,), )
paddle.as_strided(Tensor([67108865, 32],"int64"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([32, 67108865],"int64"), shape=tuple(3,4,), stride=tuple(32,1,), )
paddle.as_strided(Tensor([1431655765, 3],"float16"), list[3,8,], list[2,2,], 0, )
paddle.as_strided(Tensor([6, 715827883],"float16"), list[3,8,], list[2,2,], 0, )
paddle.as_strided(Tensor([1431655765, 3],"float16"), list[3,8,], list[8,1,], 0, )
paddle.as_strided(Tensor([6, 715827883],"float16"), list[3,8,], list[8,1,], 0, )
paddle.as_strided(Tensor([1431655765, 3],"float16"), list[6,3,], list[2,2,], 0, )
paddle.as_strided(Tensor([6, 715827883],"float16"), list[6,3,], list[2,2,], 0, )
paddle.as_strided(Tensor([1431655765, 3],"float16"), list[6,3,], list[3,1,], 0, )
paddle.as_strided(Tensor([6, 715827883],"float16"), list[6,3,], list[3,1,], 0, )
paddle.nn.functional.group_norm(Tensor([44739243, 3, 2, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 67108865, 2, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 44739243, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 44739243, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 2, 89478486],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 2, 4],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NDHWC", )
paddle.nn.functional.group_norm(Tensor([89478486, 3, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NHWC", )
paddle.nn.functional.group_norm(Tensor([2, 134217729, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 89478486, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 178956971],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 4],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NHWC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 2, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NHWC", )
paddle.nn.functional.group_norm(Tensor([178956971, 3, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NLC", )
paddle.nn.functional.group_norm(Tensor([2, 268435457, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NLC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 357913942],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NLC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 4],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NLC", )
paddle.nn.functional.group_norm(Tensor([2, 3, 4],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NLC", )
paddle.nn.functional.group_norm(Tensor([44739243, 4, 3, 2, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([2, 89478486, 3, 2, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 67108865, 2, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 44739243, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2, 44739243],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2, 2],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NCDHW", )
paddle.nn.functional.group_norm(Tensor([89478486, 4, 3, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([2, 178956971, 3, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 134217729, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 89478486],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3, 2],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NCHW", )
paddle.nn.functional.group_norm(Tensor([178956971, 4, 3],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCL", )
paddle.nn.functional.group_norm(Tensor([2, 357913942, 3],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCL", )
paddle.nn.functional.group_norm(Tensor([2, 4, 268435457],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([4],"float64"), data_format="NCL", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3],"float64"), num_groups=2, weight=Tensor([2147483649],"float64"), bias=Tensor([4],"float64"), data_format="NCL", )
paddle.nn.functional.group_norm(Tensor([2, 4, 3],"float64"), num_groups=2, weight=Tensor([4],"float64"), bias=Tensor([2147483649],"float64"), data_format="NCL", )
paddle.nn.functional.interpolate(Tensor([108050, 3, 106, 125],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 324149, 106, 125],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 11453247, 125],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 106, 13506187],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([11184811, 3, 128],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 33554432, 128],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 3, 1431655765],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
paddle.nn.functional.interpolate(Tensor([11184811, 3, 128],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 33554432, 128],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 3, 1431655765],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
paddle.nn.functional.interpolate(Tensor([75035, 3, 159, 120],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 225104, 159, 120],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 11930465, 120],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 159, 9004125],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([57073, 3, 173, 145],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 171217, 173, 145],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 9873489, 145],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 173, 8275467],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([46435, 3, 188, 164],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 139303, 188, 164],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 8729609, 164],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 188, 7615191],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([27013, 3, 212, 250],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 81038, 212, 250],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 5726624, 250],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 212, 6753094],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([25127, 3, 251, 227],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 75381, 251, 227],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 6306854, 227],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 251, 5703808],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([27963, 3, 256, 200],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 83887, 256, 200],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 7158279, 200],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 256, 5592406],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([21426, 3, 260, 257],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 64277, 260, 257],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 5570645, 257],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 260, 5506369],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2130441, 3, 28, 24],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 6391321, 28, 24],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 59652324, 24],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 28, 51130564],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([18261, 3, 280, 280],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 54783, 280, 280],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 5113057, 280],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 280, 5113057],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([14609, 3, 280, 350],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 43827, 280, 350],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 4090446, 350],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 280, 5113057],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([17889, 3, 302, 265],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 53667, 302, 265],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 5402475, 265],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 302, 4740583],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([349526, 3, 64, 64],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 1048576, 64, 64],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 22369622, 64],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 64, 22369622],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([349526, 3, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 1048576, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 22369622, 64],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 64, 22369622],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([22369622, 3, 64],"float16"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 67108864, 64],"float16"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 1431655765],"float16"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([22369622, 3, 64],"float32"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 67108864, 64],"float32"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 1431655765],"float32"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([9942054, 2, 6, 6, 6],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 9942054, 6, 6, 6],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 29826162, 6, 6],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 29826162, 6],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 6, 29826162],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([9942054, 2, 6, 6, 6],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 9942054, 6, 6, 6],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 29826162, 6, 6],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 29826162, 6],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 6, 29826162],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([59652324, 2, 6, 6],"float16"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 59652324, 6, 6],"float16"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 178956971, 6],"float16"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 178956971],"float16"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([59652324, 2, 6, 6],"float32"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 59652324, 6, 6],"float32"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 178956971, 6],"float32"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 178956971],"float32"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([22369622, 3, 4, 4, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 33554432, 4, 4, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 44739243, 4, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 4, 44739243, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 4, 4, 44739243],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([22369622, 3, 4, 4, 4],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 33554432, 4, 4, 4],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 44739243, 4, 4],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 4, 44739243, 4],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 4, 4, 44739243],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([57266231, 3, 5, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 85899346, 5, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 143165577, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 5, 143165577],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([57266231, 3, 5, 5],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 85899346, 5, 5],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 143165577, 5],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 5, 143165577],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([6628036, 3, 6, 6, 6],"float32"), size=None, scale_factor=Tensor([3],"int64"), mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 9942054, 6, 6, 6],"float32"), size=None, scale_factor=Tensor([3],"int64"), mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 19884108, 6, 6],"float32"), size=None, scale_factor=Tensor([3],"int64"), mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 19884108, 6],"float32"), size=None, scale_factor=Tensor([3],"int64"), mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 6, 19884108],"float32"), size=None, scale_factor=Tensor([3],"int64"), mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 6, 6],"float32"), size=None, scale_factor=Tensor([2147483649],"int64"), mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([39768216, 3, 6, 6],"float32"), size=list[12,12,], mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 59652324, 6, 6],"float32"), size=list[12,12,], mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 3, 119304648, 6],"float32"), size=list[12,12,], mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 119304648],"float32"), size=list[12,12,], mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([22369622, 4, 4, 4, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 44739243, 4, 4, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 44739243, 4, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 4, 44739243, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 4, 4, 33554432],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([22369622, 4, 4, 4, 3],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 44739243, 4, 4, 3],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 44739243, 4, 3],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 4, 44739243, 3],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 4, 4, 33554432],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(x=Tensor([4971027, 2, 6, 6, 6],"int64"), scale_factor=Tensor([3],"int64"), mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(x=Tensor([2, 4971027, 6, 6, 6],"int64"), scale_factor=Tensor([3],"int64"), mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(x=Tensor([2, 2, 14913081, 6, 6],"int64"), scale_factor=Tensor([3],"int64"), mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(x=Tensor([2, 2, 6, 14913081, 6],"int64"), scale_factor=Tensor([3],"int64"), mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(x=Tensor([2, 2, 6, 6, 14913081],"int64"), scale_factor=Tensor([3],"int64"), mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(x=Tensor([2, 2, 6, 6, 6],"int64"), scale_factor=Tensor([2147483649],"int64"), mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(x=Tensor([5843493, 3, 5, 7, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 8765240, 5, 7, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 14608733, 7, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 5, 20452226, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 5, 7, 20452226],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([6628036, 3, 6, 6, 6],"float32"), scale_factor=Tensor([3],"int64"), mode="trilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 9942054, 6, 6, 6],"float32"), scale_factor=Tensor([3],"int64"), mode="trilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 19884108, 6, 6],"float32"), scale_factor=Tensor([3],"int64"), mode="trilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 19884108, 6],"float32"), scale_factor=Tensor([3],"int64"), mode="trilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 6, 19884108],"float32"), scale_factor=Tensor([3],"int64"), mode="trilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 6, 6],"float32"), scale_factor=Tensor([2147483649],"int64"), mode="trilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([39768216, 3, 6, 6],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 59652324, 6, 6],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 119304648, 6],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 119304648],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([19884108, 3, 6, 6],"int64"), scale_factor=Tensor([2],"int64"), mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 29826162, 6, 6],"int64"), scale_factor=Tensor([2],"int64"), mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 59652324, 6],"int64"), scale_factor=Tensor([2],"int64"), mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 59652324],"int64"), scale_factor=Tensor([2],"int64"), mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 6],"int64"), scale_factor=Tensor([2147483649],"int64"), mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([238609295, 3, 6],"float32"), scale_factor=Tensor([1],"float32"), mode="LINEAR", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(x=Tensor([2, 357913942, 6],"float32"), scale_factor=Tensor([1],"float32"), mode="LINEAR", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 715827883],"float32"), scale_factor=Tensor([1],"float32"), mode="LINEAR", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6],"float32"), scale_factor=Tensor([4294967295],"float32"), mode="LINEAR", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(x=Tensor([29217465, 3, 7, 7],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 43826197, 7, 7],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 102261127, 7],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 7, 102261127],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([23238, 128, 38, 38],"float32"), size=Tensor([2],"int32"), mode="nearest", )
paddle.nn.functional.interpolate(x=Tensor([4, 743589, 38, 38],"float32"), size=Tensor([2],"int32"), mode="nearest", )
paddle.nn.functional.interpolate(x=Tensor([4, 128, 220753, 38],"float32"), size=Tensor([2],"int32"), mode="nearest", )
paddle.nn.functional.interpolate(x=Tensor([4, 128, 38, 220753],"float32"), size=Tensor([2],"int32"), mode="nearest", )
paddle.nn.functional.interpolate(x=Tensor([4, 128, 38, 38],"float32"), size=Tensor([4294967295],"int32"), mode="nearest", )
paddle.nn.functional.interpolate(x=Tensor([46475, 256, 19, 19],"float32"), size=Tensor([2],"int32"), mode="nearest", )
paddle.nn.functional.interpolate(x=Tensor([4, 2974355, 19, 19],"float32"), size=Tensor([2],"int32"), mode="nearest", )
paddle.nn.functional.interpolate(x=Tensor([4, 256, 220753, 19],"float32"), size=Tensor([2],"int32"), mode="nearest", )
paddle.nn.functional.interpolate(x=Tensor([4, 256, 19, 220753],"float32"), size=Tensor([2],"int32"), mode="nearest", )
paddle.nn.functional.interpolate(x=Tensor([4, 256, 19, 19],"float32"), size=Tensor([4294967295],"int32"), mode="nearest", )
paddle.nn.functional.local_response_norm(Tensor([894785, 3, 40, 40],"float32"), 5, 0.0001, 0.75, 1.0, "NCHW", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 894785, 40, 40],"float32"), 5, 0.0001, 0.75, 1.0, "NCHW", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 3, 11930465, 40],"float32"), 5, 0.0001, 0.75, 1.0, "NCHW", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 3, 40, 11930465],"float32"), 5, 0.0001, 0.75, 1.0, "NCHW", None, )
paddle.nn.functional.local_response_norm(Tensor([894785, 40, 40, 3],"float32"), 5, 0.0001, 0.75, 1.0, "NHWC", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 11930465, 40, 3],"float32"), 5, 0.0001, 0.75, 1.0, "NHWC", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 40, 11930465, 3],"float32"), 5, 0.0001, 0.75, 1.0, "NHWC", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 40, 40, 894785],"float32"), 5, 0.0001, 0.75, 1.0, "NHWC", None, )
paddle.nn.functional.local_response_norm(x=Tensor([298262, 3, 3, 40, 40],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 298262, 3, 40, 40],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 298262, 40, 40],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 3, 3976822, 40],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 3, 40, 3976822],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([298262, 3, 40, 40, 3],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 298262, 40, 40, 3],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 3976822, 40, 3],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 40, 3976822, 3],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 40, 40, 298262],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([894785, 3, 40, 40],"float32"), size=5, data_format="NCHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 894785, 40, 40],"float32"), size=5, data_format="NCHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 11930465, 40],"float32"), size=5, data_format="NCHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 40, 11930465],"float32"), size=5, data_format="NCHW", )
paddle.nn.functional.local_response_norm(x=Tensor([894785, 40, 40, 3],"float32"), size=5, data_format="NHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 11930465, 40, 3],"float32"), size=5, data_format="NHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 11930465, 3],"float32"), size=5, data_format="NHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 40, 894785],"float32"), size=5, data_format="NHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([2684355, 40, 40],"float32"), size=5, data_format="NCL", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 35791395, 40],"float32"), size=5, data_format="NCL", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 35791395],"float32"), size=5, data_format="NCL", )
paddle.nn.functional.local_response_norm(x=Tensor([2684355, 40, 40],"float32"), size=5, data_format="NLC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 35791395, 40],"float32"), size=5, data_format="NLC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 35791395],"float32"), size=5, data_format="NLC", )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), math.inf, 2, None, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), math.inf, 2, None, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), math.inf, 2, None, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 3, 32],"float32"), norm_type=math.inf, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 67108864, 32],"float32"), norm_type=math.inf, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 715827883],"float32"), norm_type=math.inf, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([22369622, 3, 32],"float64"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 33554433, 32],"float64"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 357913942],"float64"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([22369622, 3, 32],"float64"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 33554433, 32],"float64"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 357913942],"float64"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 32, 3],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 715827883, 3],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 32, 67108864],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.nn.functional.lp_pool1d(Tensor([44739243, 32, 3],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.nn.functional.lp_pool1d(Tensor([2, 715827883, 3],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.nn.functional.lp_pool1d(Tensor([2, 32, 67108864],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), -math.inf, kernel_size=2, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), -math.inf, kernel_size=2, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), -math.inf, kernel_size=2, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), -math.inf, kernel_size=2, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), math.inf, kernel_size=list[2,4,], stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), math.inf, kernel_size=list[2,4,], stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), math.inf, kernel_size=list[2,4,], stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), math.inf, kernel_size=list[2,4,], stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), norm_type=-math.inf, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), norm_type=-math.inf, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), norm_type=-math.inf, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), norm_type=-math.inf, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 3, 32, 32],"float32"), norm_type=math.inf, kernel_size=list[2,4,], stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 2097152, 32, 32],"float32"), norm_type=math.inf, kernel_size=list[2,4,], stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 22369622, 32],"float32"), norm_type=math.inf, kernel_size=list[2,4,], stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 22369622],"float32"), norm_type=math.inf, kernel_size=list[2,4,], stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([699051, 3, 32, 32],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 1048577, 32, 32],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 11184811, 32],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 11184811],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([699051, 3, 32, 32],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 1048577, 32, 32],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 11184811, 32],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 11184811],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 32, 32, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 22369622, 32, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 22369622, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 32, 2097152],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([1398102, 32, 32, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 22369622, 32, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 22369622, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 32, 2097152],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.max_pool1d(Tensor([89478486, 3, 16],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 268435456, 16],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 1431655765],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 16],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([1, 134217729, 16],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 715827883],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 16],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 134217729, 16],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 715827883],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([238609295, 3, 6],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 715827883, 6],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 1431655765],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 32],"float32"), 2, None, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 67108864, 32],"float32"), 2, None, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 715827883],"float32"), 2, None, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.max_pool1d(Tensor([2, 67108864, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 715827883],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(Tensor([2, 67108864, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 715827883],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(Tensor([44739243, 3, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([2, 67108864, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 715827883],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([268435456, 1, 4, 4],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 268435456, 4, 4],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 1073741824, 4],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 4, 1073741824],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([268435456, 1, 4, 4],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 268435456, 4, 4],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 1073741824, 4],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 4, 1073741824],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([214748365, 1, 4, 5],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 214748365, 4, 5],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 858993459, 5],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([20972, 128, 40, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2684355, 40, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 128, 838861, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 128, 40, 838861],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2684355, 16, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 42949673, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 26843546, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 10, 26843546],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1864136, 16, 12, 12],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 29826162, 12, 12],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 22369622, 12],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 12, 22369622],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2097152, 2, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 4194304, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2, 67108864, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2, 32, 67108864],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4437, 20, 220, 220],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 88739, 220, 220],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 20, 976129, 220],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 20, 220, 976129],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([111849, 24, 40, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2684355, 40, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 4473925, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 40, 4473925],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([41944, 256, 20, 20],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 10737419, 20, 20],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 838861, 20],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 20, 838861],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([39768216, 3, 6, 6],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 119304648, 6, 6],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 238609295, 6],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 6, 238609295],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([7646, 50, 106, 106],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 382251, 106, 106],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 50, 810372, 106],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 50, 106, 810372],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([83887, 512, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 512, 838861, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 512, 10, 838861],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([335545, 512, 5, 5],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 171798692, 5, 5],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 512, 1677722, 5],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 512, 5, 1677722],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([913046, 6, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 5478275, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 6, 25565282, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 6, 28, 25565282],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([699051, 6, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 4194304, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 6, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 6, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([5350, 64, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 342393, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 599187, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 112, 599187],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([41944, 64, 40, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 1677722, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 40, 1677722],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10486, 64, 80, 80],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 671089, 80, 80],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 838861, 80],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 80, 838861],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10, 34240, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10, 64, 59919, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10, 64, 112, 59919],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([372828, 20, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([128, 58255, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([128, 20, 69906, 24],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([128, 20, 24, 69906],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1342178, 50, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([128, 524288, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([128, 50, 83887, 8],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([128, 50, 8, 83887],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 2684355, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 16, 1677722, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 16, 10, 1677722],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 342393, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 6, 1597831, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 6, 28, 1597831],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 21400, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 64, 37450, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 64, 112, 37450],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2675, 128, 112, 112],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 171197, 112, 112],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 128, 149797, 112],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 128, 112, 149797],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([11093, 128, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 709912, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 128, 305041, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 128, 55, 305041],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 21474837, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 16, 13421773, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 16, 10, 13421773],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([30686, 192, 27, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2945794, 27, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 414253, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 27, 414253],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([30686, 192, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2945794, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 414253, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 27, 414253],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2485514, 192, 3, 3],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 238609295, 3, 3],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 3728271, 3],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 3, 3728271],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2485514, 192, 3, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 238609295, 3, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 3728271, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 3, 3728271],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8273, 192, 52, 52],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 794188, 52, 52],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 215093, 52],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 52, 215093],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([7395, 192, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 203361, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 55, 203361],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3728271, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 20, 4473925, 24],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 20, 24, 4473925],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([14267, 24, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 171197, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 24, 798916, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 24, 112, 798916],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([36071, 244, 244, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 4400582, 244, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 244, 4400582, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 244, 244, 36071],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([16777216, 256, 1, 1],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2147483648, 1, 1],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 8388608, 1],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 1, 8388608],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16777216, 256, 1, 1],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2147483648, 1, 1],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 8388608, 1],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 1, 8388608],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([99274, 256, 13, 13],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 12707004, 13, 13],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 645278, 13],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 13, 645278],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([23015, 256, 27, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 310690, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 27, 310690],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([23015, 256, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 310690, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 27, 310690],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([5754, 256, 54, 54],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 736449, 54, 54],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 155345, 54],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 54, 155345],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([5350, 256, 56, 56],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 684785, 56, 56],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 149797, 56],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 56, 149797],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([23861, 288, 25, 25],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3435974, 25, 25],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 288, 298262, 25],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 288, 25, 298262],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([28533, 3, 224, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 42800, 224, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 3195661, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 224, 3195661],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 3, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 22369622, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 22369622],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1314652, 3, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 1971978, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 21691755, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 33, 21691755],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1398102, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([2, 22369622, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([2, 32, 22369622, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([2, 32, 32, 2097152],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([52946, 480, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 12707004, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 480, 344149, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 480, 13, 344149],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([12275, 480, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 480, 165701, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 480, 27, 165701],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 33554432, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 50, 5368710, 8],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 50, 8, 5368710],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([49637, 512, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 322639, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 13, 322639],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([42800, 512, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 10956550, 14, 14],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 299594, 14],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 14, 299594],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([12410, 512, 26, 26],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3176751, 26, 26],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 161320, 26],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 26, 161320],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([10700, 512, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2739138, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 149797, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 512, 28, 149797],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([48133, 528, 13, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 528, 312862, 13],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 528, 13, 312862],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 6, 12782641, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 6, 28, 12782641],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([5649, 64, 109, 109],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 180750, 109, 109],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 307839, 109],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 109, 307839],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([5350, 64, 112, 112],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 171197, 112, 112],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 299594, 112],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 112, 299594],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([5350, 64, 112, 112],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 171197, 112, 112],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 299594, 112],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 112, 299594],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 299594, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 112, 299594],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1338, 64, 224, 224],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 42800, 224, 224],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 149797, 224],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 224, 149797],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([22185, 64, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 610081, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 55, 610081],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1369569, 64, 7, 7],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 43826197, 7, 7],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 4793491, 7],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 7, 4793491],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1369569, 64, 7, 7],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 43826197, 7, 7],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 4793491, 7],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 7, 4793491],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([38837, 768, 12, 12],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 14913081, 12, 12],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 768, 233017, 12],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 768, 12, 233017],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([524288, 8, 16, 64],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 2097152, 16, 64],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 4194304, 64],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 16, 16777216],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8388608, 8, 4, 16],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 33554432, 4, 16],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 16777216, 16],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 4, 67108864],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2097152, 8, 8, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8388608, 8, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 8388608, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 8, 33554432],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([30546, 832, 13, 13],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 832, 198547, 13],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 832, 13, 198547],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([143396, 832, 6, 6],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 59652324, 6, 6],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 832, 430186, 6],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 832, 6, 430186],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3766, 96, 109, 109],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 96, 205226, 109],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 96, 109, 205226],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3567, 96, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 96, 199729, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 96, 112, 199729],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([272, 157904, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([272, 16, 98690, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([272, 16, 10, 98690],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([272, 20141, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([272, 6, 93991, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([272, 6, 28, 93991],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4096, 64, 128, 128],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3, 87382, 128, 128],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3, 64, 174763, 128],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3, 64, 128, 174763],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([32, 1342178, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([32, 16, 838861, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([32, 16, 10, 838861],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([32, 932068, 12, 12],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([32, 16, 699051, 12],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([32, 16, 12, 699051],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([32, 171197, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([32, 6, 798916, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([32, 6, 28, 798916],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([32, 131072, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([32, 6, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([32, 6, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([36, 1193047, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([36, 16, 745655, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([36, 16, 10, 745655],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([36, 152175, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([36, 6, 710147, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([36, 6, 28, 710147],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 119304648, 3, 3],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 1864136, 3],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 3, 1864136],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 119304648, 3, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 1864136, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 192, 3, 1864136],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 1073741824, 1, 1],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 4194304, 1],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 1, 4194304],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 1073741824, 1, 1],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 4194304, 1],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 256, 1, 4194304],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([67108864, 4, 4, 4],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([4, 67108864, 4, 4],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([4, 4, 67108864, 4],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([4, 4, 4, 67108864],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([4, 21913099, 7, 7],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 2396746, 7],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 7, 2396746],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 21913099, 7, 7],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 2396746, 7],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 64, 7, 2396746],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([512, 83887, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([512, 16, 52429, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([512, 16, 10, 52429],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([512, 10700, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([512, 6, 49933, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([512, 6, 28, 49933],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2684355, 16, 10, 10],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 671089, 10, 10],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 16, 419431, 10],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 16, 10, 419431],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 671089, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 16, 419431, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 16, 10, 419431],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([372828, 20, 24, 24],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 116509, 24, 24],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 20, 139811, 24],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 20, 24, 139811],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 116509, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 20, 139811, 24],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 20, 24, 139811],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1342178, 50, 8, 8],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 1048576, 8, 8],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 50, 167773, 8],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 50, 8, 167773],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 1048576, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 50, 167773, 8],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 50, 8, 167773],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([913046, 6, 28, 28],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 85599, 28, 28],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 6, 399458, 28],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 6, 28, 399458],"float16"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 85599, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 6, 399458, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 6, 28, 399458],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 5350, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 64, 9363, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([64, 64, 112, 9363],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 5368710, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 16, 3355444, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 16, 10, 3355444],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 684785, 28, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 6, 3195661, 28],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 6, 28, 3195661],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 42800, 112, 112],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 64, 74899, 112],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 64, 112, 74899],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 42800, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 64, 74899, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 64, 112, 74899],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(x=Tensor([3728271, 2, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3728271, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2, 44739243, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2, 24, 44739243],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([16777216, 4, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 33554432, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 4, 67108864, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 4, 8, 67108864],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([328663, 2, 6, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 657326, 6, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 2, 1971978, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 2, 6, 10845878, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 2, 6, 33, 10845878],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([14913081, 3, 4, 4, 6],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 44739243, 4, 4, 6],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 59652324, 4, 6],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 59652324, 6],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 4, 89478486],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([7456541, 3, 4, 4, 6],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 22369622, 4, 4, 6],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 29826162, 4, 6],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 4, 44739243],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([7456541, 3, 4, 4, 6],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 22369622, 4, 4, 6],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 29826162, 4, 6],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 4, 44739243],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([16777216, 4, 4, 4, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 67108864, 4, 4, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 67108864, 4, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 67108864, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 4, 67108864],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([16777216, 4, 4, 4, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 67108864, 4, 4, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 67108864, 4, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 67108864, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 4, 67108864],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([5965233, 5, 6, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 29826162, 6, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 35791395, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 6, 47721859, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 6, 8, 17895698],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([4418691, 6, 9, 6, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 26512144, 9, 6, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 6, 39768216, 6, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 6, 9, 26512144, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 6, 9, 6, 13256072],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([13256072, 3, 6, 6, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 19884108, 6, 6, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 39768216, 6, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 6, 39768216, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 6, 6, 19884108],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([43691, 32, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 699051, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 699051, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 32, 699051, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 32, 32, 65536],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([3787450, 6, 7, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 11362348, 7, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 13256072, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 7, 17043522, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 7, 9, 5681174],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_unpool1d(Tensor([178956971, 3, 8],"float32"), Tensor([1, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 536870912, 8],"float32"), Tensor([1, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 1431655765],"float32"), Tensor([1, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float32"), Tensor([89478486, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float32"), Tensor([1, 268435457, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float32"), Tensor([1, 3, 715827883],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([178956971, 3, 8],"float32"), Tensor([89478486, 3, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 536870912, 8],"float32"), Tensor([1, 268435457, 8],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 1431655765],"float32"), Tensor([1, 3, 715827883],"int64"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"float64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"float64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"float64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"float64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"float64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"float64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCL", output_size=None, name=None, )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"float64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"float64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"float64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"float64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"float64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"int64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"int64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"int64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, output_size=list[1,3,16,], )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"int64"), Tensor([1, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 8],"int64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([89478486, 3, 8],"int64"), Tensor([178956971, 3, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 268435457, 8],"int64"), Tensor([1, 536870912, 8],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool1d(Tensor([1, 3, 715827883],"int64"), Tensor([1, 3, 1431655765],"int32"), kernel_size=2, stride=2, output_size=tuple(1,3,16,), )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=2, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=None, output_size=tuple(5,5,), )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([536870913, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 536870913, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 1073741825, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"float32"), Tensor([1, 1, 2, 1073741825],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1073741824, 1, 2, 2],"float32"), Tensor([536870913, 1, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1073741824, 2, 2],"float32"), Tensor([1, 536870913, 2, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2147483648, 2],"float32"), Tensor([1, 1, 1073741825, 2],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2147483648],"float32"), Tensor([1, 1, 2, 1073741825],"int64"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([536870913, 1, 2, 2],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 536870913, 2, 2],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1073741825, 2],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1073741825],"int64"), Tensor([1, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 2],"int64"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([536870913, 1, 2, 2],"int64"), Tensor([1073741824, 1, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 536870913, 2, 2],"int64"), Tensor([1, 1073741824, 2, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 1073741825, 2],"int64"), Tensor([1, 1, 2147483648, 2],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 1, 2, 1073741825],"int64"), Tensor([1, 1, 2, 2147483648],"int32"), kernel_size=2, stride=None, output_size=list[1,1,4,5,], )
paddle.nn.functional.max_unpool2d(Tensor([159072863, 3, 3, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 477218589, 3, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 477218589, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 477218589],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([159072863, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 477218589, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 477218589, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 3, 477218589],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([159072863, 3, 3, 3],"float32"), Tensor([159072863, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 477218589, 3, 3],"float32"), Tensor([1, 477218589, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 477218589, 3],"float32"), Tensor([1, 3, 477218589, 3],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 477218589],"float32"), Tensor([1, 3, 3, 477218589],"int32"), kernel_size=2, padding=0, output_size=list[1,1,7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([159072863, 3, 3, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 477218589, 3, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 477218589, 3],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 477218589],"float32"), Tensor([1, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([159072863, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 477218589, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 477218589, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 3],"float32"), Tensor([1, 3, 3, 477218589],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([159072863, 3, 3, 3],"float32"), Tensor([159072863, 3, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 477218589, 3, 3],"float32"), Tensor([1, 477218589, 3, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 477218589, 3],"float32"), Tensor([1, 3, 477218589, 3],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([1, 3, 3, 477218589],"float32"), Tensor([1, 3, 3, 477218589],"int32"), kernel_size=2, padding=0, output_size=list[7,7,], )
paddle.nn.functional.max_unpool2d(Tensor([9586981, 4, 7, 8],"float64"), Tensor([2, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 19173962, 7, 8],"float64"), Tensor([2, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 33554433, 8],"float64"), Tensor([2, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 38347923],"float64"), Tensor([2, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([19173962, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 38347923, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 67108864, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 7, 76695845],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([9586981, 4, 7, 8],"float64"), Tensor([19173962, 4, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 19173962, 7, 8],"float64"), Tensor([2, 38347923, 7, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 33554433, 8],"float64"), Tensor([2, 4, 67108864, 8],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 38347923],"float64"), Tensor([2, 4, 7, 76695845],"int32"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([9586981, 4, 7, 8],"float64"), Tensor([2, 4, 7, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 19173962, 7, 8],"float64"), Tensor([2, 4, 7, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 33554433, 8],"float64"), Tensor([2, 4, 7, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 38347923],"float64"), Tensor([2, 4, 7, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([9586981, 4, 7, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 19173962, 7, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 33554433, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 8],"float64"), Tensor([2, 4, 7, 38347923],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([9586981, 4, 7, 8],"float64"), Tensor([9586981, 4, 7, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 19173962, 7, 8],"float64"), Tensor([2, 19173962, 7, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 33554433, 8],"float64"), Tensor([2, 4, 33554433, 8],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([2, 4, 7, 38347923],"float64"), Tensor([2, 4, 7, 38347923],"int64"), list[2,2,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[14,16,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([42949673, 2, 5, 5],"float64"), Tensor([3, 2, 5, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 28633116, 5, 5],"float64"), Tensor([3, 2, 5, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 71582789, 5],"float64"), Tensor([3, 2, 5, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 71582789],"float64"), Tensor([3, 2, 5, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([85899346, 2, 5, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 57266231, 5, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 2, 143165577, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 2, 5, 143165577],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([42949673, 2, 5, 5],"float64"), Tensor([85899346, 2, 5, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 28633116, 5, 5],"float64"), Tensor([3, 57266231, 5, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 71582789, 5],"float64"), Tensor([3, 2, 143165577, 5],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 71582789],"float64"), Tensor([3, 2, 5, 143165577],"int32"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([42949673, 2, 5, 5],"float64"), Tensor([3, 2, 5, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 28633116, 5, 5],"float64"), Tensor([3, 2, 5, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 71582789, 5],"float64"), Tensor([3, 2, 5, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 71582789],"float64"), Tensor([3, 2, 5, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([42949673, 2, 5, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 28633116, 5, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 2, 71582789, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 5],"float64"), Tensor([3, 2, 5, 71582789],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([42949673, 2, 5, 5],"float64"), Tensor([42949673, 2, 5, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 28633116, 5, 5],"float64"), Tensor([3, 28633116, 5, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 71582789, 5],"float64"), Tensor([3, 2, 71582789, 5],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool2d(Tensor([3, 2, 5, 71582789],"float64"), Tensor([3, 2, 5, 71582789],"int64"), list[4,4,], stride=list[2,2,], padding=list[0,0,], data_format="NCHW", output_size=list[12,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([17895698, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 17895698, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 71582789, 5, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 89478486, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 107374183],"float64"), Tensor([1, 1, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([35791395, 1, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 35791395, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 143165577, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 178956971, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 214748365],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([17895698, 1, 4, 5, 6],"float64"), Tensor([35791395, 1, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 17895698, 4, 5, 6],"float64"), Tensor([1, 35791395, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 71582789, 5, 6],"float64"), Tensor([1, 1, 143165577, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 89478486, 6],"float64"), Tensor([1, 1, 4, 178956971, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 107374183],"float64"), Tensor([1, 1, 4, 5, 214748365],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([17895698, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 17895698, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 71582789, 5, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 89478486, 6],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 107374183],"float64"), Tensor([1, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([17895698, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 17895698, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 71582789, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 89478486, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 6],"float64"), Tensor([1, 1, 4, 5, 107374183],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([17895698, 1, 4, 5, 6],"float64"), Tensor([17895698, 1, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 17895698, 4, 5, 6],"float64"), Tensor([1, 17895698, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 71582789, 5, 6],"float64"), Tensor([1, 1, 71582789, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 89478486, 6],"float64"), Tensor([1, 1, 4, 89478486, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 1, 4, 5, 107374183],"float64"), Tensor([1, 1, 4, 5, 107374183],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([119304648, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 357913942, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 238609295, 2, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 238609295, 3],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 357913942],"float32"), Tensor([1, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([59652324, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 178956971, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 119304648, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 119304648, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float32"), Tensor([1, 3, 2, 2, 178956971],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([119304648, 3, 2, 2, 3],"float32"), Tensor([59652324, 3, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 357913942, 2, 2, 3],"float32"), Tensor([1, 178956971, 2, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 238609295, 2, 3],"float32"), Tensor([1, 3, 119304648, 2, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 238609295, 3],"float32"), Tensor([1, 3, 2, 119304648, 3],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 357913942],"float32"), Tensor([1, 3, 2, 2, 178956971],"int64"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, padding=0, data_format="NCDHW", output_size=None, name=None, )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"float64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"float64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"float64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"float64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"float64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=None, )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"int64"), Tensor([1, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 3],"int64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([59652324, 3, 2, 2, 3],"int64"), Tensor([119304648, 3, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 178956971, 2, 2, 3],"int64"), Tensor([1, 357913942, 2, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 119304648, 2, 3],"int64"), Tensor([1, 3, 238609295, 2, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 119304648, 3],"int64"), Tensor([1, 3, 2, 238609295, 3],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 2, 2, 178956971],"int64"), Tensor([1, 3, 2, 2, 357913942],"int32"), kernel_size=2, stride=2, output_size=list[1,3,4,4,6,], )
paddle.nn.functional.max_unpool3d(Tensor([5965233, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 17895698, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 23860930, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 35791395],"float64"), Tensor([1, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([11930465, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 35791395, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 47721859, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 59652324, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 71582789],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([5965233, 3, 4, 5, 6],"float64"), Tensor([11930465, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 17895698, 4, 5, 6],"float64"), Tensor([1, 35791395, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 23860930, 5, 6],"float64"), Tensor([1, 3, 47721859, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), Tensor([1, 3, 4, 59652324, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 35791395],"float64"), Tensor([1, 3, 4, 5, 71582789],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([5965233, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 17895698, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 23860930, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 35791395],"float64"), Tensor([1, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([11930465, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 35791395, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 47721859, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 59652324, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 71582789],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([5965233, 3, 4, 5, 6],"float64"), Tensor([11930465, 3, 4, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 23860930, 5, 6],"float64"), Tensor([1, 3, 47721859, 5, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), Tensor([1, 3, 4, 59652324, 6],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 35791395],"float64"), Tensor([1, 3, 4, 5, 71582789],"int32"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([5965233, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 17895698, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 23860930, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 35791395],"float64"), Tensor([1, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([5965233, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 17895698, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 23860930, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 29826162, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 35791395],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([5965233, 3, 4, 5, 6],"float64"), Tensor([5965233, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 17895698, 4, 5, 6],"float64"), Tensor([1, 17895698, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 23860930, 5, 6],"float64"), Tensor([1, 3, 23860930, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), Tensor([1, 3, 4, 29826162, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 35791395],"float64"), Tensor([1, 3, 4, 5, 35791395],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[7,9,11,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([5965233, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 17895698, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 23860930, 5, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), Tensor([1, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 35791395],"float64"), Tensor([1, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([5965233, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 17895698, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 23860930, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 29826162, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 6],"float64"), Tensor([1, 3, 4, 5, 35791395],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([5965233, 3, 4, 5, 6],"float64"), Tensor([5965233, 3, 4, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 23860930, 5, 6],"float64"), Tensor([1, 3, 23860930, 5, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), Tensor([1, 3, 4, 29826162, 6],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.max_unpool3d(Tensor([1, 3, 4, 5, 35791395],"float64"), Tensor([1, 3, 4, 5, 35791395],"int64"), list[2,2,2,], stride=list[2,2,2,], padding=list[0,0,0,], data_format="NCDHW", output_size=list[8,10,12,], name=None, )
paddle.nn.functional.pixel_shuffle(Tensor([14913081, 4, 4, 9],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 29826162, 4, 9],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 29826162, 9],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 4, 67108865],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_shuffle(Tensor([14913081, 4, 4, 9],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 29826162, 4, 9],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 29826162, 9],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 4, 4, 67108865],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_shuffle(Tensor([29826162, 9, 4, 4],"float32"), upscale_factor=3, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 134217728, 4, 4],"float32"), upscale_factor=3, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 59652324, 4],"float32"), upscale_factor=3, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 4, 59652324],"float32"), upscale_factor=3, )
paddle.nn.functional.pixel_shuffle(Tensor([14913081, 9, 4, 4],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 67108865, 4, 4],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 29826162, 4],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 4, 29826162],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_shuffle(Tensor([14913081, 9, 4, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 67108865, 4, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 29826162, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_shuffle(Tensor([2, 9, 4, 29826162],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([29826162, 1, 12, 12],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 14913081, 12, 12],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 178956971, 12],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 12, 178956971],"float16"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([29826162, 1, 12, 12],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 14913081, 12, 12],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 178956971, 12],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 12, 178956971],"float32"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([14913081, 1, 12, 12],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 7456541, 12, 12],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 89478486, 12],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 12, 89478486],"float64"), 3, "NCHW", )
paddle.nn.functional.pixel_unshuffle(Tensor([14913081, 1, 12, 12],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 7456541, 12, 12],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 89478486, 12],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 1, 12, 89478486],"float64"), 3, "NCHW", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([14913081, 12, 12, 1],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 89478486, 12, 1],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 12, 89478486, 1],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 12, 12, 7456541],"float64"), 3, "NHWC", )
paddle.nn.functional.pixel_unshuffle(Tensor([14913081, 12, 12, 1],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 89478486, 12, 1],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 12, 89478486, 1],"float64"), 3, "NHWC", None, )
paddle.nn.functional.pixel_unshuffle(Tensor([2, 12, 12, 7456541],"float64"), 3, "NHWC", None, )
paddle.nn.functional.prelu(Tensor([178956971, 2, 3, 4],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 357913942, 3, 4],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 536870912, 4],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 715827883],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 4],"float32"), Tensor([4294967295],"float32"), )
paddle.nn.functional.prelu(Tensor([178956971, 2, 3, 4],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 357913942, 3, 4],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 536870912, 4],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 715827883],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 4],"float32"), Tensor([4294967295],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([178956971, 2, 3, 4],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 357913942, 3, 4],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 536870912, 4],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 715827883],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.prelu(Tensor([178956971, 2, 3, 4],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 357913942, 3, 4],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 536870912, 4],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([1, 2, 3, 715827883],"float32"), Tensor([2],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([2684355, 16, 10, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([16, 2684355, 10, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([16, 16, 1677722, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([16, 16, 10, 1677722],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([16, 16, 10, 10],"float32"), Tensor([4294967295],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([32, 1342178, 10, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([32, 16, 838861, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([32, 16, 10, 838861],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([32, 16, 10, 10],"float32"), Tensor([4294967295],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([2147484, 20, 10, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([5, 8589935, 10, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([5, 20, 4294968, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([5, 20, 10, 4294968],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([5, 20, 10, 10],"float32"), Tensor([4294967295],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([64, 671089, 10, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([64, 16, 419431, 10],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([64, 16, 10, 419431],"float32"), Tensor([1],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([64, 16, 10, 10],"float32"), Tensor([4294967295],"float32"), data_format="NCHW", )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=False, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=True, ddof=False, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=True, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=True, ddof=True, fweights=None, aweights=Tensor([10],"int32"), )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=None, aweights=Tensor([4294967295],"int32"), )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=True, ddof=True, fweights=None, aweights=Tensor([4294967295],"int32"), )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=Tensor([4294967295],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=True, ddof=True, fweights=Tensor([4294967295],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int64"), aweights=Tensor([10],"float64"), )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=Tensor([2147483649],"int64"), aweights=Tensor([10],"float64"), )
paddle.linalg.cov(Tensor([10],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int64"), aweights=Tensor([2147483649],"float64"), )
paddle.linalg.cov(Tensor([2147483649],"float64"), rowvar=True, ddof=True, fweights=Tensor([2147483649],"int64"), aweights=Tensor([2147483649],"float64"), )
paddle.linalg.cov(Tensor([214748365, 10],"float64"), rowvar=False, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([20, 107374183],"float64"), rowvar=False, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([214748365, 10],"float64"), rowvar=True, ddof=False, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([20, 107374183],"float64"), rowvar=True, ddof=False, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([214748365, 10],"float64"), rowvar=True, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([20, 107374183],"float64"), rowvar=True, ddof=True, fweights=None, aweights=None, )
paddle.linalg.cov(Tensor([214748365, 10],"float64"), rowvar=True, ddof=True, fweights=None, aweights=Tensor([10],"int32"), )
paddle.linalg.cov(Tensor([20, 107374183],"float64"), rowvar=True, ddof=True, fweights=None, aweights=Tensor([10],"int32"), )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=None, aweights=Tensor([4294967295],"int32"), )
paddle.linalg.cov(Tensor([214748365, 10],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([20, 107374183],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=Tensor([4294967295],"int32"), aweights=None, )
paddle.linalg.cov(Tensor([214748365, 10],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int64"), aweights=Tensor([10],"float64"), )
paddle.linalg.cov(Tensor([20, 107374183],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int64"), aweights=Tensor([10],"float64"), )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=Tensor([2147483649],"int64"), aweights=Tensor([10],"float64"), )
paddle.linalg.cov(Tensor([20, 10],"float64"), rowvar=True, ddof=True, fweights=Tensor([10],"int64"), aweights=Tensor([2147483649],"float64"), )
paddle.logcumsumexp(Tensor([357913942, 12],"float16"), dtype="float16", axis=1, )
paddle.logcumsumexp(Tensor([10, 429496730],"float16"), dtype="float16", axis=1, )
paddle.logcumsumexp(Tensor([357913942, 12],"float16"), dtype="float16", axis=None, )
paddle.logcumsumexp(Tensor([10, 429496730],"float16"), dtype="float16", axis=None, )
paddle.logcumsumexp(Tensor([357913942, 12],"float32"), dtype="float32", axis=1, )
paddle.logcumsumexp(Tensor([10, 429496730],"float32"), dtype="float32", axis=1, )
paddle.logcumsumexp(Tensor([357913942, 12],"float32"), dtype="float32", axis=None, )
paddle.logcumsumexp(Tensor([10, 429496730],"float32"), dtype="float32", axis=None, )
paddle.logcumsumexp(Tensor([1073741824, 4],"float32"), dtype="float32", )
paddle.logcumsumexp(Tensor([3, 1431655765],"float32"), dtype="float32", )
paddle.matmul(Tensor([4294967295, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([1, 1],"float32"), )
paddle.matmul(Tensor([1, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.matmul(Tensor([1, 1],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.matmul(Tensor([4294967295, 1],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([1, 4294967295],"float32"), )
paddle.matmul(Tensor([4294967295, 1],"float32"), Tensor([1],"float32"), )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([1],"float32"), )
paddle.matmul(Tensor([1, 1],"float32"), Tensor([4294967295],"float32"), )
paddle.matmul(Tensor([429496730, 10],"float32"), Tensor([10, 20],"float32"), )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([10, 20],"float32"), )
paddle.matmul(Tensor([1, 10],"float32"), Tensor([214748365, 20],"float32"), )
paddle.matmul(Tensor([1, 10],"float32"), Tensor([10, 429496730],"float32"), )
paddle.matmul(Tensor([429496730, 10],"float32"), Tensor([429496730, 20],"float32"), )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([10, 4294967295],"float32"), )
paddle.matmul(Tensor([429497, 100, 100],"float32"), Tensor([1, 100, 10],"float32"), )
paddle.matmul(Tensor([1, 42949673, 100],"float32"), Tensor([1, 100, 10],"float32"), )
paddle.matmul(Tensor([1, 100, 42949673],"float32"), Tensor([1, 100, 10],"float32"), )
paddle.matmul(Tensor([1, 100, 100],"float32"), Tensor([4294968, 100, 10],"float32"), )
paddle.matmul(Tensor([1, 100, 100],"float32"), Tensor([1, 429496730, 10],"float32"), )
paddle.matmul(Tensor([1, 100, 100],"float32"), Tensor([1, 100, 42949673],"float32"), )
paddle.matmul(Tensor([429497, 100, 100],"float32"), Tensor([429497, 100, 10],"float32"), )
paddle.matmul(Tensor([1, 42949673, 100],"float32"), Tensor([1, 42949673, 10],"float32"), )
paddle.matmul(Tensor([1, 100, 42949673],"float32"), Tensor([1, 100, 42949673],"float32"), )
paddle.matmul(Tensor([429497, 100, 100],"float32"), Tensor([1, 100, 32],"float32"), )
paddle.matmul(Tensor([1, 42949673, 100],"float32"), Tensor([1, 100, 32],"float32"), )
paddle.matmul(Tensor([1, 100, 42949673],"float32"), Tensor([1, 100, 32],"float32"), )
paddle.matmul(Tensor([1, 100, 100],"float32"), Tensor([1342178, 100, 32],"float32"), )
paddle.matmul(Tensor([1, 100, 100],"float32"), Tensor([1, 134217728, 32],"float32"), )
paddle.matmul(Tensor([429497, 100, 100],"float32"), Tensor([429497, 100, 32],"float32"), )
paddle.matmul(Tensor([1, 42949673, 100],"float32"), Tensor([1, 42949673, 32],"float32"), )
paddle.matmul(Tensor([1342178, 100, 32],"float32"), Tensor([32, 10],"float32"), )
paddle.matmul(Tensor([1, 134217728, 32],"float32"), Tensor([32, 10],"float32"), )
paddle.matmul(Tensor([1, 100, 42949673],"float32"), Tensor([32, 10],"float32"), )
paddle.matmul(Tensor([1, 100, 32],"float32"), Tensor([429496730, 10],"float32"), )
paddle.matmul(Tensor([1, 100, 32],"float32"), Tensor([32, 134217728],"float32"), )
paddle.matmul(Tensor([5368710, 100, 4],"float64"), Tensor([1, 4, 2],"float64"), )
paddle.matmul(Tensor([1, 536870913, 4],"float64"), Tensor([1, 4, 2],"float64"), )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([1, 4, 2],"float64"), )
paddle.matmul(Tensor([1, 100, 4],"float64"), Tensor([268435457, 4, 2],"float64"), )
paddle.matmul(Tensor([1, 100, 4],"float64"), Tensor([1, 1073741825, 2],"float64"), )
paddle.matmul(Tensor([1, 100, 4],"float64"), Tensor([1, 4, 536870913],"float64"), )
paddle.matmul(Tensor([5368710, 100, 4],"float64"), Tensor([5368710, 4, 2],"float64"), )
paddle.matmul(Tensor([1, 536870913, 4],"float64"), Tensor([1, 536870913, 2],"float64"), )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([1, 4, 21474837],"float64"), )
paddle.matmul(Tensor([5368710, 100, 4],"float64"), Tensor([1, 4, 4],"float64"), )
paddle.matmul(Tensor([1, 536870913, 4],"float64"), Tensor([1, 4, 4],"float64"), )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([1, 4, 4],"float64"), )
paddle.matmul(Tensor([1, 100, 4],"float64"), Tensor([134217729, 4, 4],"float64"), )
paddle.matmul(Tensor([1, 100, 4],"float64"), Tensor([1, 536870913, 4],"float64"), )
paddle.matmul(Tensor([5368710, 100, 4],"float64"), Tensor([5368710, 4, 4],"float64"), )
paddle.matmul(Tensor([1, 536870913, 4],"float64"), Tensor([1, 536870913, 4],"float64"), )
paddle.matmul(Tensor([5368710, 100, 4],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([1, 536870913, 4],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([1, 100, 4],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([1, 100, 4],"float64"), Tensor([4, 536870913],"float64"), )
paddle.matmul(Tensor([5368710, 100, 4],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([1, 536870913, 4],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([1, 100, 4],"float64"), Tensor([536870913, 4],"float64"), )
paddle.matmul(Tensor([536871, 100, 40],"float64"), Tensor([1, 40, 12],"float64"), )
paddle.matmul(Tensor([1, 53687092, 40],"float64"), Tensor([1, 40, 12],"float64"), )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([1, 40, 12],"float64"), )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([4473925, 40, 12],"float64"), )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([1, 178956971, 12],"float64"), )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([1, 40, 53687092],"float64"), )
paddle.matmul(Tensor([536871, 100, 40],"float64"), Tensor([536871, 40, 12],"float64"), )
paddle.matmul(Tensor([1, 53687092, 40],"float64"), Tensor([1, 53687092, 12],"float64"), )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([1, 40, 21474837],"float64"), )
paddle.matmul(Tensor([536871, 100, 40],"float64"), Tensor([1, 40, 6],"float64"), )
paddle.matmul(Tensor([1, 53687092, 40],"float64"), Tensor([1, 40, 6],"float64"), )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([1, 40, 6],"float64"), )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([8947849, 40, 6],"float64"), )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([1, 357913942, 6],"float64"), )
paddle.matmul(Tensor([536871, 100, 40],"float64"), Tensor([536871, 40, 6],"float64"), )
paddle.matmul(Tensor([1, 53687092, 40],"float64"), Tensor([1, 53687092, 6],"float64"), )
paddle.matmul(Tensor([536871, 100, 40],"float64"), Tensor([1, 40, 8],"float64"), )
paddle.matmul(Tensor([1, 53687092, 40],"float64"), Tensor([1, 40, 8],"float64"), )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([1, 40, 8],"float64"), )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([6710887, 40, 8],"float64"), )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([1, 268435457, 8],"float64"), )
paddle.matmul(Tensor([536871, 100, 40],"float64"), Tensor([536871, 40, 8],"float64"), )
paddle.matmul(Tensor([1, 53687092, 40],"float64"), Tensor([1, 53687092, 8],"float64"), )
paddle.matmul(Tensor([536871, 100, 40],"float64"), Tensor([40, 12],"float64"), )
paddle.matmul(Tensor([1, 53687092, 40],"float64"), Tensor([40, 12],"float64"), )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([40, 12],"float64"), )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([178956971, 12],"float64"), )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([40, 53687092],"float64"), )
paddle.matmul(Tensor([536871, 100, 40],"float64"), Tensor([40, 6],"float64"), )
paddle.matmul(Tensor([1, 53687092, 40],"float64"), Tensor([40, 6],"float64"), )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([40, 6],"float64"), )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([357913942, 6],"float64"), )
paddle.matmul(Tensor([536871, 100, 40],"float64"), Tensor([40, 8],"float64"), )
paddle.matmul(Tensor([1, 53687092, 40],"float64"), Tensor([40, 8],"float64"), )
paddle.matmul(Tensor([1, 100, 21474837],"float64"), Tensor([40, 8],"float64"), )
paddle.matmul(Tensor([1, 100, 40],"float64"), Tensor([268435457, 8],"float64"), )
paddle.matmul(Tensor([858994, 100, 50],"float32"), Tensor([50, 32],"float32"), )
paddle.matmul(Tensor([1, 85899346, 50],"float32"), Tensor([50, 32],"float32"), )
paddle.matmul(Tensor([1, 100, 42949673],"float32"), Tensor([50, 32],"float32"), )
paddle.matmul(Tensor([1, 100, 50],"float32"), Tensor([134217728, 32],"float32"), )
paddle.matmul(Tensor([1, 100, 50],"float32"), Tensor([50, 85899346],"float32"), )
paddle.matmul(Tensor([8192, 128, 32, 128],"float16"), Tensor([1, 128, 128, 32],"float16"), )
paddle.matmul(Tensor([1, 1048576, 32, 128],"float16"), Tensor([1, 128, 128, 32],"float16"), )
paddle.matmul(Tensor([1, 128, 262144, 128],"float16"), Tensor([1, 128, 128, 32],"float16"), )
paddle.matmul(Tensor([1, 128, 32, 1048576],"float16"), Tensor([1, 128, 128, 32],"float16"), )
paddle.matmul(Tensor([1, 128, 32, 128],"float16"), Tensor([8192, 128, 128, 32],"float16"), )
paddle.matmul(Tensor([1, 128, 32, 128],"float16"), Tensor([1, 1048576, 128, 32],"float16"), )
paddle.matmul(Tensor([1, 128, 32, 128],"float16"), Tensor([1, 128, 1048576, 32],"float16"), )
paddle.matmul(Tensor([1, 128, 32, 128],"float16"), Tensor([1, 128, 128, 262144],"float16"), )
paddle.matmul(Tensor([8192, 128, 32, 128],"float16"), Tensor([8192, 128, 128, 32],"float16"), )
paddle.matmul(Tensor([1, 1048576, 32, 128],"float16"), Tensor([1, 1048576, 128, 32],"float16"), )
paddle.matmul(Tensor([1, 128, 262144, 128],"float16"), Tensor([1, 128, 262144, 32],"float16"), )
paddle.matmul(Tensor([1, 128, 32, 1048576],"float16"), Tensor([1, 128, 128, 1048576],"float16"), )
paddle.matmul(Tensor([8192, 128, 32, 128],"float32"), Tensor([1, 128, 128, 32],"float32"), )
paddle.matmul(Tensor([1, 1048576, 32, 128],"float32"), Tensor([1, 128, 128, 32],"float32"), )
paddle.matmul(Tensor([1, 128, 262144, 128],"float32"), Tensor([1, 128, 128, 32],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 1048576],"float32"), Tensor([1, 128, 128, 32],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 128],"float32"), Tensor([8192, 128, 128, 32],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 128],"float32"), Tensor([1, 1048576, 128, 32],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 128],"float32"), Tensor([1, 128, 1048576, 32],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 128],"float32"), Tensor([1, 128, 128, 262144],"float32"), )
paddle.matmul(Tensor([8192, 128, 32, 128],"float32"), Tensor([8192, 128, 128, 32],"float32"), )
paddle.matmul(Tensor([1, 1048576, 32, 128],"float32"), Tensor([1, 1048576, 128, 32],"float32"), )
paddle.matmul(Tensor([1, 128, 262144, 128],"float32"), Tensor([1, 128, 262144, 32],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 1048576],"float32"), Tensor([1, 128, 128, 1048576],"float32"), )
paddle.matmul(Tensor([32768, 128, 32, 32],"float16"), Tensor([1, 128, 32, 128],"float16"), )
paddle.matmul(Tensor([1, 4194304, 32, 32],"float16"), Tensor([1, 128, 32, 128],"float16"), )
paddle.matmul(Tensor([1, 128, 1048576, 32],"float16"), Tensor([1, 128, 32, 128],"float16"), )
paddle.matmul(Tensor([1, 128, 32, 1048576],"float16"), Tensor([1, 128, 32, 128],"float16"), )
paddle.matmul(Tensor([1, 128, 32, 32],"float16"), Tensor([8192, 128, 32, 128],"float16"), )
paddle.matmul(Tensor([1, 128, 32, 32],"float16"), Tensor([1, 1048576, 32, 128],"float16"), )
paddle.matmul(Tensor([1, 128, 32, 32],"float16"), Tensor([1, 128, 262144, 128],"float16"), )
paddle.matmul(Tensor([1, 128, 32, 32],"float16"), Tensor([1, 128, 32, 1048576],"float16"), )
paddle.matmul(Tensor([32768, 128, 32, 32],"float16"), Tensor([32768, 128, 32, 128],"float16"), )
paddle.matmul(Tensor([1, 4194304, 32, 32],"float16"), Tensor([1, 4194304, 32, 128],"float16"), )
paddle.matmul(Tensor([1, 128, 1048576, 32],"float16"), Tensor([1, 128, 1048576, 128],"float16"), )
paddle.matmul(Tensor([1, 128, 32, 1048576],"float16"), Tensor([1, 128, 32, 1048576],"float16"), )
paddle.matmul(Tensor([32768, 128, 32, 32],"float32"), Tensor([1, 128, 32, 128],"float32"), )
paddle.matmul(Tensor([1, 4194304, 32, 32],"float32"), Tensor([1, 128, 32, 128],"float32"), )
paddle.matmul(Tensor([1, 128, 1048576, 32],"float32"), Tensor([1, 128, 32, 128],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 1048576],"float32"), Tensor([1, 128, 32, 128],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 32],"float32"), Tensor([8192, 128, 32, 128],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 32],"float32"), Tensor([1, 1048576, 32, 128],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 32],"float32"), Tensor([1, 128, 262144, 128],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 32],"float32"), Tensor([1, 128, 32, 1048576],"float32"), )
paddle.matmul(Tensor([32768, 128, 32, 32],"float32"), Tensor([32768, 128, 32, 128],"float32"), )
paddle.matmul(Tensor([1, 4194304, 32, 32],"float32"), Tensor([1, 4194304, 32, 128],"float32"), )
paddle.matmul(Tensor([1, 128, 1048576, 32],"float32"), Tensor([1, 128, 1048576, 128],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 1048576],"float32"), Tensor([1, 128, 32, 1048576],"float32"), )
paddle.matmul(Tensor([32768, 128, 32, 32],"float32"), Tensor([1, 128, 32, 32],"float32"), )
paddle.matmul(Tensor([1, 4194304, 32, 32],"float32"), Tensor([1, 128, 32, 32],"float32"), )
paddle.matmul(Tensor([1, 128, 1048576, 32],"float32"), Tensor([1, 128, 32, 32],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 1048576],"float32"), Tensor([1, 128, 32, 32],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 32],"float32"), Tensor([32768, 128, 32, 32],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 32],"float32"), Tensor([1, 4194304, 32, 32],"float32"), )
paddle.matmul(Tensor([1, 128, 32, 32],"float32"), Tensor([1, 128, 1048576, 32],"float32"), )
paddle.matmul(Tensor([32768, 128, 32, 32],"float32"), Tensor([32768, 128, 32, 32],"float32"), )
paddle.matmul(Tensor([1, 4194304, 32, 32],"float32"), Tensor([1, 4194304, 32, 32],"float32"), )
paddle.matmul(Tensor([1, 128, 1048576, 32],"float32"), Tensor([1, 128, 1048576, 32],"float32"), )
paddle.matmul(Tensor([524288, 16, 32, 16],"float32"), Tensor([1, 16, 16, 32],"float32"), )
paddle.matmul(Tensor([1, 8388608, 32, 16],"float32"), Tensor([1, 16, 16, 32],"float32"), )
paddle.matmul(Tensor([1, 16, 16777216, 16],"float32"), Tensor([1, 16, 16, 32],"float32"), )
paddle.matmul(Tensor([1, 16, 32, 8388608],"float32"), Tensor([1, 16, 16, 32],"float32"), )
paddle.matmul(Tensor([1, 16, 32, 16],"float32"), Tensor([524288, 16, 16, 32],"float32"), )
paddle.matmul(Tensor([1, 16, 32, 16],"float32"), Tensor([1, 8388608, 16, 32],"float32"), )
paddle.matmul(Tensor([1, 16, 32, 16],"float32"), Tensor([1, 16, 8388608, 32],"float32"), )
paddle.matmul(Tensor([1, 16, 32, 16],"float32"), Tensor([1, 16, 16, 16777216],"float32"), )
paddle.matmul(Tensor([524288, 16, 32, 16],"float32"), Tensor([524288, 16, 16, 32],"float32"), )
paddle.matmul(Tensor([1, 8388608, 32, 16],"float32"), Tensor([1, 8388608, 16, 32],"float32"), )
paddle.matmul(Tensor([1, 16, 16777216, 16],"float32"), Tensor([1, 16, 16777216, 32],"float32"), )
paddle.matmul(Tensor([1, 16, 32, 8388608],"float32"), Tensor([1, 16, 16, 8388608],"float32"), )
paddle.matmul(Tensor([262144, 16, 32, 32],"float32"), Tensor([1, 16, 32, 16],"float32"), )
paddle.matmul(Tensor([1, 4194304, 32, 32],"float32"), Tensor([1, 16, 32, 16],"float32"), )
paddle.matmul(Tensor([1, 16, 8388608, 32],"float32"), Tensor([1, 16, 32, 16],"float32"), )
paddle.matmul(Tensor([1, 16, 32, 8388608],"float32"), Tensor([1, 16, 32, 16],"float32"), )
paddle.matmul(Tensor([1, 16, 32, 32],"float32"), Tensor([524288, 16, 32, 16],"float32"), )
paddle.matmul(Tensor([1, 16, 32, 32],"float32"), Tensor([1, 8388608, 32, 16],"float32"), )
paddle.matmul(Tensor([1, 16, 32, 32],"float32"), Tensor([1, 16, 16777216, 16],"float32"), )
paddle.matmul(Tensor([1, 16, 32, 32],"float32"), Tensor([1, 16, 32, 8388608],"float32"), )
paddle.matmul(Tensor([262144, 16, 32, 32],"float32"), Tensor([262144, 16, 32, 16],"float32"), )
paddle.matmul(Tensor([1, 4194304, 32, 32],"float32"), Tensor([1, 4194304, 32, 16],"float32"), )
paddle.matmul(Tensor([1, 16, 8388608, 32],"float32"), Tensor([1, 16, 8388608, 16],"float32"), )
paddle.matmul(Tensor([1, 16, 32, 8388608],"float32"), Tensor([1, 16, 32, 8388608],"float32"), )
paddle.matmul(Tensor([31580642, 17, 4],"float64"), Tensor([1, 4, 2],"float64"), )
paddle.matmul(Tensor([1, 17, 126322568],"float64"), Tensor([1, 4, 2],"float64"), )
paddle.matmul(Tensor([1, 17, 4],"float64"), Tensor([268435457, 4, 2],"float64"), )
paddle.matmul(Tensor([1, 17, 4],"float64"), Tensor([1, 1073741825, 2],"float64"), )
paddle.matmul(Tensor([1, 17, 4],"float64"), Tensor([1, 4, 536870913],"float64"), )
paddle.matmul(Tensor([31580642, 17, 4],"float64"), Tensor([31580642, 4, 2],"float64"), )
paddle.matmul(Tensor([1, 17, 126322568],"float64"), Tensor([1, 4, 126322568],"float64"), )
paddle.matmul(Tensor([31580642, 17, 4],"float64"), Tensor([1, 4, 4],"float64"), )
paddle.matmul(Tensor([1, 17, 126322568],"float64"), Tensor([1, 4, 4],"float64"), )
paddle.matmul(Tensor([1, 17, 4],"float64"), Tensor([134217729, 4, 4],"float64"), )
paddle.matmul(Tensor([1, 17, 4],"float64"), Tensor([1, 536870913, 4],"float64"), )
paddle.matmul(Tensor([31580642, 17, 4],"float64"), Tensor([31580642, 4, 4],"float64"), )
paddle.matmul(Tensor([31580642, 17, 4],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([1, 17, 126322568],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([1, 17, 4],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([1, 17, 4],"float64"), Tensor([4, 536870913],"float64"), )
paddle.matmul(Tensor([31580642, 17, 4],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([1, 17, 126322568],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([1, 17, 4],"float64"), Tensor([536870913, 4],"float64"), )
paddle.matmul(Tensor([38949, 1723, 64],"float32"), Tensor([64, 40],"float32"), )
paddle.matmul(Tensor([1, 67108864, 64],"float32"), Tensor([64, 40],"float32"), )
paddle.matmul(Tensor([1, 1723, 2492727],"float32"), Tensor([64, 40],"float32"), )
paddle.matmul(Tensor([1, 1723, 64],"float32"), Tensor([107374183, 40],"float32"), )
paddle.matmul(Tensor([1, 1723, 64],"float32"), Tensor([64, 67108864],"float32"), )
paddle.matmul(Tensor([38949, 1723, 64],"float32"), Tensor([64, 64],"float32"), )
paddle.matmul(Tensor([1, 67108864, 64],"float32"), Tensor([64, 64],"float32"), )
paddle.matmul(Tensor([1, 1723, 2492727],"float32"), Tensor([64, 64],"float32"), )
paddle.matmul(Tensor([1, 1723, 64],"float32"), Tensor([67108864, 64],"float32"), )
paddle.matmul(Tensor([238609295, 18],"float32"), Tensor([1],"float32"), transpose_x=True, transpose_y=False, )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([1],"float32"), transpose_x=True, transpose_y=False, )
paddle.matmul(Tensor([1, 18],"float32"), Tensor([4294967295],"float32"), transpose_x=True, transpose_y=False, )
paddle.matmul(Tensor([238609295, 18],"float32"), Tensor([18],"float32"), )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([18],"float32"), )
paddle.matmul(Tensor([1, 18],"float32"), Tensor([4294967295],"float32"), )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([2, 4],"float32"), )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([2, 4],"float32"), )
paddle.matmul(Tensor([1, 2],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.matmul(Tensor([1, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 4],"float32"), )
paddle.matmul(Tensor([1, 4294967295],"float32"), Tensor([2, 4294967295],"float32"), )
paddle.matmul(Tensor([35791395, 3, 2, 5, 4],"float32"), Tensor([1, 3, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 107374183, 2, 5, 4],"float32"), Tensor([1, 3, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 71582789, 5, 4],"float32"), Tensor([1, 3, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 178956971, 4],"float32"), Tensor([1, 3, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 143165577],"float32"), Tensor([1, 3, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 4],"float32"), Tensor([44739243, 3, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 4],"float32"), Tensor([1, 134217728, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 4],"float32"), Tensor([1, 3, 89478486, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 4],"float32"), Tensor([1, 3, 2, 178956971, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 4],"float32"), Tensor([1, 3, 2, 4, 178956971],"float32"), )
paddle.matmul(Tensor([35791395, 3, 2, 5, 4],"float32"), Tensor([35791395, 3, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 107374183, 2, 5, 4],"float32"), Tensor([1, 107374183, 2, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 71582789, 5, 4],"float32"), Tensor([1, 3, 71582789, 4, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 178956971, 4],"float32"), Tensor([1, 3, 2, 178956971, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 143165577],"float32"), Tensor([1, 3, 2, 4, 143165577],"float32"), )
paddle.matmul(Tensor([28633116, 3, 2, 5, 5],"float16"), Tensor([1, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([1, 85899346, 2, 5, 5],"float16"), Tensor([1, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 57266231, 5, 5],"float16"), Tensor([1, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 2, 143165577, 5],"float16"), Tensor([1, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 2, 5, 143165577],"float16"), Tensor([1, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float16"), Tensor([35791395, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float16"), Tensor([1, 107374183, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float16"), Tensor([1, 3, 71582789, 5, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float16"), Tensor([1, 3, 2, 178956971, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float16"), Tensor([1, 3, 2, 5, 143165577],"float16"), )
paddle.matmul(Tensor([28633116, 3, 2, 5, 5],"float16"), Tensor([28633116, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([1, 85899346, 2, 5, 5],"float16"), Tensor([1, 85899346, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 57266231, 5, 5],"float16"), Tensor([1, 3, 57266231, 5, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 2, 143165577, 5],"float16"), Tensor([1, 3, 2, 143165577, 4],"float16"), )
paddle.matmul(Tensor([1, 3, 2, 5, 143165577],"float16"), Tensor([1, 3, 2, 5, 143165577],"float16"), )
paddle.matmul(Tensor([28633116, 3, 2, 5, 5],"float32"), Tensor([1, 3, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([1, 85899346, 2, 5, 5],"float32"), Tensor([1, 3, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 57266231, 5, 5],"float32"), Tensor([1, 3, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 143165577, 5],"float32"), Tensor([1, 3, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 143165577],"float32"), Tensor([1, 3, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float32"), Tensor([35791395, 3, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float32"), Tensor([1, 107374183, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float32"), Tensor([1, 3, 71582789, 5, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float32"), Tensor([1, 3, 2, 178956971, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 5],"float32"), Tensor([1, 3, 2, 5, 143165577],"float32"), )
paddle.matmul(Tensor([28633116, 3, 2, 5, 5],"float32"), Tensor([28633116, 3, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([1, 85899346, 2, 5, 5],"float32"), Tensor([1, 85899346, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 57266231, 5, 5],"float32"), Tensor([1, 3, 57266231, 5, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 143165577, 5],"float32"), Tensor([1, 3, 2, 143165577, 4],"float32"), )
paddle.matmul(Tensor([1, 3, 2, 5, 143165577],"float32"), Tensor([1, 3, 2, 5, 143165577],"float32"), )
paddle.matmul(Tensor([47721859, 3, 5, 6],"float16"), Tensor([6, 8],"float16"), )
paddle.matmul(Tensor([1, 143165577, 5, 6],"float16"), Tensor([6, 8],"float16"), )
paddle.matmul(Tensor([1, 3, 238609295, 6],"float16"), Tensor([6, 8],"float16"), )
paddle.matmul(Tensor([1, 3, 5, 286331153],"float16"), Tensor([6, 8],"float16"), )
paddle.matmul(Tensor([1, 3, 5, 6],"float16"), Tensor([536870912, 8],"float16"), )
paddle.matmul(Tensor([1, 3, 5, 6],"float16"), Tensor([6, 715827883],"float16"), )
paddle.matmul(Tensor([47721859, 3, 5, 6],"float32"), Tensor([6, 8],"float32"), )
paddle.matmul(Tensor([1, 143165577, 5, 6],"float32"), Tensor([6, 8],"float32"), )
paddle.matmul(Tensor([1, 3, 238609295, 6],"float32"), Tensor([6, 8],"float32"), )
paddle.matmul(Tensor([1, 3, 5, 286331153],"float32"), Tensor([6, 8],"float32"), )
paddle.matmul(Tensor([1, 3, 5, 6],"float32"), Tensor([536870912, 8],"float32"), )
paddle.matmul(Tensor([1, 3, 5, 6],"float32"), Tensor([6, 715827883],"float32"), )
paddle.matmul(Tensor([17896, 30, 40, 200],"float32"), Tensor([30, 1, 200, 40],"float32"), )
paddle.matmul(Tensor([1, 536871, 40, 200],"float32"), Tensor([30, 1, 200, 40],"float32"), )
paddle.matmul(Tensor([1, 30, 715828, 200],"float32"), Tensor([30, 1, 200, 40],"float32"), )
paddle.matmul(Tensor([1, 30, 40, 3579140],"float32"), Tensor([30, 1, 200, 40],"float32"), )
paddle.matmul(Tensor([1, 30, 40, 200],"float32"), Tensor([536871, 1, 200, 40],"float32"), )
paddle.matmul(Tensor([1, 30, 40, 200],"float32"), Tensor([30, 17896, 200, 40],"float32"), )
paddle.matmul(Tensor([1, 30, 40, 200],"float32"), Tensor([30, 1, 3579140, 40],"float32"), )
paddle.matmul(Tensor([1, 30, 40, 200],"float32"), Tensor([30, 1, 200, 715828],"float32"), )
paddle.matmul(Tensor([17896, 30, 40, 200],"float32"), Tensor([17896, 1, 200, 40],"float32"), )
paddle.matmul(Tensor([1, 536871, 40, 200],"float32"), Tensor([30, 536871, 200, 40],"float32"), )
paddle.matmul(Tensor([1, 30, 715828, 200],"float32"), Tensor([30, 1, 715828, 40],"float32"), )
paddle.matmul(Tensor([1, 30, 40, 3579140],"float32"), Tensor([30, 1, 200, 3579140],"float32"), )
paddle.matmul(Tensor([67108865, 32],"float64"), Tensor([128, 32],"float64"), transpose_y=True, )
paddle.matmul(Tensor([1, 2147483649],"float64"), Tensor([128, 32],"float64"), transpose_y=True, )
paddle.matmul(Tensor([1, 32],"float64"), Tensor([67108865, 32],"float64"), transpose_y=True, )
paddle.matmul(Tensor([1, 32],"float64"), Tensor([128, 16777217],"float64"), transpose_y=True, )
paddle.matmul(Tensor([67108865, 32],"float64"), Tensor([67108865, 32],"float64"), transpose_y=True, )
paddle.matmul(Tensor([1, 2147483649],"float64"), Tensor([128, 2147483649],"float64"), transpose_y=True, )
paddle.matmul(Tensor([5368710, 4, 100],"float64"), Tensor([1, 100, 2],"float64"), )
paddle.matmul(Tensor([1, 21474837, 100],"float64"), Tensor([1, 100, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 536870913],"float64"), Tensor([1, 100, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 100],"float64"), Tensor([10737419, 100, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 100],"float64"), Tensor([1, 1073741825, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 100],"float64"), Tensor([1, 100, 21474837],"float64"), )
paddle.matmul(Tensor([5368710, 4, 100],"float64"), Tensor([5368710, 100, 2],"float64"), )
paddle.matmul(Tensor([1, 21474837, 100],"float64"), Tensor([1, 21474837, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 536870913],"float64"), Tensor([1, 100, 536870913],"float64"), )
paddle.matmul(Tensor([5368710, 4, 100],"float64"), Tensor([1, 100, 4],"float64"), )
paddle.matmul(Tensor([1, 21474837, 100],"float64"), Tensor([1, 100, 4],"float64"), )
paddle.matmul(Tensor([1, 4, 536870913],"float64"), Tensor([1, 100, 4],"float64"), )
paddle.matmul(Tensor([1, 4, 100],"float64"), Tensor([5368710, 100, 4],"float64"), )
paddle.matmul(Tensor([1, 4, 100],"float64"), Tensor([1, 536870913, 4],"float64"), )
paddle.matmul(Tensor([5368710, 4, 100],"float64"), Tensor([5368710, 100, 4],"float64"), )
paddle.matmul(Tensor([1, 21474837, 100],"float64"), Tensor([1, 21474837, 4],"float64"), )
paddle.matmul(Tensor([5368710, 4, 100],"float64"), Tensor([100, 2],"float64"), )
paddle.matmul(Tensor([1, 21474837, 100],"float64"), Tensor([100, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 536870913],"float64"), Tensor([100, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 100],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 100],"float64"), Tensor([100, 21474837],"float64"), )
paddle.matmul(Tensor([31580642, 4, 17],"float64"), Tensor([1, 17, 2],"float64"), )
paddle.matmul(Tensor([1, 126322568, 17],"float64"), Tensor([1, 17, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 536870913],"float64"), Tensor([1, 17, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 17],"float64"), Tensor([63161284, 17, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 17],"float64"), Tensor([1, 1073741825, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 17],"float64"), Tensor([1, 17, 126322568],"float64"), )
paddle.matmul(Tensor([31580642, 4, 17],"float64"), Tensor([31580642, 17, 2],"float64"), )
paddle.matmul(Tensor([1, 126322568, 17],"float64"), Tensor([1, 126322568, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 536870913],"float64"), Tensor([1, 17, 536870913],"float64"), )
paddle.matmul(Tensor([31580642, 4, 17],"float64"), Tensor([1, 17, 4],"float64"), )
paddle.matmul(Tensor([1, 126322568, 17],"float64"), Tensor([1, 17, 4],"float64"), )
paddle.matmul(Tensor([1, 4, 536870913],"float64"), Tensor([1, 17, 4],"float64"), )
paddle.matmul(Tensor([1, 4, 17],"float64"), Tensor([31580642, 17, 4],"float64"), )
paddle.matmul(Tensor([1, 4, 17],"float64"), Tensor([1, 536870913, 4],"float64"), )
paddle.matmul(Tensor([31580642, 4, 17],"float64"), Tensor([31580642, 17, 4],"float64"), )
paddle.matmul(Tensor([1, 126322568, 17],"float64"), Tensor([1, 126322568, 4],"float64"), )
paddle.matmul(Tensor([31580642, 4, 17],"float64"), Tensor([17, 2],"float64"), )
paddle.matmul(Tensor([1, 126322568, 17],"float64"), Tensor([17, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 536870913],"float64"), Tensor([17, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 17],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([1, 4, 17],"float64"), Tensor([17, 126322568],"float64"), )
paddle.matmul(Tensor([536871, 40, 100],"float64"), Tensor([1, 100, 12],"float64"), )
paddle.matmul(Tensor([1, 21474837, 100],"float64"), Tensor([1, 100, 12],"float64"), )
paddle.matmul(Tensor([1, 40, 53687092],"float64"), Tensor([1, 100, 12],"float64"), )
paddle.matmul(Tensor([1, 40, 100],"float64"), Tensor([1789570, 100, 12],"float64"), )
paddle.matmul(Tensor([1, 40, 100],"float64"), Tensor([1, 178956971, 12],"float64"), )
paddle.matmul(Tensor([1, 40, 100],"float64"), Tensor([1, 100, 21474837],"float64"), )
paddle.matmul(Tensor([536871, 40, 100],"float64"), Tensor([536871, 100, 12],"float64"), )
paddle.matmul(Tensor([1, 21474837, 100],"float64"), Tensor([1, 21474837, 12],"float64"), )
paddle.matmul(Tensor([1, 40, 53687092],"float64"), Tensor([1, 100, 53687092],"float64"), )
paddle.matmul(Tensor([536871, 40, 100],"float64"), Tensor([1, 100, 6],"float64"), )
paddle.matmul(Tensor([1, 21474837, 100],"float64"), Tensor([1, 100, 6],"float64"), )
paddle.matmul(Tensor([1, 40, 53687092],"float64"), Tensor([1, 100, 6],"float64"), )
paddle.matmul(Tensor([1, 40, 100],"float64"), Tensor([3579140, 100, 6],"float64"), )
paddle.matmul(Tensor([1, 40, 100],"float64"), Tensor([1, 357913942, 6],"float64"), )
paddle.matmul(Tensor([536871, 40, 100],"float64"), Tensor([536871, 100, 6],"float64"), )
paddle.matmul(Tensor([1, 21474837, 100],"float64"), Tensor([1, 21474837, 6],"float64"), )
paddle.matmul(Tensor([536871, 40, 100],"float64"), Tensor([1, 100, 8],"float64"), )
paddle.matmul(Tensor([1, 21474837, 100],"float64"), Tensor([1, 100, 8],"float64"), )
paddle.matmul(Tensor([1, 40, 53687092],"float64"), Tensor([1, 100, 8],"float64"), )
paddle.matmul(Tensor([1, 40, 100],"float64"), Tensor([2684355, 100, 8],"float64"), )
paddle.matmul(Tensor([1, 40, 100],"float64"), Tensor([1, 268435457, 8],"float64"), )
paddle.matmul(Tensor([536871, 40, 100],"float64"), Tensor([536871, 100, 8],"float64"), )
paddle.matmul(Tensor([1, 21474837, 100],"float64"), Tensor([1, 21474837, 8],"float64"), )
paddle.matmul(Tensor([536871, 40, 100],"float64"), Tensor([100, 12],"float64"), )
paddle.matmul(Tensor([1, 21474837, 100],"float64"), Tensor([100, 12],"float64"), )
paddle.matmul(Tensor([1, 40, 53687092],"float64"), Tensor([100, 12],"float64"), )
paddle.matmul(Tensor([1, 40, 100],"float64"), Tensor([178956971, 12],"float64"), )
paddle.matmul(Tensor([1, 40, 100],"float64"), Tensor([100, 21474837],"float64"), )
paddle.matmul(Tensor([536871, 40, 100],"float64"), Tensor([100, 6],"float64"), )
paddle.matmul(Tensor([1, 21474837, 100],"float64"), Tensor([100, 6],"float64"), )
paddle.matmul(Tensor([1, 40, 53687092],"float64"), Tensor([100, 6],"float64"), )
paddle.matmul(Tensor([1, 40, 100],"float64"), Tensor([357913942, 6],"float64"), )
paddle.matmul(Tensor([536871, 40, 100],"float64"), Tensor([100, 8],"float64"), )
paddle.matmul(Tensor([1, 21474837, 100],"float64"), Tensor([100, 8],"float64"), )
paddle.matmul(Tensor([1, 40, 53687092],"float64"), Tensor([100, 8],"float64"), )
paddle.matmul(Tensor([1, 40, 100],"float64"), Tensor([268435457, 8],"float64"), )
paddle.matmul(Tensor([149797, 448, 64],"float32"), Tensor([64, 64],"float32"), )
paddle.matmul(Tensor([1, 448, 9586981],"float32"), Tensor([64, 64],"float32"), )
paddle.matmul(Tensor([1, 448, 64],"float32"), Tensor([67108864, 64],"float32"), )
paddle.matmul(Tensor([1, 448, 64],"float32"), Tensor([64, 67108864],"float32"), )
paddle.matmul(Tensor([139811, 480, 64],"float32"), Tensor([64, 40],"float32"), )
paddle.matmul(Tensor([1, 480, 8947849],"float32"), Tensor([64, 40],"float32"), )
paddle.matmul(Tensor([1, 480, 64],"float32"), Tensor([107374183, 40],"float32"), )
paddle.matmul(Tensor([1, 480, 64],"float32"), Tensor([64, 67108864],"float32"), )
paddle.matmul(Tensor([136124, 493, 64],"float32"), Tensor([64, 40],"float32"), )
paddle.matmul(Tensor([1, 493, 8711902],"float32"), Tensor([64, 40],"float32"), )
paddle.matmul(Tensor([1, 493, 64],"float32"), Tensor([107374183, 40],"float32"), )
paddle.matmul(Tensor([1, 493, 64],"float32"), Tensor([64, 67108864],"float32"), )
paddle.matmul(Tensor([126621, 530, 64],"float32"), Tensor([64, 64],"float32"), )
paddle.matmul(Tensor([1, 530, 8103712],"float32"), Tensor([64, 64],"float32"), )
paddle.matmul(Tensor([1, 530, 64],"float32"), Tensor([67108864, 64],"float32"), )
paddle.matmul(Tensor([1, 530, 64],"float32"), Tensor([64, 67108864],"float32"), )
paddle.matmul(Tensor([32768, 8, 128, 128],"float32"), Tensor([1, 8, 128, 16],"float32"), )
paddle.matmul(Tensor([1, 262144, 128, 128],"float32"), Tensor([1, 8, 128, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 4194304, 128],"float32"), Tensor([1, 8, 128, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 128, 4194304],"float32"), Tensor([1, 8, 128, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 128, 128],"float32"), Tensor([262144, 8, 128, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 128, 128],"float32"), Tensor([1, 2097152, 128, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 128, 128],"float32"), Tensor([1, 8, 33554432, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 128, 128],"float32"), Tensor([1, 8, 128, 4194304],"float32"), )
paddle.matmul(Tensor([32768, 8, 128, 128],"float32"), Tensor([32768, 8, 128, 16],"float32"), )
paddle.matmul(Tensor([1, 262144, 128, 128],"float32"), Tensor([1, 262144, 128, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 4194304, 128],"float32"), Tensor([1, 8, 4194304, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 128, 4194304],"float32"), Tensor([1, 8, 128, 4194304],"float32"), )
paddle.matmul(Tensor([262144, 8, 128, 16],"float32"), Tensor([1, 8, 16, 128],"float32"), )
paddle.matmul(Tensor([1, 2097152, 128, 16],"float32"), Tensor([1, 8, 16, 128],"float32"), )
paddle.matmul(Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 16, 128],"float32"), )
paddle.matmul(Tensor([1, 8, 128, 4194304],"float32"), Tensor([1, 8, 16, 128],"float32"), )
paddle.matmul(Tensor([1, 8, 128, 16],"float32"), Tensor([262144, 8, 16, 128],"float32"), )
paddle.matmul(Tensor([1, 8, 128, 16],"float32"), Tensor([1, 2097152, 16, 128],"float32"), )
paddle.matmul(Tensor([1, 8, 128, 16],"float32"), Tensor([1, 8, 4194304, 128],"float32"), )
paddle.matmul(Tensor([1, 8, 128, 16],"float32"), Tensor([1, 8, 16, 33554432],"float32"), )
paddle.matmul(Tensor([262144, 8, 128, 16],"float32"), Tensor([262144, 8, 16, 128],"float32"), )
paddle.matmul(Tensor([1, 2097152, 128, 16],"float32"), Tensor([1, 2097152, 16, 128],"float32"), )
paddle.matmul(Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 33554432, 128],"float32"), )
paddle.matmul(Tensor([1, 8, 128, 4194304],"float32"), Tensor([1, 8, 16, 4194304],"float32"), )
paddle.matmul(Tensor([524288, 8, 32, 32],"float32"), Tensor([1, 8, 32, 8],"float32"), )
paddle.matmul(Tensor([1, 4194304, 32, 32],"float32"), Tensor([1, 8, 32, 8],"float32"), )
paddle.matmul(Tensor([1, 8, 16777216, 32],"float32"), Tensor([1, 8, 32, 8],"float32"), )
paddle.matmul(Tensor([1, 8, 32, 16777216],"float32"), Tensor([1, 8, 32, 8],"float32"), )
paddle.matmul(Tensor([1, 8, 32, 32],"float32"), Tensor([2097152, 8, 32, 8],"float32"), )
paddle.matmul(Tensor([1, 8, 32, 32],"float32"), Tensor([1, 16777216, 32, 8],"float32"), )
paddle.matmul(Tensor([1, 8, 32, 32],"float32"), Tensor([1, 8, 67108864, 8],"float32"), )
paddle.matmul(Tensor([1, 8, 32, 32],"float32"), Tensor([1, 8, 32, 16777216],"float32"), )
paddle.matmul(Tensor([524288, 8, 32, 32],"float32"), Tensor([524288, 8, 32, 8],"float32"), )
paddle.matmul(Tensor([1, 4194304, 32, 32],"float32"), Tensor([1, 4194304, 32, 8],"float32"), )
paddle.matmul(Tensor([1, 8, 16777216, 32],"float32"), Tensor([1, 8, 16777216, 8],"float32"), )
paddle.matmul(Tensor([1, 8, 32, 16777216],"float32"), Tensor([1, 8, 32, 16777216],"float32"), )
paddle.matmul(Tensor([2097152, 8, 32, 8],"float32"), Tensor([1, 8, 8, 32],"float32"), )
paddle.matmul(Tensor([1, 16777216, 32, 8],"float32"), Tensor([1, 8, 8, 32],"float32"), )
paddle.matmul(Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 8, 32],"float32"), )
paddle.matmul(Tensor([1, 8, 32, 16777216],"float32"), Tensor([1, 8, 8, 32],"float32"), )
paddle.matmul(Tensor([1, 8, 32, 8],"float32"), Tensor([2097152, 8, 8, 32],"float32"), )
paddle.matmul(Tensor([1, 8, 32, 8],"float32"), Tensor([1, 16777216, 8, 32],"float32"), )
paddle.matmul(Tensor([1, 8, 32, 8],"float32"), Tensor([1, 8, 16777216, 32],"float32"), )
paddle.matmul(Tensor([1, 8, 32, 8],"float32"), Tensor([1, 8, 8, 67108864],"float32"), )
paddle.matmul(Tensor([2097152, 8, 32, 8],"float32"), Tensor([2097152, 8, 8, 32],"float32"), )
paddle.matmul(Tensor([1, 16777216, 32, 8],"float32"), Tensor([1, 16777216, 8, 32],"float32"), )
paddle.matmul(Tensor([1, 8, 67108864, 8],"float32"), Tensor([1, 8, 67108864, 32],"float32"), )
paddle.matmul(Tensor([1, 8, 32, 16777216],"float32"), Tensor([1, 8, 8, 16777216],"float32"), )
paddle.matmul(Tensor([524288, 8, 64, 16],"float32"), Tensor([1, 8, 64, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4194304, 64, 16],"float32"), Tensor([1, 8, 64, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 64, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 8, 64, 8388608],"float32"), Tensor([1, 8, 64, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 8, 64, 16],"float32"), Tensor([524288, 8, 64, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 8, 64, 16],"float32"), Tensor([1, 4194304, 64, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 8, 64, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 8, 64, 16],"float32"), Tensor([1, 8, 64, 8388608],"float32"), transpose_y=True, )
paddle.matmul(Tensor([524288, 8, 64, 16],"float32"), Tensor([524288, 8, 64, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 4194304, 64, 16],"float32"), Tensor([1, 4194304, 64, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 8, 33554432, 16],"float32"), Tensor([1, 8, 33554432, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 8, 64, 8388608],"float32"), Tensor([1, 8, 64, 8388608],"float32"), transpose_y=True, )
paddle.matmul(Tensor([131072, 8, 64, 64],"float32"), Tensor([1, 8, 64, 16],"float32"), )
paddle.matmul(Tensor([1, 1048576, 64, 64],"float32"), Tensor([1, 8, 64, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 8388608, 64],"float32"), Tensor([1, 8, 64, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 64, 8388608],"float32"), Tensor([1, 8, 64, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 64, 64],"float32"), Tensor([524288, 8, 64, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 64, 64],"float32"), Tensor([1, 4194304, 64, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 64, 64],"float32"), Tensor([1, 8, 33554432, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 64, 64],"float32"), Tensor([1, 8, 64, 8388608],"float32"), )
paddle.matmul(Tensor([131072, 8, 64, 64],"float32"), Tensor([131072, 8, 64, 16],"float32"), )
paddle.matmul(Tensor([1, 1048576, 64, 64],"float32"), Tensor([1, 1048576, 64, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 8388608, 64],"float32"), Tensor([1, 8, 8388608, 16],"float32"), )
paddle.matmul(Tensor([1, 8, 64, 8388608],"float32"), Tensor([1, 8, 64, 8388608],"float32"), )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.matmul(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), )
paddle.matmul(Tensor([429496730, 10],"float32"), Tensor([10, 10],"float32"), )
paddle.matmul(Tensor([10, 429496730],"float32"), Tensor([10, 10],"float32"), )
paddle.matmul(Tensor([10, 10],"float32"), Tensor([429496730, 10],"float32"), )
paddle.matmul(Tensor([10, 10],"float32"), Tensor([10, 429496730],"float32"), )
paddle.matmul(Tensor([429496730, 10],"float32"), Tensor([429496730, 10],"float32"), )
paddle.matmul(Tensor([10, 429496730],"float32"), Tensor([10, 429496730],"float32"), )
paddle.matmul(Tensor([429496730, 10],"float32"), Tensor([10, 16],"float32"), )
paddle.matmul(Tensor([10, 429496730],"float32"), Tensor([10, 16],"float32"), )
paddle.matmul(Tensor([10, 10],"float32"), Tensor([268435456, 16],"float32"), )
paddle.matmul(Tensor([429496730, 10],"float32"), Tensor([429496730, 16],"float32"), )
paddle.matmul(Tensor([429496730, 10],"float32"), Tensor([10],"float32"), )
paddle.matmul(Tensor([10, 429496730],"float32"), Tensor([10],"float32"), )
paddle.matmul(Tensor([10, 10],"float32"), Tensor([4294967295],"float32"), )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([10],"float32"), )
paddle.matmul(Tensor([10],"float32"), Tensor([4294967295],"float32"), )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([10],"float32"), True, True, )
paddle.matmul(Tensor([10],"float32"), Tensor([4294967295],"float32"), True, True, )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), True, True, )
paddle.matmul(Tensor([536870913, 4],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([100, 21474837],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([100, 4],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([100, 4],"float64"), Tensor([4, 536870913],"float64"), )
paddle.matmul(Tensor([536870913, 4],"float64"), Tensor([536870913, 2],"float64"), )
paddle.matmul(Tensor([100, 21474837],"float64"), Tensor([4, 21474837],"float64"), )
paddle.matmul(Tensor([536870913, 4],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([100, 21474837],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([100, 4],"float64"), Tensor([536870913, 4],"float64"), )
paddle.matmul(Tensor([536870913, 4],"float64"), Tensor([536870913, 4],"float64"), )
paddle.matmul(Tensor([53687092, 40],"float64"), Tensor([40, 12],"float64"), )
paddle.matmul(Tensor([100, 21474837],"float64"), Tensor([40, 12],"float64"), )
paddle.matmul(Tensor([100, 40],"float64"), Tensor([178956971, 12],"float64"), )
paddle.matmul(Tensor([100, 40],"float64"), Tensor([40, 53687092],"float64"), )
paddle.matmul(Tensor([53687092, 40],"float64"), Tensor([53687092, 12],"float64"), )
paddle.matmul(Tensor([100, 21474837],"float64"), Tensor([40, 21474837],"float64"), )
paddle.matmul(Tensor([53687092, 40],"float64"), Tensor([40, 21],"float64"), )
paddle.matmul(Tensor([100, 21474837],"float64"), Tensor([40, 21],"float64"), )
paddle.matmul(Tensor([100, 40],"float64"), Tensor([102261127, 21],"float64"), )
paddle.matmul(Tensor([53687092, 40],"float64"), Tensor([53687092, 21],"float64"), )
paddle.matmul(Tensor([53687092, 40],"float64"), Tensor([40, 6],"float64"), )
paddle.matmul(Tensor([100, 21474837],"float64"), Tensor([40, 6],"float64"), )
paddle.matmul(Tensor([100, 40],"float64"), Tensor([357913942, 6],"float64"), )
paddle.matmul(Tensor([53687092, 40],"float64"), Tensor([53687092, 6],"float64"), )
paddle.matmul(Tensor([53687092, 40],"float64"), Tensor([40, 8],"float64"), )
paddle.matmul(Tensor([100, 21474837],"float64"), Tensor([40, 8],"float64"), )
paddle.matmul(Tensor([100, 40],"float64"), Tensor([268435457, 8],"float64"), )
paddle.matmul(Tensor([53687092, 40],"float64"), Tensor([53687092, 8],"float64"), )
paddle.matmul(Tensor([4294968, 1000],"float32"), Tensor([1000, 1000],"float32"), )
paddle.matmul(Tensor([1000, 4294968],"float32"), Tensor([1000, 1000],"float32"), )
paddle.matmul(Tensor([1000, 1000],"float32"), Tensor([4294968, 1000],"float32"), )
paddle.matmul(Tensor([1000, 1000],"float32"), Tensor([1000, 4294968],"float32"), )
paddle.matmul(Tensor([4294968, 1000],"float32"), Tensor([4294968, 1000],"float32"), )
paddle.matmul(Tensor([1000, 4294968],"float32"), Tensor([1000, 4294968],"float32"), )
paddle.matmul(Tensor([4194304, 1024],"float32"), Tensor([1024, 1024],"float32"), )
paddle.matmul(Tensor([1024, 4194304],"float32"), Tensor([1024, 1024],"float32"), )
paddle.matmul(Tensor([1024, 1024],"float32"), Tensor([4194304, 1024],"float32"), )
paddle.matmul(Tensor([1024, 1024],"float32"), Tensor([1024, 4194304],"float32"), )
paddle.matmul(Tensor([4194304, 1024],"float32"), Tensor([4194304, 1024],"float32"), )
paddle.matmul(Tensor([1024, 4194304],"float32"), Tensor([1024, 4194304],"float32"), )
paddle.matmul(Tensor([134217728, 32],"float16"), Tensor([12, 128],"float16"), transpose_x=True, )
paddle.matmul(Tensor([12, 357913942],"float16"), Tensor([12, 128],"float16"), transpose_x=True, )
paddle.matmul(Tensor([12, 32],"float16"), Tensor([33554432, 128],"float16"), transpose_x=True, )
paddle.matmul(Tensor([12, 32],"float16"), Tensor([12, 357913942],"float16"), transpose_x=True, )
paddle.matmul(Tensor([134217728, 32],"float16"), Tensor([134217728, 128],"float16"), transpose_x=True, )
paddle.matmul(Tensor([12, 357913942],"float16"), Tensor([12, 357913942],"float16"), transpose_x=True, )
paddle.matmul(Tensor([134217728, 32],"float32"), Tensor([12, 128],"float32"), transpose_x=True, )
paddle.matmul(Tensor([12, 357913942],"float32"), Tensor([12, 128],"float32"), transpose_x=True, )
paddle.matmul(Tensor([12, 32],"float32"), Tensor([33554432, 128],"float32"), transpose_x=True, )
paddle.matmul(Tensor([12, 32],"float32"), Tensor([12, 357913942],"float32"), transpose_x=True, )
paddle.matmul(Tensor([134217728, 32],"float32"), Tensor([134217728, 128],"float32"), transpose_x=True, )
paddle.matmul(Tensor([12, 357913942],"float32"), Tensor([12, 357913942],"float32"), transpose_x=True, )
paddle.matmul(Tensor([536870912, 8],"float16"), Tensor([8, 6],"float16"), )
paddle.matmul(Tensor([15, 286331153],"float16"), Tensor([8, 6],"float16"), )
paddle.matmul(Tensor([15, 8],"float16"), Tensor([715827883, 6],"float16"), )
paddle.matmul(Tensor([15, 8],"float16"), Tensor([8, 536870912],"float16"), )
paddle.matmul(Tensor([536870912, 8],"float16"), Tensor([536870912, 6],"float16"), )
paddle.matmul(Tensor([15, 286331153],"float16"), Tensor([8, 286331153],"float16"), )
paddle.matmul(Tensor([536870912, 8],"float32"), Tensor([8, 6],"float32"), )
paddle.matmul(Tensor([15, 286331153],"float32"), Tensor([8, 6],"float32"), )
paddle.matmul(Tensor([15, 8],"float32"), Tensor([715827883, 6],"float32"), )
paddle.matmul(Tensor([15, 8],"float32"), Tensor([8, 536870912],"float32"), )
paddle.matmul(Tensor([536870912, 8],"float32"), Tensor([536870912, 6],"float32"), )
paddle.matmul(Tensor([15, 286331153],"float32"), Tensor([8, 286331153],"float32"), )
paddle.matmul(Tensor([536870912, 1, 8],"float32"), Tensor([8, 128],"float32"), )
paddle.matmul(Tensor([16, 33554432, 8],"float32"), Tensor([8, 128],"float32"), )
paddle.matmul(Tensor([16, 1, 268435456],"float32"), Tensor([8, 128],"float32"), )
paddle.matmul(Tensor([16, 1, 8],"float32"), Tensor([33554432, 128],"float32"), )
paddle.matmul(Tensor([16, 1, 8],"float32"), Tensor([8, 536870912],"float32"), )
paddle.matmul(Tensor([357913942, 12],"float32"), Tensor([12, 10],"float32"), )
paddle.matmul(Tensor([16, 268435456],"float32"), Tensor([12, 10],"float32"), )
paddle.matmul(Tensor([16, 12],"float32"), Tensor([429496730, 10],"float32"), )
paddle.matmul(Tensor([16, 12],"float32"), Tensor([12, 357913942],"float32"), )
paddle.matmul(Tensor([357913942, 12],"float32"), Tensor([357913942, 10],"float32"), )
paddle.matmul(Tensor([16, 268435456],"float32"), Tensor([12, 268435456],"float32"), )
paddle.matmul(Tensor([178956971, 12],"float64"), Tensor([12, 10],"float64"), )
paddle.matmul(Tensor([16, 134217729],"float64"), Tensor([12, 10],"float64"), )
paddle.matmul(Tensor([16, 12],"float64"), Tensor([214748365, 10],"float64"), )
paddle.matmul(Tensor([16, 12],"float64"), Tensor([12, 178956971],"float64"), )
paddle.matmul(Tensor([178956971, 12],"float64"), Tensor([178956971, 10],"float64"), )
paddle.matmul(Tensor([16, 134217729],"float64"), Tensor([12, 134217729],"float64"), )
paddle.matmul(Tensor([8192, 128, 32, 128],"float32"), Tensor([16, 128, 128, 32],"float32"), )
paddle.matmul(Tensor([16, 65536, 32, 128],"float32"), Tensor([16, 128, 128, 32],"float32"), )
paddle.matmul(Tensor([16, 128, 16384, 128],"float32"), Tensor([16, 128, 128, 32],"float32"), )
paddle.matmul(Tensor([16, 128, 32, 65536],"float32"), Tensor([16, 128, 128, 32],"float32"), )
paddle.matmul(Tensor([16, 128, 32, 128],"float32"), Tensor([8192, 128, 128, 32],"float32"), )
paddle.matmul(Tensor([16, 128, 32, 128],"float32"), Tensor([16, 65536, 128, 32],"float32"), )
paddle.matmul(Tensor([16, 128, 32, 128],"float32"), Tensor([16, 128, 65536, 32],"float32"), )
paddle.matmul(Tensor([16, 128, 32, 128],"float32"), Tensor([16, 128, 128, 16384],"float32"), )
paddle.matmul(Tensor([16, 65536, 32, 128],"float32"), Tensor([16, 65536, 128, 32],"float32"), )
paddle.matmul(Tensor([16, 128, 16384, 128],"float32"), Tensor([16, 128, 16384, 32],"float32"), )
paddle.matmul(Tensor([16, 128, 32, 65536],"float32"), Tensor([16, 128, 128, 65536],"float32"), )
paddle.matmul(Tensor([32768, 128, 32, 32],"float32"), Tensor([16, 128, 32, 128],"float32"), )
paddle.matmul(Tensor([16, 262144, 32, 32],"float32"), Tensor([16, 128, 32, 128],"float32"), )
paddle.matmul(Tensor([16, 128, 65536, 32],"float32"), Tensor([16, 128, 32, 128],"float32"), )
paddle.matmul(Tensor([16, 128, 32, 65536],"float32"), Tensor([16, 128, 32, 128],"float32"), )
paddle.matmul(Tensor([16, 128, 32, 32],"float32"), Tensor([8192, 128, 32, 128],"float32"), )
paddle.matmul(Tensor([16, 128, 32, 32],"float32"), Tensor([16, 65536, 32, 128],"float32"), )
paddle.matmul(Tensor([16, 128, 32, 32],"float32"), Tensor([16, 128, 16384, 128],"float32"), )
paddle.matmul(Tensor([16, 128, 32, 32],"float32"), Tensor([16, 128, 32, 65536],"float32"), )
paddle.matmul(Tensor([16, 262144, 32, 32],"float32"), Tensor([16, 262144, 32, 128],"float32"), )
paddle.matmul(Tensor([16, 128, 65536, 32],"float32"), Tensor([16, 128, 65536, 128],"float32"), )
paddle.matmul(Tensor([16, 128, 32, 65536],"float32"), Tensor([16, 128, 32, 65536],"float32"), )
paddle.matmul(Tensor([33554432, 128],"float32"), Tensor([128, 16],"float32"), )
paddle.matmul(Tensor([16, 268435456],"float32"), Tensor([128, 16],"float32"), )
paddle.matmul(Tensor([16, 128],"float32"), Tensor([268435456, 16],"float32"), )
paddle.matmul(Tensor([16, 128],"float32"), Tensor([128, 33554432],"float32"), )
paddle.matmul(Tensor([33554432, 128],"float32"), Tensor([33554432, 16],"float32"), )
paddle.matmul(Tensor([16, 268435456],"float32"), Tensor([128, 268435456],"float32"), )
paddle.matmul(Tensor([22369622, 16, 12],"float32"), Tensor([16, 12, 10],"float32"), )
paddle.matmul(Tensor([16, 22369622, 12],"float32"), Tensor([16, 12, 10],"float32"), )
paddle.matmul(Tensor([16, 16, 16777216],"float32"), Tensor([16, 12, 10],"float32"), )
paddle.matmul(Tensor([16, 16, 12],"float32"), Tensor([35791395, 12, 10],"float32"), )
paddle.matmul(Tensor([16, 16, 12],"float32"), Tensor([16, 26843546, 10],"float32"), )
paddle.matmul(Tensor([16, 16, 12],"float32"), Tensor([16, 12, 22369622],"float32"), )
paddle.matmul(Tensor([22369622, 16, 12],"float32"), Tensor([22369622, 12, 10],"float32"), )
paddle.matmul(Tensor([16, 22369622, 12],"float32"), Tensor([16, 22369622, 10],"float32"), )
paddle.matmul(Tensor([16, 16, 16777216],"float32"), Tensor([16, 12, 16777216],"float32"), )
paddle.matmul(Tensor([8193, 16, 128, 128],"float64"), Tensor([16, 16, 128, 16],"float64"), )
paddle.matmul(Tensor([16, 8193, 128, 128],"float64"), Tensor([16, 16, 128, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 65537, 128],"float64"), Tensor([16, 16, 128, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 128, 65537],"float64"), Tensor([16, 16, 128, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 128, 128],"float64"), Tensor([65537, 16, 128, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 128, 128],"float64"), Tensor([16, 65537, 128, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 128, 128],"float64"), Tensor([16, 16, 524289, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 128, 128],"float64"), Tensor([16, 16, 128, 65537],"float64"), )
paddle.matmul(Tensor([8193, 16, 128, 128],"float64"), Tensor([8193, 16, 128, 16],"float64"), )
paddle.matmul(Tensor([16, 8193, 128, 128],"float64"), Tensor([16, 8193, 128, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 65537, 128],"float64"), Tensor([16, 16, 65537, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 128, 65537],"float64"), Tensor([16, 16, 128, 65537],"float64"), )
paddle.matmul(Tensor([8193, 16, 128, 128],"float64"), Tensor([16, 16, 128, 32],"float64"), )
paddle.matmul(Tensor([16, 8193, 128, 128],"float64"), Tensor([16, 16, 128, 32],"float64"), )
paddle.matmul(Tensor([16, 16, 65537, 128],"float64"), Tensor([16, 16, 128, 32],"float64"), )
paddle.matmul(Tensor([16, 16, 128, 65537],"float64"), Tensor([16, 16, 128, 32],"float64"), )
paddle.matmul(Tensor([16, 16, 128, 128],"float64"), Tensor([32769, 16, 128, 32],"float64"), )
paddle.matmul(Tensor([16, 16, 128, 128],"float64"), Tensor([16, 32769, 128, 32],"float64"), )
paddle.matmul(Tensor([16, 16, 128, 128],"float64"), Tensor([16, 16, 262145, 32],"float64"), )
paddle.matmul(Tensor([8193, 16, 128, 128],"float64"), Tensor([8193, 16, 128, 32],"float64"), )
paddle.matmul(Tensor([16, 8193, 128, 128],"float64"), Tensor([16, 8193, 128, 32],"float64"), )
paddle.matmul(Tensor([16, 16, 65537, 128],"float64"), Tensor([16, 16, 65537, 32],"float64"), )
paddle.matmul(Tensor([65537, 16, 128, 16],"float64"), Tensor([16, 16, 128, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 65537, 128, 16],"float64"), Tensor([16, 16, 128, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 524289, 16],"float64"), Tensor([16, 16, 128, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 128, 65537],"float64"), Tensor([16, 16, 128, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 128, 16],"float64"), Tensor([65537, 16, 128, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 128, 16],"float64"), Tensor([16, 65537, 128, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 128, 16],"float64"), Tensor([16, 16, 524289, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 128, 16],"float64"), Tensor([16, 16, 128, 65537],"float64"), False, True, )
paddle.matmul(Tensor([65537, 16, 128, 16],"float64"), Tensor([65537, 16, 128, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 65537, 128, 16],"float64"), Tensor([16, 65537, 128, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 524289, 16],"float64"), Tensor([16, 16, 524289, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 128, 65537],"float64"), Tensor([16, 16, 128, 65537],"float64"), False, True, )
paddle.matmul(Tensor([32769, 16, 128, 32],"float64"), Tensor([16, 16, 128, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 32769, 128, 32],"float64"), Tensor([16, 16, 128, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 262145, 32],"float64"), Tensor([16, 16, 128, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 128, 65537],"float64"), Tensor([16, 16, 128, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 128, 32],"float64"), Tensor([32769, 16, 128, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 128, 32],"float64"), Tensor([16, 32769, 128, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 128, 32],"float64"), Tensor([16, 16, 262145, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 128, 32],"float64"), Tensor([16, 16, 128, 65537],"float64"), False, True, )
paddle.matmul(Tensor([32769, 16, 128, 32],"float64"), Tensor([32769, 16, 128, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 32769, 128, 32],"float64"), Tensor([16, 32769, 128, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 262145, 32],"float64"), Tensor([16, 16, 262145, 32],"float64"), False, True, )
paddle.matmul(Tensor([10737419, 16, 5, 5],"float32"), Tensor([16, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([16, 10737419, 5, 5],"float32"), Tensor([16, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([16, 16, 3355444, 5],"float32"), Tensor([16, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([16, 16, 5, 3355444],"float32"), Tensor([16, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([16, 16, 5, 5],"float32"), Tensor([10737419, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([16, 16, 5, 5],"float32"), Tensor([16, 10737419, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([16, 16, 5, 5],"float32"), Tensor([16, 16, 3355444, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([16, 16, 5, 5],"float32"), Tensor([16, 16, 5, 3355444],"float32"), False, True, None, )
paddle.matmul(Tensor([10737419, 16, 5, 5],"float32"), Tensor([10737419, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([16, 10737419, 5, 5],"float32"), Tensor([16, 10737419, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([16, 16, 3355444, 5],"float32"), Tensor([16, 16, 3355444, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([16, 16, 5, 3355444],"float32"), Tensor([16, 16, 5, 3355444],"float32"), False, True, None, )
paddle.matmul(Tensor([16385, 16, 512, 16],"float64"), Tensor([16, 16, 512, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16385, 512, 16],"float64"), Tensor([16, 16, 512, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 524289, 16],"float64"), Tensor([16, 16, 512, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 16385],"float64"), Tensor([16, 16, 512, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 16],"float64"), Tensor([16385, 16, 512, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 16],"float64"), Tensor([16, 16385, 512, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 16],"float64"), Tensor([16, 16, 524289, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 16],"float64"), Tensor([16, 16, 512, 16385],"float64"), False, True, )
paddle.matmul(Tensor([16385, 16, 512, 16],"float64"), Tensor([16385, 16, 512, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16385, 512, 16],"float64"), Tensor([16, 16385, 512, 16],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 16385],"float64"), Tensor([16, 16, 512, 16385],"float64"), False, True, )
paddle.matmul(Tensor([8193, 16, 512, 32],"float64"), Tensor([16, 16, 512, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 8193, 512, 32],"float64"), Tensor([16, 16, 512, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 262145, 32],"float64"), Tensor([16, 16, 512, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 16385],"float64"), Tensor([16, 16, 512, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 32],"float64"), Tensor([8193, 16, 512, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 32],"float64"), Tensor([16, 8193, 512, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 32],"float64"), Tensor([16, 16, 262145, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 32],"float64"), Tensor([16, 16, 512, 16385],"float64"), False, True, )
paddle.matmul(Tensor([8193, 16, 512, 32],"float64"), Tensor([8193, 16, 512, 32],"float64"), False, True, )
paddle.matmul(Tensor([16, 8193, 512, 32],"float64"), Tensor([16, 8193, 512, 32],"float64"), False, True, )
paddle.matmul(Tensor([513, 16, 512, 512],"float64"), Tensor([16, 16, 512, 16],"float64"), )
paddle.matmul(Tensor([16, 513, 512, 512],"float64"), Tensor([16, 16, 512, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 16385, 512],"float64"), Tensor([16, 16, 512, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 16385],"float64"), Tensor([16, 16, 512, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 512],"float64"), Tensor([16385, 16, 512, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 512],"float64"), Tensor([16, 16385, 512, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 512],"float64"), Tensor([16, 16, 524289, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 512],"float64"), Tensor([16, 16, 512, 16385],"float64"), )
paddle.matmul(Tensor([513, 16, 512, 512],"float64"), Tensor([513, 16, 512, 16],"float64"), )
paddle.matmul(Tensor([16, 513, 512, 512],"float64"), Tensor([16, 513, 512, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 16385, 512],"float64"), Tensor([16, 16, 16385, 16],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 16385],"float64"), Tensor([16, 16, 512, 16385],"float64"), )
paddle.matmul(Tensor([513, 16, 512, 512],"float64"), Tensor([16, 16, 512, 32],"float64"), )
paddle.matmul(Tensor([16, 513, 512, 512],"float64"), Tensor([16, 16, 512, 32],"float64"), )
paddle.matmul(Tensor([16, 16, 16385, 512],"float64"), Tensor([16, 16, 512, 32],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 16385],"float64"), Tensor([16, 16, 512, 32],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 512],"float64"), Tensor([8193, 16, 512, 32],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 512],"float64"), Tensor([16, 8193, 512, 32],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 512],"float64"), Tensor([16, 16, 262145, 32],"float64"), )
paddle.matmul(Tensor([513, 16, 512, 512],"float64"), Tensor([513, 16, 512, 32],"float64"), )
paddle.matmul(Tensor([16, 513, 512, 512],"float64"), Tensor([16, 513, 512, 32],"float64"), )
paddle.matmul(Tensor([16, 16, 16385, 512],"float64"), Tensor([16, 16, 16385, 32],"float64"), )
paddle.matmul(Tensor([513, 16, 512, 512],"float64"), Tensor([16, 16, 512, 64],"float64"), )
paddle.matmul(Tensor([16, 513, 512, 512],"float64"), Tensor([16, 16, 512, 64],"float64"), )
paddle.matmul(Tensor([16, 16, 16385, 512],"float64"), Tensor([16, 16, 512, 64],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 16385],"float64"), Tensor([16, 16, 512, 64],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 512],"float64"), Tensor([4097, 16, 512, 64],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 512],"float64"), Tensor([16, 4097, 512, 64],"float64"), )
paddle.matmul(Tensor([16, 16, 512, 512],"float64"), Tensor([16, 16, 131073, 64],"float64"), )
paddle.matmul(Tensor([513, 16, 512, 512],"float64"), Tensor([513, 16, 512, 64],"float64"), )
paddle.matmul(Tensor([16, 513, 512, 512],"float64"), Tensor([16, 513, 512, 64],"float64"), )
paddle.matmul(Tensor([16, 16, 16385, 512],"float64"), Tensor([16, 16, 16385, 64],"float64"), )
paddle.matmul(Tensor([4097, 16, 512, 64],"float64"), Tensor([16, 16, 512, 64],"float64"), False, True, )
paddle.matmul(Tensor([16, 4097, 512, 64],"float64"), Tensor([16, 16, 512, 64],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 131073, 64],"float64"), Tensor([16, 16, 512, 64],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 16385],"float64"), Tensor([16, 16, 512, 64],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 64],"float64"), Tensor([4097, 16, 512, 64],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 64],"float64"), Tensor([16, 4097, 512, 64],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 64],"float64"), Tensor([16, 16, 131073, 64],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 512, 64],"float64"), Tensor([16, 16, 512, 16385],"float64"), False, True, )
paddle.matmul(Tensor([4097, 16, 512, 64],"float64"), Tensor([4097, 16, 512, 64],"float64"), False, True, )
paddle.matmul(Tensor([16, 4097, 512, 64],"float64"), Tensor([16, 4097, 512, 64],"float64"), False, True, )
paddle.matmul(Tensor([16, 16, 131073, 64],"float64"), Tensor([16, 16, 131073, 64],"float64"), False, True, )
paddle.matmul(Tensor([5478275, 784],"float32"), Tensor([784, 784],"float32"), )
paddle.matmul(Tensor([16, 268435456],"float32"), Tensor([784, 784],"float32"), )
paddle.matmul(Tensor([16, 784],"float32"), Tensor([5478275, 784],"float32"), )
paddle.matmul(Tensor([16, 784],"float32"), Tensor([784, 5478275],"float32"), )
paddle.matmul(Tensor([5478275, 784],"float32"), Tensor([5478275, 784],"float32"), )
paddle.matmul(Tensor([16, 268435456],"float32"), Tensor([784, 268435456],"float32"), )
paddle.matmul(Tensor([2147483649, 1],"float64"), Tensor([1, 17],"float64"), )
paddle.matmul(Tensor([17, 126322568],"float64"), Tensor([1, 17],"float64"), )
paddle.matmul(Tensor([17, 1],"float64"), Tensor([126322568, 17],"float64"), )
paddle.matmul(Tensor([17, 1],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.matmul(Tensor([2147483649, 1],"float64"), Tensor([2147483649, 17],"float64"), )
paddle.matmul(Tensor([17, 126322568],"float64"), Tensor([1, 126322568],"float64"), )
paddle.matmul(Tensor([2147483649, 1],"float64"), Tensor([1, 4],"float64"), )
paddle.matmul(Tensor([17, 126322568],"float64"), Tensor([1, 4],"float64"), )
paddle.matmul(Tensor([17, 1],"float64"), Tensor([536870913, 4],"float64"), )
paddle.matmul(Tensor([2147483649, 1],"float64"), Tensor([2147483649, 4],"float64"), )
paddle.matmul(Tensor([126322568, 17],"float64"), Tensor([17, 16],"float64"), )
paddle.matmul(Tensor([17, 126322568],"float64"), Tensor([17, 16],"float64"), )
paddle.matmul(Tensor([17, 17],"float64"), Tensor([134217729, 16],"float64"), )
paddle.matmul(Tensor([17, 17],"float64"), Tensor([17, 126322568],"float64"), )
paddle.matmul(Tensor([126322568, 17],"float64"), Tensor([126322568, 16],"float64"), )
paddle.matmul(Tensor([17, 126322568],"float64"), Tensor([17, 126322568],"float64"), )
paddle.matmul(Tensor([17, 126322568],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([17, 4],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([17, 4],"float64"), Tensor([4, 536870913],"float64"), )
paddle.matmul(Tensor([17, 126322568],"float64"), Tensor([4, 126322568],"float64"), )
paddle.matmul(Tensor([17, 126322568],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([17, 4],"float64"), Tensor([536870913, 4],"float64"), )
paddle.matmul(Tensor([268435456, 1, 16],"float32"), Tensor([16, 128],"float32"), )
paddle.matmul(Tensor([2, 134217728, 16],"float32"), Tensor([16, 128],"float32"), )
paddle.matmul(Tensor([2, 1, 2147483648],"float32"), Tensor([16, 128],"float32"), )
paddle.matmul(Tensor([2, 1, 16],"float32"), Tensor([33554432, 128],"float32"), )
paddle.matmul(Tensor([2, 1, 16],"float32"), Tensor([16, 268435456],"float32"), )
paddle.matmul(Tensor([429496730, 1, 5, 2],"float16"), Tensor([1, 3, 2, 4],"float16"), False, False, )
paddle.matmul(Tensor([2, 214748365, 5, 2],"float16"), Tensor([1, 3, 2, 4],"float16"), False, False, )
paddle.matmul(Tensor([2, 1, 1073741824, 2],"float16"), Tensor([1, 3, 2, 4],"float16"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 429496730],"float16"), Tensor([1, 3, 2, 4],"float16"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float16"), Tensor([178956971, 3, 2, 4],"float16"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float16"), Tensor([1, 536870912, 2, 4],"float16"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float16"), Tensor([1, 3, 357913942, 4],"float16"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float16"), Tensor([1, 3, 2, 715827883],"float16"), False, False, )
paddle.matmul(Tensor([429496730, 1, 5, 2],"float16"), Tensor([429496730, 3, 2, 4],"float16"), False, False, )
paddle.matmul(Tensor([2, 214748365, 5, 2],"float16"), Tensor([1, 214748365, 2, 4],"float16"), False, False, )
paddle.matmul(Tensor([2, 1, 1073741824, 2],"float16"), Tensor([1, 3, 1073741824, 4],"float16"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 429496730],"float16"), Tensor([1, 3, 2, 429496730],"float16"), False, False, )
paddle.matmul(Tensor([429496730, 1, 5, 2],"float32"), Tensor([1, 3, 2, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 214748365, 5, 2],"float32"), Tensor([1, 3, 2, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 1, 1073741824, 2],"float32"), Tensor([1, 3, 2, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 429496730],"float32"), Tensor([1, 3, 2, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float32"), Tensor([178956971, 3, 2, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float32"), Tensor([1, 536870912, 2, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float32"), Tensor([1, 3, 357913942, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float32"), Tensor([1, 3, 2, 715827883],"float32"), False, False, )
paddle.matmul(Tensor([429496730, 1, 5, 2],"float32"), Tensor([429496730, 3, 2, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 214748365, 5, 2],"float32"), Tensor([1, 214748365, 2, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 1, 1073741824, 2],"float32"), Tensor([1, 3, 1073741824, 4],"float32"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 429496730],"float32"), Tensor([1, 3, 2, 429496730],"float32"), False, False, )
paddle.matmul(Tensor([214748365, 1, 5, 2],"float64"), Tensor([1, 3, 2, 4],"float64"), False, False, )
paddle.matmul(Tensor([2, 107374183, 5, 2],"float64"), Tensor([1, 3, 2, 4],"float64"), False, False, )
paddle.matmul(Tensor([2, 1, 536870913, 2],"float64"), Tensor([1, 3, 2, 4],"float64"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 214748365],"float64"), Tensor([1, 3, 2, 4],"float64"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float64"), Tensor([89478486, 3, 2, 4],"float64"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float64"), Tensor([1, 268435457, 2, 4],"float64"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float64"), Tensor([1, 3, 178956971, 4],"float64"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 2],"float64"), Tensor([1, 3, 2, 357913942],"float64"), False, False, )
paddle.matmul(Tensor([214748365, 1, 5, 2],"float64"), Tensor([214748365, 3, 2, 4],"float64"), False, False, )
paddle.matmul(Tensor([2, 107374183, 5, 2],"float64"), Tensor([1, 107374183, 2, 4],"float64"), False, False, )
paddle.matmul(Tensor([2, 1, 536870913, 2],"float64"), Tensor([1, 3, 536870913, 4],"float64"), False, False, )
paddle.matmul(Tensor([2, 1, 5, 214748365],"float64"), Tensor([1, 3, 2, 214748365],"float64"), False, False, )
paddle.matmul(Tensor([4294967295, 1],"float32"), Tensor([1],"float32"), False, False, )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([1],"float32"), False, False, )
paddle.matmul(Tensor([2, 1],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.matmul(Tensor([42949673, 100],"float32"), Tensor([100, 2],"float32"), )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([100, 2],"float32"), )
paddle.matmul(Tensor([2, 100],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.matmul(Tensor([2, 100],"float32"), Tensor([100, 42949673],"float32"), )
paddle.matmul(Tensor([42949673, 100],"float32"), Tensor([42949673, 2],"float32"), )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([100, 2147483648],"float32"), )
paddle.matmul(Tensor([21474837, 100],"float64"), Tensor([100, 2],"float64"), )
paddle.matmul(Tensor([2, 1073741825],"float64"), Tensor([100, 2],"float64"), )
paddle.matmul(Tensor([2, 100],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([2, 100],"float64"), Tensor([100, 21474837],"float64"), )
paddle.matmul(Tensor([21474837, 100],"float64"), Tensor([21474837, 2],"float64"), )
paddle.matmul(Tensor([2, 1073741825],"float64"), Tensor([100, 1073741825],"float64"), )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([128, 16],"float32"), )
paddle.matmul(Tensor([2, 128],"float32"), Tensor([268435456, 16],"float32"), )
paddle.matmul(Tensor([2, 128],"float32"), Tensor([128, 33554432],"float32"), )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([128, 2147483648],"float32"), )
paddle.matmul(Tensor([715827883, 2, 3],"float16"), Tensor([2, 3, 2],"float16"), False, False, )
paddle.matmul(Tensor([2, 715827883, 3],"float16"), Tensor([2, 3, 2],"float16"), False, False, )
paddle.matmul(Tensor([2, 2, 1073741824],"float16"), Tensor([2, 3, 2],"float16"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float16"), Tensor([715827883, 3, 2],"float16"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float16"), Tensor([2, 1073741824, 2],"float16"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float16"), Tensor([2, 3, 715827883],"float16"), False, False, )
paddle.matmul(Tensor([715827883, 2, 3],"float16"), Tensor([715827883, 3, 2],"float16"), False, False, )
paddle.matmul(Tensor([2, 715827883, 3],"float16"), Tensor([2, 715827883, 2],"float16"), False, False, )
paddle.matmul(Tensor([2, 2, 1073741824],"float16"), Tensor([2, 3, 1073741824],"float16"), False, False, )
paddle.matmul(Tensor([715827883, 2, 3],"float32"), Tensor([2, 3, 2],"float32"), False, False, )
paddle.matmul(Tensor([2, 715827883, 3],"float32"), Tensor([2, 3, 2],"float32"), False, False, )
paddle.matmul(Tensor([2, 2, 1073741824],"float32"), Tensor([2, 3, 2],"float32"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float32"), Tensor([715827883, 3, 2],"float32"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float32"), Tensor([2, 1073741824, 2],"float32"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float32"), Tensor([2, 3, 715827883],"float32"), False, False, )
paddle.matmul(Tensor([715827883, 2, 3],"float32"), Tensor([715827883, 3, 2],"float32"), False, False, )
paddle.matmul(Tensor([2, 715827883, 3],"float32"), Tensor([2, 715827883, 2],"float32"), False, False, )
paddle.matmul(Tensor([2, 2, 1073741824],"float32"), Tensor([2, 3, 1073741824],"float32"), False, False, )
paddle.matmul(Tensor([357913942, 2, 3],"float64"), Tensor([1, 3, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 357913942, 3],"float64"), Tensor([1, 3, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 536870913],"float64"), Tensor([1, 3, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float64"), Tensor([357913942, 3, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float64"), Tensor([1, 1073741825, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float64"), Tensor([1, 3, 715827883],"float64"), False, False, )
paddle.matmul(Tensor([357913942, 2, 3],"float64"), Tensor([357913942, 3, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 357913942, 3],"float64"), Tensor([1, 357913942, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 536870913],"float64"), Tensor([1, 3, 536870913],"float64"), False, False, )
paddle.matmul(Tensor([357913942, 2, 3],"float64"), Tensor([2, 3, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 357913942, 3],"float64"), Tensor([2, 3, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 536870913],"float64"), Tensor([2, 3, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float64"), Tensor([2, 536870913, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 3],"float64"), Tensor([2, 3, 357913942],"float64"), False, False, )
paddle.matmul(Tensor([2, 357913942, 3],"float64"), Tensor([2, 357913942, 2],"float64"), False, False, )
paddle.matmul(Tensor([2, 2, 536870913],"float64"), Tensor([2, 3, 536870913],"float64"), False, False, )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([2, 1],"float32"), )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([2, 1],"float32"), )
paddle.matmul(Tensor([2, 2],"float32"), Tensor([4294967295, 1],"float32"), )
paddle.matmul(Tensor([2, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 1],"float32"), )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([2, 2],"float32"), )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([2, 2],"float32"), )
paddle.matmul(Tensor([2, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([2],"float32"), )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([2],"float32"), )
paddle.matmul(Tensor([2, 2],"float32"), Tensor([4294967295],"float32"), )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([50000, 2, 1],"float32"), )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([50000, 2, 1],"float32"), )
paddle.matmul(Tensor([2, 2],"float32"), Tensor([2147483648, 2, 1],"float32"), )
paddle.matmul(Tensor([2, 2],"float32"), Tensor([50000, 85900, 1],"float32"), )
paddle.matmul(Tensor([2, 2],"float32"), Tensor([50000, 2, 42950],"float32"), )
paddle.matmul(Tensor([1073741825, 2],"float64"), Tensor([2, 2],"float64"), )
paddle.matmul(Tensor([2, 1073741825],"float64"), Tensor([2, 2],"float64"), )
paddle.matmul(Tensor([2, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([2, 2],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.matmul(Tensor([1073741825, 2],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([2, 1073741825],"float64"), Tensor([2, 1073741825],"float64"), )
paddle.matmul(Tensor([178956971, 24],"float32"), Tensor([24, 24],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([24, 24],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 24],"float32"), Tensor([178956971, 24],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 24],"float32"), Tensor([24, 178956971],"float32"), transpose_y=True, )
paddle.matmul(Tensor([178956971, 24],"float32"), Tensor([178956971, 24],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([24, 2147483648],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1789570, 3, 100, 4],"float64"), Tensor([2, 3, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 2684355, 100, 4],"float64"), Tensor([2, 3, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 89478486, 4],"float64"), Tensor([2, 3, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 3579140],"float64"), Tensor([2, 3, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 4],"float64"), Tensor([89478486, 3, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 4],"float64"), Tensor([2, 134217729, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 4],"float64"), Tensor([2, 3, 178956971, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 4],"float64"), Tensor([2, 3, 4, 89478486],"float64"), )
paddle.matmul(Tensor([1789570, 3, 100, 4],"float64"), Tensor([1789570, 3, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 2684355, 100, 4],"float64"), Tensor([2, 2684355, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 89478486, 4],"float64"), Tensor([2, 3, 89478486, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 3579140],"float64"), Tensor([2, 3, 4, 3579140],"float64"), )
paddle.matmul(Tensor([1789570, 3, 100, 4],"float64"), Tensor([2, 3, 4, 4],"float64"), )
paddle.matmul(Tensor([2, 2684355, 100, 4],"float64"), Tensor([2, 3, 4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 89478486, 4],"float64"), Tensor([2, 3, 4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 3579140],"float64"), Tensor([2, 3, 4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 4],"float64"), Tensor([44739243, 3, 4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 4],"float64"), Tensor([2, 67108865, 4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 4],"float64"), Tensor([2, 3, 89478486, 4],"float64"), )
paddle.matmul(Tensor([1789570, 3, 100, 4],"float64"), Tensor([1789570, 3, 4, 4],"float64"), )
paddle.matmul(Tensor([2, 2684355, 100, 4],"float64"), Tensor([2, 2684355, 4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 89478486, 4],"float64"), Tensor([2, 3, 89478486, 4],"float64"), )
paddle.matmul(Tensor([1789570, 3, 100, 4],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([2, 2684355, 100, 4],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 89478486, 4],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 3579140],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 4],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 4],"float64"), Tensor([4, 536870913],"float64"), )
paddle.matmul(Tensor([1789570, 3, 100, 4],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([2, 2684355, 100, 4],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 89478486, 4],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 3579140],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 4],"float64"), Tensor([536870913, 4],"float64"), )
paddle.matmul(Tensor([178957, 3, 100, 40],"float64"), Tensor([2, 3, 40, 12],"float64"), )
paddle.matmul(Tensor([2, 268436, 100, 40],"float64"), Tensor([2, 3, 40, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 8947849, 40],"float64"), Tensor([2, 3, 40, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 3579140],"float64"), Tensor([2, 3, 40, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([1491309, 3, 40, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([2, 2236963, 40, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([2, 3, 29826162, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([2, 3, 40, 8947849],"float64"), )
paddle.matmul(Tensor([178957, 3, 100, 40],"float64"), Tensor([178957, 3, 40, 12],"float64"), )
paddle.matmul(Tensor([2, 268436, 100, 40],"float64"), Tensor([2, 268436, 40, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 8947849, 40],"float64"), Tensor([2, 3, 8947849, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 3579140],"float64"), Tensor([2, 3, 40, 3579140],"float64"), )
paddle.matmul(Tensor([178957, 3, 100, 40],"float64"), Tensor([2, 3, 40, 6],"float64"), )
paddle.matmul(Tensor([2, 268436, 100, 40],"float64"), Tensor([2, 3, 40, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 8947849, 40],"float64"), Tensor([2, 3, 40, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 3579140],"float64"), Tensor([2, 3, 40, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([2982617, 3, 40, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([2, 4473925, 40, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([2, 3, 59652324, 6],"float64"), )
paddle.matmul(Tensor([178957, 3, 100, 40],"float64"), Tensor([178957, 3, 40, 6],"float64"), )
paddle.matmul(Tensor([2, 268436, 100, 40],"float64"), Tensor([2, 268436, 40, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 8947849, 40],"float64"), Tensor([2, 3, 8947849, 6],"float64"), )
paddle.matmul(Tensor([178957, 3, 100, 40],"float64"), Tensor([2, 3, 40, 8],"float64"), )
paddle.matmul(Tensor([2, 268436, 100, 40],"float64"), Tensor([2, 3, 40, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 8947849, 40],"float64"), Tensor([2, 3, 40, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 3579140],"float64"), Tensor([2, 3, 40, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([2236963, 3, 40, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([2, 3355444, 40, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([2, 3, 44739243, 8],"float64"), )
paddle.matmul(Tensor([178957, 3, 100, 40],"float64"), Tensor([178957, 3, 40, 8],"float64"), )
paddle.matmul(Tensor([2, 268436, 100, 40],"float64"), Tensor([2, 268436, 40, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 8947849, 40],"float64"), Tensor([2, 3, 8947849, 8],"float64"), )
paddle.matmul(Tensor([178957, 3, 100, 40],"float64"), Tensor([40, 12],"float64"), )
paddle.matmul(Tensor([2, 268436, 100, 40],"float64"), Tensor([40, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 8947849, 40],"float64"), Tensor([40, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 3579140],"float64"), Tensor([40, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([178956971, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([40, 53687092],"float64"), )
paddle.matmul(Tensor([178957, 3, 100, 40],"float64"), Tensor([40, 6],"float64"), )
paddle.matmul(Tensor([2, 268436, 100, 40],"float64"), Tensor([40, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 8947849, 40],"float64"), Tensor([40, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 3579140],"float64"), Tensor([40, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([357913942, 6],"float64"), )
paddle.matmul(Tensor([178957, 3, 100, 40],"float64"), Tensor([40, 8],"float64"), )
paddle.matmul(Tensor([2, 268436, 100, 40],"float64"), Tensor([40, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 8947849, 40],"float64"), Tensor([40, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 3579140],"float64"), Tensor([40, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 100, 40],"float64"), Tensor([268435457, 8],"float64"), )
paddle.matmul(Tensor([10526881, 3, 17, 4],"float64"), Tensor([2, 3, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 15790321, 17, 4],"float64"), Tensor([2, 3, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 21053762],"float64"), Tensor([2, 3, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 4],"float64"), Tensor([89478486, 3, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 4],"float64"), Tensor([2, 134217729, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 4],"float64"), Tensor([2, 3, 178956971, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 4],"float64"), Tensor([2, 3, 4, 89478486],"float64"), )
paddle.matmul(Tensor([10526881, 3, 17, 4],"float64"), Tensor([10526881, 3, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 15790321, 17, 4],"float64"), Tensor([2, 15790321, 4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 21053762],"float64"), Tensor([2, 3, 4, 21053762],"float64"), )
paddle.matmul(Tensor([10526881, 3, 17, 4],"float64"), Tensor([2, 3, 4, 4],"float64"), )
paddle.matmul(Tensor([2, 15790321, 17, 4],"float64"), Tensor([2, 3, 4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 21053762],"float64"), Tensor([2, 3, 4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 4],"float64"), Tensor([44739243, 3, 4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 4],"float64"), Tensor([2, 67108865, 4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 4],"float64"), Tensor([2, 3, 89478486, 4],"float64"), )
paddle.matmul(Tensor([10526881, 3, 17, 4],"float64"), Tensor([10526881, 3, 4, 4],"float64"), )
paddle.matmul(Tensor([2, 15790321, 17, 4],"float64"), Tensor([2, 15790321, 4, 4],"float64"), )
paddle.matmul(Tensor([10526881, 3, 17, 4],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([2, 15790321, 17, 4],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 21053762],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 4],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 4],"float64"), Tensor([4, 536870913],"float64"), )
paddle.matmul(Tensor([10526881, 3, 17, 4],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([2, 15790321, 17, 4],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 21053762],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 17, 4],"float64"), Tensor([536870913, 4],"float64"), )
paddle.matmul(Tensor([28633116, 3, 2, 5, 5],"float16"), Tensor([2, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([2, 42949673, 2, 5, 5],"float16"), Tensor([2, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([2, 3, 28633116, 5, 5],"float16"), Tensor([2, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([2, 3, 2, 71582789, 5],"float16"), Tensor([2, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([2, 3, 2, 5, 71582789],"float16"), Tensor([2, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([2, 3, 2, 5, 5],"float16"), Tensor([35791395, 3, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([2, 3, 2, 5, 5],"float16"), Tensor([2, 53687092, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([2, 3, 2, 5, 5],"float16"), Tensor([2, 3, 35791395, 5, 4],"float16"), )
paddle.matmul(Tensor([2, 3, 2, 5, 5],"float16"), Tensor([2, 3, 2, 89478486, 4],"float16"), )
paddle.matmul(Tensor([2, 3, 2, 5, 5],"float16"), Tensor([2, 3, 2, 5, 71582789],"float16"), )
paddle.matmul(Tensor([2, 42949673, 2, 5, 5],"float16"), Tensor([2, 42949673, 2, 5, 4],"float16"), )
paddle.matmul(Tensor([2, 3, 28633116, 5, 5],"float16"), Tensor([2, 3, 28633116, 5, 4],"float16"), )
paddle.matmul(Tensor([2, 3, 2, 71582789, 5],"float16"), Tensor([2, 3, 2, 71582789, 4],"float16"), )
paddle.matmul(Tensor([2, 3, 2, 5, 71582789],"float16"), Tensor([2, 3, 2, 5, 71582789],"float16"), )
paddle.matmul(Tensor([28633116, 3, 2, 5, 5],"float32"), Tensor([2, 3, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([2, 42949673, 2, 5, 5],"float32"), Tensor([2, 3, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([2, 3, 28633116, 5, 5],"float32"), Tensor([2, 3, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([2, 3, 2, 71582789, 5],"float32"), Tensor([2, 3, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([2, 3, 2, 5, 71582789],"float32"), Tensor([2, 3, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([2, 3, 2, 5, 5],"float32"), Tensor([35791395, 3, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([2, 3, 2, 5, 5],"float32"), Tensor([2, 53687092, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([2, 3, 2, 5, 5],"float32"), Tensor([2, 3, 35791395, 5, 4],"float32"), )
paddle.matmul(Tensor([2, 3, 2, 5, 5],"float32"), Tensor([2, 3, 2, 89478486, 4],"float32"), )
paddle.matmul(Tensor([2, 3, 2, 5, 5],"float32"), Tensor([2, 3, 2, 5, 71582789],"float32"), )
paddle.matmul(Tensor([2, 42949673, 2, 5, 5],"float32"), Tensor([2, 42949673, 2, 5, 4],"float32"), )
paddle.matmul(Tensor([2, 3, 28633116, 5, 5],"float32"), Tensor([2, 3, 28633116, 5, 4],"float32"), )
paddle.matmul(Tensor([2, 3, 2, 71582789, 5],"float32"), Tensor([2, 3, 2, 71582789, 4],"float32"), )
paddle.matmul(Tensor([2, 3, 2, 5, 71582789],"float32"), Tensor([2, 3, 2, 5, 71582789],"float32"), )
paddle.matmul(Tensor([1789570, 3, 4, 100],"float64"), Tensor([100, 2],"float64"), )
paddle.matmul(Tensor([2, 2684355, 4, 100],"float64"), Tensor([100, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 3579140, 100],"float64"), Tensor([100, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 89478486],"float64"), Tensor([100, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 100],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 100],"float64"), Tensor([100, 21474837],"float64"), )
paddle.matmul(Tensor([1789570, 3, 4, 100],"float64"), Tensor([2, 3, 100, 2],"float64"), )
paddle.matmul(Tensor([2, 2684355, 4, 100],"float64"), Tensor([2, 3, 100, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 3579140, 100],"float64"), Tensor([2, 3, 100, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 100, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 100],"float64"), Tensor([3579140, 3, 100, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 100],"float64"), Tensor([2, 5368710, 100, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 100],"float64"), Tensor([2, 3, 178956971, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 100],"float64"), Tensor([2, 3, 100, 3579140],"float64"), )
paddle.matmul(Tensor([1789570, 3, 4, 100],"float64"), Tensor([1789570, 3, 100, 2],"float64"), )
paddle.matmul(Tensor([2, 2684355, 4, 100],"float64"), Tensor([2, 2684355, 100, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 3579140, 100],"float64"), Tensor([2, 3, 3579140, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 100, 89478486],"float64"), )
paddle.matmul(Tensor([1789570, 3, 4, 100],"float64"), Tensor([2, 3, 100, 4],"float64"), )
paddle.matmul(Tensor([2, 2684355, 4, 100],"float64"), Tensor([2, 3, 100, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 3579140, 100],"float64"), Tensor([2, 3, 100, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 100, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 100],"float64"), Tensor([1789570, 3, 100, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 100],"float64"), Tensor([2, 2684355, 100, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 100],"float64"), Tensor([2, 3, 89478486, 4],"float64"), )
paddle.matmul(Tensor([1789570, 3, 4, 100],"float64"), Tensor([1789570, 3, 100, 4],"float64"), )
paddle.matmul(Tensor([2, 2684355, 4, 100],"float64"), Tensor([2, 2684355, 100, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 3579140, 100],"float64"), Tensor([2, 3, 3579140, 4],"float64"), )
paddle.matmul(Tensor([10526881, 3, 4, 17],"float64"), Tensor([17, 2],"float64"), )
paddle.matmul(Tensor([2, 15790321, 4, 17],"float64"), Tensor([17, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 21053762, 17],"float64"), Tensor([17, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 89478486],"float64"), Tensor([17, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 17],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 17],"float64"), Tensor([17, 126322568],"float64"), )
paddle.matmul(Tensor([10526881, 3, 4, 17],"float64"), Tensor([2, 3, 17, 2],"float64"), )
paddle.matmul(Tensor([2, 15790321, 4, 17],"float64"), Tensor([2, 3, 17, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 21053762, 17],"float64"), Tensor([2, 3, 17, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 17, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 17],"float64"), Tensor([21053762, 3, 17, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 17],"float64"), Tensor([2, 31580642, 17, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 17],"float64"), Tensor([2, 3, 178956971, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 17],"float64"), Tensor([2, 3, 17, 21053762],"float64"), )
paddle.matmul(Tensor([10526881, 3, 4, 17],"float64"), Tensor([10526881, 3, 17, 2],"float64"), )
paddle.matmul(Tensor([2, 15790321, 4, 17],"float64"), Tensor([2, 15790321, 17, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 21053762, 17],"float64"), Tensor([2, 3, 21053762, 2],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 17, 89478486],"float64"), )
paddle.matmul(Tensor([10526881, 3, 4, 17],"float64"), Tensor([2, 3, 17, 4],"float64"), )
paddle.matmul(Tensor([2, 15790321, 4, 17],"float64"), Tensor([2, 3, 17, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 21053762, 17],"float64"), Tensor([2, 3, 17, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 89478486],"float64"), Tensor([2, 3, 17, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 17],"float64"), Tensor([10526881, 3, 17, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 17],"float64"), Tensor([2, 15790321, 17, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 4, 17],"float64"), Tensor([2, 3, 89478486, 4],"float64"), )
paddle.matmul(Tensor([10526881, 3, 4, 17],"float64"), Tensor([10526881, 3, 17, 4],"float64"), )
paddle.matmul(Tensor([2, 15790321, 4, 17],"float64"), Tensor([2, 15790321, 17, 4],"float64"), )
paddle.matmul(Tensor([2, 3, 21053762, 17],"float64"), Tensor([2, 3, 21053762, 4],"float64"), )
paddle.matmul(Tensor([357913942, 3, 4],"float16"), Tensor([2, 4, 5],"float16"), False, False, )
paddle.matmul(Tensor([2, 536870912, 4],"float16"), Tensor([2, 4, 5],"float16"), False, False, )
paddle.matmul(Tensor([2, 3, 715827883],"float16"), Tensor([2, 4, 5],"float16"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float16"), Tensor([214748365, 4, 5],"float16"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float16"), Tensor([2, 429496730, 5],"float16"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float16"), Tensor([2, 4, 536870912],"float16"), False, False, )
paddle.matmul(Tensor([357913942, 3, 4],"float16"), Tensor([357913942, 4, 5],"float16"), False, False, )
paddle.matmul(Tensor([2, 536870912, 4],"float16"), Tensor([2, 536870912, 5],"float16"), False, False, )
paddle.matmul(Tensor([2, 3, 715827883],"float16"), Tensor([2, 4, 715827883],"float16"), False, False, )
paddle.matmul(Tensor([357913942, 3, 4],"float16"), Tensor([2, 5, 4],"float16"), False, True, )
paddle.matmul(Tensor([2, 536870912, 4],"float16"), Tensor([2, 5, 4],"float16"), False, True, )
paddle.matmul(Tensor([2, 3, 715827883],"float16"), Tensor([2, 5, 4],"float16"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float16"), Tensor([214748365, 5, 4],"float16"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float16"), Tensor([2, 536870912, 4],"float16"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float16"), Tensor([2, 5, 429496730],"float16"), False, True, )
paddle.matmul(Tensor([357913942, 3, 4],"float16"), Tensor([357913942, 5, 4],"float16"), False, True, )
paddle.matmul(Tensor([2, 536870912, 4],"float16"), Tensor([2, 536870912, 4],"float16"), False, True, )
paddle.matmul(Tensor([2, 3, 715827883],"float16"), Tensor([2, 5, 715827883],"float16"), False, True, )
paddle.matmul(Tensor([357913942, 3, 4],"float16"), Tensor([4],"float16"), False, False, )
paddle.matmul(Tensor([2, 536870912, 4],"float16"), Tensor([4],"float16"), False, False, )
paddle.matmul(Tensor([2, 3, 715827883],"float16"), Tensor([4],"float16"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float16"), Tensor([4294967295],"float16"), False, False, )
paddle.matmul(Tensor([357913942, 3, 4],"float32"), Tensor([2, 4, 5],"float32"), False, False, )
paddle.matmul(Tensor([2, 536870912, 4],"float32"), Tensor([2, 4, 5],"float32"), False, False, )
paddle.matmul(Tensor([2, 3, 715827883],"float32"), Tensor([2, 4, 5],"float32"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float32"), Tensor([214748365, 4, 5],"float32"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float32"), Tensor([2, 429496730, 5],"float32"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float32"), Tensor([2, 4, 536870912],"float32"), False, False, )
paddle.matmul(Tensor([357913942, 3, 4],"float32"), Tensor([357913942, 4, 5],"float32"), False, False, )
paddle.matmul(Tensor([2, 536870912, 4],"float32"), Tensor([2, 536870912, 5],"float32"), False, False, )
paddle.matmul(Tensor([2, 3, 715827883],"float32"), Tensor([2, 4, 715827883],"float32"), False, False, )
paddle.matmul(Tensor([357913942, 3, 4],"float32"), Tensor([2, 5, 4],"float32"), False, True, )
paddle.matmul(Tensor([2, 536870912, 4],"float32"), Tensor([2, 5, 4],"float32"), False, True, )
paddle.matmul(Tensor([2, 3, 715827883],"float32"), Tensor([2, 5, 4],"float32"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float32"), Tensor([214748365, 5, 4],"float32"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float32"), Tensor([2, 536870912, 4],"float32"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float32"), Tensor([2, 5, 429496730],"float32"), False, True, )
paddle.matmul(Tensor([357913942, 3, 4],"float32"), Tensor([357913942, 5, 4],"float32"), False, True, )
paddle.matmul(Tensor([2, 536870912, 4],"float32"), Tensor([2, 536870912, 4],"float32"), False, True, )
paddle.matmul(Tensor([2, 3, 715827883],"float32"), Tensor([2, 5, 715827883],"float32"), False, True, )
paddle.matmul(Tensor([357913942, 3, 4],"float32"), Tensor([4],"float32"), False, False, )
paddle.matmul(Tensor([2, 536870912, 4],"float32"), Tensor([4],"float32"), False, False, )
paddle.matmul(Tensor([2, 3, 715827883],"float32"), Tensor([4],"float32"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.matmul(Tensor([178956971, 3, 4],"float64"), Tensor([2, 4, 5],"float64"), False, False, )
paddle.matmul(Tensor([2, 268435457, 4],"float64"), Tensor([2, 4, 5],"float64"), False, False, )
paddle.matmul(Tensor([2, 3, 357913942],"float64"), Tensor([2, 4, 5],"float64"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float64"), Tensor([107374183, 4, 5],"float64"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float64"), Tensor([2, 214748365, 5],"float64"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float64"), Tensor([2, 4, 268435457],"float64"), False, False, )
paddle.matmul(Tensor([178956971, 3, 4],"float64"), Tensor([178956971, 4, 5],"float64"), False, False, )
paddle.matmul(Tensor([2, 268435457, 4],"float64"), Tensor([2, 268435457, 5],"float64"), False, False, )
paddle.matmul(Tensor([2, 3, 357913942],"float64"), Tensor([2, 4, 357913942],"float64"), False, False, )
paddle.matmul(Tensor([178956971, 3, 4],"float64"), Tensor([2, 5, 4],"float64"), False, True, )
paddle.matmul(Tensor([2, 268435457, 4],"float64"), Tensor([2, 5, 4],"float64"), False, True, )
paddle.matmul(Tensor([2, 3, 357913942],"float64"), Tensor([2, 5, 4],"float64"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float64"), Tensor([107374183, 5, 4],"float64"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float64"), Tensor([2, 268435457, 4],"float64"), False, True, )
paddle.matmul(Tensor([2, 3, 4],"float64"), Tensor([2, 5, 214748365],"float64"), False, True, )
paddle.matmul(Tensor([178956971, 3, 4],"float64"), Tensor([178956971, 5, 4],"float64"), False, True, )
paddle.matmul(Tensor([2, 268435457, 4],"float64"), Tensor([2, 268435457, 4],"float64"), False, True, )
paddle.matmul(Tensor([2, 3, 357913942],"float64"), Tensor([2, 5, 357913942],"float64"), False, True, )
paddle.matmul(Tensor([178956971, 3, 4],"float64"), Tensor([4],"float64"), False, False, )
paddle.matmul(Tensor([2, 268435457, 4],"float64"), Tensor([4],"float64"), False, False, )
paddle.matmul(Tensor([2, 3, 357913942],"float64"), Tensor([4],"float64"), False, False, )
paddle.matmul(Tensor([2, 3, 4],"float64"), Tensor([2147483649],"float64"), False, False, )
paddle.matmul(Tensor([178957, 3, 40, 100],"float64"), Tensor([100, 12],"float64"), )
paddle.matmul(Tensor([2, 268436, 40, 100],"float64"), Tensor([100, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 3579140, 100],"float64"), Tensor([100, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 8947849],"float64"), Tensor([100, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 100],"float64"), Tensor([178956971, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 100],"float64"), Tensor([100, 21474837],"float64"), )
paddle.matmul(Tensor([178957, 3, 40, 100],"float64"), Tensor([100, 6],"float64"), )
paddle.matmul(Tensor([2, 268436, 40, 100],"float64"), Tensor([100, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 3579140, 100],"float64"), Tensor([100, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 8947849],"float64"), Tensor([100, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 100],"float64"), Tensor([357913942, 6],"float64"), )
paddle.matmul(Tensor([178957, 3, 40, 100],"float64"), Tensor([100, 8],"float64"), )
paddle.matmul(Tensor([2, 268436, 40, 100],"float64"), Tensor([100, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 3579140, 100],"float64"), Tensor([100, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 8947849],"float64"), Tensor([100, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 100],"float64"), Tensor([268435457, 8],"float64"), )
paddle.matmul(Tensor([178957, 3, 40, 100],"float64"), Tensor([2, 3, 100, 12],"float64"), )
paddle.matmul(Tensor([2, 268436, 40, 100],"float64"), Tensor([2, 3, 100, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 3579140, 100],"float64"), Tensor([2, 3, 100, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 8947849],"float64"), Tensor([2, 3, 100, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 100],"float64"), Tensor([596524, 3, 100, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 100],"float64"), Tensor([2, 894785, 100, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 100],"float64"), Tensor([2, 3, 29826162, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 100],"float64"), Tensor([2, 3, 100, 3579140],"float64"), )
paddle.matmul(Tensor([178957, 3, 40, 100],"float64"), Tensor([178957, 3, 100, 12],"float64"), )
paddle.matmul(Tensor([2, 268436, 40, 100],"float64"), Tensor([2, 268436, 100, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 3579140, 100],"float64"), Tensor([2, 3, 3579140, 12],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 8947849],"float64"), Tensor([2, 3, 100, 8947849],"float64"), )
paddle.matmul(Tensor([178957, 3, 40, 100],"float64"), Tensor([2, 3, 100, 6],"float64"), )
paddle.matmul(Tensor([2, 268436, 40, 100],"float64"), Tensor([2, 3, 100, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 3579140, 100],"float64"), Tensor([2, 3, 100, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 8947849],"float64"), Tensor([2, 3, 100, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 100],"float64"), Tensor([1193047, 3, 100, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 100],"float64"), Tensor([2, 1789570, 100, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 100],"float64"), Tensor([2, 3, 59652324, 6],"float64"), )
paddle.matmul(Tensor([178957, 3, 40, 100],"float64"), Tensor([178957, 3, 100, 6],"float64"), )
paddle.matmul(Tensor([2, 268436, 40, 100],"float64"), Tensor([2, 268436, 100, 6],"float64"), )
paddle.matmul(Tensor([2, 3, 3579140, 100],"float64"), Tensor([2, 3, 3579140, 6],"float64"), )
paddle.matmul(Tensor([178957, 3, 40, 100],"float64"), Tensor([2, 3, 100, 8],"float64"), )
paddle.matmul(Tensor([2, 268436, 40, 100],"float64"), Tensor([2, 3, 100, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 3579140, 100],"float64"), Tensor([2, 3, 100, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 8947849],"float64"), Tensor([2, 3, 100, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 100],"float64"), Tensor([894785, 3, 100, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 100],"float64"), Tensor([2, 1342178, 100, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 40, 100],"float64"), Tensor([2, 3, 44739243, 8],"float64"), )
paddle.matmul(Tensor([178957, 3, 40, 100],"float64"), Tensor([178957, 3, 100, 8],"float64"), )
paddle.matmul(Tensor([2, 268436, 40, 100],"float64"), Tensor([2, 268436, 100, 8],"float64"), )
paddle.matmul(Tensor([2, 3, 3579140, 100],"float64"), Tensor([2, 3, 3579140, 8],"float64"), )
paddle.matmul(Tensor([2, 71582789, 5, 6],"float16"), Tensor([6, 8],"float16"), )
paddle.matmul(Tensor([2, 3, 119304648, 6],"float16"), Tensor([6, 8],"float16"), )
paddle.matmul(Tensor([2, 3, 5, 143165577],"float16"), Tensor([6, 8],"float16"), )
paddle.matmul(Tensor([2, 3, 5, 6],"float16"), Tensor([536870912, 8],"float16"), )
paddle.matmul(Tensor([2, 3, 5, 6],"float16"), Tensor([6, 715827883],"float16"), )
paddle.matmul(Tensor([2, 71582789, 5, 6],"float32"), Tensor([6, 8],"float32"), )
paddle.matmul(Tensor([2, 3, 119304648, 6],"float32"), Tensor([6, 8],"float32"), )
paddle.matmul(Tensor([2, 3, 5, 143165577],"float32"), Tensor([6, 8],"float32"), )
paddle.matmul(Tensor([2, 3, 5, 6],"float32"), Tensor([536870912, 8],"float32"), )
paddle.matmul(Tensor([2, 3, 5, 6],"float32"), Tensor([6, 715827883],"float32"), )
paddle.matmul(Tensor([1431655765, 3],"float16"), Tensor([3],"float16"), False, False, )
paddle.matmul(Tensor([2, 2147483648],"float16"), Tensor([3],"float16"), False, False, )
paddle.matmul(Tensor([2, 3],"float16"), Tensor([4294967295],"float16"), False, False, )
paddle.matmul(Tensor([1431655765, 3],"float32"), Tensor([2, 3],"float32"), True, False, )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([2, 3],"float32"), True, False, )
paddle.matmul(Tensor([2, 3],"float32"), Tensor([1431655765, 3],"float32"), True, False, )
paddle.matmul(Tensor([2, 3],"float32"), Tensor([2, 2147483648],"float32"), True, False, )
paddle.matmul(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), True, False, )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([2, 2147483648],"float32"), True, False, )
paddle.matmul(Tensor([1431655765, 3],"float32"), Tensor([3, 5],"float32"), )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([3, 5],"float32"), )
paddle.matmul(Tensor([2, 3],"float32"), Tensor([858993459, 5],"float32"), )
paddle.matmul(Tensor([2, 3],"float32"), Tensor([3, 1431655765],"float32"), )
paddle.matmul(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 5],"float32"), )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([3, 2147483648],"float32"), )
paddle.matmul(Tensor([1431655765, 3],"float32"), Tensor([3],"float32"), False, False, )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([3],"float32"), False, False, )
paddle.matmul(Tensor([2, 3],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.matmul(Tensor([715827883, 3],"float64"), Tensor([3],"float64"), False, False, )
paddle.matmul(Tensor([2, 1073741825],"float64"), Tensor([3],"float64"), False, False, )
paddle.matmul(Tensor([2, 3],"float64"), Tensor([2147483649],"float64"), False, False, )
paddle.matmul(Tensor([4067204, 32, 1, 33],"float16"), Tensor([2, 32, 33, 128],"float16"), )
paddle.matmul(Tensor([2, 65075263, 1, 33],"float16"), Tensor([2, 32, 33, 128],"float16"), )
paddle.matmul(Tensor([2, 32, 2033602, 33],"float16"), Tensor([2, 32, 33, 128],"float16"), )
paddle.matmul(Tensor([2, 32, 1, 67108864],"float16"), Tensor([2, 32, 33, 128],"float16"), )
paddle.matmul(Tensor([2, 32, 1, 33],"float16"), Tensor([31776, 32, 33, 128],"float16"), )
paddle.matmul(Tensor([2, 32, 1, 33],"float16"), Tensor([2, 508401, 33, 128],"float16"), )
paddle.matmul(Tensor([2, 32, 1, 33],"float16"), Tensor([2, 32, 524288, 128],"float16"), )
paddle.matmul(Tensor([2, 32, 1, 33],"float16"), Tensor([2, 32, 33, 2033602],"float16"), )
paddle.matmul(Tensor([4067204, 32, 1, 33],"float16"), Tensor([4067204, 32, 33, 128],"float16"), )
paddle.matmul(Tensor([2, 65075263, 1, 33],"float16"), Tensor([2, 65075263, 33, 128],"float16"), )
paddle.matmul(Tensor([2, 32, 2033602, 33],"float16"), Tensor([2, 32, 2033602, 128],"float16"), )
paddle.matmul(Tensor([2, 32, 1, 67108864],"float16"), Tensor([2, 32, 33, 67108864],"float16"), )
paddle.matmul(Tensor([357913942, 4, 3],"float16"), Tensor([2, 4, 5],"float16"), True, False, )
paddle.matmul(Tensor([2, 715827883, 3],"float16"), Tensor([2, 4, 5],"float16"), True, False, )
paddle.matmul(Tensor([2, 4, 536870912],"float16"), Tensor([2, 4, 5],"float16"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float16"), Tensor([214748365, 4, 5],"float16"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float16"), Tensor([2, 429496730, 5],"float16"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float16"), Tensor([2, 4, 536870912],"float16"), True, False, )
paddle.matmul(Tensor([357913942, 4, 3],"float16"), Tensor([357913942, 4, 5],"float16"), True, False, )
paddle.matmul(Tensor([2, 715827883, 3],"float16"), Tensor([2, 715827883, 5],"float16"), True, False, )
paddle.matmul(Tensor([2, 4, 536870912],"float16"), Tensor([2, 4, 536870912],"float16"), True, False, )
paddle.matmul(Tensor([357913942, 4, 3],"float16"), Tensor([2, 5, 4],"float16"), True, True, )
paddle.matmul(Tensor([2, 715827883, 3],"float16"), Tensor([2, 5, 4],"float16"), True, True, )
paddle.matmul(Tensor([2, 4, 536870912],"float16"), Tensor([2, 5, 4],"float16"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float16"), Tensor([214748365, 5, 4],"float16"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float16"), Tensor([2, 536870912, 4],"float16"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float16"), Tensor([2, 5, 429496730],"float16"), True, True, )
paddle.matmul(Tensor([357913942, 4, 3],"float16"), Tensor([357913942, 5, 4],"float16"), True, True, )
paddle.matmul(Tensor([2, 715827883, 3],"float16"), Tensor([2, 715827883, 4],"float16"), True, True, )
paddle.matmul(Tensor([2, 4, 536870912],"float16"), Tensor([2, 5, 536870912],"float16"), True, True, )
paddle.matmul(Tensor([357913942, 4, 3],"float32"), Tensor([2, 4, 5],"float32"), True, False, )
paddle.matmul(Tensor([2, 715827883, 3],"float32"), Tensor([2, 4, 5],"float32"), True, False, )
paddle.matmul(Tensor([2, 4, 536870912],"float32"), Tensor([2, 4, 5],"float32"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float32"), Tensor([214748365, 4, 5],"float32"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float32"), Tensor([2, 429496730, 5],"float32"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float32"), Tensor([2, 4, 536870912],"float32"), True, False, )
paddle.matmul(Tensor([357913942, 4, 3],"float32"), Tensor([357913942, 4, 5],"float32"), True, False, )
paddle.matmul(Tensor([2, 715827883, 3],"float32"), Tensor([2, 715827883, 5],"float32"), True, False, )
paddle.matmul(Tensor([2, 4, 536870912],"float32"), Tensor([2, 4, 536870912],"float32"), True, False, )
paddle.matmul(Tensor([357913942, 4, 3],"float32"), Tensor([2, 5, 4],"float32"), True, True, )
paddle.matmul(Tensor([2, 715827883, 3],"float32"), Tensor([2, 5, 4],"float32"), True, True, )
paddle.matmul(Tensor([2, 4, 536870912],"float32"), Tensor([2, 5, 4],"float32"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float32"), Tensor([214748365, 5, 4],"float32"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float32"), Tensor([2, 536870912, 4],"float32"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float32"), Tensor([2, 5, 429496730],"float32"), True, True, )
paddle.matmul(Tensor([357913942, 4, 3],"float32"), Tensor([357913942, 5, 4],"float32"), True, True, )
paddle.matmul(Tensor([2, 715827883, 3],"float32"), Tensor([2, 715827883, 4],"float32"), True, True, )
paddle.matmul(Tensor([2, 4, 536870912],"float32"), Tensor([2, 5, 536870912],"float32"), True, True, )
paddle.matmul(Tensor([178956971, 4, 3],"float64"), Tensor([2, 4, 5],"float64"), True, False, )
paddle.matmul(Tensor([2, 357913942, 3],"float64"), Tensor([2, 4, 5],"float64"), True, False, )
paddle.matmul(Tensor([2, 4, 268435457],"float64"), Tensor([2, 4, 5],"float64"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float64"), Tensor([107374183, 4, 5],"float64"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float64"), Tensor([2, 214748365, 5],"float64"), True, False, )
paddle.matmul(Tensor([2, 4, 3],"float64"), Tensor([2, 4, 268435457],"float64"), True, False, )
paddle.matmul(Tensor([178956971, 4, 3],"float64"), Tensor([178956971, 4, 5],"float64"), True, False, )
paddle.matmul(Tensor([2, 357913942, 3],"float64"), Tensor([2, 357913942, 5],"float64"), True, False, )
paddle.matmul(Tensor([2, 4, 268435457],"float64"), Tensor([2, 4, 268435457],"float64"), True, False, )
paddle.matmul(Tensor([178956971, 4, 3],"float64"), Tensor([2, 5, 4],"float64"), True, True, )
paddle.matmul(Tensor([2, 357913942, 3],"float64"), Tensor([2, 5, 4],"float64"), True, True, )
paddle.matmul(Tensor([2, 4, 268435457],"float64"), Tensor([2, 5, 4],"float64"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float64"), Tensor([107374183, 5, 4],"float64"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float64"), Tensor([2, 268435457, 4],"float64"), True, True, )
paddle.matmul(Tensor([2, 4, 3],"float64"), Tensor([2, 5, 214748365],"float64"), True, True, )
paddle.matmul(Tensor([178956971, 4, 3],"float64"), Tensor([178956971, 5, 4],"float64"), True, True, )
paddle.matmul(Tensor([2, 357913942, 3],"float64"), Tensor([2, 357913942, 4],"float64"), True, True, )
paddle.matmul(Tensor([2, 4, 268435457],"float64"), Tensor([2, 5, 268435457],"float64"), True, True, )
paddle.matmul(Tensor([102261127, 42],"float32"), Tensor([42, 42],"float32"), )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([42, 42],"float32"), )
paddle.matmul(Tensor([2, 42],"float32"), Tensor([102261127, 42],"float32"), )
paddle.matmul(Tensor([2, 42],"float32"), Tensor([42, 102261127],"float32"), )
paddle.matmul(Tensor([102261127, 42],"float32"), Tensor([102261127, 42],"float32"), )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([42, 2147483648],"float32"), )
paddle.matmul(Tensor([4161791, 8, 1, 129],"float16"), Tensor([2, 8, 129, 64],"float16"), )
paddle.matmul(Tensor([2, 16647161, 1, 129],"float16"), Tensor([2, 8, 129, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 2080896, 129],"float16"), Tensor([2, 8, 129, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 1, 268435456],"float16"), Tensor([2, 8, 129, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 1, 129],"float16"), Tensor([65028, 8, 129, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 1, 129],"float16"), Tensor([2, 260112, 129, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 1, 129],"float16"), Tensor([2, 8, 4194304, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 1, 129],"float16"), Tensor([2, 8, 129, 2080896],"float16"), )
paddle.matmul(Tensor([4161791, 8, 1, 129],"float16"), Tensor([4161791, 8, 129, 64],"float16"), )
paddle.matmul(Tensor([2, 16647161, 1, 129],"float16"), Tensor([2, 16647161, 129, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 2080896, 129],"float16"), Tensor([2, 8, 2080896, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 1, 268435456],"float16"), Tensor([2, 8, 129, 268435456],"float16"), )
paddle.matmul(Tensor([8388608, 8, 1, 64],"float16"), Tensor([2, 8, 129, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 8, 129, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 4194304, 64],"float16"), Tensor([2, 8, 129, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 1, 268435456],"float16"), Tensor([2, 8, 129, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 1, 64],"float16"), Tensor([65028, 8, 129, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 1, 64],"float16"), Tensor([2, 260112, 129, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 1, 64],"float16"), Tensor([2, 8, 4194304, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 1, 64],"float16"), Tensor([2, 8, 129, 2080896],"float16"), transpose_y=True, )
paddle.matmul(Tensor([8388608, 8, 1, 64],"float16"), Tensor([8388608, 8, 129, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 129, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 4194304, 64],"float16"), Tensor([2, 8, 4194304, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 1, 268435456],"float16"), Tensor([2, 8, 129, 268435456],"float16"), transpose_y=True, )
paddle.matmul(Tensor([8388608, 8, 1, 64],"float16"), Tensor([2, 8, 65, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 8, 65, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 4194304, 64],"float16"), Tensor([2, 8, 65, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 1, 268435456],"float16"), Tensor([2, 8, 65, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 1, 64],"float16"), Tensor([129056, 8, 65, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 1, 64],"float16"), Tensor([2, 516223, 65, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 1, 64],"float16"), Tensor([2, 8, 65, 4129777],"float16"), transpose_y=True, )
paddle.matmul(Tensor([8388608, 8, 1, 64],"float16"), Tensor([8388608, 8, 65, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 33554432, 1, 64],"float16"), Tensor([2, 33554432, 65, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 1, 268435456],"float16"), Tensor([2, 8, 65, 268435456],"float16"), transpose_y=True, )
paddle.matmul(Tensor([8259553, 8, 1, 65],"float16"), Tensor([2, 8, 65, 64],"float16"), )
paddle.matmul(Tensor([2, 33038210, 1, 65],"float16"), Tensor([2, 8, 65, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 4129777, 65],"float16"), Tensor([2, 8, 65, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 1, 268435456],"float16"), Tensor([2, 8, 65, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 1, 65],"float16"), Tensor([129056, 8, 65, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 1, 65],"float16"), Tensor([2, 516223, 65, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 1, 65],"float16"), Tensor([2, 8, 4194304, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 1, 65],"float16"), Tensor([2, 8, 65, 4129777],"float16"), )
paddle.matmul(Tensor([8259553, 8, 1, 65],"float16"), Tensor([8259553, 8, 65, 64],"float16"), )
paddle.matmul(Tensor([2, 33038210, 1, 65],"float16"), Tensor([2, 33038210, 65, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 4129777, 65],"float16"), Tensor([2, 8, 4129777, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 1, 268435456],"float16"), Tensor([2, 8, 65, 268435456],"float16"), )
paddle.matmul(Tensor([65536, 8, 64, 128],"float16"), Tensor([2, 8, 128, 64],"float16"), )
paddle.matmul(Tensor([2, 262144, 64, 128],"float16"), Tensor([2, 8, 128, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 2097152, 128],"float16"), Tensor([2, 8, 128, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 64, 4194304],"float16"), Tensor([2, 8, 128, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 64, 128],"float16"), Tensor([65536, 8, 128, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 64, 128],"float16"), Tensor([2, 262144, 128, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 64, 128],"float16"), Tensor([2, 8, 4194304, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 64, 128],"float16"), Tensor([2, 8, 128, 2097152],"float16"), )
paddle.matmul(Tensor([65536, 8, 64, 128],"float16"), Tensor([65536, 8, 128, 64],"float16"), )
paddle.matmul(Tensor([2, 262144, 64, 128],"float16"), Tensor([2, 262144, 128, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 2097152, 128],"float16"), Tensor([2, 8, 2097152, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 64, 4194304],"float16"), Tensor([2, 8, 128, 4194304],"float16"), )
paddle.matmul(Tensor([131072, 8, 64, 64],"float16"), Tensor([2, 8, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 524288, 64, 64],"float16"), Tensor([2, 8, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 4194304, 64],"float16"), Tensor([2, 8, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 64, 4194304],"float16"), Tensor([2, 8, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 64, 64],"float16"), Tensor([65536, 8, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 64, 64],"float16"), Tensor([2, 262144, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 64, 64],"float16"), Tensor([2, 8, 4194304, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 64, 64],"float16"), Tensor([2, 8, 128, 2097152],"float16"), transpose_y=True, )
paddle.matmul(Tensor([131072, 8, 64, 64],"float16"), Tensor([131072, 8, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 524288, 64, 64],"float16"), Tensor([2, 524288, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 64, 4194304],"float16"), Tensor([2, 8, 128, 4194304],"float16"), transpose_y=True, )
paddle.matmul(Tensor([131072, 8, 64, 64],"float16"), Tensor([2, 8, 64, 64],"float16"), )
paddle.matmul(Tensor([2, 524288, 64, 64],"float16"), Tensor([2, 8, 64, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 4194304, 64],"float16"), Tensor([2, 8, 64, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 64, 4194304],"float16"), Tensor([2, 8, 64, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 64, 64],"float16"), Tensor([131072, 8, 64, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 64, 64],"float16"), Tensor([2, 524288, 64, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 64, 64],"float16"), Tensor([2, 8, 4194304, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 64, 64],"float16"), Tensor([2, 8, 64, 4194304],"float16"), )
paddle.matmul(Tensor([131072, 8, 64, 64],"float16"), Tensor([131072, 8, 64, 64],"float16"), )
paddle.matmul(Tensor([2, 524288, 64, 64],"float16"), Tensor([2, 524288, 64, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 4194304, 64],"float16"), Tensor([2, 8, 4194304, 64],"float16"), )
paddle.matmul(Tensor([2, 8, 64, 4194304],"float16"), Tensor([2, 8, 64, 4194304],"float16"), )
paddle.matmul(Tensor([131072, 8, 64, 64],"float16"), Tensor([2, 8, 64, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 524288, 64, 64],"float16"), Tensor([2, 8, 64, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 4194304, 64],"float16"), Tensor([2, 8, 64, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 64, 4194304],"float16"), Tensor([2, 8, 64, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 64, 64],"float16"), Tensor([131072, 8, 64, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 64, 64],"float16"), Tensor([2, 524288, 64, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 64, 64],"float16"), Tensor([2, 8, 64, 4194304],"float16"), transpose_y=True, )
paddle.matmul(Tensor([131072, 8, 64, 64],"float16"), Tensor([131072, 8, 64, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 524288, 64, 64],"float16"), Tensor([2, 524288, 64, 64],"float16"), transpose_y=True, )
paddle.matmul(Tensor([2, 8, 64, 4194304],"float16"), Tensor([2, 8, 64, 4194304],"float16"), transpose_y=True, )
paddle.matmul(Tensor([67108864, 8, 8],"float32"), Tensor([2, 8, 16],"float32"), )
paddle.matmul(Tensor([2, 268435456, 8],"float32"), Tensor([2, 8, 16],"float32"), )
paddle.matmul(Tensor([2, 8, 268435456],"float32"), Tensor([2, 8, 16],"float32"), )
paddle.matmul(Tensor([2, 8, 8],"float32"), Tensor([33554432, 8, 16],"float32"), )
paddle.matmul(Tensor([2, 8, 8],"float32"), Tensor([2, 134217728, 16],"float32"), )
paddle.matmul(Tensor([2, 8, 8],"float32"), Tensor([2, 8, 268435456],"float32"), )
paddle.matmul(Tensor([67108864, 8, 8],"float32"), Tensor([67108864, 8, 16],"float32"), )
paddle.matmul(Tensor([2, 268435456, 8],"float32"), Tensor([2, 268435456, 16],"float32"), )
paddle.matmul(Tensor([2, 8, 268435456],"float32"), Tensor([2, 8, 268435456],"float32"), )
paddle.matmul(Tensor([536870912, 8],"float32"), Tensor([24, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 2147483648],"float32"), Tensor([24, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 8],"float32"), Tensor([536870912, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([2, 8],"float32"), Tensor([24, 178956971],"float32"), transpose_y=True, )
paddle.matmul(Tensor([536870912, 8],"float32"), Tensor([536870912, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4294967295],"float16"), Tensor([2, 3],"float16"), False, False, )
paddle.matmul(Tensor([2],"float16"), Tensor([1431655765, 3],"float16"), False, False, )
paddle.matmul(Tensor([2],"float16"), Tensor([2, 2147483648],"float16"), False, False, )
paddle.matmul(Tensor([4294967295],"float16"), Tensor([2],"float16"), False, False, )
paddle.matmul(Tensor([2],"float16"), Tensor([4294967295],"float16"), False, False, )
paddle.matmul(Tensor([4294967295],"float16"), Tensor([4294967295],"float16"), False, False, )
paddle.matmul(Tensor([4294967295],"float16"), Tensor([3, 2],"float16"), False, True, )
paddle.matmul(Tensor([2],"float16"), Tensor([2147483648, 2],"float16"), False, True, )
paddle.matmul(Tensor([2],"float16"), Tensor([3, 1431655765],"float16"), False, True, )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([2, 3],"float32"), False, False, )
paddle.matmul(Tensor([2],"float32"), Tensor([1431655765, 3],"float32"), False, False, )
paddle.matmul(Tensor([2],"float32"), Tensor([2, 2147483648],"float32"), False, False, )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([2],"float32"), False, False, )
paddle.matmul(Tensor([2],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([3, 2],"float32"), False, True, )
paddle.matmul(Tensor([2],"float32"), Tensor([2147483648, 2],"float32"), False, True, )
paddle.matmul(Tensor([2],"float32"), Tensor([3, 1431655765],"float32"), False, True, )
paddle.matmul(Tensor([2147483649],"float64"), Tensor([2, 3],"float64"), False, False, )
paddle.matmul(Tensor([2],"float64"), Tensor([715827883, 3],"float64"), False, False, )
paddle.matmul(Tensor([2],"float64"), Tensor([2, 1073741825],"float64"), False, False, )
paddle.matmul(Tensor([2147483649],"float64"), Tensor([2],"float64"), False, False, )
paddle.matmul(Tensor([2],"float64"), Tensor([2147483649],"float64"), False, False, )
paddle.matmul(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), False, False, )
paddle.matmul(Tensor([2147483649],"float64"), Tensor([3, 2],"float64"), False, True, )
paddle.matmul(Tensor([2],"float64"), Tensor([1073741825, 2],"float64"), False, True, )
paddle.matmul(Tensor([2],"float64"), Tensor([3, 715827883],"float64"), False, True, )
paddle.matmul(Tensor([3, 1431655765],"float32"), Tensor([1],"float32"), False, False, )
paddle.matmul(Tensor([3, 1],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.matmul(Tensor([5368710, 100, 4],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.matmul(Tensor([3, 178956971, 4],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.matmul(Tensor([3, 100, 7158279],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.matmul(Tensor([3, 100, 4],"float64"), Tensor([268435457, 4, 2],"float64"), )
paddle.matmul(Tensor([3, 100, 4],"float64"), Tensor([3, 357913942, 2],"float64"), )
paddle.matmul(Tensor([3, 100, 4],"float64"), Tensor([3, 4, 178956971],"float64"), )
paddle.matmul(Tensor([3, 178956971, 4],"float64"), Tensor([3, 178956971, 2],"float64"), )
paddle.matmul(Tensor([3, 100, 7158279],"float64"), Tensor([3, 4, 7158279],"float64"), )
paddle.matmul(Tensor([5368710, 100, 4],"float64"), Tensor([3, 4, 4],"float64"), )
paddle.matmul(Tensor([3, 178956971, 4],"float64"), Tensor([3, 4, 4],"float64"), )
paddle.matmul(Tensor([3, 100, 7158279],"float64"), Tensor([3, 4, 4],"float64"), )
paddle.matmul(Tensor([3, 100, 4],"float64"), Tensor([134217729, 4, 4],"float64"), )
paddle.matmul(Tensor([3, 100, 4],"float64"), Tensor([3, 178956971, 4],"float64"), )
paddle.matmul(Tensor([3, 178956971, 4],"float64"), Tensor([3, 178956971, 4],"float64"), )
paddle.matmul(Tensor([3, 178956971, 4],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([3, 100, 7158279],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([3, 100, 4],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([3, 100, 4],"float64"), Tensor([4, 536870913],"float64"), )
paddle.matmul(Tensor([3, 178956971, 4],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([3, 100, 7158279],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([3, 100, 4],"float64"), Tensor([536870913, 4],"float64"), )
paddle.matmul(Tensor([536871, 100, 40],"float64"), Tensor([3, 40, 12],"float64"), )
paddle.matmul(Tensor([3, 17895698, 40],"float64"), Tensor([3, 40, 12],"float64"), )
paddle.matmul(Tensor([3, 100, 7158279],"float64"), Tensor([3, 40, 12],"float64"), )
paddle.matmul(Tensor([3, 100, 40],"float64"), Tensor([4473925, 40, 12],"float64"), )
paddle.matmul(Tensor([3, 100, 40],"float64"), Tensor([3, 59652324, 12],"float64"), )
paddle.matmul(Tensor([3, 100, 40],"float64"), Tensor([3, 40, 17895698],"float64"), )
paddle.matmul(Tensor([3, 17895698, 40],"float64"), Tensor([3, 17895698, 12],"float64"), )
paddle.matmul(Tensor([3, 100, 7158279],"float64"), Tensor([3, 40, 7158279],"float64"), )
paddle.matmul(Tensor([536871, 100, 40],"float64"), Tensor([3, 40, 6],"float64"), )
paddle.matmul(Tensor([3, 17895698, 40],"float64"), Tensor([3, 40, 6],"float64"), )
paddle.matmul(Tensor([3, 100, 7158279],"float64"), Tensor([3, 40, 6],"float64"), )
paddle.matmul(Tensor([3, 100, 40],"float64"), Tensor([8947849, 40, 6],"float64"), )
paddle.matmul(Tensor([3, 100, 40],"float64"), Tensor([3, 119304648, 6],"float64"), )
paddle.matmul(Tensor([3, 17895698, 40],"float64"), Tensor([3, 17895698, 6],"float64"), )
paddle.matmul(Tensor([536871, 100, 40],"float64"), Tensor([3, 40, 8],"float64"), )
paddle.matmul(Tensor([3, 17895698, 40],"float64"), Tensor([3, 40, 8],"float64"), )
paddle.matmul(Tensor([3, 100, 7158279],"float64"), Tensor([3, 40, 8],"float64"), )
paddle.matmul(Tensor([3, 100, 40],"float64"), Tensor([6710887, 40, 8],"float64"), )
paddle.matmul(Tensor([3, 100, 40],"float64"), Tensor([3, 89478486, 8],"float64"), )
paddle.matmul(Tensor([3, 17895698, 40],"float64"), Tensor([3, 17895698, 8],"float64"), )
paddle.matmul(Tensor([3, 17895698, 40],"float64"), Tensor([40, 12],"float64"), )
paddle.matmul(Tensor([3, 100, 7158279],"float64"), Tensor([40, 12],"float64"), )
paddle.matmul(Tensor([3, 100, 40],"float64"), Tensor([178956971, 12],"float64"), )
paddle.matmul(Tensor([3, 100, 40],"float64"), Tensor([40, 53687092],"float64"), )
paddle.matmul(Tensor([3, 17895698, 40],"float64"), Tensor([40, 6],"float64"), )
paddle.matmul(Tensor([3, 100, 7158279],"float64"), Tensor([40, 6],"float64"), )
paddle.matmul(Tensor([3, 100, 40],"float64"), Tensor([357913942, 6],"float64"), )
paddle.matmul(Tensor([3, 17895698, 40],"float64"), Tensor([40, 8],"float64"), )
paddle.matmul(Tensor([3, 100, 7158279],"float64"), Tensor([40, 8],"float64"), )
paddle.matmul(Tensor([3, 100, 40],"float64"), Tensor([268435457, 8],"float64"), )
paddle.matmul(Tensor([131072, 16, 64, 32],"float16"), Tensor([3, 16, 64, 32],"float16"), transpose_y=True, )
paddle.matmul(Tensor([3, 699051, 64, 32],"float16"), Tensor([3, 16, 64, 32],"float16"), transpose_y=True, )
paddle.matmul(Tensor([3, 16, 2796203, 32],"float16"), Tensor([3, 16, 64, 32],"float16"), transpose_y=True, )
paddle.matmul(Tensor([3, 16, 64, 1398102],"float16"), Tensor([3, 16, 64, 32],"float16"), transpose_y=True, )
paddle.matmul(Tensor([3, 16, 64, 32],"float16"), Tensor([131072, 16, 64, 32],"float16"), transpose_y=True, )
paddle.matmul(Tensor([3, 16, 64, 32],"float16"), Tensor([3, 699051, 64, 32],"float16"), transpose_y=True, )
paddle.matmul(Tensor([3, 16, 64, 32],"float16"), Tensor([3, 16, 2796203, 32],"float16"), transpose_y=True, )
paddle.matmul(Tensor([3, 16, 64, 32],"float16"), Tensor([3, 16, 64, 1398102],"float16"), transpose_y=True, )
paddle.matmul(Tensor([131072, 16, 64, 32],"float16"), Tensor([131072, 16, 64, 32],"float16"), transpose_y=True, )
paddle.matmul(Tensor([3, 699051, 64, 32],"float16"), Tensor([3, 699051, 64, 32],"float16"), transpose_y=True, )
paddle.matmul(Tensor([3, 16, 2796203, 32],"float16"), Tensor([3, 16, 2796203, 32],"float16"), transpose_y=True, )
paddle.matmul(Tensor([3, 16, 64, 1398102],"float16"), Tensor([3, 16, 64, 1398102],"float16"), transpose_y=True, )
paddle.matmul(Tensor([65536, 16, 64, 64],"float16"), Tensor([3, 16, 64, 32],"float16"), )
paddle.matmul(Tensor([3, 349526, 64, 64],"float16"), Tensor([3, 16, 64, 32],"float16"), )
paddle.matmul(Tensor([3, 16, 1398102, 64],"float16"), Tensor([3, 16, 64, 32],"float16"), )
paddle.matmul(Tensor([3, 16, 64, 1398102],"float16"), Tensor([3, 16, 64, 32],"float16"), )
paddle.matmul(Tensor([3, 16, 64, 64],"float16"), Tensor([131072, 16, 64, 32],"float16"), )
paddle.matmul(Tensor([3, 16, 64, 64],"float16"), Tensor([3, 699051, 64, 32],"float16"), )
paddle.matmul(Tensor([3, 16, 64, 64],"float16"), Tensor([3, 16, 2796203, 32],"float16"), )
paddle.matmul(Tensor([3, 16, 64, 64],"float16"), Tensor([3, 16, 64, 1398102],"float16"), )
paddle.matmul(Tensor([65536, 16, 64, 64],"float16"), Tensor([65536, 16, 64, 32],"float16"), )
paddle.matmul(Tensor([3, 349526, 64, 64],"float16"), Tensor([3, 349526, 64, 32],"float16"), )
paddle.matmul(Tensor([3, 16, 1398102, 64],"float16"), Tensor([3, 16, 1398102, 32],"float16"), )
paddle.matmul(Tensor([3, 16, 64, 1398102],"float16"), Tensor([3, 16, 64, 1398102],"float16"), )
paddle.matmul(Tensor([31580642, 17, 4],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.matmul(Tensor([3, 17, 42107523],"float64"), Tensor([3, 4, 2],"float64"), )
paddle.matmul(Tensor([3, 17, 4],"float64"), Tensor([268435457, 4, 2],"float64"), )
paddle.matmul(Tensor([3, 17, 4],"float64"), Tensor([3, 357913942, 2],"float64"), )
paddle.matmul(Tensor([3, 17, 4],"float64"), Tensor([3, 4, 178956971],"float64"), )
paddle.matmul(Tensor([3, 17, 42107523],"float64"), Tensor([3, 4, 42107523],"float64"), )
paddle.matmul(Tensor([31580642, 17, 4],"float64"), Tensor([3, 4, 4],"float64"), )
paddle.matmul(Tensor([3, 17, 42107523],"float64"), Tensor([3, 4, 4],"float64"), )
paddle.matmul(Tensor([3, 17, 4],"float64"), Tensor([134217729, 4, 4],"float64"), )
paddle.matmul(Tensor([3, 17, 4],"float64"), Tensor([3, 178956971, 4],"float64"), )
paddle.matmul(Tensor([3, 17, 42107523],"float64"), Tensor([4, 2],"float64"), )
paddle.matmul(Tensor([3, 17, 4],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([3, 17, 4],"float64"), Tensor([4, 536870913],"float64"), )
paddle.matmul(Tensor([3, 17, 42107523],"float64"), Tensor([4, 4],"float64"), )
paddle.matmul(Tensor([3, 17, 4],"float64"), Tensor([536870913, 4],"float64"), )
paddle.matmul(Tensor([1073741824, 2, 2],"float32"), Tensor([1, 2, 2],"float32"), )
paddle.matmul(Tensor([3, 715827883, 2],"float32"), Tensor([1, 2, 2],"float32"), )
paddle.matmul(Tensor([3, 2, 715827883],"float32"), Tensor([1, 2, 2],"float32"), )
paddle.matmul(Tensor([3, 2, 2],"float32"), Tensor([1073741824, 2, 2],"float32"), )
paddle.matmul(Tensor([3, 2, 2],"float32"), Tensor([1, 2147483648, 2],"float32"), )
paddle.matmul(Tensor([3, 2, 2],"float32"), Tensor([1, 2, 2147483648],"float32"), )
paddle.matmul(Tensor([1073741824, 2, 2],"float32"), Tensor([1073741824, 2, 2],"float32"), )
paddle.matmul(Tensor([3, 715827883, 2],"float32"), Tensor([1, 715827883, 2],"float32"), )
paddle.matmul(Tensor([3, 2, 715827883],"float32"), Tensor([1, 2, 715827883],"float32"), )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([2, 3],"float32"), )
paddle.matmul(Tensor([3, 1431655765],"float32"), Tensor([2, 3],"float32"), )
paddle.matmul(Tensor([3, 2],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.matmul(Tensor([3, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.matmul(Tensor([2147483648, 2],"float32"), Tensor([2147483648, 3],"float32"), )
paddle.matmul(Tensor([3, 1431655765],"float32"), Tensor([2, 1431655765],"float32"), )
paddle.matmul(Tensor([1431655765, 3],"float32"), Tensor([3, 3],"float32"), )
paddle.matmul(Tensor([3, 1431655765],"float32"), Tensor([3, 3],"float32"), )
paddle.matmul(Tensor([3, 3],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.matmul(Tensor([3, 3],"float32"), Tensor([3, 1431655765],"float32"), )
paddle.matmul(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.matmul(Tensor([3, 1431655765],"float32"), Tensor([3, 1431655765],"float32"), )
paddle.matmul(Tensor([1431655765, 3],"float32"), Tensor([3, 3],"float32"), False, False, )
paddle.matmul(Tensor([3, 1431655765],"float32"), Tensor([3, 3],"float32"), False, False, )
paddle.matmul(Tensor([3, 3],"float32"), Tensor([1431655765, 3],"float32"), False, False, )
paddle.matmul(Tensor([3, 3],"float32"), Tensor([3, 1431655765],"float32"), False, False, )
paddle.matmul(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 3],"float32"), False, False, )
paddle.matmul(Tensor([3, 1431655765],"float32"), Tensor([3, 1431655765],"float32"), False, False, )
paddle.matmul(Tensor([715827883, 3],"float64"), Tensor([2, 3, 1],"float64"), )
paddle.matmul(Tensor([3, 715827883],"float64"), Tensor([2, 3, 1],"float64"), )
paddle.matmul(Tensor([3, 3],"float64"), Tensor([715827883, 3, 1],"float64"), )
paddle.matmul(Tensor([3, 3],"float64"), Tensor([2, 1073741825, 1],"float64"), )
paddle.matmul(Tensor([3, 3],"float64"), Tensor([2, 3, 357913942],"float64"), )
paddle.matmul(Tensor([715827883, 3],"float64"), Tensor([3, 1],"float64"), )
paddle.matmul(Tensor([3, 715827883],"float64"), Tensor([3, 1],"float64"), )
paddle.matmul(Tensor([3, 3],"float64"), Tensor([2147483649, 1],"float64"), )
paddle.matmul(Tensor([3, 3],"float64"), Tensor([3, 715827883],"float64"), )
paddle.matmul(Tensor([715827883, 3],"float64"), Tensor([715827883, 1],"float64"), )
paddle.matmul(Tensor([3, 715827883],"float64"), Tensor([3, 715827883],"float64"), )
paddle.matmul(Tensor([715827883, 3],"float64"), Tensor([50000, 2, 3, 1],"float64"), )
paddle.matmul(Tensor([3, 715827883],"float64"), Tensor([50000, 2, 3, 1],"float64"), )
paddle.matmul(Tensor([3, 3],"float64"), Tensor([357913942, 2, 3, 1],"float64"), )
paddle.matmul(Tensor([3, 3],"float64"), Tensor([50000, 14317, 3, 1],"float64"), )
paddle.matmul(Tensor([3, 3],"float64"), Tensor([50000, 2, 21475, 1],"float64"), )
paddle.matmul(Tensor([3, 3],"float64"), Tensor([50000, 2, 3, 7159],"float64"), )
paddle.matmul(Tensor([3, 7158279, 100],"float64"), Tensor([100, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 178956971],"float64"), Tensor([100, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 100],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 100],"float64"), Tensor([100, 21474837],"float64"), )
paddle.matmul(Tensor([5368710, 4, 100],"float64"), Tensor([3, 100, 2],"float64"), )
paddle.matmul(Tensor([3, 7158279, 100],"float64"), Tensor([3, 100, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 178956971],"float64"), Tensor([3, 100, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 100],"float64"), Tensor([10737419, 100, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 100],"float64"), Tensor([3, 357913942, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 100],"float64"), Tensor([3, 100, 7158279],"float64"), )
paddle.matmul(Tensor([3, 7158279, 100],"float64"), Tensor([3, 7158279, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 178956971],"float64"), Tensor([3, 100, 178956971],"float64"), )
paddle.matmul(Tensor([5368710, 4, 100],"float64"), Tensor([3, 100, 4],"float64"), )
paddle.matmul(Tensor([3, 7158279, 100],"float64"), Tensor([3, 100, 4],"float64"), )
paddle.matmul(Tensor([3, 4, 178956971],"float64"), Tensor([3, 100, 4],"float64"), )
paddle.matmul(Tensor([3, 4, 100],"float64"), Tensor([5368710, 100, 4],"float64"), )
paddle.matmul(Tensor([3, 4, 100],"float64"), Tensor([3, 178956971, 4],"float64"), )
paddle.matmul(Tensor([3, 7158279, 100],"float64"), Tensor([3, 7158279, 4],"float64"), )
paddle.matmul(Tensor([3, 42107523, 17],"float64"), Tensor([17, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 178956971],"float64"), Tensor([17, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 17],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 17],"float64"), Tensor([17, 126322568],"float64"), )
paddle.matmul(Tensor([31580642, 4, 17],"float64"), Tensor([3, 17, 2],"float64"), )
paddle.matmul(Tensor([3, 42107523, 17],"float64"), Tensor([3, 17, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 178956971],"float64"), Tensor([3, 17, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 17],"float64"), Tensor([63161284, 17, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 17],"float64"), Tensor([3, 357913942, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 17],"float64"), Tensor([3, 17, 42107523],"float64"), )
paddle.matmul(Tensor([3, 42107523, 17],"float64"), Tensor([3, 42107523, 2],"float64"), )
paddle.matmul(Tensor([3, 4, 178956971],"float64"), Tensor([3, 17, 178956971],"float64"), )
paddle.matmul(Tensor([31580642, 4, 17],"float64"), Tensor([3, 17, 4],"float64"), )
paddle.matmul(Tensor([3, 42107523, 17],"float64"), Tensor([3, 17, 4],"float64"), )
paddle.matmul(Tensor([3, 4, 178956971],"float64"), Tensor([3, 17, 4],"float64"), )
paddle.matmul(Tensor([3, 4, 17],"float64"), Tensor([31580642, 17, 4],"float64"), )
paddle.matmul(Tensor([3, 4, 17],"float64"), Tensor([3, 178956971, 4],"float64"), )
paddle.matmul(Tensor([3, 42107523, 17],"float64"), Tensor([3, 42107523, 4],"float64"), )
paddle.matmul(Tensor([3, 7158279, 100],"float64"), Tensor([100, 12],"float64"), )
paddle.matmul(Tensor([3, 40, 17895698],"float64"), Tensor([100, 12],"float64"), )
paddle.matmul(Tensor([3, 40, 100],"float64"), Tensor([178956971, 12],"float64"), )
paddle.matmul(Tensor([3, 40, 100],"float64"), Tensor([100, 21474837],"float64"), )
paddle.matmul(Tensor([3, 7158279, 100],"float64"), Tensor([100, 6],"float64"), )
paddle.matmul(Tensor([3, 40, 17895698],"float64"), Tensor([100, 6],"float64"), )
paddle.matmul(Tensor([3, 40, 100],"float64"), Tensor([357913942, 6],"float64"), )
paddle.matmul(Tensor([3, 7158279, 100],"float64"), Tensor([100, 8],"float64"), )
paddle.matmul(Tensor([3, 40, 17895698],"float64"), Tensor([100, 8],"float64"), )
paddle.matmul(Tensor([3, 40, 100],"float64"), Tensor([268435457, 8],"float64"), )
paddle.matmul(Tensor([536871, 40, 100],"float64"), Tensor([3, 100, 12],"float64"), )
paddle.matmul(Tensor([3, 7158279, 100],"float64"), Tensor([3, 100, 12],"float64"), )
paddle.matmul(Tensor([3, 40, 17895698],"float64"), Tensor([3, 100, 12],"float64"), )
paddle.matmul(Tensor([3, 40, 100],"float64"), Tensor([1789570, 100, 12],"float64"), )
paddle.matmul(Tensor([3, 40, 100],"float64"), Tensor([3, 59652324, 12],"float64"), )
paddle.matmul(Tensor([3, 40, 100],"float64"), Tensor([3, 100, 7158279],"float64"), )
paddle.matmul(Tensor([3, 7158279, 100],"float64"), Tensor([3, 7158279, 12],"float64"), )
paddle.matmul(Tensor([3, 40, 17895698],"float64"), Tensor([3, 100, 17895698],"float64"), )
paddle.matmul(Tensor([536871, 40, 100],"float64"), Tensor([3, 100, 6],"float64"), )
paddle.matmul(Tensor([3, 7158279, 100],"float64"), Tensor([3, 100, 6],"float64"), )
paddle.matmul(Tensor([3, 40, 17895698],"float64"), Tensor([3, 100, 6],"float64"), )
paddle.matmul(Tensor([3, 40, 100],"float64"), Tensor([3579140, 100, 6],"float64"), )
paddle.matmul(Tensor([3, 40, 100],"float64"), Tensor([3, 119304648, 6],"float64"), )
paddle.matmul(Tensor([3, 7158279, 100],"float64"), Tensor([3, 7158279, 6],"float64"), )
paddle.matmul(Tensor([536871, 40, 100],"float64"), Tensor([3, 100, 8],"float64"), )
paddle.matmul(Tensor([3, 7158279, 100],"float64"), Tensor([3, 100, 8],"float64"), )
paddle.matmul(Tensor([3, 40, 17895698],"float64"), Tensor([3, 100, 8],"float64"), )
paddle.matmul(Tensor([3, 40, 100],"float64"), Tensor([2684355, 100, 8],"float64"), )
paddle.matmul(Tensor([3, 40, 100],"float64"), Tensor([3, 89478486, 8],"float64"), )
paddle.matmul(Tensor([3, 7158279, 100],"float64"), Tensor([3, 7158279, 8],"float64"), )
paddle.matmul(Tensor([4294967295],"float32"), Tensor([3],"float32"), False, False, )
paddle.matmul(Tensor([3],"float32"), Tensor([4294967295],"float32"), False, False, )
paddle.matmul(Tensor([536871, 1, 40, 200],"float32"), Tensor([1, 30, 200, 40],"float32"), )
paddle.matmul(Tensor([30, 17896, 40, 200],"float32"), Tensor([1, 30, 200, 40],"float32"), )
paddle.matmul(Tensor([30, 1, 715828, 200],"float32"), Tensor([1, 30, 200, 40],"float32"), )
paddle.matmul(Tensor([30, 1, 40, 3579140],"float32"), Tensor([1, 30, 200, 40],"float32"), )
paddle.matmul(Tensor([30, 1, 40, 200],"float32"), Tensor([17896, 30, 200, 40],"float32"), )
paddle.matmul(Tensor([30, 1, 40, 200],"float32"), Tensor([1, 536871, 200, 40],"float32"), )
paddle.matmul(Tensor([30, 1, 40, 200],"float32"), Tensor([1, 30, 3579140, 40],"float32"), )
paddle.matmul(Tensor([30, 1, 40, 200],"float32"), Tensor([1, 30, 200, 715828],"float32"), )
paddle.matmul(Tensor([536871, 1, 40, 200],"float32"), Tensor([536871, 30, 200, 40],"float32"), )
paddle.matmul(Tensor([30, 17896, 40, 200],"float32"), Tensor([1, 17896, 200, 40],"float32"), )
paddle.matmul(Tensor([30, 1, 715828, 200],"float32"), Tensor([1, 30, 715828, 40],"float32"), )
paddle.matmul(Tensor([30, 1, 40, 3579140],"float32"), Tensor([1, 30, 200, 3579140],"float32"), )
paddle.matmul(Tensor([536871, 40, 200],"float32"), Tensor([30, 200, 40],"float32"), )
paddle.matmul(Tensor([30, 715828, 200],"float32"), Tensor([30, 200, 40],"float32"), )
paddle.matmul(Tensor([30, 40, 3579140],"float32"), Tensor([30, 200, 40],"float32"), )
paddle.matmul(Tensor([30, 40, 200],"float32"), Tensor([536871, 200, 40],"float32"), )
paddle.matmul(Tensor([30, 40, 200],"float32"), Tensor([30, 3579140, 40],"float32"), )
paddle.matmul(Tensor([30, 40, 200],"float32"), Tensor([30, 200, 715828],"float32"), )
paddle.matmul(Tensor([536871, 40, 200],"float32"), Tensor([536871, 200, 40],"float32"), )
paddle.matmul(Tensor([30, 715828, 200],"float32"), Tensor([30, 715828, 40],"float32"), )
paddle.matmul(Tensor([30, 40, 3579140],"float32"), Tensor([30, 200, 3579140],"float32"), )
paddle.matmul(Tensor([30, 143165577],"float16"), Tensor([8, 6],"float16"), )
paddle.matmul(Tensor([30, 8],"float16"), Tensor([715827883, 6],"float16"), )
paddle.matmul(Tensor([30, 8],"float16"), Tensor([8, 536870912],"float16"), )
paddle.matmul(Tensor([30, 143165577],"float16"), Tensor([8, 143165577],"float16"), )
paddle.matmul(Tensor([30, 143165577],"float32"), Tensor([8, 6],"float32"), )
paddle.matmul(Tensor([30, 8],"float32"), Tensor([715827883, 6],"float32"), )
paddle.matmul(Tensor([30, 8],"float32"), Tensor([8, 536870912],"float32"), )
paddle.matmul(Tensor([30, 143165577],"float32"), Tensor([8, 143165577],"float32"), )
paddle.matmul(Tensor([10737419, 16, 5, 5],"float32"), Tensor([32, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([32, 5368710, 5, 5],"float32"), Tensor([32, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([32, 16, 1677722, 5],"float32"), Tensor([32, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([32, 16, 5, 1677722],"float32"), Tensor([32, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([32, 16, 5, 5],"float32"), Tensor([10737419, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([32, 16, 5, 5],"float32"), Tensor([32, 5368710, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([32, 16, 5, 5],"float32"), Tensor([32, 16, 1677722, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([32, 16, 5, 5],"float32"), Tensor([32, 16, 5, 1677722],"float32"), False, True, None, )
paddle.matmul(Tensor([32, 5368710, 5, 5],"float32"), Tensor([32, 5368710, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([32, 16, 1677722, 5],"float32"), Tensor([32, 16, 1677722, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([32, 16, 5, 1677722],"float32"), Tensor([32, 16, 5, 1677722],"float32"), False, True, None, )
paddle.matmul(Tensor([32, 67108865],"float64"), Tensor([128, 32],"float64"), transpose_y=True, )
paddle.matmul(Tensor([32, 32],"float64"), Tensor([67108865, 32],"float64"), transpose_y=True, )
paddle.matmul(Tensor([32, 32],"float64"), Tensor([128, 16777217],"float64"), transpose_y=True, )
paddle.matmul(Tensor([32, 67108865],"float64"), Tensor([128, 67108865],"float64"), transpose_y=True, )
paddle.matmul(Tensor([33554432, 8, 4, 4],"float32"), Tensor([32, 8, 4, 64],"float32"), )
paddle.matmul(Tensor([32, 8388608, 4, 4],"float32"), Tensor([32, 8, 4, 64],"float32"), )
paddle.matmul(Tensor([32, 8, 4194304, 4],"float32"), Tensor([32, 8, 4, 64],"float32"), )
paddle.matmul(Tensor([32, 8, 4, 4194304],"float32"), Tensor([32, 8, 4, 64],"float32"), )
paddle.matmul(Tensor([32, 8, 4, 4],"float32"), Tensor([2097152, 8, 4, 64],"float32"), )
paddle.matmul(Tensor([32, 8, 4, 4],"float32"), Tensor([32, 524288, 4, 64],"float32"), )
paddle.matmul(Tensor([32, 8, 4, 4],"float32"), Tensor([32, 8, 262144, 64],"float32"), )
paddle.matmul(Tensor([32, 8, 4, 4],"float32"), Tensor([32, 8, 4, 4194304],"float32"), )
paddle.matmul(Tensor([33554432, 8, 4, 4],"float32"), Tensor([33554432, 8, 4, 64],"float32"), )
paddle.matmul(Tensor([32, 8388608, 4, 4],"float32"), Tensor([32, 8388608, 4, 64],"float32"), )
paddle.matmul(Tensor([32, 8, 4194304, 4],"float32"), Tensor([32, 8, 4194304, 64],"float32"), )
paddle.matmul(Tensor([32, 8, 4, 4194304],"float32"), Tensor([32, 8, 4, 4194304],"float32"), )
paddle.matmul(Tensor([4, 134217728, 8],"float32"), Tensor([8, 128],"float32"), )
paddle.matmul(Tensor([4, 1, 1073741824],"float32"), Tensor([8, 128],"float32"), )
paddle.matmul(Tensor([4, 1, 8],"float32"), Tensor([33554432, 128],"float32"), )
paddle.matmul(Tensor([4, 1, 8],"float32"), Tensor([8, 536870912],"float32"), )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([1, 17],"float64"), )
paddle.matmul(Tensor([4, 1],"float64"), Tensor([126322568, 17],"float64"), )
paddle.matmul(Tensor([4, 1],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([1, 536870913],"float64"), )
paddle.matmul(Tensor([42949673, 10, 10],"float32"), Tensor([20, 10],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 107374183, 10],"float32"), Tensor([20, 10],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 10, 107374183],"float32"), Tensor([20, 10],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 10, 10],"float32"), Tensor([429496730, 10],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 10, 10],"float32"), Tensor([20, 214748365],"float32"), transpose_y=True, )
paddle.matmul(Tensor([429496730, 10],"float32"), Tensor([10, 3],"float32"), )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([10, 3],"float32"), )
paddle.matmul(Tensor([4, 10],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.matmul(Tensor([4, 10],"float32"), Tensor([10, 429496730],"float32"), )
paddle.matmul(Tensor([429496730, 10],"float32"), Tensor([429496730, 3],"float32"), )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([10, 1073741824],"float32"), )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([100, 2],"float64"), )
paddle.matmul(Tensor([4, 100],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([4, 100],"float64"), Tensor([100, 21474837],"float64"), )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([100, 536870913],"float64"), )
paddle.matmul(Tensor([21474837, 100],"float64"), Tensor([100, 4],"float64"), )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([100, 4],"float64"), )
paddle.matmul(Tensor([4, 100],"float64"), Tensor([536870913, 4],"float64"), )
paddle.matmul(Tensor([21474837, 100],"float64"), Tensor([21474837, 4],"float64"), )
paddle.matmul(Tensor([63551, 12, 64, 88],"float32"), Tensor([4, 12, 88, 512],"float32"), )
paddle.matmul(Tensor([4, 190651, 64, 88],"float32"), Tensor([4, 12, 88, 512],"float32"), )
paddle.matmul(Tensor([4, 12, 1016801, 88],"float32"), Tensor([4, 12, 88, 512],"float32"), )
paddle.matmul(Tensor([4, 12, 64, 1398102],"float32"), Tensor([4, 12, 88, 512],"float32"), )
paddle.matmul(Tensor([4, 12, 64, 88],"float32"), Tensor([7944, 12, 88, 512],"float32"), )
paddle.matmul(Tensor([4, 12, 64, 88],"float32"), Tensor([4, 23832, 88, 512],"float32"), )
paddle.matmul(Tensor([4, 12, 64, 88],"float32"), Tensor([4, 12, 174763, 512],"float32"), )
paddle.matmul(Tensor([4, 12, 64, 88],"float32"), Tensor([4, 12, 88, 1016801],"float32"), )
paddle.matmul(Tensor([63551, 12, 64, 88],"float32"), Tensor([63551, 12, 88, 512],"float32"), )
paddle.matmul(Tensor([4, 190651, 64, 88],"float32"), Tensor([4, 190651, 88, 512],"float32"), )
paddle.matmul(Tensor([4, 12, 1016801, 88],"float32"), Tensor([4, 12, 1016801, 512],"float32"), )
paddle.matmul(Tensor([4, 12, 64, 1398102],"float32"), Tensor([4, 12, 88, 1398102],"float32"), )
paddle.matmul(Tensor([268435456, 16],"float32"), Tensor([16, 20],"float32"), )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([16, 20],"float32"), )
paddle.matmul(Tensor([4, 16],"float32"), Tensor([214748365, 20],"float32"), )
paddle.matmul(Tensor([4, 16],"float32"), Tensor([16, 268435456],"float32"), )
paddle.matmul(Tensor([268435456, 16],"float32"), Tensor([268435456, 20],"float32"), )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([16, 1073741824],"float32"), )
paddle.matmul(Tensor([268435456, 16],"float32"), Tensor([32, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([32, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 16],"float32"), Tensor([268435456, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 16],"float32"), Tensor([32, 134217728],"float32"), transpose_y=True, )
paddle.matmul(Tensor([268435456, 16],"float32"), Tensor([268435456, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([32, 1073741824],"float32"), transpose_y=True, )
paddle.matmul(Tensor([134217729, 16],"float64"), Tensor([128, 16],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([128, 16],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 16],"float64"), Tensor([134217729, 16],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 16],"float64"), Tensor([128, 16777217],"float64"), transpose_y=True, )
paddle.matmul(Tensor([134217729, 16],"float64"), Tensor([134217729, 16],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([128, 536870913],"float64"), transpose_y=True, )
paddle.matmul(Tensor([134217729, 16],"float64"), Tensor([16, 16],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([16, 16],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 16],"float64"), Tensor([16, 134217729],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([16, 536870913],"float64"), transpose_y=True, )
paddle.matmul(Tensor([134217729, 16],"float64"), Tensor([32, 16],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([32, 16],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 16],"float64"), Tensor([32, 67108865],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([32, 536870913],"float64"), transpose_y=True, )
paddle.matmul(Tensor([134217729, 16],"float64"), Tensor([48, 16],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([48, 16],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 16],"float64"), Tensor([48, 44739243],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([48, 536870913],"float64"), transpose_y=True, )
paddle.matmul(Tensor([134217729, 16],"float64"), Tensor([96, 16],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([96, 16],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 16],"float64"), Tensor([96, 22369622],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([96, 536870913],"float64"), transpose_y=True, )
paddle.matmul(Tensor([126322568, 17],"float64"), Tensor([17, 2],"float64"), )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([17, 2],"float64"), )
paddle.matmul(Tensor([4, 17],"float64"), Tensor([1073741825, 2],"float64"), )
paddle.matmul(Tensor([4, 17],"float64"), Tensor([17, 126322568],"float64"), )
paddle.matmul(Tensor([126322568, 17],"float64"), Tensor([126322568, 2],"float64"), )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([17, 536870913],"float64"), )
paddle.matmul(Tensor([126322568, 17],"float64"), Tensor([17, 4],"float64"), )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([17, 4],"float64"), )
paddle.matmul(Tensor([4, 17],"float64"), Tensor([536870913, 4],"float64"), )
paddle.matmul(Tensor([126322568, 17],"float64"), Tensor([126322568, 4],"float64"), )
paddle.matmul(Tensor([195225787, 22],"float32"), Tensor([22, 20],"float32"), )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([22, 20],"float32"), )
paddle.matmul(Tensor([4, 22],"float32"), Tensor([214748365, 20],"float32"), )
paddle.matmul(Tensor([4, 22],"float32"), Tensor([22, 195225787],"float32"), )
paddle.matmul(Tensor([195225787, 22],"float32"), Tensor([195225787, 20],"float32"), )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([22, 1073741824],"float32"), )
paddle.matmul(Tensor([143165577, 3, 10],"float32"), Tensor([10, 10],"float32"), )
paddle.matmul(Tensor([4, 107374183, 10],"float32"), Tensor([10, 10],"float32"), )
paddle.matmul(Tensor([4, 3, 357913942],"float32"), Tensor([10, 10],"float32"), )
paddle.matmul(Tensor([4, 3, 10],"float32"), Tensor([429496730, 10],"float32"), )
paddle.matmul(Tensor([4, 3, 10],"float32"), Tensor([10, 429496730],"float32"), )
paddle.matmul(Tensor([143165577, 3, 10],"float32"), Tensor([10, 1000],"float32"), )
paddle.matmul(Tensor([4, 107374183, 10],"float32"), Tensor([10, 1000],"float32"), )
paddle.matmul(Tensor([4, 3, 357913942],"float32"), Tensor([10, 1000],"float32"), )
paddle.matmul(Tensor([4, 3, 10],"float32"), Tensor([4294968, 1000],"float32"), )
paddle.matmul(Tensor([71582789, 3, 10],"float64"), Tensor([10, 10],"float64"), )
paddle.matmul(Tensor([4, 53687092, 10],"float64"), Tensor([10, 10],"float64"), )
paddle.matmul(Tensor([4, 3, 178956971],"float64"), Tensor([10, 10],"float64"), )
paddle.matmul(Tensor([4, 3, 10],"float64"), Tensor([214748365, 10],"float64"), )
paddle.matmul(Tensor([4, 3, 10],"float64"), Tensor([10, 214748365],"float64"), )
paddle.matmul(Tensor([71582789, 3, 10],"float64"), Tensor([10, 1000],"float64"), )
paddle.matmul(Tensor([4, 53687092, 10],"float64"), Tensor([10, 1000],"float64"), )
paddle.matmul(Tensor([4, 3, 178956971],"float64"), Tensor([10, 1000],"float64"), )
paddle.matmul(Tensor([4, 3, 10],"float64"), Tensor([2147484, 1000],"float64"), )
paddle.matmul(Tensor([1431655765, 3],"float32"), Tensor([3, 2],"float32"), )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([3, 2],"float32"), )
paddle.matmul(Tensor([4, 3],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.matmul(Tensor([4, 3],"float32"), Tensor([3, 1431655765],"float32"), )
paddle.matmul(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 2],"float32"), )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([3, 1073741824],"float32"), )
paddle.matmul(Tensor([134217728, 32],"float32"), Tensor([32, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([32, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 32],"float32"), Tensor([134217728, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 32],"float32"), Tensor([32, 134217728],"float32"), transpose_y=True, )
paddle.matmul(Tensor([134217728, 32],"float32"), Tensor([134217728, 32],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([128, 32],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 32],"float64"), Tensor([67108865, 32],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 32],"float64"), Tensor([128, 16777217],"float64"), transpose_y=True, )
paddle.matmul(Tensor([67108865, 32],"float64"), Tensor([32, 32],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([32, 32],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 32],"float64"), Tensor([32, 67108865],"float64"), transpose_y=True, )
paddle.matmul(Tensor([67108865, 32],"float64"), Tensor([32, 8],"float64"), )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([32, 8],"float64"), )
paddle.matmul(Tensor([4, 32],"float64"), Tensor([268435457, 8],"float64"), )
paddle.matmul(Tensor([4, 32],"float64"), Tensor([32, 67108865],"float64"), )
paddle.matmul(Tensor([67108865, 32],"float64"), Tensor([67108865, 8],"float64"), )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([32, 536870913],"float64"), )
paddle.matmul(Tensor([67108865, 32],"float64"), Tensor([96, 32],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([96, 32],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 32],"float64"), Tensor([96, 22369622],"float64"), transpose_y=True, )
paddle.matmul(Tensor([126322568, 34],"float32"), Tensor([34, 26],"float32"), )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([34, 26],"float32"), )
paddle.matmul(Tensor([4, 34],"float32"), Tensor([165191050, 26],"float32"), )
paddle.matmul(Tensor([4, 34],"float32"), Tensor([34, 126322568],"float32"), )
paddle.matmul(Tensor([126322568, 34],"float32"), Tensor([126322568, 26],"float32"), )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([34, 1073741824],"float32"), )
paddle.matmul(Tensor([1073741824, 4],"float32"), Tensor([4, 4],"float32"), )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([4, 4],"float32"), )
paddle.matmul(Tensor([4, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.matmul(Tensor([4, 4],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.matmul(Tensor([1073741824, 4],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.matmul(Tensor([4, 1073741824],"float32"), Tensor([4, 1073741824],"float32"), )
paddle.matmul(Tensor([536870913, 4],"float64"), Tensor([4, 4],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([4, 4],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 4],"float64"), Tensor([536870913, 4],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 4],"float64"), Tensor([4, 536870913],"float64"), transpose_y=True, )
paddle.matmul(Tensor([536870913, 4],"float64"), Tensor([536870913, 4],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([4, 536870913],"float64"), transpose_y=True, )
paddle.matmul(Tensor([85899346, 5, 10],"float32"), Tensor([20, 10],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 5, 214748365],"float32"), Tensor([20, 10],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 5, 10],"float32"), Tensor([429496730, 10],"float32"), transpose_y=True, )
paddle.matmul(Tensor([4, 5, 10],"float32"), Tensor([20, 214748365],"float32"), transpose_y=True, )
paddle.matmul(Tensor([268435457, 8],"float64"), Tensor([128, 8],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 536870913],"float64"), Tensor([128, 8],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 8],"float64"), Tensor([268435457, 8],"float64"), transpose_y=True, )
paddle.matmul(Tensor([4, 8],"float64"), Tensor([128, 16777217],"float64"), transpose_y=True, )
paddle.matmul(Tensor([268435457, 8],"float64"), Tensor([268435457, 8],"float64"), transpose_y=True, )
paddle.matmul(Tensor([2147483649],"float64"), Tensor([4],"float64"), )
paddle.matmul(Tensor([4],"float64"), Tensor([2147483649],"float64"), )
paddle.matmul(Tensor([2147483649],"float64"), Tensor([2147483649],"float64"), )
paddle.matmul(Tensor([2147483649, 1],"float64"), Tensor([1, 100],"float64"), )
paddle.matmul(Tensor([40, 53687092],"float64"), Tensor([1, 100],"float64"), )
paddle.matmul(Tensor([40, 1],"float64"), Tensor([21474837, 100],"float64"), )
paddle.matmul(Tensor([40, 1],"float64"), Tensor([1, 2147483649],"float64"), )
paddle.matmul(Tensor([2147483649, 1],"float64"), Tensor([2147483649, 100],"float64"), )
paddle.matmul(Tensor([40, 53687092],"float64"), Tensor([1, 53687092],"float64"), )
paddle.matmul(Tensor([21474837, 100],"float64"), Tensor([100, 12],"float64"), )
paddle.matmul(Tensor([40, 53687092],"float64"), Tensor([100, 12],"float64"), )
paddle.matmul(Tensor([40, 100],"float64"), Tensor([178956971, 12],"float64"), )
paddle.matmul(Tensor([40, 100],"float64"), Tensor([100, 21474837],"float64"), )
paddle.matmul(Tensor([21474837, 100],"float64"), Tensor([21474837, 12],"float64"), )
paddle.matmul(Tensor([40, 53687092],"float64"), Tensor([100, 53687092],"float64"), )
paddle.matmul(Tensor([21474837, 100],"float64"), Tensor([100, 21],"float64"), )
paddle.matmul(Tensor([40, 53687092],"float64"), Tensor([100, 21],"float64"), )
paddle.matmul(Tensor([40, 100],"float64"), Tensor([102261127, 21],"float64"), )
paddle.matmul(Tensor([21474837, 100],"float64"), Tensor([21474837, 21],"float64"), )
paddle.matmul(Tensor([21474837, 100],"float64"), Tensor([100, 6],"float64"), )
paddle.matmul(Tensor([40, 53687092],"float64"), Tensor([100, 6],"float64"), )
paddle.matmul(Tensor([40, 100],"float64"), Tensor([357913942, 6],"float64"), )
paddle.matmul(Tensor([21474837, 100],"float64"), Tensor([21474837, 6],"float64"), )
paddle.matmul(Tensor([21474837, 100],"float64"), Tensor([100, 8],"float64"), )
paddle.matmul(Tensor([40, 53687092],"float64"), Tensor([100, 8],"float64"), )
paddle.matmul(Tensor([40, 100],"float64"), Tensor([268435457, 8],"float64"), )
paddle.matmul(Tensor([21474837, 100],"float64"), Tensor([21474837, 8],"float64"), )
paddle.matmul(Tensor([4190212, 1025],"float32"), Tensor([1, 1025, 105],"float32"), )
paddle.matmul(Tensor([40, 107374183],"float32"), Tensor([1, 1025, 105],"float32"), )
paddle.matmul(Tensor([40, 1025],"float32"), Tensor([39907, 1025, 105],"float32"), )
paddle.matmul(Tensor([40, 1025],"float32"), Tensor([1, 40904451, 105],"float32"), )
paddle.matmul(Tensor([40, 1025],"float32"), Tensor([1, 1025, 4190212],"float32"), )
paddle.matmul(Tensor([4190212, 1025],"float32"), Tensor([1, 1025, 120],"float32"), )
paddle.matmul(Tensor([40, 107374183],"float32"), Tensor([1, 1025, 120],"float32"), )
paddle.matmul(Tensor([40, 1025],"float32"), Tensor([34919, 1025, 120],"float32"), )
paddle.matmul(Tensor([40, 1025],"float32"), Tensor([1, 35791395, 120],"float32"), )
paddle.matmul(Tensor([4190212, 1025],"float32"), Tensor([1, 1025, 431],"float32"), )
paddle.matmul(Tensor([40, 107374183],"float32"), Tensor([1, 1025, 431],"float32"), )
paddle.matmul(Tensor([40, 1025],"float32"), Tensor([9723, 1025, 431],"float32"), )
paddle.matmul(Tensor([40, 1025],"float32"), Tensor([1, 9965122, 431],"float32"), )
paddle.matmul(Tensor([16711935, 257],"float32"), Tensor([1, 257, 1723],"float32"), )
paddle.matmul(Tensor([40, 107374183],"float32"), Tensor([1, 257, 1723],"float32"), )
paddle.matmul(Tensor([40, 257],"float32"), Tensor([9700, 257, 1723],"float32"), )
paddle.matmul(Tensor([40, 257],"float32"), Tensor([1, 2492727, 1723],"float32"), )
paddle.matmul(Tensor([40, 257],"float32"), Tensor([1, 257, 16711935],"float32"), )
paddle.matmul(Tensor([16711935, 257],"float32"), Tensor([1, 257, 419],"float32"), )
paddle.matmul(Tensor([40, 107374183],"float32"), Tensor([1, 257, 419],"float32"), )
paddle.matmul(Tensor([40, 257],"float32"), Tensor([39886, 257, 419],"float32"), )
paddle.matmul(Tensor([40, 257],"float32"), Tensor([1, 10250519, 419],"float32"), )
paddle.matmul(Tensor([16711935, 257],"float32"), Tensor([1, 257, 480],"float32"), )
paddle.matmul(Tensor([40, 107374183],"float32"), Tensor([1, 257, 480],"float32"), )
paddle.matmul(Tensor([40, 257],"float32"), Tensor([34817, 257, 480],"float32"), )
paddle.matmul(Tensor([40, 257],"float32"), Tensor([1, 8947849, 480],"float32"), )
paddle.matmul(Tensor([5, 858993459],"float32"), Tensor([10, 10],"float32"), )
paddle.matmul(Tensor([5, 10],"float32"), Tensor([429496730, 10],"float32"), )
paddle.matmul(Tensor([5, 10],"float32"), Tensor([10, 429496730],"float32"), )
paddle.matmul(Tensor([5, 858993459],"float32"), Tensor([10, 858993459],"float32"), )
paddle.matmul(Tensor([5, 858993459],"float32"), Tensor([10, 20],"float32"), )
paddle.matmul(Tensor([5, 10],"float32"), Tensor([214748365, 20],"float32"), )
paddle.matmul(Tensor([5, 858993459],"float32"), Tensor([2, 2],"float32"), )
paddle.matmul(Tensor([5, 2],"float32"), Tensor([2147483648, 2],"float32"), )
paddle.matmul(Tensor([5, 2],"float32"), Tensor([2, 2147483648],"float32"), )
paddle.matmul(Tensor([5, 858993459],"float32"), Tensor([2, 858993459],"float32"), )
paddle.matmul(Tensor([5, 858993459],"float32"), Tensor([2, 3],"float32"), )
paddle.matmul(Tensor([5, 2],"float32"), Tensor([1431655765, 3],"float32"), )
paddle.matmul(Tensor([5, 858993459],"float32"), Tensor([2, 4],"float32"), )
paddle.matmul(Tensor([5, 2],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.matmul(Tensor([1431655765, 3],"float32"), Tensor([3, 4],"float32"), )
paddle.matmul(Tensor([5, 858993459],"float32"), Tensor([3, 4],"float32"), )
paddle.matmul(Tensor([5, 3],"float32"), Tensor([1073741824, 4],"float32"), )
paddle.matmul(Tensor([5, 3],"float32"), Tensor([3, 1431655765],"float32"), )
paddle.matmul(Tensor([1431655765, 3],"float32"), Tensor([1431655765, 4],"float32"), )
paddle.matmul(Tensor([5, 858993459],"float32"), Tensor([3, 858993459],"float32"), )
paddle.matmul(Tensor([858993459, 5],"float32"), Tensor([5, 5],"float32"), )
paddle.matmul(Tensor([5, 858993459],"float32"), Tensor([5, 5],"float32"), )
paddle.matmul(Tensor([5, 5],"float32"), Tensor([858993459, 5],"float32"), )
paddle.matmul(Tensor([5, 5],"float32"), Tensor([5, 858993459],"float32"), )
paddle.matmul(Tensor([858993459, 5],"float32"), Tensor([858993459, 5],"float32"), )
paddle.matmul(Tensor([5, 858993459],"float32"), Tensor([5, 858993459],"float32"), )
paddle.matmul(Tensor([429496730, 5],"float64"), Tensor([5, 5],"float64"), )
paddle.matmul(Tensor([5, 429496730],"float64"), Tensor([5, 5],"float64"), )
paddle.matmul(Tensor([5, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.matmul(Tensor([5, 5],"float64"), Tensor([5, 429496730],"float64"), )
paddle.matmul(Tensor([429496730, 5],"float64"), Tensor([429496730, 5],"float64"), )
paddle.matmul(Tensor([5, 429496730],"float64"), Tensor([5, 429496730],"float64"), )
paddle.matmul(Tensor([109566, 2, 140, 140],"float32"), Tensor([58, 2, 140, 1],"float32"), )
paddle.matmul(Tensor([58, 3779, 140, 140],"float32"), Tensor([58, 2, 140, 1],"float32"), )
paddle.matmul(Tensor([58, 2, 264469, 140],"float32"), Tensor([58, 2, 140, 1],"float32"), )
paddle.matmul(Tensor([58, 2, 140, 264469],"float32"), Tensor([58, 2, 140, 1],"float32"), )
paddle.matmul(Tensor([58, 2, 140, 140],"float32"), Tensor([15339169, 2, 140, 1],"float32"), )
paddle.matmul(Tensor([58, 2, 140, 140],"float32"), Tensor([58, 528937, 140, 1],"float32"), )
paddle.matmul(Tensor([58, 2, 140, 140],"float32"), Tensor([58, 2, 37025581, 1],"float32"), )
paddle.matmul(Tensor([58, 2, 140, 140],"float32"), Tensor([58, 2, 140, 264469],"float32"), )
paddle.matmul(Tensor([109566, 2, 140, 140],"float32"), Tensor([109566, 2, 140, 1],"float32"), )
paddle.matmul(Tensor([58, 3779, 140, 140],"float32"), Tensor([58, 3779, 140, 1],"float32"), )
paddle.matmul(Tensor([58, 2, 264469, 140],"float32"), Tensor([58, 2, 264469, 1],"float32"), )
paddle.matmul(Tensor([58, 2, 140, 264469],"float32"), Tensor([58, 2, 140, 264469],"float32"), )
paddle.matmul(Tensor([71582789, 3, 1, 20],"float32"), Tensor([20, 32],"float32"), )
paddle.matmul(Tensor([6, 35791395, 1, 20],"float32"), Tensor([20, 32],"float32"), )
paddle.matmul(Tensor([6, 3, 11930465, 20],"float32"), Tensor([20, 32],"float32"), )
paddle.matmul(Tensor([6, 3, 1, 238609295],"float32"), Tensor([20, 32],"float32"), )
paddle.matmul(Tensor([6, 3, 1, 20],"float32"), Tensor([134217728, 32],"float32"), )
paddle.matmul(Tensor([6, 3, 1, 20],"float32"), Tensor([20, 214748365],"float32"), )
paddle.matmul(Tensor([4190212, 1025],"float32"), Tensor([1, 1025, 112],"float32"), )
paddle.matmul(Tensor([64, 67108864],"float32"), Tensor([1, 1025, 112],"float32"), )
paddle.matmul(Tensor([64, 1025],"float32"), Tensor([37413, 1025, 112],"float32"), )
paddle.matmul(Tensor([64, 1025],"float32"), Tensor([1, 38347923, 112],"float32"), )
paddle.matmul(Tensor([64, 1025],"float32"), Tensor([1, 1025, 4190212],"float32"), )
paddle.matmul(Tensor([64, 67108864],"float32"), Tensor([1, 1025, 431],"float32"), )
paddle.matmul(Tensor([64, 1025],"float32"), Tensor([9723, 1025, 431],"float32"), )
paddle.matmul(Tensor([64, 1025],"float32"), Tensor([1, 9965122, 431],"float32"), )
paddle.matmul(Tensor([4190212, 1025],"float32"), Tensor([1, 1025, 74],"float32"), )
paddle.matmul(Tensor([64, 67108864],"float32"), Tensor([1, 1025, 74],"float32"), )
paddle.matmul(Tensor([64, 1025],"float32"), Tensor([56625, 1025, 74],"float32"), )
paddle.matmul(Tensor([64, 1025],"float32"), Tensor([1, 58040099, 74],"float32"), )
paddle.matmul(Tensor([10737419, 16, 5, 5],"float32"), Tensor([64, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([64, 2684355, 5, 5],"float32"), Tensor([64, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([64, 16, 838861, 5],"float32"), Tensor([64, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([64, 16, 5, 838861],"float32"), Tensor([64, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([64, 16, 5, 5],"float32"), Tensor([10737419, 16, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([64, 16, 5, 5],"float32"), Tensor([64, 2684355, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([64, 16, 5, 5],"float32"), Tensor([64, 16, 838861, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([64, 16, 5, 5],"float32"), Tensor([64, 16, 5, 838861],"float32"), False, True, None, )
paddle.matmul(Tensor([64, 2684355, 5, 5],"float32"), Tensor([64, 2684355, 5, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([64, 16, 838861, 5],"float32"), Tensor([64, 16, 838861, 5],"float32"), False, True, None, )
paddle.matmul(Tensor([64, 16, 5, 838861],"float32"), Tensor([64, 16, 5, 838861],"float32"), False, True, None, )
paddle.matmul(Tensor([64, 67108864],"float32"), Tensor([1, 257, 1723],"float32"), )
paddle.matmul(Tensor([64, 257],"float32"), Tensor([9700, 257, 1723],"float32"), )
paddle.matmul(Tensor([64, 257],"float32"), Tensor([1, 2492727, 1723],"float32"), )
paddle.matmul(Tensor([64, 257],"float32"), Tensor([1, 257, 16711935],"float32"), )
paddle.matmul(Tensor([16711935, 257],"float32"), Tensor([1, 257, 294],"float32"), )
paddle.matmul(Tensor([64, 67108864],"float32"), Tensor([1, 257, 294],"float32"), )
paddle.matmul(Tensor([64, 257],"float32"), Tensor([56844, 257, 294],"float32"), )
paddle.matmul(Tensor([64, 257],"float32"), Tensor([1, 14608733, 294],"float32"), )
paddle.matmul(Tensor([16711935, 257],"float32"), Tensor([1, 257, 448],"float32"), )
paddle.matmul(Tensor([64, 67108864],"float32"), Tensor([1, 257, 448],"float32"), )
paddle.matmul(Tensor([64, 257],"float32"), Tensor([37304, 257, 448],"float32"), )
paddle.matmul(Tensor([64, 257],"float32"), Tensor([1, 9586981, 448],"float32"), )
paddle.matmul(Tensor([64, 67108864],"float32"), Tensor([1, 257, 480],"float32"), )
paddle.matmul(Tensor([64, 257],"float32"), Tensor([34817, 257, 480],"float32"), )
paddle.matmul(Tensor([64, 257],"float32"), Tensor([1, 8947849, 480],"float32"), )
paddle.matmul(Tensor([16711935, 257],"float32"), Tensor([1, 257, 493],"float32"), )
paddle.matmul(Tensor([64, 67108864],"float32"), Tensor([1, 257, 493],"float32"), )
paddle.matmul(Tensor([64, 257],"float32"), Tensor([33899, 257, 493],"float32"), )
paddle.matmul(Tensor([64, 257],"float32"), Tensor([1, 8711902, 493],"float32"), )
paddle.matmul(Tensor([16711935, 257],"float32"), Tensor([1, 257, 530],"float32"), )
paddle.matmul(Tensor([64, 67108864],"float32"), Tensor([1, 257, 530],"float32"), )
paddle.matmul(Tensor([64, 257],"float32"), Tensor([31532, 257, 530],"float32"), )
paddle.matmul(Tensor([64, 257],"float32"), Tensor([1, 8103712, 530],"float32"), )
paddle.matmul(Tensor([44739243, 96],"float32"), Tensor([96, 32],"float32"), )
paddle.matmul(Tensor([64, 67108864],"float32"), Tensor([96, 32],"float32"), )
paddle.matmul(Tensor([64, 96],"float32"), Tensor([134217728, 32],"float32"), )
paddle.matmul(Tensor([64, 96],"float32"), Tensor([96, 44739243],"float32"), )
paddle.matmul(Tensor([44739243, 96],"float32"), Tensor([44739243, 32],"float32"), )
paddle.matmul(Tensor([64, 67108864],"float32"), Tensor([96, 67108864],"float32"), )
paddle.matmul(Tensor([8, 33554432, 16],"float32"), Tensor([16, 128],"float32"), )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([16, 128],"float32"), )
paddle.matmul(Tensor([8, 1, 16],"float32"), Tensor([33554432, 128],"float32"), )
paddle.matmul(Tensor([8, 1, 16],"float32"), Tensor([16, 268435456],"float32"), )
paddle.matmul(Tensor([1073741824, 1, 4],"float32"), Tensor([8, 4, 8],"float32"), )
paddle.matmul(Tensor([8, 134217728, 4],"float32"), Tensor([8, 4, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([8, 4, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 4],"float32"), Tensor([134217728, 4, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 4],"float32"), Tensor([8, 67108864, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 4],"float32"), Tensor([8, 4, 134217728],"float32"), )
paddle.matmul(Tensor([1073741824, 1, 4],"float32"), Tensor([1073741824, 4, 8],"float32"), )
paddle.matmul(Tensor([8, 134217728, 4],"float32"), Tensor([8, 134217728, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([8, 4, 536870912],"float32"), )
paddle.matmul(Tensor([858993459, 1, 5],"float32"), Tensor([8, 5, 8],"float32"), )
paddle.matmul(Tensor([8, 107374183, 5],"float32"), Tensor([8, 5, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([8, 5, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 5],"float32"), Tensor([107374183, 5, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 5],"float32"), Tensor([8, 67108864, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 5],"float32"), Tensor([8, 5, 107374183],"float32"), )
paddle.matmul(Tensor([858993459, 1, 5],"float32"), Tensor([858993459, 5, 8],"float32"), )
paddle.matmul(Tensor([8, 107374183, 5],"float32"), Tensor([8, 107374183, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([8, 5, 536870912],"float32"), )
paddle.matmul(Tensor([715827883, 1, 6],"float32"), Tensor([8, 6, 8],"float32"), )
paddle.matmul(Tensor([8, 89478486, 6],"float32"), Tensor([8, 6, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([8, 6, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 6],"float32"), Tensor([89478486, 6, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 6],"float32"), Tensor([8, 67108864, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 6],"float32"), Tensor([8, 6, 89478486],"float32"), )
paddle.matmul(Tensor([715827883, 1, 6],"float32"), Tensor([715827883, 6, 8],"float32"), )
paddle.matmul(Tensor([8, 89478486, 6],"float32"), Tensor([8, 89478486, 8],"float32"), )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([8, 6, 536870912],"float32"), )
paddle.matmul(Tensor([536870912, 1, 8],"float32"), Tensor([8, 4, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 67108864, 8],"float32"), Tensor([8, 4, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([8, 4, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 8],"float32"), Tensor([134217728, 4, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 8],"float32"), Tensor([8, 67108864, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 8],"float32"), Tensor([8, 4, 134217728],"float32"), transpose_y=True, )
paddle.matmul(Tensor([536870912, 1, 8],"float32"), Tensor([536870912, 4, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 67108864, 8],"float32"), Tensor([8, 67108864, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([8, 4, 536870912],"float32"), transpose_y=True, )
paddle.matmul(Tensor([536870912, 1, 8],"float32"), Tensor([8, 5, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 67108864, 8],"float32"), Tensor([8, 5, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([8, 5, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 8],"float32"), Tensor([107374183, 5, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 8],"float32"), Tensor([8, 5, 107374183],"float32"), transpose_y=True, )
paddle.matmul(Tensor([536870912, 1, 8],"float32"), Tensor([536870912, 5, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([8, 5, 536870912],"float32"), transpose_y=True, )
paddle.matmul(Tensor([536870912, 1, 8],"float32"), Tensor([8, 6, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 67108864, 8],"float32"), Tensor([8, 6, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([8, 6, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 8],"float32"), Tensor([89478486, 6, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 8],"float32"), Tensor([8, 6, 89478486],"float32"), transpose_y=True, )
paddle.matmul(Tensor([536870912, 1, 8],"float32"), Tensor([536870912, 6, 8],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 1, 536870912],"float32"), Tensor([8, 6, 536870912],"float32"), transpose_y=True, )
paddle.matmul(Tensor([131072, 128, 256],"float32"), Tensor([768, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 2097152, 256],"float32"), Tensor([768, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 128, 4194304],"float32"), Tensor([768, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 128, 256],"float32"), Tensor([16777216, 256],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 128, 256],"float32"), Tensor([768, 5592406],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 536870912],"float32"), Tensor([128, 16],"float32"), )
paddle.matmul(Tensor([8, 128],"float32"), Tensor([268435456, 16],"float32"), )
paddle.matmul(Tensor([8, 128],"float32"), Tensor([128, 33554432],"float32"), )
paddle.matmul(Tensor([8, 536870912],"float32"), Tensor([128, 536870912],"float32"), )
paddle.matmul(Tensor([22369622, 16, 12],"float32"), Tensor([8, 12, 10],"float32"), )
paddle.matmul(Tensor([8, 44739243, 12],"float32"), Tensor([8, 12, 10],"float32"), )
paddle.matmul(Tensor([8, 16, 33554432],"float32"), Tensor([8, 12, 10],"float32"), )
paddle.matmul(Tensor([8, 16, 12],"float32"), Tensor([35791395, 12, 10],"float32"), )
paddle.matmul(Tensor([8, 16, 12],"float32"), Tensor([8, 53687092, 10],"float32"), )
paddle.matmul(Tensor([8, 16, 12],"float32"), Tensor([8, 12, 44739243],"float32"), )
paddle.matmul(Tensor([8, 44739243, 12],"float32"), Tensor([8, 44739243, 10],"float32"), )
paddle.matmul(Tensor([8, 16, 33554432],"float32"), Tensor([8, 12, 33554432],"float32"), )
paddle.matmul(Tensor([11184811, 16, 12],"float64"), Tensor([8, 12, 10],"float64"), )
paddle.matmul(Tensor([8, 22369622, 12],"float64"), Tensor([8, 12, 10],"float64"), )
paddle.matmul(Tensor([8, 16, 16777217],"float64"), Tensor([8, 12, 10],"float64"), )
paddle.matmul(Tensor([8, 16, 12],"float64"), Tensor([17895698, 12, 10],"float64"), )
paddle.matmul(Tensor([8, 16, 12],"float64"), Tensor([8, 26843546, 10],"float64"), )
paddle.matmul(Tensor([8, 16, 12],"float64"), Tensor([8, 12, 22369622],"float64"), )
paddle.matmul(Tensor([11184811, 16, 12],"float64"), Tensor([11184811, 12, 10],"float64"), )
paddle.matmul(Tensor([8, 22369622, 12],"float64"), Tensor([8, 22369622, 10],"float64"), )
paddle.matmul(Tensor([8, 16, 16777217],"float64"), Tensor([8, 12, 16777217],"float64"), )
paddle.matmul(Tensor([16384, 16, 128, 128],"float32"), Tensor([8, 16, 128, 16],"float32"), )
paddle.matmul(Tensor([8, 32768, 128, 128],"float32"), Tensor([8, 16, 128, 16],"float32"), )
paddle.matmul(Tensor([8, 16, 262144, 128],"float32"), Tensor([8, 16, 128, 16],"float32"), )
paddle.matmul(Tensor([8, 16, 128, 262144],"float32"), Tensor([8, 16, 128, 16],"float32"), )
paddle.matmul(Tensor([8, 16, 128, 128],"float32"), Tensor([131072, 16, 128, 16],"float32"), )
paddle.matmul(Tensor([8, 16, 128, 128],"float32"), Tensor([8, 262144, 128, 16],"float32"), )
paddle.matmul(Tensor([8, 16, 128, 128],"float32"), Tensor([8, 16, 2097152, 16],"float32"), )
paddle.matmul(Tensor([8, 16, 128, 128],"float32"), Tensor([8, 16, 128, 262144],"float32"), )
paddle.matmul(Tensor([16384, 16, 128, 128],"float32"), Tensor([16384, 16, 128, 16],"float32"), )
paddle.matmul(Tensor([8, 32768, 128, 128],"float32"), Tensor([8, 32768, 128, 16],"float32"), )
paddle.matmul(Tensor([8, 16, 262144, 128],"float32"), Tensor([8, 16, 262144, 16],"float32"), )
paddle.matmul(Tensor([8, 16, 128, 262144],"float32"), Tensor([8, 16, 128, 262144],"float32"), )
paddle.matmul(Tensor([131072, 16, 128, 16],"float32"), Tensor([8, 16, 128, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 262144, 128, 16],"float32"), Tensor([8, 16, 128, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 16, 2097152, 16],"float32"), Tensor([8, 16, 128, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 16, 128, 262144],"float32"), Tensor([8, 16, 128, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 16, 128, 16],"float32"), Tensor([131072, 16, 128, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 16, 128, 16],"float32"), Tensor([8, 262144, 128, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 16, 128, 16],"float32"), Tensor([8, 16, 2097152, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 16, 128, 16],"float32"), Tensor([8, 16, 128, 262144],"float32"), transpose_y=True, )
paddle.matmul(Tensor([131072, 16, 128, 16],"float32"), Tensor([131072, 16, 128, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 262144, 128, 16],"float32"), Tensor([8, 262144, 128, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 16, 2097152, 16],"float32"), Tensor([8, 16, 2097152, 16],"float32"), transpose_y=True, )
paddle.matmul(Tensor([8, 16, 128, 262144],"float32"), Tensor([8, 16, 128, 262144],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([268435456, 16],"float32"), y=Tensor([10, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([10, 429496730],"float32"), y=Tensor([10, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([10, 16],"float32"), y=Tensor([268435456, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([10, 16],"float32"), y=Tensor([10, 429496730],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([268435456, 16],"float32"), y=Tensor([268435456, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([10, 429496730],"float32"), y=Tensor([10, 429496730],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8388608, 512],"float32"), y=Tensor([10000, 512],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([128, 33554432],"float32"), y=Tensor([10000, 512],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([128, 512],"float32"), y=Tensor([8388608, 512],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([128, 512],"float32"), y=Tensor([10000, 429497],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8388608, 512],"float32"), y=Tensor([8388608, 512],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([128, 33554432],"float32"), y=Tensor([10000, 33554432],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1048576, 32, 1, 128],"float16"), y=Tensor([2, 32, 33, 128],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 16777216, 1, 128],"float16"), y=Tensor([2, 32, 33, 128],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 32, 524288, 128],"float16"), y=Tensor([2, 32, 33, 128],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 32, 1, 67108864],"float16"), y=Tensor([2, 32, 33, 128],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 32, 1, 128],"float16"), y=Tensor([31776, 32, 33, 128],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 32, 1, 128],"float16"), y=Tensor([2, 508401, 33, 128],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 32, 1, 128],"float16"), y=Tensor([2, 32, 524288, 128],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 32, 1, 128],"float16"), y=Tensor([2, 32, 33, 2033602],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([1048576, 32, 1, 128],"float16"), y=Tensor([1048576, 32, 33, 128],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 16777216, 1, 128],"float16"), y=Tensor([2, 16777216, 33, 128],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 32, 524288, 128],"float16"), y=Tensor([2, 32, 524288, 128],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 32, 1, 67108864],"float16"), y=Tensor([2, 32, 33, 67108864],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([33554432, 8, 16],"float32"), y=Tensor([2, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 134217728, 16],"float32"), y=Tensor([2, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 8, 268435456],"float32"), y=Tensor([2, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 8, 16],"float32"), y=Tensor([33554432, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 8, 16],"float32"), y=Tensor([2, 134217728, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 8, 16],"float32"), y=Tensor([2, 8, 268435456],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([33554432, 8, 16],"float32"), y=Tensor([33554432, 8, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 134217728, 16],"float32"), y=Tensor([2, 134217728, 16],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2, 8, 268435456],"float32"), y=Tensor([2, 8, 268435456],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([107374183, 2, 2, 5],"float64"), y=Tensor([5],"float64"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([3, 71582789, 2, 5],"float64"), y=Tensor([5],"float64"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([3, 2, 71582789, 5],"float64"), y=Tensor([5],"float64"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([3, 2, 2, 178956971],"float64"), y=Tensor([5],"float64"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([3, 2, 2, 5],"float64"), y=Tensor([2147483649],"float64"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([268435456, 16],"float32"), y=Tensor([16, 32],"float32"), )
paddle.matmul(x=Tensor([32, 134217728],"float32"), y=Tensor([16, 32],"float32"), )
paddle.matmul(x=Tensor([32, 16],"float32"), y=Tensor([134217728, 32],"float32"), )
paddle.matmul(x=Tensor([32, 16],"float32"), y=Tensor([16, 268435456],"float32"), )
paddle.matmul(x=Tensor([268435456, 16],"float32"), y=Tensor([268435456, 32],"float32"), )
paddle.matmul(x=Tensor([32, 134217728],"float32"), y=Tensor([16, 134217728],"float32"), )
paddle.matmul(x=Tensor([2097152, 8, 4, 64],"float32"), y=Tensor([32, 8, 4, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32, 524288, 4, 64],"float32"), y=Tensor([32, 8, 4, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32, 8, 262144, 64],"float32"), y=Tensor([32, 8, 4, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32, 8, 4, 4194304],"float32"), y=Tensor([32, 8, 4, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32, 8, 4, 64],"float32"), y=Tensor([2097152, 8, 4, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32, 8, 4, 64],"float32"), y=Tensor([32, 524288, 4, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32, 8, 4, 64],"float32"), y=Tensor([32, 8, 262144, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32, 8, 4, 64],"float32"), y=Tensor([32, 8, 4, 4194304],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([2097152, 8, 4, 64],"float32"), y=Tensor([2097152, 8, 4, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32, 524288, 4, 64],"float32"), y=Tensor([32, 524288, 4, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32, 8, 262144, 64],"float32"), y=Tensor([32, 8, 262144, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32, 8, 4, 4194304],"float32"), y=Tensor([32, 8, 4, 4194304],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([214748365, 20],"float32"), y=Tensor([20, 40],"float32"), )
paddle.matmul(x=Tensor([4, 1073741824],"float32"), y=Tensor([20, 40],"float32"), )
paddle.matmul(x=Tensor([4, 20],"float32"), y=Tensor([107374183, 40],"float32"), )
paddle.matmul(x=Tensor([4, 20],"float32"), y=Tensor([20, 214748365],"float32"), )
paddle.matmul(x=Tensor([214748365, 20],"float32"), y=Tensor([214748365, 40],"float32"), )
paddle.matmul(x=Tensor([4, 1073741824],"float32"), y=Tensor([20, 1073741824],"float32"), )
paddle.matmul(x=Tensor([715827883, 3],"float64"), y=Tensor([3],"float64"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([4, 536870913],"float64"), y=Tensor([3],"float64"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([4, 3],"float64"), y=Tensor([2147483649],"float64"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([30678338, 140, 1],"float32"), y=Tensor([58, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 74051161, 1],"float32"), y=Tensor([58, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 140, 528937],"float32"), y=Tensor([58, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 140, 1],"float32"), y=Tensor([30678338, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 140, 1],"float32"), y=Tensor([58, 74051161, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 140, 1],"float32"), y=Tensor([58, 140, 528937],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([30678338, 140, 1],"float32"), y=Tensor([30678338, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 74051161, 1],"float32"), y=Tensor([58, 74051161, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 140, 528937],"float32"), y=Tensor([58, 140, 528937],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([15339169, 2, 140, 1],"float32"), y=Tensor([58, 2, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 528937, 140, 1],"float32"), y=Tensor([58, 2, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 2, 37025581, 1],"float32"), y=Tensor([58, 2, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 2, 140, 264469],"float32"), y=Tensor([58, 2, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 2, 140, 1],"float32"), y=Tensor([15339169, 2, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 2, 140, 1],"float32"), y=Tensor([58, 528937, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 2, 140, 1],"float32"), y=Tensor([58, 2, 37025581, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 2, 140, 1],"float32"), y=Tensor([58, 2, 140, 264469],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([15339169, 2, 140, 1],"float32"), y=Tensor([15339169, 2, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 528937, 140, 1],"float32"), y=Tensor([58, 528937, 140, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 2, 37025581, 1],"float32"), y=Tensor([58, 2, 37025581, 1],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([58, 2, 140, 264469],"float32"), y=Tensor([58, 2, 140, 264469],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([4194304, 16, 1, 64],"float32"), y=Tensor([8, 16, 129, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 8388608, 1, 64],"float32"), y=Tensor([8, 16, 129, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 524288, 64],"float32"), y=Tensor([8, 16, 129, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 1, 33554432],"float32"), y=Tensor([8, 16, 129, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 1, 64],"float32"), y=Tensor([32514, 16, 129, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 1, 64],"float32"), y=Tensor([8, 65028, 129, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 1, 64],"float32"), y=Tensor([8, 16, 524288, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 1, 64],"float32"), y=Tensor([8, 16, 129, 260112],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([4194304, 16, 1, 64],"float32"), y=Tensor([4194304, 16, 129, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 8388608, 1, 64],"float32"), y=Tensor([8, 8388608, 129, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 524288, 64],"float32"), y=Tensor([8, 16, 524288, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 1, 33554432],"float32"), y=Tensor([8, 16, 129, 33554432],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32768, 16, 128, 64],"float16"), y=Tensor([8, 16, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 65536, 128, 64],"float16"), y=Tensor([8, 16, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 524288, 64],"float16"), y=Tensor([8, 16, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 128, 262144],"float16"), y=Tensor([8, 16, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 128, 64],"float16"), y=Tensor([32768, 16, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 128, 64],"float16"), y=Tensor([8, 65536, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 128, 64],"float16"), y=Tensor([8, 16, 524288, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 128, 64],"float16"), y=Tensor([8, 16, 128, 262144],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([32768, 16, 128, 64],"float16"), y=Tensor([32768, 16, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 65536, 128, 64],"float16"), y=Tensor([8, 65536, 128, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 524288, 64],"float16"), y=Tensor([8, 16, 524288, 64],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 128, 262144],"float16"), y=Tensor([8, 16, 128, 262144],"float16"), transpose_y=True, )
paddle.matmul(x=Tensor([32768, 16, 128, 64],"float32"), y=Tensor([8, 16, 128, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 65536, 128, 64],"float32"), y=Tensor([8, 16, 128, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 524288, 64],"float32"), y=Tensor([8, 16, 128, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 128, 262144],"float32"), y=Tensor([8, 16, 128, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 128, 64],"float32"), y=Tensor([32768, 16, 128, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 128, 64],"float32"), y=Tensor([8, 65536, 128, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 128, 64],"float32"), y=Tensor([8, 16, 524288, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 128, 64],"float32"), y=Tensor([8, 16, 128, 262144],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([32768, 16, 128, 64],"float32"), y=Tensor([32768, 16, 128, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 65536, 128, 64],"float32"), y=Tensor([8, 65536, 128, 64],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 16, 128, 262144],"float32"), y=Tensor([8, 16, 128, 262144],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([8, 536870912],"float32"), y=Tensor([16, 32],"float32"), )
paddle.matmul(x=Tensor([8, 16],"float32"), y=Tensor([134217728, 32],"float32"), )
paddle.matmul(x=Tensor([8, 16],"float32"), y=Tensor([16, 268435456],"float32"), )
paddle.matmul(x=Tensor([8, 536870912],"float32"), y=Tensor([16, 536870912],"float32"), )
paddle.matmul(x=Tensor([178956971, 24],"float32"), y=Tensor([24, 32],"float32"), )
paddle.matmul(x=Tensor([8, 536870912],"float32"), y=Tensor([24, 32],"float32"), )
paddle.matmul(x=Tensor([8, 24],"float32"), y=Tensor([134217728, 32],"float32"), )
paddle.matmul(x=Tensor([8, 24],"float32"), y=Tensor([24, 178956971],"float32"), )
paddle.matmul(x=Tensor([178956971, 24],"float32"), y=Tensor([178956971, 32],"float32"), )
paddle.matmul(x=Tensor([8, 536870912],"float32"), y=Tensor([24, 536870912],"float32"), )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([21400, 1024, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 21913099, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 299594, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 14, 299594],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1048576, 1024, 2, 2],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1073741824, 2, 2],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 2097152, 2],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 2, 2097152],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([85599, 1024, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 87652394, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 599187, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1024, 7, 599187],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1431656, 120, 5, 5],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 171798692, 5, 5],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 120, 7158279, 5],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 120, 5, 7158279],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([68479, 1280, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1280, 479350, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1280, 7, 479350],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1193047, 144, 5, 5],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 144, 5965233, 5],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 144, 5, 5965233],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([671089, 16, 20, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 10737419, 20, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 16, 13421773, 20],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 16, 20, 13421773],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([42800, 2048, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 299594, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 7, 299594],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([42800, 2048, 7, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 87652394, 7, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 299594, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 2048, 7, 299594],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([715828, 240, 5, 5],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 240, 3579140, 5],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 240, 5, 3579140],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([5350, 256, 56, 56],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1369569, 56, 56],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 256, 299594, 56],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 256, 56, 299594],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1657009, 288, 3, 3],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 477218589, 3, 3],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 288, 4971027, 3],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 288, 3, 4971027],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2097152, 512, 2, 2],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 1073741824, 2, 2],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 4194304, 2],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 2, 4194304],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([10700, 512, 28, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 5478275, 28, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 299594, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 28, 299594],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([932068, 512, 3, 3],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 2796203, 3],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 3, 2796203],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([932068, 512, 3, 3],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 477218589, 3, 3],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 2796203, 3],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 3, 2796203],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([828505, 576, 3, 3],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 576, 2485514, 3],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 576, 3, 2485514],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1789570, 96, 5, 5],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 8947849, 5],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 96, 5, 8947849],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([171197, 512, 7, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([10, 8765240, 7, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([10, 512, 119838, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([10, 512, 7, 119838],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 5478275, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 2048, 18725, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([16, 2048, 7, 18725],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([29827, 1000, 12, 12],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 14913081, 12, 12],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1000, 178957, 12],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1000, 12, 178957],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([25415, 1000, 13, 13],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 12707004, 13, 13],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1000, 165192, 13],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1000, 13, 165192],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([116509, 1024, 6, 6],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 59652324, 6, 6],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1024, 349526, 6],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1024, 6, 349526],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 43826197, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1024, 299594, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1024, 7, 299594],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([182610, 120, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 10956550, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 120, 1278265, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 120, 14, 1278265],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([45653, 120, 28, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2739138, 28, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 120, 639133, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 120, 28, 639133],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1280, 239675, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1280, 7, 239675],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([152175, 144, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 144, 1065221, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 144, 14, 1065221],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([85599, 16, 56, 56],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 684785, 56, 56],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 16, 2396746, 56],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 16, 56, 2396746],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([52676, 1664, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1664, 184366, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1664, 7, 184366],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([45653, 1920, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1920, 159784, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 1920, 7, 159784],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([83887, 2048, 5, 5],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 85899346, 5, 5],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2048, 209716, 5],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2048, 5, 209716],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([42800, 2048, 7, 7],"float16"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 43826197, 7, 7],"float16"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2048, 149797, 7],"float16"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2048, 7, 149797],"float16"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2048, 149797, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2048, 7, 149797],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 43826197, 7, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2048, 149797, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2048, 7, 149797],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([39698, 2208, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2208, 138942, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2208, 7, 138942],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([91305, 240, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 240, 639133, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 240, 14, 639133],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([32609, 2688, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2688, 114131, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 2688, 7, 114131],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([304349, 288, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 288, 1065221, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 288, 7, 1065221],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([29217465, 3, 7, 7],"float32"), list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 43826197, 7, 7],"float32"), list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 102261127, 7],"float32"), list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 102261127],"float32"), list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=5, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 43826197, 7, 7],"float32"), output_size=5, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 102261127, 7],"float32"), output_size=5, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 102261127],"float32"), output_size=5, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[2,5,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 43826197, 7, 7],"float32"), output_size=list[2,5,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 102261127, 7],"float32"), output_size=list[2,5,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 102261127],"float32"), output_size=list[2,5,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 43826197, 7, 7],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 102261127, 7],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 102261127],"float32"), output_size=list[3,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,3,], data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 43826197, 7, 7],"float32"), output_size=list[3,3,], data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 102261127, 7],"float32"), output_size=list[3,3,], data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 102261127],"float32"), output_size=list[3,3,], data_format="NHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[None,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 43826197, 7, 7],"float32"), output_size=list[None,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 102261127, 7],"float32"), output_size=list[None,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 102261127],"float32"), output_size=list[None,3,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([45653, 480, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 480, 319567, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 480, 14, 319567],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([171197, 512, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 599187, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 7, 599187],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 599187, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 7, 599187],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([171197, 512, 7, 7],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 43826197, 7, 7],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 599187, 7],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 512, 7, 599187],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([152175, 576, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 576, 532611, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 576, 7, 532611],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([32609, 672, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 672, 228262, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 672, 14, 228262],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([130436, 672, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 672, 456523, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 672, 7, 456523],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([76088, 72, 28, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 72, 1065221, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 72, 28, 1065221],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([228262, 96, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 1597831, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 96, 14, 1597831],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([91305, 960, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 960, 319567, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 960, 7, 319567],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([32768, 2048, 8, 8],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([3, 22369622, 8, 8],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([3, 2048, 87382, 8],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([3, 2048, 8, 87382],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 21913099, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 1024, 149797, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 1024, 7, 149797],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 1280, 119838, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([4, 1280, 7, 119838],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 1369569, 7, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 512, 18725, 7],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([64, 512, 7, 18725],"float32"), output_size=tuple(1,1,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 2739138, 14, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 1024, 37450, 14],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 1024, 14, 37450],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 10956550, 7, 7],"float16"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 2048, 37450, 7],"float16"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 2048, 7, 37450],"float16"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 10956550, 7, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 2048, 37450, 7],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 2048, 7, 37450],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 171197, 56, 56],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 256, 37450, 56],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 256, 56, 37450],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 684785, 28, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 512, 37450, 28],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([8, 512, 28, 37450],"float32"), output_size=1, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 43826197, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 102261127, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 7, 102261127],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 43826197, 7, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 102261127, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 7, 102261127],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 43826197, 7, 7],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 102261127, 7],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 7, 102261127],"float32"), output_size=list[3,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,3,], data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 43826197, 7, 7],"float32"), output_size=list[3,3,], data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 102261127, 7],"float32"), output_size=list[3,3,], data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 7, 102261127],"float32"), output_size=list[3,3,], data_format="NHWC", )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 43826197, 7, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 102261127, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 7, 102261127],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([5843493, 3, 5, 7, 7],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 8765240, 5, 7, 7],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 14608733, 7, 7],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 20452226, 7],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 20452226],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([5843493, 3, 5, 7, 7],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 8765240, 5, 7, 7],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 20452226, 7],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 20452226],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([5843493, 3, 5, 7, 7],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 8765240, 5, 7, 7],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 20452226, 7],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 20452226],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([5843493, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 8765240, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 20452226, 7],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 20452226],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([5843493, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 8765240, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 20452226, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 20452226],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([5843493, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 8765240, 5, 7, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 20452226, 7],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 20452226],"float32"), output_size=list[None,3,None,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([5843493, 3, 5, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 8765240, 5, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 20452226, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 20452226],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([5843493, 3, 5, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 8765240, 5, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 20452226, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 20452226],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([5843493, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 8765240, 5, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 20452226, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 20452226],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([5843493, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 8765240, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 20452226, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 20452226],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([5843493, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 8765240, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 14608733, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 20452226, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 20452226],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.channel_shuffle(Tensor([14913081, 4, 4, 9],"float64"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([2, 29826162, 4, 9],"float64"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 29826162, 9],"float64"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 4, 67108865],"float64"), 3, "NHWC", )
paddle.nn.functional.channel_shuffle(Tensor([14913081, 4, 4, 9],"float64"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 29826162, 4, 9],"float64"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 29826162, 9],"float64"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 4, 4, 67108865],"float64"), 3, "NHWC", None, )
paddle.nn.functional.channel_shuffle(Tensor([14913081, 9, 4, 4],"float64"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([2, 67108865, 4, 4],"float64"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 29826162, 4],"float64"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 4, 29826162],"float64"), 3, "NCHW", )
paddle.nn.functional.channel_shuffle(Tensor([14913081, 9, 4, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 67108865, 4, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 29826162, 4],"float64"), 3, "NCHW", None, )
paddle.nn.functional.channel_shuffle(Tensor([2, 9, 4, 29826162],"float64"), 3, "NCHW", None, )
paddle.nn.functional.conv1d(Tensor([89478486, 16, 3],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 357913942, 3],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 67108864],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 3],"float32"), Tensor([1431655765, 1, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 3],"float32"), Tensor([6, 238609295, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 3],"float32"), Tensor([6, 1, 715827883],"float32"), bias=Tensor([6],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 3],"float32"), Tensor([6, 1, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([44739243, 16, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 178956971, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 67108864],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([238609295, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([44739243, 16, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 178956971, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 67108864],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([238609295, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([4, 16, 6],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([238609295, 6, 3],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 2796203, 3],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 6, 1398102],"float32"), bias=Tensor([512],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([238609295, 6, 3],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 2796203, 3],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 6, 1398102],"float32"), bias=Tensor([512],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([512, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([477218589, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 3, 178956971],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([238609295, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="same", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([238609295, 6, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([238609295, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([238609295, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([238609295, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[2,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([238609295, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=2, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([238609295, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([44739243, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 67108864, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 178956971],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([238609295, 6, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 178956971, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 89478486],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d(Tensor([4, 6, 16],"float32"), Tensor([8, 6, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([44739243, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 178956971, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 67108864],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([178956971, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 238609295, 3],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 8, 89478486],"float32"), bias=Tensor([8],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=18, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([44739243, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 178956971, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 67108864],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([178956971, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 238609295, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 8, 89478486],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([44739243, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 178956971, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 67108864],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([178956971, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 238609295, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 8, 89478486],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 16, 6],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=2, padding=0, stride=list[3,], dilation=list[1,], groups=1, data_format="NLC", )
paddle.nn.functional.conv1d_transpose(Tensor([89478486, 3, 16],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([6],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 67108864, 16],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([6],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 3, 357913942],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([6],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 3, 16],"float32"), Tensor([715827883, 2, 3],"float32"), bias=Tensor([6],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 3, 16],"float32"), Tensor([3, 477218589, 3],"float32"), bias=Tensor([6],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 3, 16],"float32"), Tensor([3, 2, 715827883],"float32"), bias=Tensor([6],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 3, 16],"float32"), Tensor([3, 2, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=3, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([44739243, 6, 16],"float32"), Tensor([6, 4, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 67108864, 16],"float32"), Tensor([6, 4, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 178956971],"float32"), Tensor([6, 4, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([357913942, 4, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 238609295, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 4, 178956971],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 4, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=2, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([44739243, 6, 16],"float32"), Tensor([6, 8, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 67108864, 16],"float32"), Tensor([6, 8, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 178956971],"float32"), Tensor([6, 8, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([536870912, 8, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 715827883, 1],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 89478486],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 1],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=3, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([44739243, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 67108864, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 178956971],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([178956971, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 238609295, 3],"float32"), bias=Tensor([8],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 89478486],"float32"), bias=Tensor([8],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=list[36,], output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([44739243, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 67108864, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 178956971],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([178956971, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 238609295, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 89478486],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding="valid", stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([44739243, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 67108864, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 178956971],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([178956971, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 238609295, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 89478486],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=0, stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([44739243, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 67108864, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 178956971],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([178956971, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 238609295, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 89478486],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=0, stride=list[2,], dilation=list[2,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([44739243, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 67108864, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 178956971],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([178956971, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 238609295, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 89478486],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=list[1,2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([44739243, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 67108864, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 178956971],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([178956971, 8, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 238609295, 3],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 89478486],"float32"), bias=Tensor([8],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv1d_transpose(Tensor([4, 6, 16],"float32"), Tensor([6, 8, 3],"float32"), bias=Tensor([4294967295],"float32"), output_size=None, output_padding=0, padding=list[2,], stride=list[1,], dilation=list[1,], groups=1, data_format="NCL", )
paddle.nn.functional.conv2d(Tensor([4194304, 1, 32, 32],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1, 134217728, 32],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 134217728],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 32],"float32"), Tensor([477218589, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 32],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 32],"float32"), Tensor([6, 1, 238609295, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 32],"float32"), Tensor([6, 1, 3, 238609295],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 1, 32, 32],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([28533, 3, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 85599, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 6391321, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 6391321],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 159072863, 3, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 159072863, 3],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 3, 159072863],"float32"), Tensor([3],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), list[3,2,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([28533, 3, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 85599, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 6391321, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 6391321],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 159072863, 3, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 159072863, 3],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 3, 159072863],"float32"), Tensor([3],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 224, 224],"float32"), Tensor([3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), list[4,3,], 0, list[1,1,], 1, "NCHW", )
paddle.nn.functional.conv2d(Tensor([1398102, 3, 32, 32],"float32"), Tensor([6, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 4194304, 32, 32],"float32"), Tensor([6, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 44739243, 32],"float32"), Tensor([6, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 32, 44739243],"float32"), Tensor([6, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 32, 32],"float32"), Tensor([159072863, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 32, 32],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 32, 32],"float32"), Tensor([6, 3, 79536432, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 32, 32],"float32"), Tensor([6, 3, 3, 79536432],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 3, 32, 32],"float32"), Tensor([6, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([2796203, 6, 16, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 16777216, 16, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 44739243, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 44739243],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([28633116, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([16, 10737419, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([16, 6, 8947849, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([16, 6, 5, 8947849],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1, 6, 16, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([1238457, 3, 34, 34],"float32"), Tensor([2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([10, 371537, 34, 34],"float32"), Tensor([2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([10, 3, 4210753, 34],"float32"), Tensor([2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([10, 3, 34, 4210753],"float32"), Tensor([2, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([10, 3, 34, 34],"float32"), Tensor([159072863, 3, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([10, 3, 34, 34],"float32"), Tensor([2, 238609295, 3, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([10, 3, 34, 34],"float32"), Tensor([2, 3, 238609295, 3],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([10, 3, 34, 34],"float32"), Tensor([2, 3, 3, 238609295],"float32"), bias=Tensor([2],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([10, 3, 34, 34],"float32"), Tensor([2, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([5478275, 1, 28, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 342393, 28, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 1, 9586981, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 1, 28, 9586981],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 1, 28, 28],"float32"), Tensor([477218589, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 1, 28, 28],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 1, 28, 28],"float32"), Tensor([6, 1, 238609295, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 1, 28, 28],"float32"), Tensor([6, 1, 3, 238609295],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([5478275, 1, 28, 28],"float32"), Tensor([5478275, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 342393, 28, 28],"float32"), Tensor([6, 342393, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 1, 9586981, 28],"float32"), Tensor([6, 1, 9586981, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 1, 28, 9586981],"float32"), Tensor([6, 1, 3, 9586981],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([3652184, 6, 14, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 1369569, 14, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 6, 3195661, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 6, 14, 3195661],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 6, 14, 14],"float32"), Tensor([28633116, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 6, 14, 14],"float32"), Tensor([16, 10737419, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 6, 14, 14],"float32"), Tensor([16, 6, 8947849, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 6, 14, 14],"float32"), Tensor([16, 6, 5, 8947849],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([16, 6, 14, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([5478275, 1, 28, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 20141, 28, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 1, 563941, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 1, 28, 563941],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 1, 28, 28],"float32"), Tensor([477218589, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 1, 28, 28],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 1, 28, 28],"float32"), Tensor([6, 1, 238609295, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 1, 28, 28],"float32"), Tensor([6, 1, 3, 238609295],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 1, 28, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 80563, 14, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 6, 187981, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 6, 14, 187981],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 6, 14, 14],"float32"), Tensor([28633116, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 6, 14, 14],"float32"), Tensor([16, 10737419, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 6, 14, 14],"float32"), Tensor([16, 6, 8947849, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 6, 14, 14],"float32"), Tensor([16, 6, 5, 8947849],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([272, 6, 14, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 171197, 28, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 1, 4793491, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 1, 28, 4793491],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 1, 28, 28],"float32"), Tensor([477218589, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 1, 28, 28],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 1, 28, 28],"float32"), Tensor([6, 1, 238609295, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 1, 28, 28],"float32"), Tensor([6, 1, 3, 238609295],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 171197, 28, 28],"float32"), Tensor([6, 171197, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 1, 4793491, 28],"float32"), Tensor([6, 1, 4793491, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 1, 28, 4793491],"float32"), Tensor([6, 1, 3, 4793491],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 131072, 32, 32],"float32"), Tensor([6, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 3, 1398102, 32],"float32"), Tensor([6, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 3, 32, 1398102],"float32"), Tensor([6, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 3, 32, 32],"float32"), Tensor([159072863, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 3, 32, 32],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 3, 32, 32],"float32"), Tensor([6, 3, 79536432, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 3, 32, 32],"float32"), Tensor([6, 3, 3, 79536432],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 3, 32, 32],"float32"), Tensor([6, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 684785, 14, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 6, 1597831, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 6, 14, 1597831],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 6, 14, 14],"float32"), Tensor([28633116, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 6, 14, 14],"float32"), Tensor([16, 10737419, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 6, 14, 14],"float32"), Tensor([16, 6, 8947849, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 6, 14, 14],"float32"), Tensor([16, 6, 5, 8947849],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 6, 14, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 524288, 16, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 6, 1398102, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 6, 16, 1398102],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 6, 16, 16],"float32"), Tensor([28633116, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 6, 16, 16],"float32"), Tensor([16, 10737419, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 6, 16, 16],"float32"), Tensor([16, 6, 8947849, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 6, 16, 16],"float32"), Tensor([16, 6, 5, 8947849],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([32, 6, 16, 16],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([5592406, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 22369622, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 22369622, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 4194304],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 95443718, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 95443718, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 95443718],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([5592406, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 22369622, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 22369622, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 4194304],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 95443718, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 95443718, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 95443718],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[1,1,2,2,], stride=1, dilation=2, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([5592406, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 22369622, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 22369622, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 4194304],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 95443718, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 95443718, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 95443718],"float32"), Tensor([5],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[1,2,], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([5592406, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 22369622, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 22369622, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 4194304],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 95443718, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 95443718, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 95443718],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[1,2,3,1,], stride=2, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([5592406, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 22369622, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 22369622, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 4194304],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 95443718, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 95443718, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 95443718],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([4, 16, 16, 3],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d(Tensor([5592406, 3, 16, 16],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 4194304, 16, 16],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 3, 22369622, 16],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 3, 16, 22369622],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 3, 16, 16],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 3, 16, 16],"float32"), Tensor([5, 95443718, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 3, 16, 16],"float32"), Tensor([5, 3, 95443718, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 3, 16, 16],"float32"), Tensor([5, 3, 3, 95443718],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 3, 16, 16],"float32"), Tensor([5, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([2796203, 6, 16, 16],"float32"), Tensor([12, 1, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 4194304, 16, 16],"float32"), Tensor([12, 1, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 11184811, 16],"float32"), Tensor([12, 1, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 11184811],"float32"), Tensor([12, 1, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([477218589, 1, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([12, 39768216, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([12, 1, 119304648, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([12, 1, 3, 119304648],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([2796203, 6, 16, 16],"float32"), Tensor([2796203, 1, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 4194304, 16, 16],"float32"), Tensor([12, 4194304, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 11184811, 16],"float32"), Tensor([12, 1, 11184811, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 11184811],"float32"), Tensor([12, 1, 3, 11184811],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([2796203, 6, 16, 16],"float32"), Tensor([8, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 4194304, 16, 16],"float32"), Tensor([8, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 11184811, 16],"float32"), Tensor([8, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 11184811],"float32"), Tensor([8, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([8, 59652324, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([8, 3, 59652324, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([8, 3, 3, 59652324],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([4, 6, 16, 16],"float32"), Tensor([8, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 10700, 28, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 1, 299594, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 1, 28, 299594],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 1, 28, 28],"float32"), Tensor([477218589, 1, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 1, 28, 28],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 1, 28, 28],"float32"), Tensor([6, 1, 238609295, 3],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 1, 28, 28],"float32"), Tensor([6, 1, 3, 238609295],"float32"), bias=Tensor([6],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 1, 28, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 42800, 14, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 6, 99865, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 6, 14, 99865],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 6, 14, 14],"float32"), Tensor([28633116, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 6, 14, 14],"float32"), Tensor([16, 10737419, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 6, 14, 14],"float32"), Tensor([16, 6, 8947849, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 6, 14, 14],"float32"), Tensor([16, 6, 5, 8947849],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([512, 6, 14, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 85599, 28, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 2396746, 28],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 28, 2396746],"float32"), Tensor([6, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 28, 28],"float32"), Tensor([477218589, 1, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 28, 28],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 28, 28],"float32"), Tensor([6, 1, 238609295, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 28, 28],"float32"), Tensor([6, 1, 3, 238609295],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 85599, 28, 28],"float32"), Tensor([6, 85599, 3, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 2396746, 28],"float32"), Tensor([6, 1, 2396746, 3],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 1, 28, 2396746],"float32"), Tensor([6, 1, 3, 2396746],"float32"), bias=None, padding=1, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 342393, 14, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 6, 798916, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 6, 14, 798916],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 6, 14, 14],"float32"), Tensor([28633116, 6, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 6, 14, 14],"float32"), Tensor([16, 10737419, 5, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 6, 14, 14],"float32"), Tensor([16, 6, 8947849, 5],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 6, 14, 14],"float32"), Tensor([16, 6, 5, 8947849],"float32"), bias=Tensor([16],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d(Tensor([64, 6, 14, 14],"float32"), Tensor([16, 6, 5, 5],"float32"), bias=Tensor([4294967295],"float32"), padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2048, 128, 128, 128],"float32"), Tensor([128, 64, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 262144, 128, 128],"float32"), Tensor([128, 64, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 262144, 128],"float32"), Tensor([128, 64, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 262144],"float32"), Tensor([128, 64, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([4194304, 64, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([128, 2097152, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([128, 64, 131072, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 128],"float32"), Tensor([128, 64, 4, 131072],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2048, 128, 128, 128],"float32"), Tensor([2048, 64, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 262144, 128, 128],"float32"), Tensor([128, 262144, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 262144, 128],"float32"), Tensor([128, 64, 262144, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 128, 128, 262144],"float32"), Tensor([128, 64, 4, 262144],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8388608, 2, 16, 16],"float32"), Tensor([2, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 16777216, 16, 16],"float32"), Tensor([2, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2, 134217728, 16],"float32"), Tensor([2, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2, 16, 134217728],"float32"), Tensor([2, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2, 16, 16],"float32"), Tensor([268435456, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2, 16, 16],"float32"), Tensor([2, 134217728, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2, 16, 16],"float32"), Tensor([2, 1, 536870912, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2, 16, 16],"float32"), Tensor([2, 1, 4, 536870912],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8388608, 2, 16, 16],"float32"), Tensor([8388608, 1, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 16777216, 16, 16],"float32"), Tensor([2, 16777216, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2, 134217728, 16],"float32"), Tensor([2, 1, 134217728, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 2, 16, 134217728],"float32"), Tensor([2, 1, 4, 134217728],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4096, 256, 64, 64],"float32"), Tensor([256, 128, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1048576, 64, 64],"float32"), Tensor([256, 128, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 262144, 64],"float32"), Tensor([256, 128, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 64, 262144],"float32"), Tensor([256, 128, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 64, 64],"float32"), Tensor([2097152, 128, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 64, 64],"float32"), Tensor([256, 1048576, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 64, 64],"float32"), Tensor([256, 128, 32768, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 64, 64],"float32"), Tensor([256, 128, 4, 32768],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4096, 256, 64, 64],"float32"), Tensor([4096, 128, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 1048576, 64, 64],"float32"), Tensor([256, 1048576, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 262144, 64],"float32"), Tensor([256, 128, 262144, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 256, 64, 262144],"float32"), Tensor([256, 128, 4, 262144],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([16777216, 4, 8, 8],"float32"), Tensor([4, 2, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 67108864, 8, 8],"float32"), Tensor([4, 2, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4, 134217728, 8],"float32"), Tensor([4, 2, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4, 8, 134217728],"float32"), Tensor([4, 2, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4, 8, 8],"float32"), Tensor([134217728, 2, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4, 8, 8],"float32"), Tensor([4, 67108864, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4, 8, 8],"float32"), Tensor([4, 2, 134217728, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4, 8, 8],"float32"), Tensor([4, 2, 4, 134217728],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([16777216, 4, 8, 8],"float32"), Tensor([16777216, 2, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 67108864, 8, 8],"float32"), Tensor([4, 67108864, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4, 134217728, 8],"float32"), Tensor([4, 2, 134217728, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1, 4, 8, 134217728],"float32"), Tensor([4, 2, 4, 134217728],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 2, 3, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 178956971],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 3],"float64"), Tensor([1073741825, 2, 1, 1],"float64"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 3],"float64"), Tensor([2, 1073741825, 1, 1],"float64"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 3],"float64"), Tensor([2, 2, 536870913, 1],"float64"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 3],"float64"), Tensor([2, 2, 1, 536870913],"float64"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 2, 3, 3],"float64"), Tensor([119304648, 2, 1, 1],"float64"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([2, 119304648, 1, 1],"float64"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 3],"float64"), Tensor([2, 2, 178956971, 1],"float64"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 178956971],"float64"), Tensor([2, 2, 1, 178956971],"float64"), groups=1, padding="SAME", )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 2, 3, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 178956971],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 3],"float64"), Tensor([1073741825, 2, 1, 1],"float64"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 3],"float64"), Tensor([2, 1073741825, 1, 1],"float64"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 3],"float64"), Tensor([2, 2, 536870913, 1],"float64"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 3],"float64"), Tensor([2, 2, 1, 536870913],"float64"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 2, 3, 3],"float64"), Tensor([119304648, 2, 1, 1],"float64"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([2, 119304648, 1, 1],"float64"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 3],"float64"), Tensor([2, 2, 178956971, 1],"float64"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 178956971],"float64"), Tensor([2, 2, 1, 178956971],"float64"), groups=1, padding="VALID", )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 2, 3, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 3],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 178956971],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 3],"float64"), Tensor([1073741825, 2, 1, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 3],"float64"), Tensor([2, 1073741825, 1, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 3],"float64"), Tensor([2, 2, 536870913, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 3],"float64"), Tensor([2, 2, 1, 536870913],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 2, 3, 3],"float64"), Tensor([119304648, 2, 1, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([2, 119304648, 1, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 178956971, 3],"float64"), Tensor([2, 2, 178956971, 1],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([2, 2, 3, 178956971],"float64"), Tensor([2, 2, 1, 178956971],"float64"), groups=1, padding=list[1,0,0,1,], )
paddle.nn.functional.conv2d_transpose(Tensor([357913942, 3, 2, 2],"float32"), Tensor([3, 10, 27, 27],"float32"), bias=Tensor([10],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 536870912, 2, 2],"float32"), Tensor([3, 10, 27, 27],"float32"), bias=Tensor([10],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 357913942, 2],"float32"), Tensor([3, 10, 27, 27],"float32"), bias=Tensor([10],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 357913942],"float32"), Tensor([3, 10, 27, 27],"float32"), bias=Tensor([10],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 2],"float32"), Tensor([589159, 10, 27, 27],"float32"), bias=Tensor([10],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 2],"float32"), Tensor([3, 1963863, 27, 27],"float32"), bias=Tensor([10],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 2],"float32"), Tensor([3, 10, 5302429, 27],"float32"), bias=Tensor([10],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 2],"float32"), Tensor([3, 10, 27, 5302429],"float32"), bias=Tensor([10],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 2, 2],"float32"), Tensor([3, 10, 27, 27],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 3, 3, 2],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 178956971, 3, 2],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 178956971, 2],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 3, 119304648],"float64"), Tensor([2, 2, 1, 1],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 3, 2],"float64"), Tensor([1073741825, 2, 1, 1],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 3, 2],"float64"), Tensor([2, 1073741825, 1, 1],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 3, 2],"float64"), Tensor([2, 2, 536870913, 1],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 3, 2],"float64"), Tensor([2, 2, 1, 536870913],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([119304648, 3, 3, 2],"float64"), Tensor([119304648, 2, 1, 1],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 178956971, 3, 2],"float64"), Tensor([2, 178956971, 1, 1],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 178956971, 2],"float64"), Tensor([2, 2, 178956971, 1],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 3, 119304648],"float64"), Tensor([2, 2, 1, 119304648],"float64"), groups=1, padding=list[1,1,], data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([57266231, 3, 5, 5],"float32"), Tensor([3, 3, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 85899346, 5, 5],"float32"), Tensor([3, 3, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 143165577, 5],"float32"), Tensor([3, 3, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 5, 143165577],"float32"), Tensor([3, 3, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 5, 5],"float32"), Tensor([357913942, 3, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 5, 5],"float32"), Tensor([3, 357913942, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 5, 5],"float32"), Tensor([3, 3, 238609295, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 5, 5],"float32"), Tensor([3, 3, 2, 238609295],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 3, 5, 5],"float32"), Tensor([3, 3, 2, 2],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([59652324, 4, 3, 3],"float64"), Tensor([4, 2, 1, 1],"float64"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([4, 2, 1, 1],"float64"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 89478486, 3],"float64"), Tensor([4, 2, 1, 1],"float64"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 3, 89478486],"float64"), Tensor([4, 2, 1, 1],"float64"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 3, 3],"float64"), Tensor([1073741825, 2, 1, 1],"float64"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 3, 3],"float64"), Tensor([4, 536870913, 1, 1],"float64"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 3, 3],"float64"), Tensor([4, 2, 268435457, 1],"float64"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 3, 3],"float64"), Tensor([4, 2, 1, 268435457],"float64"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([59652324, 4, 3, 3],"float64"), Tensor([59652324, 2, 1, 1],"float64"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 119304648, 3, 3],"float64"), Tensor([4, 119304648, 1, 1],"float64"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 89478486, 3],"float64"), Tensor([4, 2, 89478486, 1],"float64"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 3, 89478486],"float64"), Tensor([4, 2, 1, 89478486],"float64"), groups=1, )
paddle.nn.functional.conv2d_transpose(Tensor([16777216, 4, 8, 8],"float32"), Tensor([4, 6, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 33554432, 8, 8],"float32"), Tensor([4, 6, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 67108864, 8],"float32"), Tensor([4, 6, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 8, 67108864],"float32"), Tensor([4, 6, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 8, 8],"float32"), Tensor([79536432, 6, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 8, 8],"float32"), Tensor([4, 119304648, 3, 3],"float32"), bias=Tensor([6],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 8, 8],"float32"), Tensor([4, 6, 59652324, 3],"float32"), bias=Tensor([6],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 8, 8],"float32"), Tensor([4, 6, 3, 59652324],"float32"), bias=Tensor([6],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2, 4, 8, 8],"float32"), Tensor([4, 6, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([5592406, 16, 16, 3],"float32"), Tensor([3, 5, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 22369622, 16, 3],"float32"), Tensor([3, 5, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 22369622, 3],"float32"), Tensor([3, 5, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4194304],"float32"), Tensor([3, 5, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 3],"float32"), Tensor([95443718, 5, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 3],"float32"), Tensor([3, 159072863, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 3],"float32"), Tensor([3, 5, 95443718, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 3],"float32"), Tensor([3, 5, 3, 95443718],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 3],"float32"), Tensor([3, 5, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4194304, 16, 16, 4],"float32"), Tensor([4, 1, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=1, groups=4, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16777216, 16, 4],"float32"), Tensor([4, 1, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=1, groups=4, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16777216, 4],"float32"), Tensor([4, 1, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=1, groups=4, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4194304],"float32"), Tensor([4, 1, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=1, groups=4, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([477218589, 1, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=1, groups=4, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 119304648, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=1, groups=4, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 1, 357913942, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=1, groups=4, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 1, 3, 357913942],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=1, groups=4, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 1, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=1, groups=4, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4194304, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16777216, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16777216, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4194304],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 119304648, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 119304648, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 119304648],"float32"), Tensor([6],"float32"), output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4194304, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=tuple(2,1,), groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16777216, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=tuple(2,1,), groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16777216, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=tuple(2,1,), groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4194304],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=tuple(2,1,), groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=tuple(2,1,), groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 119304648, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=tuple(2,1,), groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 119304648, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=tuple(2,1,), groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 119304648],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=tuple(2,1,), groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding="valid", stride=tuple(1,2,), dilation=tuple(2,1,), groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4194304, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16777216, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16777216, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4194304],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 119304648, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 119304648, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 119304648],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4194304, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16777216, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16777216, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4194304],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 119304648, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 119304648, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 119304648],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2796203, 16, 16, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 11184811, 16, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 11184811, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4194304],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 6],"float32"), Tensor([59652324, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 6],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 6],"float32"), Tensor([6, 8, 29826162, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 6],"float32"), Tensor([6, 8, 3, 29826162],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([2796203, 16, 16, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 11184811, 16, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 11184811, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4194304],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 6],"float32"), Tensor([59652324, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 6],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 6],"float32"), Tensor([6, 8, 29826162, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 6],"float32"), Tensor([6, 8, 3, 29826162],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 6],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[0,0,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([5592406, 3, 16, 16],"float32"), Tensor([3, 2, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([3, 2, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 22369622, 16],"float32"), Tensor([3, 2, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 16, 22369622],"float32"), Tensor([3, 2, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 16, 16],"float32"), Tensor([238609295, 2, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 16, 16],"float32"), Tensor([3, 159072863, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 16, 16],"float32"), Tensor([3, 2, 238609295, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 16, 16],"float32"), Tensor([3, 2, 3, 238609295],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 16, 16],"float32"), Tensor([3, 2, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=3, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([5592406, 3, 16, 16],"float32"), Tensor([3, 5, 3, 3],"float32"), None, output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([3, 5, 3, 3],"float32"), None, output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 22369622, 16],"float32"), Tensor([3, 5, 3, 3],"float32"), None, output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 16, 22369622],"float32"), Tensor([3, 5, 3, 3],"float32"), None, output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 16, 16],"float32"), Tensor([95443718, 5, 3, 3],"float32"), None, output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 16, 16],"float32"), Tensor([3, 159072863, 3, 3],"float32"), None, output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 16, 16],"float32"), Tensor([3, 5, 95443718, 3],"float32"), None, output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 16, 16],"float32"), Tensor([3, 5, 3, 95443718],"float32"), None, output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([5592406, 3, 16, 16],"float32"), Tensor([5592406, 5, 3, 3],"float32"), None, output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([3, 4194304, 3, 3],"float32"), None, output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 22369622, 16],"float32"), Tensor([3, 5, 22369622, 3],"float32"), None, output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 16, 22369622],"float32"), Tensor([3, 5, 3, 22369622],"float32"), None, output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([29217465, 3, 7, 7],"float32"), Tensor([3, 6, 5, 5],"float32"), bias=Tensor([6],"float32"), padding=2, output_padding=list[1,1,], stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 21913099, 7, 7],"float32"), Tensor([3, 6, 5, 5],"float32"), bias=Tensor([6],"float32"), padding=2, output_padding=list[1,1,], stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 51130564, 7],"float32"), Tensor([3, 6, 5, 5],"float32"), bias=Tensor([6],"float32"), padding=2, output_padding=list[1,1,], stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 7, 51130564],"float32"), Tensor([3, 6, 5, 5],"float32"), bias=Tensor([6],"float32"), padding=2, output_padding=list[1,1,], stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 7, 7],"float32"), Tensor([28633116, 6, 5, 5],"float32"), bias=Tensor([6],"float32"), padding=2, output_padding=list[1,1,], stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 7, 7],"float32"), Tensor([3, 57266231, 5, 5],"float32"), bias=Tensor([6],"float32"), padding=2, output_padding=list[1,1,], stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 7, 7],"float32"), Tensor([3, 6, 47721859, 5],"float32"), bias=Tensor([6],"float32"), padding=2, output_padding=list[1,1,], stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 7, 7],"float32"), Tensor([3, 6, 5, 47721859],"float32"), bias=Tensor([6],"float32"), padding=2, output_padding=list[1,1,], stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 3, 7, 7],"float32"), Tensor([3, 6, 5, 5],"float32"), bias=Tensor([4294967295],"float32"), padding=2, output_padding=list[1,1,], stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4194304, 4, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16777216, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16777216],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 119304648, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 3, 119304648, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 3, 3, 119304648],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=list[1,1,2,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4194304, 4, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16777216, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16777216],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 119304648, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 3, 119304648, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 3, 3, 119304648],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=list[1,2,], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4194304, 4, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16777216, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16777216],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([159072863, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 119304648, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 3, 119304648, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 3, 3, 119304648],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4194304, 4, 16, 16],"float32"), Tensor([4, 4, 3, 3],"float32"), Tensor([4],"float32"), output_size=list[18,34,], padding="valid", stride=tuple(1,2,), dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([4, 4, 3, 3],"float32"), Tensor([4],"float32"), output_size=list[18,34,], padding="valid", stride=tuple(1,2,), dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16777216, 16],"float32"), Tensor([4, 4, 3, 3],"float32"), Tensor([4],"float32"), output_size=list[18,34,], padding="valid", stride=tuple(1,2,), dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16777216],"float32"), Tensor([4, 4, 3, 3],"float32"), Tensor([4],"float32"), output_size=list[18,34,], padding="valid", stride=tuple(1,2,), dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([119304648, 4, 3, 3],"float32"), Tensor([4],"float32"), output_size=list[18,34,], padding="valid", stride=tuple(1,2,), dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 119304648, 3, 3],"float32"), Tensor([4],"float32"), output_size=list[18,34,], padding="valid", stride=tuple(1,2,), dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 4, 89478486, 3],"float32"), Tensor([4],"float32"), output_size=list[18,34,], padding="valid", stride=tuple(1,2,), dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 4, 3, 89478486],"float32"), Tensor([4],"float32"), output_size=list[18,34,], padding="valid", stride=tuple(1,2,), dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4, 16, 16],"float32"), Tensor([4, 4, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=list[18,34,], padding="valid", stride=tuple(1,2,), dilation=1, groups=1, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2796203, 6, 16, 16],"float32"), Tensor([6, 4, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([6, 4, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 11184811, 16],"float32"), Tensor([6, 4, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 11184811],"float32"), Tensor([6, 4, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([119304648, 4, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 4, 59652324, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 4, 3, 59652324],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 4, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=2, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2796203, 6, 16, 16],"float32"), Tensor([6, 8, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,), output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([6, 8, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,), output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 11184811, 16],"float32"), Tensor([6, 8, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,), output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 11184811],"float32"), Tensor([6, 8, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,), output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([536870912, 8, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,), output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 715827883, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,), output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 89478486, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,), output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 1, 89478486],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,), output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 1, 1],"float32"), bias=Tensor([4294967295],"float32"), padding=tuple(2,3,), output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2796203, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 11184811, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 11184811],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([59652324, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 29826162, 3],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 29826162],"float32"), bias=Tensor([8],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="same", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2796203, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 11184811, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 11184811],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([59652324, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 29826162, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 29826162],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2796203, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 11184811, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 11184811],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([59652324, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 29826162, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 29826162],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2796203, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=list[20,36,], data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=list[20,36,], data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 11184811, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=list[20,36,], data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 11184811],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=list[20,36,], data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([59652324, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=list[20,36,], data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=list[20,36,], data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 29826162, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=list[20,36,], data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 29826162],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=list[20,36,], data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=list[20,36,], data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2796203, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 11184811, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 11184811],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([59652324, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 29826162, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 29826162],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,2,], dilation=list[2,2,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2796203, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[2,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[2,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 11184811, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[2,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 11184811],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[2,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([59652324, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[2,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[2,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 29826162, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[2,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 29826162],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[2,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[2,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2796203, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 11184811, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 11184811],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([59652324, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 29826162, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 29826162],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,2,2,1,], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([2796203, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 4194304, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 11184811, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 11184811],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([59652324, 8, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 79536432, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 29826162, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 29826162],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 6, 16, 16],"float32"), Tensor([6, 8, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[list[0,0,],list[0,0,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1398102, 3, 32, 32],"float32"), Tensor([3, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([5, 838861, 32, 32],"float32"), Tensor([3, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([5, 3, 8947849, 32],"float32"), Tensor([3, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([5, 3, 32, 8947849],"float32"), Tensor([3, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([5, 3, 32, 32],"float32"), Tensor([2485514, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([5, 3, 32, 32],"float32"), Tensor([3, 9942054, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([5, 3, 32, 32],"float32"), Tensor([3, 12, 9942054, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([5, 3, 32, 32],"float32"), Tensor([3, 12, 12, 9942054],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([5, 3, 32, 32],"float32"), Tensor([3, 12, 12, 12],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1398102, 3, 32, 32],"float32"), Tensor([3, 2, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 524288, 32, 32],"float32"), Tensor([3, 2, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 3, 5592406, 32],"float32"), Tensor([3, 2, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 3, 32, 5592406],"float32"), Tensor([3, 2, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 3, 32, 32],"float32"), Tensor([134217728, 2, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 3, 32, 32],"float32"), Tensor([3, 89478486, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 3, 32, 32],"float32"), Tensor([3, 2, 178956971, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 3, 32, 32],"float32"), Tensor([3, 2, 4, 178956971],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([1398102, 3, 32, 32],"float32"), Tensor([1398102, 2, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 524288, 32, 32],"float32"), Tensor([3, 524288, 4, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 3, 5592406, 32],"float32"), Tensor([3, 2, 5592406, 4],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 3, 32, 5592406],"float32"), Tensor([3, 2, 4, 5592406],"float32"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv3d(Tensor([2796203, 3, 8, 8, 8],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 3, 5592406, 8, 8],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 5592406, 8],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 8, 5592406],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([5, 31814573, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([5, 3, 31814573, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([5, 3, 3, 31814573, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([5, 3, 3, 3, 31814573],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[list[0,0,],list[0,0,],list[1,1,],list[2,2,],list[2,2,],], stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([12, 1, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([12, 1, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 2796203, 8, 8],"float32"), Tensor([12, 1, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 2796203, 8],"float32"), Tensor([12, 1, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 2796203],"float32"), Tensor([12, 1, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([159072863, 1, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([12, 13256072, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([12, 1, 39768216, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([12, 1, 3, 39768216, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([12, 1, 3, 3, 39768216],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([1398102, 1, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([12, 2097152, 3, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 2796203, 8, 8],"float32"), Tensor([12, 1, 2796203, 3, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 2796203, 8],"float32"), Tensor([12, 1, 3, 2796203, 3],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 2796203],"float32"), Tensor([12, 1, 3, 3, 2796203],"float32"), None, padding="valid", stride=1, dilation=1, groups=6, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 2796203, 8, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 2796203, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 2796203],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([8, 19884108, 3, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([8, 3, 19884108, 3, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([8, 3, 3, 19884108, 3],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([8, 3, 3, 3, 19884108],"float32"), Tensor([8],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([4, 6, 8, 8, 8],"float32"), Tensor([8, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding="same", stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d(Tensor([2796203, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 5592406, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 5592406, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 5592406, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 31814573, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 31814573, 3, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 31814573, 3],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 31814573],"float32"), Tensor([5],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([2796203, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 5592406, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 5592406, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 5592406, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 31814573, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 31814573, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 31814573, 3],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 31814573],"float32"), Tensor([5],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[1,1,2,2,3,3,], stride=1, dilation=2, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([2796203, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 5592406, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 5592406, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 5592406, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 31814573, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 31814573, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 31814573, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 31814573],"float32"), Tensor([5],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[1,2,1,], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([2796203, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 5592406, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 5592406, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 5592406, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 31814573, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 31814573, 3, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 31814573, 3],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 31814573],"float32"), Tensor([5],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[1,2,3,1,2,3,], stride=2, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([2796203, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 5592406, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 5592406, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 5592406, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 31814573, 3, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 31814573, 3, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 31814573, 3],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 31814573],"float32"), Tensor([5],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([5, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[1,1,],list[0,0,],], stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([178956971, 3, 2, 2, 2],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 268435456, 2, 2, 2],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 178956971, 2, 2],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 178956971, 2],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 178956971],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([207127, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 828505, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 12, 828505, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 12, 12, 828505, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 12, 12, 12, 828505],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 2, 2, 2],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([6628036, 3, 6, 6, 6],"float32"), Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 9942054, 6, 6, 6],"float32"), Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 19884108, 6, 6],"float32"), Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 6, 19884108, 6],"float32"), Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 6, 6, 19884108],"float32"), Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 6, 6, 6],"float32"), Tensor([178956971, 3, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 6, 6, 6],"float32"), Tensor([3, 178956971, 2, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 6, 6, 6],"float32"), Tensor([3, 3, 119304648, 2, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 6, 6, 6],"float32"), Tensor([3, 3, 2, 119304648, 2],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 6, 6, 6],"float32"), Tensor([3, 3, 2, 2, 119304648],"float32"), bias=Tensor([3],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 6, 6, 6],"float32"), Tensor([3, 3, 2, 2, 2],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2796203, 3, 8, 8, 8],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 11184811, 8, 8],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 8, 11184811, 8],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 8, 8, 11184811],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 8, 8, 8],"float32"), Tensor([79536432, 2, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 8, 8, 8],"float32"), Tensor([3, 53024288, 3, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 8, 8, 8],"float32"), Tensor([3, 2, 79536432, 3, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 8, 8, 8],"float32"), Tensor([3, 2, 3, 79536432, 3],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 8, 8, 8],"float32"), Tensor([3, 2, 3, 3, 79536432],"float32"), bias=Tensor([6],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 3, 8, 8, 8],"float32"), Tensor([3, 2, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=3, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 4, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 4, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 4, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 4, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 4, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([39768216, 4, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 26512144, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 4, 19884108, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 4, 3, 19884108, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 4, 3, 3, 19884108],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 4, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=2, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([536870912, 8, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 715827883, 1, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 89478486, 1, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 1, 89478486, 1],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 1, 1, 89478486],"float32"), bias=Tensor([8],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 1, 1, 1],"float32"), bias=Tensor([4294967295],"float32"), padding=tuple(2,3,1,), output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 26512144, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding="valid", output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 26512144, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 26512144, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=list[12,19,12,], data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 26512144, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,2,1,], dilation=list[2,2,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 26512144, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[2,2,2,], dilation=list[2,1,2,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 26512144, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[1,2,2,3,2,1,], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 4194304, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 5592406, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 5592406, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 5592406],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 26512144, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 6, 8, 8, 8],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[list[0,0,],list[0,0,],list[2,3,],list[1,2,],list[2,1,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 5592406, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 5592406, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 5592406, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 4194304],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 26512144, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([1398102, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 5592406, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 5592406, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 5592406, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 4194304],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([19884108, 8, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 26512144, 3, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 9942054, 3, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 9942054, 3],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 9942054],"float32"), bias=Tensor([8],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2, 8, 8, 8, 6],"float32"), Tensor([6, 8, 3, 3, 3],"float32"), bias=Tensor([4294967295],"float32"), padding=list[list[0,0,],list[1,1,],list[2,2,],list[3,3,],list[0,0,],], output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2796203, 3, 8, 8, 8],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 5592406, 8, 8],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 8, 5592406, 8],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 8, 8, 5592406],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([31814573, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([3, 53024288, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([3, 5, 31814573, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([3, 5, 3, 31814573, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([3, 5, 3, 3, 31814573],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 3, 8, 8, 8],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 4194304, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 4194304, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 4194304],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 39768216, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 39768216, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 39768216, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 39768216],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=list[1,1,2,2,1,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 4194304, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 4194304, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 4194304],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 39768216, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 39768216, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 39768216, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 39768216],"float32"), Tensor([6],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=list[1,2,1,], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 4194304, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 4194304, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 4194304],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 39768216, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 39768216, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 39768216, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 39768216],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=list[list[0,0,],list[0,0,],list[1,1,],list[1,1,],list[2,2,],], stride=1, dilation=1, groups=2, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 4, 8, 8, 8],"float32"), Tensor([4, 4, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 2097152, 8, 8, 8],"float32"), Tensor([4, 4, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 4194304, 8, 8],"float32"), Tensor([4, 4, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 4194304, 8],"float32"), Tensor([4, 4, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 4194304],"float32"), Tensor([4, 4, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([39768216, 4, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 39768216, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 4, 29826162, 3, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 4, 3, 29826162, 3],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 4, 3, 3, 29826162],"float32"), Tensor([4],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4, 8, 8, 8],"float32"), Tensor([4, 4, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=tuple(10,17,10,), padding="valid", stride=tuple(1,2,1,), dilation=1, groups=1, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([2796203, 8, 8, 8, 3],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 5592406, 8, 8, 3],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 5592406, 8, 3],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 5592406, 3],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([31814573, 5, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([3, 53024288, 3, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([3, 5, 31814573, 3, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([3, 5, 3, 31814573, 3],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([3, 5, 3, 3, 31814573],"float32"), Tensor([5],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 3],"float32"), Tensor([3, 5, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=1, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 8, 8, 8, 4],"float32"), Tensor([4, 1, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4194304, 8, 8, 4],"float32"), Tensor([4, 1, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 4194304, 8, 4],"float32"), Tensor([4, 1, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 4194304, 4],"float32"), Tensor([4, 1, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([4, 1, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([159072863, 1, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 39768216, 3, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 1, 119304648, 3, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 1, 3, 119304648, 3],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 1, 3, 3, 119304648],"float32"), Tensor([4],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 1, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=1, groups=4, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4194304, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 4194304, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 4194304, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 39768216, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 39768216, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 39768216, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 39768216],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 8, 8, 8, 4],"float32"), Tensor([2097152, 3, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4194304, 8, 8, 4],"float32"), Tensor([4, 4194304, 3, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 4194304, 8, 4],"float32"), Tensor([4, 3, 4194304, 3, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 4194304, 4],"float32"), Tensor([4, 3, 3, 4194304, 3],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([4, 3, 3, 3, 2097152],"float32"), None, output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4194304, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 4194304, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 4194304, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 39768216, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 39768216, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 39768216, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 39768216],"float32"), Tensor([6],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding="valid", stride=tuple(1,2,1,), dilation=tuple(2,1,1,), groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4194304, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 4194304, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 4194304, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 39768216, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 39768216, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 39768216, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 39768216],"float32"), Tensor([6],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=0, stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([2097152, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 4194304, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 4194304, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 4194304, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 2097152],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([53024288, 3, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 39768216, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 39768216, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 39768216, 3],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 39768216],"float32"), Tensor([6],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([4, 8, 8, 8, 4],"float32"), Tensor([4, 3, 3, 3, 3],"float32"), Tensor([4294967295],"float32"), output_size=None, padding=list[list[0,0,],list[1,2,],list[1,2,],list[2,1,],list[0,0,],], stride=1, dilation=1, groups=2, data_format="NDHWC", )
paddle.nn.functional.conv3d_transpose(Tensor([116509, 3, 12, 32, 32],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([5, 69906, 12, 32, 32],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([5, 3, 279621, 32, 32],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([5, 3, 12, 745655, 32],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([5, 3, 12, 32, 745655],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([5, 3, 12, 32, 32],"float32"), Tensor([207127, 12, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([5, 3, 12, 32, 32],"float32"), Tensor([3, 828505, 12, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([5, 3, 12, 32, 32],"float32"), Tensor([3, 12, 828505, 12, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([5, 3, 12, 32, 32],"float32"), Tensor([3, 12, 12, 828505, 12],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([5, 3, 12, 32, 32],"float32"), Tensor([3, 12, 12, 12, 828505],"float32"), bias=Tensor([12],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.conv3d_transpose(Tensor([5, 3, 12, 32, 32],"float32"), Tensor([3, 12, 12, 12, 12],"float32"), bias=Tensor([4294967295],"float32"), padding=0, output_padding=0, stride=list[1,1,1,], dilation=list[1,1,1,], groups=1, output_size=None, data_format="NCDHW", )
paddle.nn.functional.dropout(Tensor([536870912, 1, 8],"float32"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([1, 536870912, 8],"float32"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([1, 1, 4294967295],"float32"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([429496730, 10],"float16"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([1, 4294967295],"float16"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([4194304, 1024],"float32"), p=0.2, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([1, 4294967295],"float32"), p=0.2, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([3355444, 1280],"float32"), p=0.2, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2097152, 2048, 1, 1],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([1, 4294967295, 1, 1],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([1, 2048, 2097152, 1],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([1, 2048, 1, 2097152],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([1048576, 4096],"float32"), p=0.5, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([1, 4294967295],"float32"), p=0.5, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([4294967295, 1],"float32"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([10, 429496730],"float32"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([10, 429496730],"float16"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([429496730, 10],"float32"), p=0.5, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([10, 429496730],"float32"), p=0.5, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([429496730, 10],"float32"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([33554433, 4, 16],"float64"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([12, 11184811, 16],"float64"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([12, 4, 44739243],"float64"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([67108865, 4, 8],"float64"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([12, 22369622, 8],"float64"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([33554432, 128],"float32"), mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([128, 33554432],"float32"), mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4096, 64, 128, 128],"float32"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([16, 16384, 128, 128],"float32"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([16, 64, 32768, 128],"float32"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([16, 64, 128, 32768],"float32"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([4096, 64, 128, 128],"float32"), p=0.6, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([16, 16384, 128, 128],"float32"), p=0.6, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([16, 64, 32768, 128],"float32"), p=0.6, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([16, 64, 128, 32768],"float32"), p=0.6, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 0.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 0.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 0.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 0.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 0.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 0.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 0.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 0.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 0.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 0.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 0.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 0.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 0.5, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 0.5, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 0.5, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 0.5, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 0.5, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 0.5, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 0.5, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 0.5, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 0.5, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 0.5, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 0.5, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 0.5, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 0.9, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 0.9, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 0.9, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 0.9, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 0.9, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 0.9, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 0.9, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 0.9, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 0.9, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 0.9, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 0.9, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 0.9, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 0.9, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 0.9, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 0.9, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 0.9, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 1.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 1.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 1.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 1.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 1.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 1.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 1.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 1.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 1.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 1.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 1.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 1.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float16"), 1.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float16"), 1.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float16"), 1.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float16"), 1.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 0.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 0.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 0.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 0.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 0.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 0.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 0.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 0.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 0.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 0.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 0.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 0.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 0.5, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 0.5, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 0.5, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 0.5, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 0.5, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 0.5, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 0.5, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 0.5, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 0.5, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 0.5, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 0.5, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 0.5, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 0.9, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 0.9, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 0.9, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 0.9, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 0.9, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 0.9, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 0.9, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 0.9, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 0.9, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 0.9, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 0.9, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 0.9, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 0.9, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 0.9, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 0.9, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 0.9, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 1.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 1.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 1.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 1.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 1.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 1.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 1.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 1.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 1.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 1.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 1.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 1.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), 1.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), 1.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), 1.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), 1.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4194304, 1024, 1, 1],"float32"), p=0.4, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([2, 2147483648, 1, 1],"float32"), p=0.4, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([2, 1024, 2097152, 1],"float32"), p=0.4, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 2097152],"float32"), p=0.4, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 0.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 0.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 0.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 0.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 0.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 0.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 0.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 0.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 0.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 0.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 0.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 0.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 0.5, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 0.5, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 0.5, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 0.5, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 0.5, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 0.5, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 0.5, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 0.5, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 0.5, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 0.5, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 0.5, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 0.5, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 0.9, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 0.9, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 0.9, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 0.9, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 0.9, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 0.9, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 0.9, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 0.9, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 0.9, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 0.9, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 0.9, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 0.9, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 0.9, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 0.9, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 0.9, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 0.9, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 1.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 1.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 1.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 1.0, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 1.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 1.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 1.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 1.0, training=False, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 1.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 1.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 1.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 1.0, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([2097153, 1024, 1, 1],"float64"), 1.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1073741825, 1, 1],"float64"), 1.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1048577, 1],"float64"), 1.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 1, 1048577],"float64"), 1.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2097152, 1024, 2, 1],"float16"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1073741824, 2, 1],"float16"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 1024, 2, 1048576],"float16"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 2147483648],"float32"), p=0.2, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([4194304, 1024],"float32"), p=0.7, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([2, 2147483648],"float32"), p=0.7, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([357913942, 12],"float32"), p=0.5, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2, 2147483648],"float32"), p=0.5, axis=None, training=False, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([357913942, 12],"float32"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2, 2147483648],"float32"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([559241, 128, 60],"float32"), p=0.1, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2, 35791395, 60],"float32"), p=0.1, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2, 128, 16777216],"float32"), p=0.1, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2097152, 2048],"float32"), p=0.2, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([2, 2147483648],"float32"), p=0.2, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([1048576, 4096],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([2, 2147483648],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([58255, 512, 12, 12],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([2, 14913081, 12, 12],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([2, 512, 349526, 12],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([2, 512, 12, 349526],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([49637, 512, 13, 13],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([2, 12707004, 13, 13],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([2, 512, 322639, 13],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([2, 512, 13, 322639],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([3787450, 6, 7, 9, 3],"float32"), p=0.8, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2, 11362348, 7, 9, 3],"float32"), p=0.8, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2, 6, 13256072, 9, 3],"float32"), p=0.8, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2, 6, 7, 17043522, 3],"float32"), p=0.8, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2, 6, 7, 9, 5681174],"float32"), p=0.8, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([3355444, 80, 8, 2],"float16"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 134217728, 8, 2],"float16"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 80, 13421773, 2],"float16"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([2, 80, 8, 3355444],"float16"), 0.5, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([3355444, 80, 8, 2],"float16"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2, 134217728, 8, 2],"float16"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2, 80, 13421773, 2],"float16"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2, 80, 8, 3355444],"float16"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([466034, 9216],"float32"), p=0.5, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([214748365, 20],"float32"), p=0.1, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([3, 1431655765],"float32"), p=0.1, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([214748365, 20],"float32"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([3, 1431655765],"float32"), p=0.5, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([4194304, 32, 32],"float32"), p=0.35, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([3, 44739243, 32],"float32"), p=0.35, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([3, 32, 44739243],"float32"), p=0.35, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([337125, 98, 130],"float32"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([31, 1065749, 130],"float32"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([31, 98, 1413749],"float32"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([168563, 98, 130],"float64"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([31, 532875, 130],"float64"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([31, 98, 706875],"float64"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([86273, 98, 508],"float32"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([31, 272731, 508],"float32"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([43137, 98, 508],"float64"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([31, 136366, 508],"float64"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([11184811, 12, 16],"float64"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4, 33554433, 16],"float64"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4, 12, 44739243],"float64"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([22369622, 12, 8],"float64"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([4, 67108865, 8],"float64"), 0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(Tensor([1048576, 32, 128],"float16"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([4, 8388608, 128],"float16"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([4, 32, 33554432],"float16"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([524288, 32, 256],"float16"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([4, 4194304, 256],"float16"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([8388608, 512],"float32"), mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([512, 8388608],"float32"), mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([15339169, 140, 2],"float32"), p=0.1, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([58, 37025581, 2],"float32"), p=0.1, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([58, 140, 528937],"float32"), p=0.1, axis=None, training=False, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([15339169, 140, 2],"float32"), p=0.1, axis=None, training=True, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([58, 37025581, 2],"float32"), p=0.1, axis=None, training=True, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([58, 140, 528937],"float32"), p=0.1, axis=None, training=True, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([109566, 2, 140, 140],"float32"), p=0.1, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([58, 3779, 140, 140],"float32"), p=0.1, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([58, 2, 264469, 140],"float32"), p=0.1, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([58, 2, 140, 264469],"float32"), p=0.1, training=False, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([109566, 2, 140, 140],"float32"), p=0.1, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([58, 3779, 140, 140],"float32"), p=0.1, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([58, 2, 264469, 140],"float32"), p=0.1, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([58, 2, 140, 264469],"float32"), p=0.1, training=True, mode="downscale_in_infer", )
paddle.nn.functional.dropout(Tensor([4194304, 1, 1024],"float32"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([8, 524288, 1024],"float32"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([8, 1, 536870912],"float32"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([32768, 128, 1024],"float16"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([8, 524288, 1024],"float16"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([8, 128, 4194304],"float16"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([32768, 128, 1024],"float32"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([8, 128, 4194304],"float32"), p=0.0, axis=None, training=True, mode="upscale_in_train", name=None, )
paddle.nn.functional.dropout(Tensor([2097152, 2048, 1, 1],"float32"), p=0.5, axis=None, training=True, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([8, 536870912, 1, 1],"float32"), p=0.5, axis=None, training=True, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([8, 2048, 262144, 1],"float32"), p=0.5, axis=None, training=True, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(Tensor([8, 2048, 1, 262144],"float32"), p=0.5, axis=None, training=True, mode="downscale_in_infer", name=None, )
paddle.nn.functional.dropout(x=Tensor([32768, 128, 32, 32],"float16"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([1, 4194304, 32, 32],"float16"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([1, 128, 1048576, 32],"float16"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([1, 128, 32, 1048576],"float16"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([32768, 128, 32, 32],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([1, 4194304, 32, 32],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([1, 128, 1048576, 32],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([1, 128, 32, 1048576],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([262144, 16, 32, 32],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([1, 16, 8388608, 32],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([1, 16, 32, 8388608],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([32768, 8, 128, 128],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([1, 262144, 128, 128],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([1, 8, 4194304, 128],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([1, 8, 128, 4194304],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([524288, 8, 32, 32],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([1, 8, 16777216, 32],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([1, 8, 32, 16777216],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([16, 262144, 32, 32],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([16, 128, 65536, 32],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.nn.functional.dropout(x=Tensor([16, 128, 32, 65536],"float32"), p=0.0, training=True, mode="upscale_in_train", )
paddle.bitwise_left_shift(Tensor([1],"int16"), Tensor([4294967295],"int16"), False, )
paddle.bitwise_left_shift(Tensor([1],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int32"), Tensor([300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 10737419],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 10737419],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 10737419],"int64"), Tensor([300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int16"), Tensor([300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int32"), Tensor([300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"int8"), Tensor([300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 21474837],"uint8"), Tensor([300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int16"), Tensor([4294967295],"int16"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int32"), Tensor([4294967295],"int32"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int64"), Tensor([2147483649],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"int8"), Tensor([4294967295],"int8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([200, 300],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([2147483649],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([214748365, 4, 5],"int32"), Tensor([214748365, 4, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([214748365, 4, 5],"int32"), Tensor([214748365, 4, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([214748365, 4, 5],"int32"), Tensor([3, 4, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([214748365, 4, 5],"int32"), Tensor([3, 4, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 286331153, 5],"int32"), Tensor([3, 286331153, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 286331153, 5],"int32"), Tensor([3, 286331153, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 286331153, 5],"int32"), Tensor([3, 4, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 286331153, 5],"int32"), Tensor([3, 4, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 4, 357913942],"int32"), Tensor([3, 4, 357913942],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 4, 357913942],"int32"), Tensor([3, 4, 357913942],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 4, 357913942],"int32"), Tensor([3, 4, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 4, 357913942],"int32"), Tensor([3, 4, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([214748365, 4, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([214748365, 4, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([3, 286331153, 5],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([3, 286331153, 5],"int32"), True, )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([3, 4, 357913942],"int32"), False, )
paddle.bitwise_left_shift(Tensor([3, 4, 5],"int32"), Tensor([3, 4, 357913942],"int32"), True, )
paddle.bitwise_left_shift(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_left_shift(Tensor([300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.bitwise_left_shift(Tensor([300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.bitwise_left_shift(Tensor([300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_left_shift(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"int16"), Tensor([1],"int16"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"int16"), Tensor([4294967295],"int16"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"uint8"), Tensor([1],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([4294967295],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.bitwise_left_shift(Tensor([7158279, 300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([7158279, 300],"int64"), Tensor([300],"int64"), False, )
paddle.bitwise_left_shift(Tensor([7158279, 300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([1],"int8"), Tensor([4294967295],"int8"), False, )
paddle.bitwise_right_shift(Tensor([1],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int16"), Tensor([300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int32"), Tensor([300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"int8"), Tensor([300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([14316558, 300],"uint8"), Tensor([300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 10737419],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 10737419],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 10737419],"int64"), Tensor([300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int16"), Tensor([300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int32"), Tensor([300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"int8"), Tensor([300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 21474837],"uint8"), Tensor([300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([4294967295],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([4294967295],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([2147483649],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([4294967295],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([2147483649],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([300],"int16"), Tensor([14316558, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([300],"int16"), Tensor([200, 21474837],"int16"), False, )
paddle.bitwise_right_shift(Tensor([300],"int32"), Tensor([14316558, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([300],"int32"), Tensor([200, 21474837],"int32"), False, )
paddle.bitwise_right_shift(Tensor([300],"int64"), Tensor([200, 10737419],"int64"), False, )
paddle.bitwise_right_shift(Tensor([300],"int64"), Tensor([7158279, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([300],"int8"), Tensor([14316558, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([300],"int8"), Tensor([200, 21474837],"int8"), False, )
paddle.bitwise_right_shift(Tensor([300],"uint8"), Tensor([14316558, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([300],"uint8"), Tensor([200, 21474837],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"int8"), Tensor([1],"int8"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"int8"), Tensor([4294967295],"int8"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"uint8"), Tensor([1],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"uint8"), Tensor([200, 300],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([4294967295],"uint8"), Tensor([4294967295],"uint8"), False, )
paddle.bitwise_right_shift(Tensor([7158279, 300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([7158279, 300],"int64"), Tensor([300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([7158279, 300],"int64"), Tensor([7158279, 300],"int64"), False, )
