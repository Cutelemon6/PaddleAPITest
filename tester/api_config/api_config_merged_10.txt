paddle.cast(Tensor([4],"bool"), type(numpy.bool), )
paddle.cast(Tensor([4],"float16"), type(numpy.bool), )
paddle.cast(Tensor([4],"float32"), type(numpy.bool), )
paddle.cast(Tensor([4],"float64"), type(numpy.bool), )
paddle.cast(Tensor([4],"int32"), type(numpy.bool), )
paddle.cast(Tensor([4],"int64"), type(numpy.bool), )
paddle.chunk(Tensor([4, 6, 6],"int32"), chunks=3, axis=Tensor([1],"int32"), )
paddle.chunk(x=Tensor([3, 3],"float16"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(x=Tensor([3, 3],"float32"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(x=Tensor([3, 3],"float64"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(x=Tensor([3, 3],"int32"), chunks=3, axis=Tensor([1],"int64"), )
paddle.chunk(x=Tensor([3, 3],"int64"), chunks=3, axis=Tensor([1],"int64"), )
paddle.full_like(x=Tensor([2],"float64"), fill_value=False, dtype=type(numpy.bool), )
paddle.full_like(x=Tensor([2],"float64"), fill_value=True, dtype=type(numpy.bool), )
paddle.ones(list[Tensor([],"int32"),Tensor([],"int32"),Tensor([],"int32"),], )
paddle.ones(shape=list[14,Tensor([],"int64"),], )
paddle.ones(shape=Tensor([1],"int32"), )
paddle.ones(shape=Tensor([1],"int32"), dtype=type(numpy.int64), )
paddle.ones(shape=Tensor([2],"int32"), )
paddle.ones(shape=Tensor([2],"int32"), dtype="int32", )
paddle.ones(Tensor([],"int64"), dtype=type(bool), )
paddle.ones(tuple(Tensor([],"int64"),Tensor([],"int64"),), dtype="bool", )
paddle.sign(Tensor([1, 4],"float32"), )