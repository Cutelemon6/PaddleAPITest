paddle.Tensor.cumprod(Tensor([10],"float64"), -1, )
paddle.Tensor.cumprod(Tensor([3],"float32"), -1, )
paddle.Tensor.cumprod(Tensor([3],"float64"), -1, )
paddle.Tensor.divide(Tensor([1, 1200, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 14, 14, 384],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 14, 14, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 14, 15, 384],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 14, 15, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 14, 16, 384],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 14, 16, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 14, 17, 384],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 14, 17, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 14, 18, 384],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 14, 18, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 14, 19, 384],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 14, 19, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 15, 14, 384],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 15, 14, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 16, 14, 384],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 16, 14, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 18, 14, 384],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 18, 14, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 28, 192],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 28, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 29, 192],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 29, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 30, 192],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 30, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 32, 192],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 32, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 33, 192],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 33, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 34, 192],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 34, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 36, 192],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 36, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 38, 192],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 28, 38, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 29, 28, 192],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 29, 28, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 30, 28, 192],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 30, 28, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 31, 28, 192],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 31, 28, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 32, 28, 192],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 32, 28, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 35, 28, 192],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 35, 28, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 56, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 56, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 58, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 58, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 59, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 59, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 60, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 60, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 64, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 64, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 65, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 65, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 67, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 67, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 68, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 68, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 71, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 71, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 75, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 56, 75, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 57, 56, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 57, 56, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 59, 56, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 59, 56, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 60, 56, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 60, 56, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 61, 56, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 61, 56, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 62, 56, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 62, 56, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 64, 56, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 64, 56, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 7, 10, 768],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 7, 10, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 7, 7, 768],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 7, 7, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 7, 8, 768],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 7, 8, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 7, 9, 768],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 7, 9, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 70, 56, 96],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 70, 56, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 8, 7, 768],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 8, 7, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 9, 7, 768],"float16"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 16, 9, 7, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 1728, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 19200, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 27648, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 300, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 432, 1536],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 4800, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1, 6912, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1024, 1024],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([112, 197, 768],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([112, 197, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([12, 196, 512],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([12, 3136, 128],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([12, 49, 1024],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([12, 784, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 1024, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 128, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 128, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 192, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 256, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 256, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 256, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 32, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 384, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 512, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 512, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 64, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([124, 768, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 1024, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 128, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 128, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 128, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 160, 16, 16],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 192, 28, 28],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 192, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 196, 256],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 196, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 196, 320],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 196, 320],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 196, 384],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 196, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 196, 512],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 197, 192],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 197, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 197, 768],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 197, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 256, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 256, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 256, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 256, 8, 8],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 3136, 128],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 3136, 64],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 3136, 64],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 3136, 96],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 3136, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 32, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 384, 14, 14],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 384, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 49, 1024],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 49, 512],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 49, 512],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 49, 768],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 49, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 512, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 512, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 64, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 768, 7, 7],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 768, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 784, 128],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 784, 128],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 784, 192],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 784, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 784, 256],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 80, 32, 32],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 96, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 96, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 96, 56, 56],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([128, 96, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 960, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([128, 960, 8, 8],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([14, 1569, 768],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([14, 1569, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([1408, 1408],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([144, 196, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([144, 3136, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([144, 49, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([144, 784, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 1024, 12, 12],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 128, 96, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 1536, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 192, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 196, 512],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 256, 48, 48],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 3136, 128],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 384, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 49, 1024],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 512, 24, 24],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 768, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([16, 784, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([192, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 1024, 160],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 1024, 320],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 1024, 512],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 16384, 128],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 16384, 32],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 16384, 64],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 2352, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 256, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 256, 512],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 37632, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 4096, 128],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 4096, 320],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 4096, 64],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 588, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 65536, 64],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2, 9408, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2730, 1024],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([2744, 8, 768],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([2744, 8, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 1024, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 128, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 192, 24, 24],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 192, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 256, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 384, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 512, 12, 12],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 512, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 768, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 96, 48, 48],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 96, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([32, 960, 12, 12],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 1024, 256],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([4, 1024, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 128, 16, 80],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 128, 32, 32],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([4, 128, 32, 32],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 1280, 128],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 144, 1024],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 144, 1536],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 16384, 64],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([4, 16384, 64],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 192, 16, 16],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([4, 192, 16, 16],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 196, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 2304, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 2304, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 256, 8, 80],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 3136, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 320, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 4096, 160],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([4, 4096, 160],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 49, 1536],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 576, 512],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 576, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 640, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 65536, 32],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([4, 65536, 32],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 784, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 9216, 128],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([4, 9216, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([42],"float32"), Tensor([42],"float32"), )
paddle.Tensor.divide(Tensor([512, 100, 128],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([512, 100, 128],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([512, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([512, 200, 64],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([512, 200, 64],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([512, 50, 256],"float16"), Tensor([],"float16"), )
paddle.Tensor.divide(Tensor([512, 50, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 1152, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 144, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 1536, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 192, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 196, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 288, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 3136, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 384, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 49, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 576, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 768, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([60, 784, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([6144, 1408],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 1152, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 144, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 1536, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 160, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 192, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 192, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 196, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 196, 512],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 256, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 288, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 3136, 128],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 3136, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 384, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 384, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 49, 1024],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 49, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 576, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 768, 14, 14],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 768, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 784, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 784, 256],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 80, 28, 28],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 96, 56, 56],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([64, 960, 7, 7],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([8, 1536, 12, 12],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([8, 192, 96, 96],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([8, 196, 768],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([8, 3136, 192],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([8, 384, 48, 48],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([8, 49, 1536],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([8, 768, 24, 24],"float32"), Tensor([],"float32"), )
paddle.Tensor.divide(Tensor([8, 784, 384],"float32"), Tensor([],"float32"), )
paddle.Tensor.equal_all(Tensor([8, 3],"int64"), Tensor([8, 3],"int64"), )
paddle.Tensor.equal_all(Tensor([8],"int64"), Tensor([8],"int64"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 3, 5, 4],"float64"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 3, 5],"float64"), )
paddle.Tensor.erfinv(x=Tensor([4, 2, 3],"float64"), )
paddle.Tensor.erfinv(x=Tensor([4, 2],"float64"), )
paddle.Tensor.erfinv(x=Tensor([4],"float32"), )
paddle.Tensor.erfinv(x=Tensor([4],"float64"), )
paddle.Tensor.exp(Tensor([10, 20, 1],"float32"), )
paddle.Tensor.exp(Tensor([10, 20],"float32"), )
paddle.Tensor.exp(Tensor([1000000, 4],"float64"), )
paddle.Tensor.exp(Tensor([17],"float64"), )
paddle.Tensor.exp(Tensor([1],"float32"), )
paddle.Tensor.exp(Tensor([1],"float32"), name="Cauchy_prob", )
paddle.Tensor.exp(Tensor([1],"float64"), name="Cauchy_prob", )
paddle.Tensor.exp(Tensor([2, 2],"float64"), )
paddle.Tensor.exp(Tensor([2, 3, 2],"float64"), )
paddle.Tensor.exp(Tensor([2, 3, 3],"float64"), )
paddle.Tensor.exp(Tensor([2, 3],"float32"), )
paddle.Tensor.exp(Tensor([2, 3],"float64"), )
paddle.Tensor.exp(Tensor([2, 4],"float64"), )
paddle.Tensor.exp(Tensor([2800],"float32"), )
paddle.Tensor.exp(Tensor([2],"float64"), )
paddle.Tensor.exp(Tensor([3],"float32"), )
paddle.Tensor.exp(Tensor([3],"float32"), name="Cauchy_prob", )
paddle.Tensor.exp(Tensor([3],"float64"), )
paddle.Tensor.exp(Tensor([40],"float64"), )
paddle.Tensor.exp(Tensor([42],"float32"), )
paddle.Tensor.exp(Tensor([4],"float32"), )
paddle.Tensor.exp(Tensor([4],"float64"), )
paddle.Tensor.exp(Tensor([5, 10, 8],"float32"), )
paddle.Tensor.exp(Tensor([5, 10],"float64"), )
paddle.Tensor.exp(Tensor([64, 20],"float32"), )
paddle.Tensor.exp(Tensor([],"float32"), )
paddle.Tensor.exp(Tensor([],"float32"), name="Bernoulli_prob", )
paddle.Tensor.exp(Tensor([],"float32"), name="Cauchy_prob", )
paddle.Tensor.exp(Tensor([],"float64"), name="Cauchy_prob", )
