paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 2],"int32"), Tensor([2, 2, 3],"int32"), offset=0, dim1=1, dim2=2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 3, 2],"int64"), Tensor([2, 2, 3],"int64"), offset=0, dim1=1, dim2=2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 4],"int32"), Tensor([4, 2],"int32"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 4],"int64"), Tensor([4, 2],"int64"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 7],"int32"), Tensor([2, 4],"int32"), 0, 1, 2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 7],"int64"), Tensor([2, 4],"int64"), 0, 1, 2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int32"), Tensor([1],"int32"), -2, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int32"), Tensor([2],"int32"), -1, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int32"), Tensor([2],"int32"), 1, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int32"), Tensor([3],"int32"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int64"), Tensor([1],"int64"), -2, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int64"), Tensor([2],"int64"), -1, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int64"), Tensor([2],"int64"), 1, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 3],"int64"), Tensor([3],"int64"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"int32"), Tensor([2],"int32"), offset=1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"int32"), Tensor([3],"int32"), offset=-1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"int32"), Tensor([3],"int32"), offset=0, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"int64"), Tensor([2],"int64"), offset=1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"int64"), Tensor([3],"int64"), offset=-1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 3],"int64"), Tensor([3],"int64"), offset=0, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([5, 3],"int32"), Tensor([3],"int32"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([5, 3],"int64"), Tensor([3],"int64"), 0, 0, 1, )
