paddle.all(Tensor([],"bool"), axis=list[], )
paddle.all(Tensor([],"bool"), axis=None, )
paddle.all(Tensor([1, 0, 2],"bool"), axis=None, keepdim=False, )
paddle.all(Tensor([1, 0, 2],"bool"), axis=None, keepdim=True, )
paddle.all(Tensor([1, 0, 2],"bool"), axis=tuple(), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"bool"), axis=tuple(), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"bool"), axis=tuple(0,1,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"bool"), axis=tuple(0,1,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"bool"), axis=tuple(0,2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"bool"), axis=tuple(0,2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"bool"), axis=tuple(1,2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"bool"), axis=tuple(-1,-2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"bool"), axis=tuple(1,2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"bool"), axis=tuple(-1,-2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"complex128"), axis=None, keepdim=False, )
paddle.all(Tensor([1, 0, 2],"complex128"), axis=None, keepdim=True, )
paddle.all(Tensor([1, 0, 2],"complex128"), axis=tuple(), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"complex128"), axis=tuple(), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"complex128"), axis=tuple(0,1,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"complex128"), axis=tuple(0,1,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"complex128"), axis=tuple(0,2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"complex128"), axis=tuple(0,2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"complex128"), axis=tuple(1,2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"complex128"), axis=tuple(-1,-2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"complex128"), axis=tuple(1,2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"complex128"), axis=tuple(-1,-2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"complex64"), axis=None, keepdim=False, )
paddle.all(Tensor([1, 0, 2],"complex64"), axis=None, keepdim=True, )
paddle.all(Tensor([1, 0, 2],"complex64"), axis=tuple(), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"complex64"), axis=tuple(), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"complex64"), axis=tuple(0,1,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"complex64"), axis=tuple(0,1,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"complex64"), axis=tuple(0,2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"complex64"), axis=tuple(0,2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"complex64"), axis=tuple(1,2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"complex64"), axis=tuple(-1,-2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"complex64"), axis=tuple(1,2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"complex64"), axis=tuple(-1,-2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"float32"), axis=None, keepdim=False, )
paddle.all(Tensor([1, 0, 2],"float32"), axis=None, keepdim=True, )
paddle.all(Tensor([1, 0, 2],"float32"), axis=tuple(), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"float32"), axis=tuple(), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"float32"), axis=tuple(0,1,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"float32"), axis=tuple(0,1,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"float32"), axis=tuple(0,2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"float32"), axis=tuple(0,2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"float32"), axis=tuple(1,2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"float32"), axis=tuple(-1,-2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"float32"), axis=tuple(-1,-2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"float64"), axis=None, keepdim=False, )
paddle.all(Tensor([1, 0, 2],"float64"), axis=None, keepdim=True, )
paddle.all(Tensor([1, 0, 2],"float64"), axis=tuple(), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"float64"), axis=tuple(), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"float64"), axis=tuple(0,1,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"float64"), axis=tuple(0,2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"float64"), axis=tuple(0,2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"float64"), axis=tuple(1,2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"float64"), axis=tuple(-1,-2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"float64"), axis=tuple(1,2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"float64"), axis=tuple(-1,-2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"int32"), axis=None, keepdim=False, )
paddle.all(Tensor([1, 0, 2],"int32"), axis=None, keepdim=True, )
paddle.all(Tensor([1, 0, 2],"int32"), axis=tuple(), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"int32"), axis=tuple(), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"int32"), axis=tuple(0,1,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"int32"), axis=tuple(0,1,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"int32"), axis=tuple(0,2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"int32"), axis=tuple(0,2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"int32"), axis=tuple(1,2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"int32"), axis=tuple(-1,-2,), keepdim=False, )
paddle.all(Tensor([1, 0, 2],"int32"), axis=tuple(1,2,), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"int32"), axis=tuple(-1,-2,), keepdim=True, )
paddle.all(Tensor([3, 5],"bool"), axis=None, )
paddle.all(Tensor([3, 5],"bool"), keepdim=True, )
paddle.all(Tensor([5, 6, 10],"bool"), None, False, None, )
paddle.all(Tensor([5, 6, 10],"float64"), None, False, None, )
paddle.all(Tensor([5, 6, 10],"int64"), None, False, None, )
paddle.any(Tensor([],"bool"), axis=list[], )
paddle.any(Tensor([],"bool"), axis=None, )
paddle.any(Tensor([1, 0, 2],"bool"), axis=None, keepdim=False, )
paddle.any(Tensor([1, 0, 2],"bool"), axis=None, keepdim=True, )
paddle.any(Tensor([1, 0, 2],"bool"), axis=tuple(), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"bool"), axis=tuple(), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"bool"), axis=tuple(0,1,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"bool"), axis=tuple(0,1,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"bool"), axis=tuple(0,2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"bool"), axis=tuple(0,2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"bool"), axis=tuple(1,2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"bool"), axis=tuple(-1,-2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"bool"), axis=tuple(1,2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"bool"), axis=tuple(-1,-2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"complex128"), axis=None, keepdim=False, )
paddle.any(Tensor([1, 0, 2],"complex128"), axis=None, keepdim=True, )
paddle.any(Tensor([1, 0, 2],"complex128"), axis=tuple(), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"complex128"), axis=tuple(), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"complex128"), axis=tuple(0,1,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"complex128"), axis=tuple(0,1,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"complex128"), axis=tuple(0,2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"complex128"), axis=tuple(0,2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"complex128"), axis=tuple(1,2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"complex128"), axis=tuple(-1,-2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"complex128"), axis=tuple(1,2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"complex128"), axis=tuple(-1,-2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"complex64"), axis=None, keepdim=False, )
paddle.any(Tensor([1, 0, 2],"complex64"), axis=None, keepdim=True, )
paddle.any(Tensor([1, 0, 2],"complex64"), axis=tuple(), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"complex64"), axis=tuple(), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"complex64"), axis=tuple(0,1,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"complex64"), axis=tuple(0,1,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"complex64"), axis=tuple(0,2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"complex64"), axis=tuple(0,2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"complex64"), axis=tuple(1,2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"complex64"), axis=tuple(-1,-2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"complex64"), axis=tuple(1,2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"complex64"), axis=tuple(-1,-2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"float32"), axis=None, keepdim=False, )
paddle.any(Tensor([1, 0, 2],"float32"), axis=None, keepdim=True, )
paddle.any(Tensor([1, 0, 2],"float32"), axis=tuple(), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"float32"), axis=tuple(), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"float32"), axis=tuple(0,1,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"float32"), axis=tuple(0,1,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"float32"), axis=tuple(0,2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"float32"), axis=tuple(0,2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"float32"), axis=tuple(1,2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"float32"), axis=tuple(-1,-2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"float32"), axis=tuple(-1,-2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"float64"), axis=None, keepdim=False, )
paddle.any(Tensor([1, 0, 2],"float64"), axis=None, keepdim=True, )
paddle.any(Tensor([1, 0, 2],"float64"), axis=tuple(), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"float64"), axis=tuple(), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"float64"), axis=tuple(0,1,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"float64"), axis=tuple(0,2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"float64"), axis=tuple(0,2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"float64"), axis=tuple(1,2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"float64"), axis=tuple(-1,-2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"float64"), axis=tuple(1,2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"float64"), axis=tuple(-1,-2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"int32"), axis=None, keepdim=False, )
paddle.any(Tensor([1, 0, 2],"int32"), axis=None, keepdim=True, )
paddle.any(Tensor([1, 0, 2],"int32"), axis=tuple(), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"int32"), axis=tuple(), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"int32"), axis=tuple(0,1,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"int32"), axis=tuple(0,1,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"int32"), axis=tuple(0,2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"int32"), axis=tuple(0,2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"int32"), axis=tuple(1,2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"int32"), axis=tuple(-1,-2,), keepdim=False, )
paddle.any(Tensor([1, 0, 2],"int32"), axis=tuple(1,2,), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"int32"), axis=tuple(-1,-2,), keepdim=True, )
paddle.any(Tensor([2, 2],"bool"), list[0,], )
paddle.any(Tensor([3, 5],"bool"), axis=None, )
paddle.any(Tensor([3, 5],"bool"), keepdim=True, )
paddle.any(Tensor([5, 6, 10],"bool"), None, False, None, )
paddle.any(Tensor([5, 6, 10],"float64"), None, False, None, )
paddle.any(Tensor([5, 6, 10],"int64"), None, False, None, )
paddle.bincount(Tensor([20],"int64"), minlength=Tensor([1],"int32"), )
paddle.chunk(Tensor([4, 6, 6],"int32"), chunks=3, axis=Tensor([1],"int32"), )
paddle.cumprod(Tensor([10, 20, 1],"float32"), -1, dtype="float32", )
paddle.cumsum(Tensor([],"float32"), )
paddle.cumsum(Tensor([10, 12],"float16"), dtype="float16", )
paddle.cumsum(Tensor([10, 12],"float32"), dtype="float32", )
paddle.cumsum(Tensor([10, 20, 1],"float32"), dtype="float32", )
paddle.cumsum(Tensor([2],"int32"), )
paddle.cumsum(Tensor([200],"float32"), dtype="float32", )
paddle.cumsum(Tensor([3, 4],"int64"), )
paddle.cumsum(Tensor([3, 4],"int64"), dtype="float64", )
paddle.cumsum(Tensor([3, 4],"int64"), dtype=type(numpy.int32), )
paddle.cumsum(Tensor([5, 6],"float64"), axis=Tensor([1],"int32"), )
paddle.cumsum(Tensor([5],"int32"), )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=Tensor([],"float32"), axis=0, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=Tensor([],"float32"), axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float64"), x=None, dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([3, 3, 4],"float32"), x=None, dx=Tensor([],"int64"), axis=1, )
paddle.cumulative_trapezoid(y=Tensor([3, 3, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
paddle.dot(Tensor([0, 0],"float32"), Tensor([0, 0],"float32"), )
paddle.dot(Tensor([1, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.dot(Tensor([1, 10],"float32"), Tensor([1, 10],"float32"), )
paddle.dot(Tensor([1, 2],"float32"), Tensor([1, 2],"float32"), )
paddle.dot(Tensor([2, 2],"float32"), Tensor([2, 2],"float32"), )
paddle.dsplit(Tensor([4, 2, 6],"bool"), 3, )
paddle.dsplit(Tensor([4, 2, 6],"float16"), 3, )
paddle.dsplit(Tensor([4, 2, 6],"float32"), 3, )
paddle.dsplit(Tensor([4, 2, 6],"float64"), 3, )
paddle.dsplit(Tensor([4, 2, 6],"int32"), 3, )
paddle.dsplit(Tensor([4, 2, 6],"int64"), 3, )
paddle.dsplit(Tensor([4, 2, 6],"uint8"), 3, )
paddle.dsplit(Tensor([4, 3, 6],"int64"), 2, )
paddle.dsplit(Tensor([4, 3, 6],"int64"), 3, )
paddle.expm1(Tensor([8, 16, 32],"complex128"), )
paddle.expm1(Tensor([8, 16, 32],"complex64"), )
paddle.eye(1, dtype="float32", )
paddle.eye(1, dtype="float64", )
paddle.eye(10, dtype="float32", )
paddle.eye(10, dtype="int64", )
paddle.eye(10, num_columns=7, dtype="float64", )
paddle.eye(2, dtype="float32", )
paddle.eye(2, dtype=Dtype(float32), )
paddle.eye(2, dtype=Dtype(float64), )
paddle.flip(Tensor([2, 3],"float32"), 1, )
paddle.frac(Tensor([2, 3],"int32"), )
paddle.frac(Tensor([2, 3],"int64"), )
paddle.full(list[], 0, "float32", )
paddle.full(list[], 0, "int32", )
paddle.full(list[], 0, "int64", )
paddle.full(list[], 0, dtype="int32", )
paddle.full(list[], 0, dtype="int64", )
paddle.full(list[], 0.0, "float32", )
paddle.full(list[], 0.0, Dtype(float32), )
paddle.full(list[], 0.0, Dtype(float64), )
paddle.full(list[], 0.0, dtype="float32", )
paddle.full(list[], 0.2001953125, Dtype(float16), )
paddle.full(list[], 0.25, dtype="float32", )
paddle.full(list[], 0.2732364237308502, Dtype(float32), )
paddle.full(list[], 0.46430984139442444, Dtype(float32), )
paddle.full(list[], -0.7255859375, Dtype(float16), )
paddle.full(list[], 1, "float32", )
paddle.full(list[], 1, "int32", )
paddle.full(list[], -1, "int32", )
paddle.full(list[], 1, "int64", )
paddle.full(list[], 1, dtype="int32", )
paddle.full(list[], -1, dtype="int32", )
paddle.full(list[], 1.0, "float32", )
paddle.full(list[], -1.0, "float32", )
paddle.full(list[], 1.0, Dtype(float32), )
paddle.full(list[], 1.0, Dtype(float64), )
paddle.full(list[], 1.0, dtype="float32", )
paddle.full(list[], 1.1447298858494002, dtype=Dtype(float32), )
paddle.full(list[], 1.1447298858494002, dtype=Dtype(float64), )
paddle.full(list[], 1000, "int64", )
paddle.full(list[], 11, "float32", )
paddle.full(list[], 11, dtype="float32", )
paddle.full(list[], 12, "int64", )
paddle.full(list[], 12, dtype="int32", )
paddle.full(list[], 16, "int64", )
paddle.full(list[], 2, "float32", )
paddle.full(list[], 2, "int32", )
paddle.full(list[], 2, "int64", )
paddle.full(list[], 2, dtype="float32", )
paddle.full(list[], 2, dtype="int32", )
paddle.full(list[], 2, dtype="int64", )
paddle.full(list[], 2.5310242469692907, dtype=Dtype(float32), )
paddle.full(list[], 2.5310242469692907, dtype=Dtype(float64), )
paddle.full(list[], 20, "int64", )
paddle.full(list[], 3, "int32", )
paddle.full(list[], 3, "int64", )
paddle.full(list[], 3, dtype="int64", )
paddle.full(list[], 4, "float32", )
paddle.full(list[], 4, "int32", )
paddle.full(list[], 4, "int64", )
paddle.full(list[], 5, "int32", )
paddle.full(list[], 5, "int64", )
paddle.full(list[], 6, "int64", )
paddle.full(list[], 7, "int64", )
paddle.full(list[], 8, "int64", )
paddle.full(list[], 9, "int64", )
paddle.full(list[], True, dtype="bool", )
paddle.full(list[0,], 0, "int64", )
paddle.full(list[1,], 0, "float32", )
paddle.full(list[1,], 0, "int64", )
paddle.full(list[1,], 0, dtype="float64", )
paddle.full(list[1,], 0, dtype="int32", )
paddle.full(list[1,], 0.0, "float64", )
paddle.full(list[1,], 1, "float32", )
paddle.full(list[1,], 1, "int32", )
paddle.full(list[1,], -1, "int32", )
paddle.full(list[1,], 1, "int64", )
paddle.full(list[1,], 1, dtype="int32", )
paddle.full(list[1,], 1, dtype="int64", )
paddle.full(list[1,], 1.0, "float64", )
paddle.full(list[1,], 1.0, dtype="float32", )
paddle.full(list[1,], 1.1447298858494002, dtype=Dtype(float32), )
paddle.full(list[1,], 1.1447298858494002, dtype=Dtype(float64), )
paddle.full(list[1,], 1000, dtype="int64", )
paddle.full(list[1,], 2, "int64", )
paddle.full(list[1,], 2, Dtype(float32), )
paddle.full(list[1,], 2, dtype="int32", )
paddle.full(list[1,], 2, dtype="int64", )
paddle.full(list[1,], 2.0, "float64", )
paddle.full(list[1,], 2.5310242469692907, dtype=Dtype(float32), )
paddle.full(list[1,], 3, dtype="int32", )
paddle.full(list[1,], 3, dtype="int64", )
paddle.full(list[1,], 3.4, dtype="float32", )
paddle.full(list[1,], -3.4028234663852886e+38, "float64", )
paddle.full(list[1,], 4096, dtype="float32", )
paddle.full(list[1,], 5, dtype="int32", )
paddle.full(list[1,], 6, dtype="int32", )
paddle.full(list[1,], -65504, dtype="float64", )
paddle.full(list[1,], 9.99999993922529e-09, "float32", )
paddle.full(list[1,], fill_value=16, dtype="int64", )
paddle.full(list[1,], fill_value=4, dtype="int64", )
paddle.full(list[1,1,], 1, dtype="int64", )
paddle.full(list[10,], 1.0, "float32", )
paddle.full(list[10,], True, dtype="bool", )
paddle.full(list[10,10,], -1.0, dtype="float32", )
paddle.full(list[10,10,10,10,10,], True, dtype="bool", )
paddle.full(list[16,1024,1024,], 5.0, dtype="float32", )
paddle.full(list[16,513,513,19,], fill_value=2, dtype="float64", )
paddle.full(list[16,513,513,19,], fill_value=3, dtype="float64", )
paddle.full(list[16384,1024,], 30, dtype="int64", )
paddle.full(list[2,], 0.0, "float64", )
paddle.full(list[2,], 1, "int64", )
paddle.full(list[2,], 1.0, dtype="float32", )
paddle.full(list[2,], 1.1447298858494002, dtype=Dtype(float32), )
paddle.full(list[2,], 2, "float32", )
paddle.full(list[2,], 2.5310242469692907, dtype=Dtype(float32), )
paddle.full(list[2,2,], 0, dtype="float32", )
paddle.full(list[2,2,], 0, dtype="int32", )
paddle.full(list[2,2,], 1, dtype="float32", )
paddle.full(list[2,2,], 1.1447298858494002, dtype=Dtype(float32), )
paddle.full(list[2,2,], 2.5310242469692907, dtype=Dtype(float32), )
paddle.full(list[2,2,], True, dtype="bool", )
paddle.full(list[2,2,2,], 0.5, dtype="float32", )
paddle.full(list[2,2,2,], -0.5, dtype="float32", )
paddle.full(list[2,2,2,], 1, dtype="float32", )
paddle.full(list[2,2,2,], 1, dtype="int64", )
paddle.full(list[2,2,2,], 1.5, dtype="float32", )
paddle.full(list[2,2,2,], 2, dtype="float32", )
paddle.full(list[2,2,2,], 2, dtype="int64", )
paddle.full(list[2,2,2,], 2.5, dtype="float32", )
paddle.full(list[2,2,2,], 3, dtype="float32", )
paddle.full(list[2,2,2,], 3, dtype="int64", )
paddle.full(list[2,2,2,], 8, dtype="float32", )
paddle.full(list[2,2,2,], 8, dtype="int64", )
paddle.full(list[2,2,2,], 9, dtype="float32", )
paddle.full(list[2,2,2,], 9, dtype="int64", )
paddle.full(list[2,3,], 0.0, "float32", )
paddle.full(list[2,3,], 0.0, "float64", )
paddle.full(list[2,3,], 0.0, Dtype(float32), )
paddle.full(list[2,3,], 0.0, Dtype(float64), )
paddle.full(list[2,3,], 1.0, "float32", )
paddle.full(list[3,], 1, "int32", )
paddle.full(list[3,], 1.1447298858494002, dtype=Dtype(float32), )
paddle.full(list[3,], 2.5310242469692907, dtype=Dtype(float32), )
paddle.full(list[3,], 4, "float32", )
paddle.full(list[3,3,], 0, dtype="float32", )
paddle.full(list[3,3,], 0.0, "float64", )
paddle.full(list[3,3,], 1, "float32", )
paddle.full(list[32,3,1024,768,], 10.0, dtype="float32", )
paddle.full(list[32,3,1024,768,], 100.0, dtype="float32", )
paddle.full(list[4,], 1, dtype="int32", )
paddle.full(list[4,8,], fill_value=1, dtype="float32", )
paddle.full(shape=10, dtype="complex128", fill_value=complex(1.1,1.1), )
paddle.full(shape=10, dtype="complex128", fill_value=complex(nan,math.inf), )
paddle.full(shape=10, dtype="complex128", fill_value=complex(nan,-math.inf), )
paddle.full(shape=10, dtype="complex128", fill_value=complex(nan,nan), )
paddle.full(shape=10, dtype="complex64", fill_value=complex(1.1,1.1), )
paddle.full(shape=10, dtype="complex64", fill_value=complex(nan,math.inf), )
paddle.full(shape=10, dtype="complex64", fill_value=complex(nan,-math.inf), )
paddle.full(shape=10, dtype="complex64", fill_value=complex(nan,nan), )
paddle.full(shape=10, dtype="float32", fill_value=1.1, )
paddle.full(shape=10, fill_value=complex(1.1,1.1), )
paddle.full(shape=10, fill_value=True, )
paddle.full(shape=list[], dtype="bool", fill_value=0, )
paddle.full(shape=list[], dtype="bool", fill_value=False, )
paddle.full(shape=list[], dtype="bool", fill_value=True, )
paddle.full(shape=list[], dtype="float32", fill_value=0.001, )
paddle.full(shape=list[], dtype="float32", fill_value=0.1, )
paddle.full(shape=list[], dtype="float32", fill_value=0.2, )
paddle.full(shape=list[], dtype="float32", fill_value=0.3, )
paddle.full(shape=list[], dtype="float32", fill_value=0.5, )
paddle.full(shape=list[], dtype="float32", fill_value=0.8, )
paddle.full(shape=list[], dtype="float32", fill_value=1.0, )
paddle.full(shape=list[], dtype="float32", fill_value=10.0, )
paddle.full(shape=list[], dtype="float32", fill_value=2.0, )
paddle.full(shape=list[], dtype="float32", fill_value=-2.0, )
paddle.full(shape=list[], dtype="float32", fill_value=5.0, )
paddle.full(shape=list[], dtype="int32", fill_value=1, )
paddle.full(shape=list[], dtype="int32", fill_value=2, )
paddle.full(shape=list[], dtype="int32", fill_value=3, )
paddle.full(shape=list[], dtype="int32", fill_value=5, )
paddle.full(shape=list[], dtype="int32", fill_value=6, )
paddle.full(shape=list[], dtype="int32", fill_value=7, )
paddle.full(shape=list[], dtype="int64", fill_value=0, )
paddle.full(shape=list[], dtype="int64", fill_value=1, )
paddle.full(shape=list[], dtype="int64", fill_value=10, )
paddle.full(shape=list[], dtype="int64", fill_value=100, )
paddle.full(shape=list[], dtype="int64", fill_value=2, )
paddle.full(shape=list[], dtype="int64", fill_value=3, )
paddle.full(shape=list[], dtype="int64", fill_value=4, )
paddle.full(shape=list[], dtype="int64", fill_value=5, )
paddle.full(shape=list[], dtype="int64", fill_value=7, )
paddle.full(shape=list[], dtype=Dtype(bool), fill_value=False, )
paddle.full(shape=list[], dtype=Dtype(bool), fill_value=True, )
paddle.full(shape=list[], dtype=Dtype(float32), fill_value=0, )
paddle.full(shape=list[], dtype=Dtype(float32), fill_value=0.5, )
paddle.full(shape=list[], dtype=Dtype(float32), fill_value=1.0, )
paddle.full(shape=list[], dtype=Dtype(float32), fill_value=1e-06, )
paddle.full(shape=list[], dtype=Dtype(int64), fill_value=0, )
paddle.full(shape=list[], dtype=Dtype(int64), fill_value=1, )
paddle.full(shape=list[], dtype=Dtype(int64), fill_value=3, )
paddle.full(shape=list[], fill_value=0, dtype="float16", )
paddle.full(shape=list[], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=0.3, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=0.36, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=0.5, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=-1, dtype="int32", )
paddle.full(shape=list[], fill_value=1, dtype="int64", )
paddle.full(shape=list[], fill_value=1, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=1.0, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=1.1, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=1.2, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=10, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=10, dtype=Dtype(float64), )
paddle.full(shape=list[], fill_value=100, dtype="int64", )
paddle.full(shape=list[], fill_value=2, dtype="int32", )
paddle.full(shape=list[], fill_value=2, dtype="int64", )
paddle.full(shape=list[], fill_value=2.1, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=3, dtype="float32", )
paddle.full(shape=list[], fill_value=3, dtype="float64", )
paddle.full(shape=list[], fill_value=3, dtype="int32", )
paddle.full(shape=list[], fill_value=3, dtype="int64", )
paddle.full(shape=list[], fill_value=4, dtype="int32", )
paddle.full(shape=list[], fill_value=5, dtype=Dtype(float64), )
paddle.full(shape=list[], fill_value=9, dtype=Dtype(float64), )
paddle.full(shape=list[], fill_value=9.869604401089358, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=False, dtype="bool", )
paddle.full(shape=list[], fill_value=Tensor([1],"int64"), dtype="int64", )
paddle.full(shape=list[], fill_value=True, dtype="bool", )
paddle.full(shape=list[1,], dtype="int64", fill_value=0, )
paddle.full(shape=list[1,], dtype="int64", fill_value=1, )
paddle.full(shape=list[1,], dtype="int64", fill_value=10, )
paddle.full(shape=list[1,], dtype="int64", fill_value=100, )
paddle.full(shape=list[1,], dtype="int64", fill_value=2, )
paddle.full(shape=list[1,], dtype="int64", fill_value=4, )
paddle.full(shape=list[1,], dtype=Dtype(float32), fill_value=0.2, )
paddle.full(shape=list[1,], dtype=Dtype(int64), fill_value=0, )
paddle.full(shape=list[1,], dtype=VarType(float16), fill_value=1.0, )
paddle.full(shape=list[1,], dtype=VarType(float32), fill_value=0.2, )
paddle.full(shape=list[1,], dtype=VarType(float32), fill_value=1.0, )
paddle.full(shape=list[1,], dtype=VarType(float32), fill_value=5.0, )
paddle.full(shape=list[1,], dtype=VarType(float64), fill_value=0.2, )
paddle.full(shape=list[1,], fill_value=0, dtype="float32", )
paddle.full(shape=list[1,], fill_value=0, dtype="float64", )
paddle.full(shape=list[1,], fill_value=0, dtype="int32", )
paddle.full(shape=list[1,], fill_value=0, dtype="int64", )
paddle.full(shape=list[1,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[1,], fill_value=0.0, dtype="float32", )
paddle.full(shape=list[1,], fill_value=0.0, dtype="float64", )
paddle.full(shape=list[1,], fill_value=1, dtype="int32", )
paddle.full(shape=list[1,], fill_value=1, dtype="int64", )
paddle.full(shape=list[1,], fill_value=1.0, dtype="float32", )
paddle.full(shape=list[1,], fill_value=1.0, dtype="float64", )
paddle.full(shape=list[1,], fill_value=1.0, dtype=VarType(float32), )
paddle.full(shape=list[1,], fill_value=10, dtype="float32", )
paddle.full(shape=list[1,], fill_value=10, dtype="float64", )
paddle.full(shape=list[1,], fill_value=10, dtype="int32", )
paddle.full(shape=list[1,], fill_value=10, dtype="int64", )
paddle.full(shape=list[1,], fill_value=100, dtype="int32", )
paddle.full(shape=list[1,], fill_value=1000.0, dtype="float32", )
paddle.full(shape=list[1,], fill_value=1000.0, dtype="float64", )
paddle.full(shape=list[1,], fill_value=1e-06, dtype=Dtype(float32), )
paddle.full(shape=list[1,], fill_value=1e-10, dtype=Dtype(float32), )
paddle.full(shape=list[1,], fill_value=1e-12, dtype=Dtype(float32), )
paddle.full(shape=list[1,], fill_value=1e-12, dtype=VarType(float32), )
paddle.full(shape=list[1,], fill_value=2, dtype="float32", )
paddle.full(shape=list[1,], fill_value=2, dtype="int32", )
paddle.full(shape=list[1,], fill_value=2, dtype="int64", )
paddle.full(shape=list[1,], fill_value=20, dtype="int64", )
paddle.full(shape=list[1,], fill_value=3, dtype="int32", )
paddle.full(shape=list[1,], fill_value=5, dtype="int32", )
paddle.full(shape=list[1,], fill_value=False, dtype="bool", )
paddle.full(shape=list[1,1,], dtype="float32", fill_value=1.0, )
paddle.full(shape=list[1,2,], dtype="float32", fill_value=1, )
paddle.full(shape=list[1,2,], dtype="float32", fill_value=1.1, )
paddle.full(shape=list[1,2,], dtype="float32", fill_value=1.2, )
paddle.full(shape=list[1,2,], dtype="float32", fill_value=3, )
paddle.full(shape=list[1,2,], dtype=type(numpy.float32), fill_value=1.1, )
paddle.full(shape=list[1,2,], dtype=type(numpy.float32), fill_value=Tensor([1],"float32"), )
paddle.full(shape=list[1,2,], fill_value=1, dtype="int32", )
paddle.full(shape=list[1,2,], fill_value=9, dtype="float32", )
paddle.full(shape=list[1,2,3,], dtype="complex128", fill_value=complex(1.1,1.1), )
paddle.full(shape=list[1,2,3,], dtype="complex128", fill_value=complex(nan,math.inf), )
paddle.full(shape=list[1,2,3,], dtype="complex128", fill_value=complex(nan,-math.inf), )
paddle.full(shape=list[1,2,3,], dtype="complex128", fill_value=complex(nan,nan), )
paddle.full(shape=list[1,2,3,], dtype="complex64", fill_value=complex(1.1,1.1), )
paddle.full(shape=list[1,2,3,], dtype="complex64", fill_value=complex(nan,math.inf), )
paddle.full(shape=list[1,2,3,], dtype="complex64", fill_value=complex(nan,-math.inf), )
paddle.full(shape=list[1,2,3,], dtype="complex64", fill_value=complex(nan,nan), )
paddle.full(shape=list[1,3,], fill_value=5, dtype="float32", )
paddle.full(shape=list[1,3,], fill_value=6, dtype="float32", )
paddle.full(shape=list[1,3,5,5,], fill_value=0.5, dtype="float32", )
paddle.full(shape=list[1,3,8,8,], fill_value=0.5, dtype="float32", )
paddle.full(shape=list[1,32,], fill_value=0.0, dtype="float64", )
paddle.full(shape=list[1,4,], fill_value=5, dtype="float32", )
paddle.full(shape=list[1,4,], fill_value=6, dtype="float32", )
paddle.full(shape=list[1,512,64,], fill_value=0.5, dtype="float32", )
paddle.full(shape=list[10,], fill_value=0.25, dtype="float64", )
paddle.full(shape=list[10,20,], fill_value=0.0, dtype="float32", )
paddle.full(shape=list[11,16,], fill_value=-math.inf, dtype=Dtype(float32), )
paddle.full(shape=list[11,7,], fill_value=-math.inf, dtype=Dtype(float32), )
paddle.full(shape=list[128,256,], fill_value=3, dtype="float32", )
paddle.full(shape=list[2,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[2,], fill_value=1, dtype=Dtype(float32), )
paddle.full(shape=list[2,], fill_value=2, dtype="float32", )
paddle.full(shape=list[2,1,], fill_value=1, dtype="int64", )
paddle.full(shape=list[2,2,], fill_value=0, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[2,2,], fill_value=1, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=1, dtype=Dtype(float32), )
paddle.full(shape=list[2,2,], fill_value=2, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=3, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=4, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=5, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=6, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=7, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=8, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=9, dtype="float32", )
paddle.full(shape=list[2,2,2,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[2,2,2,], fill_value=1, dtype=Dtype(float32), )
paddle.full(shape=list[2,255,13,13,], fill_value=0.3, dtype="float32", )
paddle.full(shape=list[2,3,], dtype="int64", fill_value=1, )
paddle.full(shape=list[2,3,], dtype="int64", fill_value=2, )
paddle.full(shape=list[2,3,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[2,3,], fill_value=1, dtype=Dtype(float32), )
paddle.full(shape=list[2,4,], dtype="float32", fill_value=-2.0, )
paddle.full(shape=list[2,4,32,], fill_value=0, dtype=Dtype(float64), )
paddle.full(shape=list[2,4,32,], fill_value=0, dtype=VarType(float64), )
paddle.full(shape=list[2,4,8,], fill_value=0, dtype=Dtype(float64), )
paddle.full(shape=list[2,4,8,], fill_value=0, dtype=VarType(float64), )
paddle.full(shape=list[2,6,], fill_value=0.5, dtype="float32", )
paddle.full(shape=list[2,6,], fill_value=1.0, dtype="int32", )
paddle.full(shape=list[2,6,4,], fill_value=0.5, dtype="float32", )
paddle.full(shape=list[3,], fill_value=1, dtype="int64", )
paddle.full(shape=list[3,1,3,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[3,3,], fill_value="0.5", dtype="float32", )
paddle.full(shape=list[3,3,], fill_value=5, dtype="float32", )
paddle.full(shape=list[4,], fill_value=0, dtype=Dtype(float64), )
paddle.full(shape=list[4,], fill_value=1, dtype="int32", )
paddle.full(shape=list[4,], fill_value=9.869604401089358, dtype=Dtype(float64), )
paddle.full(shape=list[4,2,2,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[4,2,2,], fill_value=0, dtype=VarType(float32), )
paddle.full(shape=list[4,32,], fill_value=0.0, dtype="float64", )
paddle.full(shape=list[4,4,32,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[4,4,32,], fill_value=0, dtype=Dtype(float64), )
paddle.full(shape=list[4,4,32,], fill_value=0, dtype=VarType(float64), )
paddle.full(shape=list[4,4,8,], fill_value=0, dtype=Dtype(float64), )
paddle.full(shape=list[4,4,8,], fill_value=0, dtype=VarType(float64), )
paddle.full(shape=list[4,5,], dtype="float32", fill_value=10.0, )
paddle.full(shape=list[4,5,], fill_value=-math.inf, dtype=Dtype(float32), )
paddle.full(shape=list[4096,4096,], fill_value=3, dtype="float32", )
paddle.full(shape=list[5,], fill_value=8, dtype="int32", )
paddle.full(shape=list[5,10,], fill_value=5.0, dtype="float32", )
paddle.full(shape=list[5,3,], fill_value=0, dtype=Dtype(float64), )
paddle.full(shape=list[5,3,], fill_value=9.869604401089358, dtype=Dtype(float64), )
paddle.full(shape=list[6,1,], dtype="float32", fill_value=2, )
paddle.full(shape=list[6,1,], dtype="float32", fill_value=3, )
paddle.full(shape=list[6,1,3,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[6,4,], fill_value=-math.inf, dtype=Dtype(float32), )
paddle.full(shape=list[64,], fill_value=1.0, dtype="float32", )
paddle.full(shape=list[64,64,], fill_value=0.5, dtype="float32", )
paddle.full(shape=list[Tensor([],"int64"),4,], fill_value=False, dtype="bool", )
paddle.full(shape=list[Tensor([],"int64"),4,], fill_value=Tensor([1],"int64"), dtype=Dtype(int64), )
paddle.full(shape=list[Tensor([1],"int32"),Tensor([1],"int64"),Tensor([1],"int64"),], dtype="float32", fill_value=1.1, )
paddle.full(shape=Tensor([1],"int32"), dtype="float32", fill_value=1.1, )
paddle.full(shape=Tensor([2],"int32"), fill_value=3.8, )
paddle.full(shape=Tensor([2],"int32"), fill_value=Tensor([1],"float32"), )
paddle.full(shape=Tensor([2],"int32"), fill_value=Tensor([1],"int32"), )
paddle.full(shape=tuple(), fill_value=0.1, dtype="float32", )
paddle.full(shape=tuple(), fill_value=0.5, dtype=Dtype(float32), )
paddle.full(shape=tuple(), fill_value=0.7, dtype=Dtype(float32), )
paddle.full(shape=tuple(), fill_value=1.0, dtype="float32", )
paddle.full(shape=tuple(1,128,32,32,), fill_value=-math.inf, dtype=Dtype(float32), )
paddle.full(shape=tuple(1,3,), dtype="float32", fill_value=-2.0, )
paddle.full(shape=tuple(3,4,), dtype="float32", fill_value=-2.0, )
paddle.full(tuple(), 0.0, dtype="float64", )
paddle.full(tuple(), 0.1, dtype="float64", )
paddle.full(tuple(), 0.3, dtype="float64", )
paddle.full(tuple(), 0.6, dtype=Dtype(float32), )
paddle.full(tuple(), -0.6, dtype=Dtype(float32), )
paddle.full(tuple(), 0.6, dtype=Dtype(float64), )
paddle.full(tuple(), -0.6, dtype=Dtype(float64), )
paddle.full(tuple(), 1.0, dtype="float64", )
paddle.full(tuple(), 1.2, dtype="float64", )
paddle.full(tuple(), -1.2, dtype="float64", )
paddle.full(tuple(), 2.3, dtype="float64", )
paddle.full(tuple(), 5.7, dtype=Dtype(float32), )
paddle.full(tuple(), 5.7, dtype=Dtype(float64), )
paddle.full(tuple(0,0,), 1.0, dtype="float32", )
paddle.full(tuple(0,0,2,3,), 1.0, dtype="float32", )
paddle.full(tuple(0,6,), 1.0, dtype="float32", )
paddle.full(tuple(2,0,6,6,), 1.0, dtype="float32", )
paddle.full(tuple(2,3,0,0,), 1.0, dtype="float32", )
paddle.full(tuple(32,32,), fill_value=-math.inf, dtype=Dtype(float32), )
paddle.full(tuple(4,), 0, dtype="int64", )
paddle.full(tuple(4,), 1, dtype="int64", )
paddle.full(tuple(4,), 2, dtype="int64", )
paddle.full(tuple(4,), 3, dtype="int64", )
paddle.full(tuple(6,0,), 1.0, dtype="float32", )
paddle.full(tuple(8,4,), 0, dtype="float32", )
paddle.full(tuple(8,4,), 1, dtype="int64", )
paddle.full(tuple(8,4,), 2, dtype="int64", )
paddle.full_like(Tensor([1, 2],"float32"), dtype=type(numpy.float32), fill_value=1.1, )
paddle.full_like(Tensor([1500],"int64"), False, dtype="bool", )
paddle.full_like(Tensor([200],"int64"), False, dtype="bool", )
paddle.full_like(Tensor([219, 232],"float32"), 0.0, VarType(bfloat16), None, )
paddle.full_like(Tensor([219, 232],"int32"), 0.0, Dtype(int16), None, )
paddle.full_like(Tensor([219, 232],"int32"), 0.0, VarType(float32), None, )
paddle.full_like(Tensor([300],"int64"), False, dtype="bool", )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=5, weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=None, ranges=list[1.0,10.0,1.0,100.0,], density=False, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=None, ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=None, ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=None, ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=tuple(Tensor([5],"float64"),Tensor([3],"float64"),), weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2],"float32"), bins=list[2,2,], weights=None, ranges=list[0.0,1.0,0.0,1.0,], density=True, )
paddle.histogramdd(Tensor([4, 2],"float64"), bins=list[2,2,], weights=None, ranges=list[0.0,1.0,0.0,1.0,], density=True, )
paddle.histogramdd(Tensor([4, 2],"float64"), bins=list[3,3,], weights=Tensor([4],"float64"), ranges=None, density=False, )
paddle.hsplit(Tensor([4, 6, 3],"int64"), 2, )
paddle.hsplit(Tensor([4, 6, 3],"int64"), 3, )
paddle.hsplit(Tensor([4, 6],"int64"), 2, )
paddle.hsplit(Tensor([4, 6],"int64"), 3, )
paddle.hsplit(Tensor([6],"bool"), 3, )
paddle.hsplit(Tensor([6],"float16"), 3, )
paddle.hsplit(Tensor([6],"float32"), 3, )
paddle.hsplit(Tensor([6],"float64"), 3, )
paddle.hsplit(Tensor([6],"int32"), 3, )
paddle.hsplit(Tensor([6],"int64"), 2, )
paddle.hsplit(Tensor([6],"int64"), 3, )
paddle.hsplit(Tensor([6],"uint8"), 3, )
paddle.index_fill(Tensor([10, 15, 10],"bool"), Tensor([5],"int32"), 1, True, )
paddle.index_fill(Tensor([10, 15, 10],"int64"), Tensor([5],"int32"), 1, -1, )
paddle.index_select(Tensor([10, 3],"float32"), Tensor([3],"int64"), )
paddle.index_select(Tensor([10, 4],"float32"), Tensor([6],"int64"), )
paddle.index_select(Tensor([300, 4096],"float32"), Tensor([10],"int64"), )
paddle.isin(Tensor([],"bfloat16"), Tensor([],"bfloat16"), False, False, )
paddle.isin(Tensor([],"bfloat16"), Tensor([],"bfloat16"), False, True, )
paddle.isin(Tensor([2, 5, 10],"bfloat16"), Tensor([100],"bfloat16"), True, False, )
paddle.isin(Tensor([2, 5, 10],"bfloat16"), Tensor([100],"bfloat16"), True, True, )
paddle.isin(Tensor([4, 8],"bfloat16"), Tensor([2, 3],"bfloat16"), False, False, )
paddle.isin(Tensor([4, 8],"bfloat16"), Tensor([2, 3],"bfloat16"), False, True, )
paddle.isin(Tensor([8, 64],"bfloat16"), Tensor([4, 256],"bfloat16"), False, False, )
paddle.isin(Tensor([8, 64],"bfloat16"), Tensor([4, 256],"bfloat16"), False, True, )
paddle.linalg.cholesky(Tensor([2, 2],"float32"), )
paddle.linalg.cholesky(Tensor([2, 2],"float64"), )
paddle.linalg.cholesky(Tensor([3, 3],"float64"), )
paddle.linalg.lstsq(Tensor([2, 3, 10],"float32"), Tensor([2, 3, 4],"float32"), rcond=1e-15, driver="gelss", )
paddle.linalg.lstsq(Tensor([200, 100],"float64"), Tensor([200, 50],"float64"), rcond=1e-15, driver="gelsd", )
paddle.linalg.lstsq(Tensor([3, 2],"float64"), Tensor([3, 3],"float64"), rcond=1e-07, driver="gelsd", )
paddle.linalg.lstsq(Tensor([5, 4],"float64"), Tensor([5, 3],"float64"), rcond=1e-15, driver="gelsd", )
paddle.linalg.lstsq(Tensor([5, 5],"float64"), Tensor([5, 1],"float64"), rcond=None, driver="gelss", )
paddle.linalg.lstsq(Tensor([50, 600],"float64"), Tensor([50, 300],"float64"), rcond=1e-15, driver="gelss", )
paddle.linalg.lstsq(Tensor([8, 2],"float32"), Tensor([8, 10],"float32"), rcond=1e-15, driver="gelsy", )
paddle.linalg.matrix_rank(Tensor([1, 10],"float32"), None, False, )
paddle.linalg.matrix_rank(Tensor([1, 10],"float32"), None, False, Tensor([],"float32"), Tensor([],"float32"), )
paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), None, True, )
paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), None, True, Tensor([200, 200],"float64"), Tensor([200, 200],"float64"), )
paddle.linalg.matrix_rank(Tensor([3, 3],"float32"), None, True, Tensor([],"float32"), Tensor([],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 3],"float64"), None, False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), None, False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), None, False, Tensor([3, 4],"float32"), Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=0.01, rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=0.01, )
paddle.linalg.matrix_rank(Tensor([5, 1],"float64"), None, False, Tensor([1, 4],"float64"), Tensor([1, 4],"float64"), )
paddle.linalg.norm(Tensor([24],"float32"), p="fro", axis=0, )
paddle.linalg.norm(x=Tensor([2, 3, 4],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 4],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 4],"float64"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 4],"float64"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 4],"float64"), p=0, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 4],"float64"), p=0, axis=None, keepdim=True, )
paddle.linalg.ormqr(Tensor([4, 3],"complex128"), Tensor([3],"complex128"), Tensor([3, 4],"complex128"), )
paddle.linalg.ormqr(Tensor([4, 3],"complex64"), Tensor([3],"complex64"), Tensor([3, 4],"complex64"), )
paddle.linalg.ormqr(Tensor([4, 3],"float16"), Tensor([3],"float16"), Tensor([3, 4],"float16"), )
paddle.linalg.ormqr(Tensor([4, 3],"float32"), Tensor([3],"float32"), Tensor([3, 4],"float32"), )
paddle.linalg.ormqr(Tensor([4, 3],"float64"), Tensor([3],"float64"), Tensor([3, 4],"float64"), )
paddle.linalg.ormqr(Tensor([5, 4, 3],"float32"), Tensor([5, 3],"float32"), Tensor([5, 3, 4],"float32"), )
paddle.linalg.svd_lowrank(Tensor([5, 5],"float64"), None, )
paddle.linspace(0, 10, 0, dtype="float32", )
paddle.linspace(0, 10, 200, dtype="int32", )
paddle.linspace(0, 10, 5, dtype="float32", )
paddle.linspace(0, 10, 5, dtype="int32", )
paddle.linspace(0, 10, 5, dtype=type(numpy.float32), )
paddle.linspace(0, 10, 5, dtype=VarType(float32), )
paddle.linspace(0, 12207.0, 1025, dtype="float32", )
paddle.linspace(0, 12207.0, 257, dtype="float32", )
paddle.linspace(0, 22050.0, 1025, dtype="float32", )
paddle.linspace(0, 22050.0, 257, dtype="float32", )
paddle.linspace(0.14285714285714285, 1, 6, dtype="float64", )
paddle.linspace(0.14285714285714285, 1, 6, dtype=Dtype(float64), )
paddle.linspace(0.3333333333333333, 1, 2, dtype="float64", )
paddle.linspace(0.3333333333333333, 1, 2, dtype=Dtype(float64), )
paddle.linspace(0.75, 51.391925438912004, 42, dtype="float32", )
paddle.linspace(0.75, 51.391925438912004, 66, dtype="float32", )
paddle.linspace(0.75, 59.992474637533334, 42, dtype="float32", )
paddle.linspace(0.75, 59.992474637533334, 66, dtype="float32", )
paddle.linspace(-1, 1, 513, dtype="float64", )
paddle.linspace(-1.0, 1.0, 8000.0, dtype=Dtype(float32), )
paddle.linspace(20, 10, 5, "float64", )
paddle.linspace(-3.141592653589793, 3.141592653589793, 2049, dtype="float32", )
paddle.linspace(-3.141592653589793, 3.141592653589793, 41, dtype="float32", )
paddle.linspace(-3.141592653589793, 3.141592653589793, 513, dtype="float32", )
paddle.linspace(-3.141592653589793, 3.141592653589793, 513, dtype="float64", )
paddle.linspace(-3.141592653589793, 3.141592653589793, 65, dtype="float32", )
paddle.linspace(Tensor([],"float32"), Tensor([],"float32"), 3, Dtype(float32), )
paddle.linspace(Tensor([],"float64"), Tensor([],"float64"), 2, Dtype(float64), )
paddle.linspace(Tensor([],"float64"), Tensor([],"float64"), 3, Dtype(float64), )
paddle.linspace(Tensor([],"float64"), Tensor([],"float64"), 4, Dtype(float64), )
paddle.linspace(Tensor([],"float64"), Tensor([],"float64"), 5, Dtype(float64), )
paddle.linspace(Tensor([],"float64"), Tensor([],"float64"), 6, Dtype(float64), )
paddle.linspace(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"int32"), dtype="float32", )
paddle.logcumsumexp(Tensor([],"float32"), )
paddle.logcumsumexp(Tensor([10, 10, 10],"float32"), )
paddle.logcumsumexp(Tensor([24],"float32"), )
paddle.logcumsumexp(Tensor([3, 4],"float32"), )
paddle.logspace(0, 10, 200, 2, dtype="int32", )
paddle.logspace(0, 10, 5, 2, dtype="float32", )
paddle.logspace(0, 10, 5, 2, dtype="float32", name="logspace_res", )
paddle.logspace(0, 10, 5, 2, dtype="int32", )
paddle.logspace(0, 10, 5, 2, dtype=type(numpy.float32), )
paddle.logspace(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"int32"), Tensor([1],"float32"), dtype="float32", )
paddle.logsumexp(Tensor([],"float32"), axis=None, )
paddle.logsumexp(Tensor([1000],"float32"), )
paddle.logsumexp(Tensor([2, 3, 4, 5],"float32"), )
paddle.logsumexp(Tensor([2, 3, 4, 5],"float32"), None, False, )
paddle.logsumexp(Tensor([2, 3, 4, 5],"float32"), None, True, )
paddle.logsumexp(Tensor([2, 3, 4, 5],"float64"), None, False, )
paddle.logsumexp(Tensor([3, 5],"float32"), axis=None, )
paddle.logsumexp(Tensor([3, 5],"float32"), keepdim=True, )
paddle.logsumexp(Tensor([30, 200, 40],"float32"), )
paddle.logsumexp(Tensor([30, 200, 40],"float32"), keepdim=False, )
paddle.masked_fill(Tensor([120],"float32"), Tensor([300, 120],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([168],"float16"), Tensor([168],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([168],"float32"), Tensor([168],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([3, 3],"float32"), Tensor([1, 3],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([3, 40],"float16"), Tensor([3, 1],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([3, 40],"float32"), Tensor([3, 1],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([300, 1],"float16"), Tensor([300, 40],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([300, 40],"float32"), Tensor([40],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([50, 3],"float32"), Tensor([50, 3],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([1],"float32"), )
paddle.mean(Tensor([3, 5],"float32"), keepdim=True, )
paddle.multinomial(Tensor([3, 10000],"float32"), )
paddle.nanquantile(Tensor([2, 3],"float32"), list[0.3,0.7,], 1, )
paddle.nanquantile(Tensor([4, 7, 6],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.nanquantile(Tensor([4, 7, 6],"float64"), q=0.75, axis=list[0,2,], )
paddle.nanquantile(Tensor([8],"float32"), list[0.55,0.7,], 0, )
paddle.nn.functional.affine_grid(Tensor([20, 2, 3],"float32"), Tensor([4],"int64"), align_corners=True, )
paddle.nn.functional.fold(Tensor([3, 12, 12],"float64"), output_sizes=list[4,5,], kernel_sizes=list[2,2,], strides=list[1,1,], paddings=list[0,0,0,0,], dilations=list[1,1,], name=None, )
paddle.nn.functional.layer_norm(Tensor([10, 20],"float16"), list[20,], Tensor([20],"float32"), Tensor([20],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 3, 10, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=None, bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=None, bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([4, 10, 4, 4],"float32"), 4, )
paddle.nn.functional.layer_norm(Tensor([64, 64, 128],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([8192],"float32"), )
paddle.nn.functional.thresholded_relu(Tensor([],"float32"), )
paddle.nn.functional.thresholded_relu(Tensor([10, 20, 1],"float32"), 1.0, )
paddle.nn.functional.thresholded_relu_(Tensor([10, 20, 1],"float32"), 1.0, )
paddle.nn.functional.unfold(Tensor([3, 3, 20, 20],"float64"), kernel_sizes=list[3,3,], strides=list[1,1,], paddings=list[1,1,1,1,], dilations=list[1,1,], name=None, )
paddle.normal(1.0, Tensor([2, 3, 17],"float64"), None, )
paddle.normal(complex(1.0,1.0), 1.0, list[8,12,], )
paddle.normal(complex(1.0,1.0), Tensor([2, 5],"float64"), None, )
paddle.normal(mean=0.0, shape=tuple(), )
paddle.normal(mean=0.0, shape=tuple(100000,4,), )
paddle.normal(mean=0.0, shape=tuple(1000000,4,), )
paddle.normal(mean=0.0, shape=tuple(5,10,8,), )
paddle.normal(mean=0.0, std=Tensor([1000, 2],"float64"), shape=None, name=None, )
paddle.normal(mean=complex(0.0,0.0), shape=tuple(100000,4,), )
paddle.normal(mean=Tensor([1000, 2],"float64"), std=0.5, shape=None, name=None, )
paddle.normal(mean=Tensor([1000, 2],"float64"), std=Tensor([1000, 2],"float64"), shape=None, name=None, )
paddle.normal(shape=list[1,2,3,], )
paddle.normal(shape=list[3,174,96,], )
paddle.normal(shape=list[3,227,98,], )
paddle.normal(shape=list[3,80,251,], )
paddle.normal(shape=tuple(), )
paddle.normal(shape=tuple(10000,), )
paddle.normal(shape=tuple(10000,2,), )
paddle.normal(shape=tuple(10000,2,3,), )
paddle.normal(shape=tuple(2,), )
paddle.normal(shape=tuple(2,3,), )
paddle.normal(shape=tuple(50000,2,), )
paddle.normal(shape=tuple(50000,2,3,), )
paddle.normal(Tensor([1, 100],"complex128"), Tensor([1, 100],"float64"), None, )
paddle.normal(Tensor([1, 100],"float64"), Tensor([1, 100],"float64"), None, )
paddle.normal(Tensor([100],"complex64"), Tensor([100],"float32"), None, )
paddle.normal(Tensor([100],"float64"), Tensor([100],"float32"), None, )
paddle.normal(Tensor([2, 3, 4, 5],"float64"), 0.0, None, )
paddle.normal(Tensor([2, 3],"complex128"), 1.0, None, )
paddle.ones_like(Tensor([],"bfloat16"), dtype="bool", )
paddle.ones_like(Tensor([],"bool"), dtype="bool", )
paddle.ones_like(Tensor([],"float16"), dtype="bool", )
paddle.ones_like(Tensor([],"float16"), dtype="float16", )
paddle.ones_like(Tensor([],"float32"), dtype="bool", )
paddle.ones_like(Tensor([],"float32"), dtype="float32", )
paddle.ones_like(Tensor([],"float64"), dtype="bool", )
paddle.ones_like(Tensor([],"float64"), dtype="float64", )
paddle.ones_like(Tensor([],"int16"), dtype="bool", )
paddle.ones_like(Tensor([],"int32"), dtype="bool", )
paddle.ones_like(Tensor([],"int64"), dtype="bool", )
paddle.ones_like(Tensor([1, 3, 2, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([1, 3, 2],"float64"), dtype="float64", )
paddle.ones_like(Tensor([11],"int64"), dtype="int32", )
paddle.ones_like(Tensor([12],"int64"), dtype="int32", )
paddle.ones_like(Tensor([13],"int64"), dtype="int32", )
paddle.ones_like(Tensor([16],"int64"), dtype="int32", )
paddle.ones_like(Tensor([17],"int64"), dtype="int32", )
paddle.ones_like(Tensor([18],"int64"), dtype="int32", )
paddle.ones_like(Tensor([2, 1, 5, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 128],"int64"), dtype="int64", )
paddle.ones_like(Tensor([2, 2, 2],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 2, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 2, 2],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 2, 3],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 2, 3],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 2, 3],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3, 2],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 2],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3, 4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 4],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3, 5, 4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3, 5, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 5, 4],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3, 5],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3, 5],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 5],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3],"bfloat16"), dtype="bool", )
paddle.ones_like(Tensor([2, 3],"bool"), dtype="bool", )
paddle.ones_like(Tensor([2, 3],"float16"), dtype="bool", )
paddle.ones_like(Tensor([2, 3],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3],"float32"), dtype="bool", )
paddle.ones_like(Tensor([2, 3],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3],"float64"), dtype="bool", )
paddle.ones_like(Tensor([2, 3],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3],"int16"), dtype="bool", )
paddle.ones_like(Tensor([2, 3],"int32"), dtype="bool", )
paddle.ones_like(Tensor([2, 3],"int64"), dtype="bool", )
paddle.ones_like(Tensor([2, 4, 3],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 5, 4],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2],"float64"), dtype="float64", )
paddle.ones_like(Tensor([3],"float16"), dtype="float16", )
paddle.ones_like(Tensor([3],"float32"), dtype="float32", )
paddle.ones_like(Tensor([3],"float64"), dtype="float64", )
paddle.ones_like(Tensor([4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([4],"float64"), dtype="float64", )
paddle.ones_like(Tensor([5],"int64"), dtype="int32", )
paddle.ones_like(Tensor([6],"int64"), dtype="int32", )
paddle.ones_like(Tensor([64, 32],"bfloat16"), dtype="bool", )
paddle.ones_like(Tensor([64, 32],"bool"), dtype="bool", )
paddle.ones_like(Tensor([64, 32],"float16"), dtype="bool", )
paddle.ones_like(Tensor([64, 32],"float32"), dtype="bool", )
paddle.ones_like(Tensor([64, 32],"float64"), dtype="bool", )
paddle.ones_like(Tensor([64, 32],"int16"), dtype="bool", )
paddle.ones_like(Tensor([64, 32],"int32"), dtype="bool", )
paddle.ones_like(Tensor([64, 32],"int64"), dtype="bool", )
paddle.ones_like(Tensor([7],"int64"), dtype="int32", )
paddle.ones_like(Tensor([8],"int64"), dtype="int32", )
paddle.ones_like(Tensor([9],"int64"), dtype="int32", )
paddle.outer(Tensor([20, 10],"float32"), Tensor([],"float32"), )
paddle.outer(Tensor([20, 50],"complex128"), Tensor([50],"complex128"), )
paddle.outer(Tensor([20, 50],"float64"), Tensor([50],"float64"), )
paddle.outer(Tensor([5, 10, 10],"complex128"), Tensor([2, 10],"complex128"), )
paddle.outer(Tensor([5, 10, 10],"float64"), Tensor([2, 10],"float64"), )
paddle.outer(Tensor([5, 10, 10],"int32"), Tensor([2, 10],"int32"), )
paddle.outer(Tensor([5, 10, 10],"int64"), Tensor([2, 10],"int64"), )
paddle.prod(Tensor([],"float32"), axis=list[], )
paddle.prod(Tensor([],"float32"), axis=None, )
paddle.prod(Tensor([],"float64"), list[], False, )
paddle.prod(Tensor([10, 10, 5],"complex64"), axis=list[0,1,], )
paddle.prod(Tensor([10, 10, 5],"float32"), axis=1, dtype="int64", )
paddle.prod(Tensor([10, 10, 5],"float32"), axis=1, keepdim=True, dtype="int64", )
paddle.prod(Tensor([10, 10, 5],"float32"), axis=list[0,1,], )
paddle.prod(Tensor([10, 10, 9, 9],"float64"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.prod(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.prod(Tensor([2, 5, 3, 2, 2, 3, 4, 2],"float16"), list[2,3,4,], False, )
paddle.prod(Tensor([2, 5, 3, 2, 2, 3, 4, 2],"float32"), list[2,3,4,], False, )
paddle.prod(Tensor([2, 5, 3, 2, 2, 3, 4, 2],"float64"), list[2,3,4,], False, )
paddle.prod(Tensor([3, 5],"float32"), axis=None, )
paddle.prod(Tensor([3, 5],"float32"), keepdim=True, )
paddle.prod(Tensor([5, 6, 10],"float16"), list[0,], False, )
paddle.prod(Tensor([5, 6, 10],"float32"), list[0,], False, )
paddle.prod(Tensor([5, 6, 10],"float64"), list[0,], False, )
paddle.prod(Tensor([5, 6, 2, 3, 4, 2],"float16"), list[2,3,4,], False, )
paddle.prod(Tensor([5, 6, 2, 3, 4, 2],"float32"), list[2,3,4,], False, )
paddle.prod(Tensor([5, 6, 2, 3, 4, 2],"float64"), list[2,3,4,], False, )
paddle.quantile(Tensor([],"float32"), 0.5, axis=list[], )
paddle.quantile(Tensor([2, 3],"float32"), list[0.3,0.7,], 1, )
paddle.quantile(Tensor([4, 7, 6],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([4, 7, 6],"float64"), q=0.75, axis=list[0,2,], )
paddle.quantile(Tensor([5, 3, 4],"float64"), q=list[0.1,0.2,0.3,], axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([5, 3, 4],"float64"), q=list[0.2,0.67,], axis=list[1,-1,], )
paddle.quantile(Tensor([5, 3, 4],"float64"), q=list[0.3,0.44,], axis=-2, )
paddle.quantile(Tensor([5, 3, 4],"float64"), q=Tensor([],"float32"), axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([5, 3, 4],"float64"), q=Tensor([2],"float32"), axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([8],"float32"), list[0.55,0.7,], 0, )
paddle.randint_like(Tensor([10, 12],"bool"), low=-100, high=100, dtype="bool", )
paddle.randint_like(Tensor([10, 12],"bool"), low=-100, high=100, dtype="float16", )
paddle.randint_like(Tensor([10, 12],"bool"), low=-100, high=100, dtype="float32", )
paddle.randint_like(Tensor([10, 12],"bool"), low=-100, high=100, dtype="float64", )
paddle.randint_like(Tensor([10, 12],"bool"), low=-100, high=100, dtype="int32", )
paddle.randint_like(Tensor([10, 12],"bool"), low=-100, high=100, dtype="int64", )
paddle.randint_like(Tensor([10, 12],"float16"), low=-100, high=100, dtype="bool", )
paddle.randint_like(Tensor([10, 12],"float16"), low=-100, high=100, dtype="float16", )
paddle.randint_like(Tensor([10, 12],"float16"), low=-100, high=100, dtype="float32", )
paddle.randint_like(Tensor([10, 12],"float16"), low=-100, high=100, dtype="float64", )
paddle.randint_like(Tensor([10, 12],"float16"), low=-100, high=100, dtype="int32", )
paddle.randint_like(Tensor([10, 12],"float16"), low=-100, high=100, dtype="int64", )
paddle.randint_like(Tensor([10, 12],"float32"), low=-100, high=100, dtype="bool", )
paddle.randint_like(Tensor([10, 12],"float32"), low=-100, high=100, dtype="float16", )
paddle.randint_like(Tensor([10, 12],"float32"), low=-100, high=100, dtype="float32", )
paddle.randint_like(Tensor([10, 12],"float32"), low=-100, high=100, dtype="float64", )
paddle.randint_like(Tensor([10, 12],"float32"), low=-100, high=100, dtype="int32", )
paddle.randint_like(Tensor([10, 12],"float32"), low=-100, high=100, dtype="int64", )
paddle.randint_like(Tensor([10, 12],"float64"), low=-100, high=100, dtype="bool", )
paddle.randint_like(Tensor([10, 12],"float64"), low=-100, high=100, dtype="float16", )
paddle.randint_like(Tensor([10, 12],"float64"), low=-100, high=100, dtype="float32", )
paddle.randint_like(Tensor([10, 12],"float64"), low=-100, high=100, dtype="float64", )
paddle.randint_like(Tensor([10, 12],"float64"), low=-100, high=100, dtype="int32", )
paddle.randint_like(Tensor([10, 12],"float64"), low=-100, high=100, dtype="int64", )
paddle.randint_like(Tensor([10, 12],"int32"), low=-100, high=100, dtype="bool", )
paddle.randint_like(Tensor([10, 12],"int32"), low=-100, high=100, dtype="float16", )
paddle.randint_like(Tensor([10, 12],"int32"), low=-100, high=100, dtype="float32", )
paddle.randint_like(Tensor([10, 12],"int32"), low=-100, high=100, dtype="float64", )
paddle.randint_like(Tensor([10, 12],"int32"), low=-100, high=100, dtype="int32", )
paddle.randint_like(Tensor([10, 12],"int32"), low=-100, high=100, dtype="int64", )
paddle.randint_like(Tensor([10, 12],"int64"), low=-100, high=100, dtype="bool", )
paddle.randint_like(Tensor([10, 12],"int64"), low=-100, high=100, dtype="float16", )
paddle.randint_like(Tensor([10, 12],"int64"), low=-100, high=100, dtype="float32", )
paddle.randint_like(Tensor([10, 12],"int64"), low=-100, high=100, dtype="float64", )
paddle.randint_like(Tensor([10, 12],"int64"), low=-100, high=100, dtype="int32", )
paddle.randint_like(Tensor([10, 12],"int64"), low=-100, high=100, dtype="int64", )
paddle.randperm(10, "float32", )
paddle.randperm(10, "float64", )
paddle.randperm(10, "int32", )
paddle.randperm(10, type(numpy.int64), )
paddle.randperm(30000, dtype="float32", )
paddle.randperm(30000, dtype="float64", )
paddle.randperm(30000, dtype="int32", )
paddle.randperm(30000, dtype="int64", )
paddle.reshape(Tensor([],"float32"), Tensor([0],"int64"), )
paddle.reshape(Tensor([1, 1],"float32"), list[Tensor([],"int32"),Tensor([],"int32"),], )
paddle.reshape(Tensor([1, 1],"float32"), Tensor([1],"int32"), )
paddle.reshape(Tensor([1, 1],"float32"), Tensor([3],"int32"), )
paddle.reshape(Tensor([1, 100],"float64"), Tensor([2],"int64"), )
paddle.reshape(Tensor([1, 2, 3],"float32"), Tensor([3],"int64"), )
paddle.reshape(Tensor([1, 2, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([1, 2, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([1, 4, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([1, 4, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([10, 20, 1],"float32"), Tensor([1],"int64"), )
paddle.reshape(Tensor([100],"float32"), Tensor([1],"int64"), )
paddle.reshape(Tensor([100],"float64"), Tensor([1],"int64"), )
paddle.reshape(Tensor([1000, 2],"float64"), Tensor([2],"int64"), )
paddle.reshape(Tensor([2, 1, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 1, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 1, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 64, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 8, 16],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 8, 8, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 25],"float32"), shape=list[Tensor([1],"int32"),10,], )
paddle.reshape(Tensor([2, 25],"float32"), shape=Tensor([3],"int32"), )
paddle.reshape(Tensor([2, 3, 4],"complex128"), tuple(0,-1,), )
paddle.reshape(Tensor([2, 3, 4],"complex64"), tuple(0,-1,), )
paddle.reshape(Tensor([2, 4, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 4, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 8, 1, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 8, 64, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([3, 3, 1],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([3, 3, 3],"float32"), list[3,Tensor([],"int32"),3,], )
paddle.reshape(Tensor([4, 1],"float32"), list[Tensor([],"int64"),1,Tensor([],"int64"),], )
paddle.reshape(Tensor([5, 7],"int32"), shape=tuple(Tensor([],"int64"),Tensor([],"int64"),), )
paddle.reshape(Tensor([6, 2, 3],"float32"), list[0,0,-1,], )
paddle.reshape(Tensor([6, 2, 3],"float32"), list[1,0,2,-1,3,], )
paddle.reshape(Tensor([6, 2, 3],"float32"), list[-1,0,3,], )
paddle.reshape(Tensor([6, 2, 3],"float32"), list[2,-1,0,], )
paddle.reshape(Tensor([6, 2, 3],"float32"), list[2,3,0,-1,], )
paddle.reshape(Tensor([6, 2, 3],"int64"), list[0,0,-1,], )
paddle.reshape(Tensor([6, 2, 3],"int64"), list[1,0,2,-1,3,], )
paddle.reshape(Tensor([6, 2, 3],"int64"), list[-1,0,3,], )
paddle.reshape(Tensor([6, 2, 3],"int64"), list[2,-1,0,], )
paddle.reshape(Tensor([6, 2, 3],"int64"), list[2,3,0,-1,], )
paddle.reshape(x=Tensor([32, 4, 512],"float32"), shape=list[0,0,8,64,], )
paddle.reshape(x=Tensor([32, 4, 8, 64],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([58, 140, 2, 1],"float32"), shape=list[0,0,2,], )
paddle.reshape(x=Tensor([58, 140, 2],"float32"), shape=list[0,0,2,1,], )
paddle.roll(Tensor([3, 3],"int64"), shifts=Tensor([2],"int64"), axis=list[0,1,], )
paddle.sign(Tensor([5],"complex64"), )
paddle.squeeze(Tensor([],"float32"), axis=Tensor([1],"int32"), )
paddle.std(Tensor([1, 3, 4, 10],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 4, 10],"float64"), 2, True, False, )
paddle.std(Tensor([1, 3, 4, 10],"float64"), list[1,2,], True, False, )
paddle.std(Tensor([1, 3, 4, 10],"float64"), list[1,3,], False, False, )
paddle.std(Tensor([1, 3, 4, 10],"float64"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 4, 10],"float64"), tuple(1,3,), True, False, )
paddle.sum(Tensor([0, 0],"float32"), keepdim=True, )
paddle.sum(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.sum(Tensor([2, 5],"float32"), 0, keepdim=True, dtype="float32", )
paddle.sum(Tensor([2, 5],"float32"), None, keepdim=False, dtype="float32", )
paddle.sum(Tensor([2, 5],"float64"), 0, keepdim=True, dtype="float32", )
paddle.sum(Tensor([2, 5],"float64"), -1, keepdim=True, dtype="float32", )
paddle.sum(Tensor([2, 5],"float64"), None, keepdim=False, dtype="float32", )
paddle.sum(Tensor([2, 5],"float64"), None, keepdim=True, dtype="float32", )
paddle.sum(Tensor([3, 5],"float32"), keepdim=True, )
paddle.sum(Tensor([6, 2, 10],"float64"), None, "float64", False, None, )
paddle.tensor_split(Tensor([4, 4, 4, 7],"int64"), 2, axis=3, )
paddle.tensor_split(Tensor([4, 4, 4, 7],"int64"), 3, axis=3, )
paddle.tensor_split(Tensor([4, 4, 6],"bool"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"float16"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"float32"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"float64"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"int32"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"int64"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"uint8"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 7, 4],"int64"), 2, axis=-2, )
paddle.tensor_split(Tensor([4, 4, 7, 4],"int64"), 3, axis=-2, )
paddle.tensor_split(Tensor([4, 4, 7],"int64"), 2, axis=2, )
paddle.tensor_split(Tensor([4, 4, 7],"int64"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 6],"bool"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"float16"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"float32"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"float64"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"int32"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"int64"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"uint8"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 7],"int64"), 2, axis=1, )
paddle.tensor_split(Tensor([4, 7],"int64"), 3, axis=1, )
paddle.tensor_split(Tensor([6],"bool"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"float16"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"float32"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"float64"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"int32"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"int64"), 2, )
paddle.tensor_split(Tensor([6],"int64"), 3, )
paddle.tensor_split(Tensor([6],"int64"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"uint8"), 3, axis=0, )
paddle.tensor_split(Tensor([7, 4, 3],"int64"), 2, )
paddle.tensor_split(Tensor([7, 4, 3],"int64"), 3, )
paddle.tensor_split(Tensor([7, 4],"int64"), 2, )
paddle.tensor_split(Tensor([7, 4],"int64"), 3, )
paddle.tensor_split(Tensor([7],"int64"), 2, )
paddle.tensor_split(Tensor([7],"int64"), 2, axis=0, )
paddle.tensor_split(Tensor([7],"int64"), 3, )
paddle.tensor_split(Tensor([7],"int64"), 3, axis=0, )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[3,0,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), list[1,], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), list[Tensor([2],"int64"),Tensor([2],"int64"),], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([2, 2],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(1,), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(list[1,],), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(Tensor([2],"int64"),Tensor([2],"int64"),), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(tuple(1,),), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(tuple(2,1,),tuple(0,),), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), list[1,], )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), list[Tensor([2],"int64"),Tensor([2],"int64"),], )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), Tensor([2, 2],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(1,), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(list[1,],), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(Tensor([2],"int64"),Tensor([2],"int64"),), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(tuple(1,),), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(tuple(2,1,),tuple(0,),), )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[0,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[3,0,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[0,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[3,0,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.transpose(Tensor([1, 8, 2, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([1, 8, 4, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([2, 8, 1, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([2, 8, 2, 16],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([2, 8, 4, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 1, 2, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 1, 4, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 2, 1, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 2, 2, 16],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 2, 4, 8],"float32"), perm=list[1,0,], )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=Tensor([],"float32"), axis=0, )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=Tensor([],"float32"), axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float64"), x=None, dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([3, 3, 4],"float32"), x=None, dx=Tensor([],"float32"), axis=1, )
paddle.trapezoid(y=Tensor([3, 3, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
paddle.tril_indices(4, None, 2, )
paddle.triu_indices(4, None, 2, )
paddle.unflatten(x=Tensor([4, 6, 16],"float32"), axis=0, shape=Tensor([2],"int64"), )
paddle.unsqueeze(Tensor([],"float32"), list[0,1,2,], )
paddle.unsqueeze(Tensor([],"float32"), list[-1,], )
paddle.unsqueeze(Tensor([],"float32"), list[-1,1,], )
paddle.unsqueeze(Tensor([1],"float64"), axis=list[0,2,], )
paddle.unsqueeze(Tensor([2],"float32"), axis=list[0,2,], )
paddle.unsqueeze(Tensor([2],"float64"), axis=list[0,2,], )
paddle.unsqueeze(Tensor([20, 30, 40],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([3],"float64"), axis=list[0,2,], )
paddle.unsqueeze(Tensor([4, 10],"float64"), list[2,], )
paddle.unsqueeze(Tensor([5, 10],"float32"), Tensor([2],"int64"), )
paddle.unsqueeze(Tensor([5],"float64"), axis=list[0,2,], )
paddle.unsqueeze(Tensor([8, 32],"float64"), list[1,], )
paddle.unsqueeze(Tensor([8, 4],"float32"), list[2,], )
paddle.unsqueeze(Tensor([8, 4],"float64"), list[2,], )
paddle.unsqueeze(Tensor([8, 8],"float32"), list[1,], )
paddle.unsqueeze(Tensor([8],"int64"), list[1,], )
paddle.vander(Tensor([5],"complex128"), 0, False, )
paddle.vander(Tensor([5],"complex128"), 0, True, )
paddle.vander(Tensor([5],"complex128"), 1, False, )
paddle.vander(Tensor([5],"complex128"), 1, True, )
paddle.vander(Tensor([5],"complex128"), 2, False, )
paddle.vander(Tensor([5],"complex128"), 2, True, )
paddle.vander(Tensor([5],"complex128"), 3, False, )
paddle.vander(Tensor([5],"complex128"), 3, True, )
paddle.vander(Tensor([5],"complex128"), 4, False, )
paddle.vander(Tensor([5],"complex128"), 4, True, )
paddle.vander(Tensor([5],"float32"), 0, False, )
paddle.vander(Tensor([5],"float32"), 0, True, )
paddle.vander(Tensor([5],"float32"), 1, False, )
paddle.vander(Tensor([5],"float32"), 1, True, )
paddle.vander(Tensor([5],"float32"), 2, False, )
paddle.vander(Tensor([5],"float32"), 2, True, )
paddle.vander(Tensor([5],"float32"), 3, False, )
paddle.vander(Tensor([5],"float32"), 3, True, )
paddle.vander(Tensor([5],"float32"), 4, False, )
paddle.vander(Tensor([5],"float32"), 4, True, )
paddle.vander(Tensor([5],"float32"), 5, False, )
paddle.vander(Tensor([5],"float32"), 5, True, )
paddle.vander(Tensor([5],"float32"), 6, False, )
paddle.vander(Tensor([5],"float32"), 6, True, )
paddle.vander(Tensor([5],"float32"), 7, False, )
paddle.vander(Tensor([5],"float32"), 7, True, )
paddle.vander(Tensor([5],"float32"), 8, False, )
paddle.vander(Tensor([5],"float32"), 8, True, )
paddle.vander(Tensor([5],"float32"), None, False, )
paddle.var(Tensor([1, 3, 4, 10],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 4, 10],"float64"), 2, True, False, )
paddle.var(Tensor([1, 3, 4, 10],"float64"), list[1,2,], True, False, )
paddle.var(Tensor([1, 3, 4, 10],"float64"), list[1,3,], False, False, )
paddle.var(Tensor([1, 3, 4, 10],"float64"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 4, 10],"float64"), tuple(1,3,), True, False, )
paddle.vsplit(Tensor([6, 4, 3],"int64"), 2, )
paddle.vsplit(Tensor([6, 4, 3],"int64"), 3, )
paddle.vsplit(Tensor([6, 4],"bool"), 3, )
paddle.vsplit(Tensor([6, 4],"float16"), 3, )
paddle.vsplit(Tensor([6, 4],"float32"), 3, )
paddle.vsplit(Tensor([6, 4],"float64"), 3, )
paddle.vsplit(Tensor([6, 4],"int32"), 3, )
paddle.vsplit(Tensor([6, 4],"int64"), 2, )
paddle.vsplit(Tensor([6, 4],"int64"), 3, )
paddle.vsplit(Tensor([6, 4],"uint8"), 3, )
paddle.zeros_like(Tensor([2, 3, 8, 8],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([3, 28, 28],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([3, 4],"float64"), type(numpy.bool_), )
paddle.zeros_like(Tensor([3, 4],"float64"), type(numpy.float32), )
paddle.zeros_like(Tensor([3, 4],"float64"), type(numpy.float64), )
paddle.zeros_like(Tensor([3, 4],"float64"), type(numpy.int32), )
paddle.zeros_like(Tensor([3, 4],"float64"), type(numpy.int64), )
paddle.zeros_like(Tensor([3, 8, 8],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([512],"int64"), "int64", )
paddle.zeros_like(Tensor([64],"float32"), dtype="int32", )
