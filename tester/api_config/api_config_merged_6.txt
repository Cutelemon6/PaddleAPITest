paddle.nn.functional.softplus(Tensor([1, 2, 3],"float32"), )
paddle.nn.functional.softplus(Tensor([1, 2, 3],"float64"), )
paddle.nn.functional.softplus(Tensor([10],"float64"), )
paddle.nn.functional.softplus(Tensor([13, 10, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([13, 1007, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([13, 3, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([13, 7, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([14, 7, 64],"float32"), )
paddle.nn.functional.softplus(Tensor([2, 3, 2],"float64"), )
paddle.nn.functional.softplus(Tensor([2, 3],"float32"), )
paddle.nn.functional.softplus(Tensor([2, 3],"float64"), )
paddle.nn.functional.softplus(Tensor([3, 3, 3],"float64"), -1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 3],"float64"), -3, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 3],"float64"), 1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 3],"float64"), 2, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 3],"float64"), 3, -5, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 3],"float64"), 3, 5, None, )
paddle.nn.functional.softplus(Tensor([3],"float32"), )
paddle.nn.functional.softplus(Tensor([3],"float64"), )
paddle.nn.functional.softplus(Tensor([4],"float32"), 1, 15, None, )
paddle.nn.functional.softplus(Tensor([4],"float64"), 1, 15, None, )
paddle.nn.functional.softplus(Tensor([8, 1],"float32"), )
paddle.nn.functional.softplus(Tensor([],"float32"), )
paddle.nn.functional.softplus(x=Tensor([3, 3, 3],"float64"), beta=-1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 3],"float64"), beta=-3, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 3],"float64"), beta=1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 3],"float64"), beta=2, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 3],"float64"), beta=3, threshold=-5, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 3],"float64"), beta=3, threshold=5, )
paddle.nn.functional.softplus(x=Tensor([4],"float32"), beta=1, threshold=15, )
paddle.nn.functional.softplus(x=Tensor([4],"float64"), beta=1, threshold=15, )
paddle.nn.functional.softshrink(Tensor([3, 3, 3],"float64"), 0, None, )
paddle.nn.functional.softshrink(Tensor([3, 3, 3],"float64"), 5, None, )
paddle.nn.functional.softshrink(Tensor([4],"float32"), 0.5, None, )
paddle.nn.functional.softshrink(Tensor([4],"float64"), 0.5, None, )
paddle.nn.functional.softshrink(Tensor([],"float32"), )
paddle.nn.functional.softshrink(x=Tensor([3, 3, 3],"float64"), threshold=0, )
paddle.nn.functional.softshrink(x=Tensor([3, 3, 3],"float64"), threshold=5, )
paddle.nn.functional.softshrink(x=Tensor([4],"float32"), threshold=0.5, )
paddle.nn.functional.softshrink(x=Tensor([4],"float64"), threshold=0.5, )
paddle.nn.functional.softsign(Tensor([3, 3, 3],"float64"), None, )
paddle.nn.functional.softsign(Tensor([300, 4096],"float32"), )
paddle.nn.functional.softsign(Tensor([32, 128],"float32"), )
paddle.nn.functional.softsign(Tensor([4],"float32"), None, )
paddle.nn.functional.softsign(Tensor([4],"float64"), None, )
paddle.nn.functional.softsign(Tensor([],"float32"), )
paddle.nn.functional.softsign(x=Tensor([3, 3, 3],"float64"), )
paddle.nn.functional.softsign(x=Tensor([4],"float32"), )
paddle.nn.functional.softsign(x=Tensor([4],"float64"), )
paddle.nn.functional.tanh(Tensor([1, 16],"float32"), )
paddle.nn.functional.tanh(Tensor([1, 3, 256, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1, 36],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1, 4],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1, 8],"float32"), None, )
paddle.nn.functional.tanh(Tensor([10, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([100, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([10240, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([11, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([12, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([128, 768],"float16"), None, )
paddle.nn.functional.tanh(Tensor([128, 768],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 16],"float32"), )
paddle.nn.functional.tanh(Tensor([13, 16],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 24],"float32"), )
paddle.nn.functional.tanh(Tensor([13, 24],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 256, 2048],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 32],"float16"), None, )
paddle.nn.functional.tanh(Tensor([13, 32],"float32"), )
paddle.nn.functional.tanh(Tensor([13, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 36],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 64],"float32"), )
paddle.nn.functional.tanh(Tensor([13, 64],"float32"), None, )
paddle.nn.functional.tanh(Tensor([14, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1820, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2, 1024],"float16"), None, )
paddle.nn.functional.tanh(Tensor([2, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2, 36],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2, 60],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2, 8],"float32"), None, )
paddle.nn.functional.tanh(Tensor([2430, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([28, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([282600, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([32, 768],"float16"), None, )
paddle.nn.functional.tanh(Tensor([32, 768],"float32"), None, )
paddle.nn.functional.tanh(Tensor([36, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([39, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4, 1024],"float16"), None, )
paddle.nn.functional.tanh(Tensor([4, 1024],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4, 36],"float32"), None, )
paddle.nn.functional.tanh(Tensor([4830, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([5, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([52, 32],"float16"), None, )
paddle.nn.functional.tanh(Tensor([52, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([52, 36],"float32"), None, )
paddle.nn.functional.tanh(Tensor([52, 64],"float32"), None, )
paddle.nn.functional.tanh(Tensor([56, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([6, 36],"float32"), None, )
paddle.nn.functional.tanh(Tensor([64, 20],"float32"), None, )
paddle.nn.functional.tanh(Tensor([64, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([64, 768],"float16"), None, )
paddle.nn.functional.tanh(Tensor([64, 768],"float32"), None, )
paddle.nn.functional.tanh(Tensor([7, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([8490, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([9420, 50],"float32"), None, )
paddle.nn.functional.tanh(Tensor([96, 1024],"float32"), None, )
paddle.nn.functional.tanh(Tensor([96, 768],"float16"), None, )
paddle.nn.functional.tanh(Tensor([96, 768],"float32"), None, )
paddle.nn.functional.tanh(Tensor([],"float32"), )
paddle.nn.functional.tanhshrink(Tensor([3, 3, 3],"float64"), None, )
paddle.nn.functional.tanhshrink(Tensor([4],"float32"), None, )
paddle.nn.functional.tanhshrink(Tensor([4],"float64"), None, )
paddle.nn.functional.tanhshrink(Tensor([],"float32"), )
paddle.nn.functional.tanhshrink(x=Tensor([3, 3, 3],"float64"), )
paddle.nn.functional.tanhshrink(x=Tensor([4],"float32"), )
paddle.nn.functional.tanhshrink(x=Tensor([4],"float64"), )
paddle.nn.functional.thresholded_relu(Tensor([10, 1, 4, 3],"float64"), -1, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 1, 4, 3],"float64"), 0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 20, 1],"float32"), 1.0, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 3, 3],"float32"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 3, 3],"float64"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([],"float32"), )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 1, 4, 3],"float64"), threshold=-1, )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 1, 4, 3],"float64"), threshold=0, )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4, 3, 3],"float32"), )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4, 3, 3],"float64"), )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), margin=0.3, swap=False, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), margin=0.3, swap=False, reduction="none", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), margin=0.3, swap=False, reduction="sum", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), Tensor([5, 5],"float64"), margin=0.3, swap=True, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 5],"float64"), positive=Tensor([5, 5],"float64"), negative=Tensor([5, 5],"float64"), distance_function=None, margin=0.3, swap=False, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 5],"float64"), positive=Tensor([5, 5],"float64"), negative=Tensor([5, 5],"float64"), distance_function=None, margin=0.3, swap=False, reduction="none", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 5],"float64"), positive=Tensor([5, 5],"float64"), negative=Tensor([5, 5],"float64"), distance_function=None, margin=0.3, swap=False, reduction="sum", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 5],"float64"), positive=Tensor([5, 5],"float64"), negative=Tensor([5, 5],"float64"), distance_function=None, margin=0.3, swap=True, reduction="mean", )
paddle.nn.functional.unfold(Tensor([10, 3, 64, 64],"float32"), 3, 1, 1, tuple(1,1,), )
paddle.nn.functional.unfold(Tensor([10, 3, 64, 64],"float32"), 3, 1, tuple(1,1,), 1, )
paddle.nn.functional.unfold(Tensor([10, 3, 64, 64],"float32"), 3, tuple(1,1,), 1, 1, )
paddle.nn.functional.unfold(Tensor([10, 3, 64, 64],"float32"), 3, tuple(1,1,), tuple(1,1,), tuple(1,1,), )
paddle.nn.functional.unfold(Tensor([10, 3, 64, 64],"float32"), tuple(3,3,), tuple(1,1,), tuple(1,1,), tuple(1,1,), )
paddle.nn.functional.unfold(Tensor([2, 3, 10, 10],"float32"), kernel_sizes=3, strides=1, paddings=0, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([2, 3, 10, 10],"float64"), kernel_sizes=3, strides=1, paddings=0, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([2, 3, 10, 10],"float64"), kernel_sizes=list[2,4,], strides=1, paddings=1, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([2, 3, 10, 10],"float64"), kernel_sizes=list[2,4,], strides=2, paddings=1, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([2, 3, 10, 10],"float64"), kernel_sizes=list[3,3,], strides=1, paddings=0, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([2, 3, 10, 10],"float64"), kernel_sizes=list[3,3,], strides=1, paddings=1, dilations=1, name=None, )
paddle.nn.functional.unfold(Tensor([3, 3, 20, 20],"float64"), kernel_sizes=list[3,3,], strides=list[1,1,], paddings=list[1,1,1,1,], dilations=list[1,1,], name=None, )
paddle.nn.functional.unfold(Tensor([64, 3, 224, 224],"float32"), 16, 16, )
paddle.nn.functional.unfold(x=Tensor([2, 3, 10, 10],"float32"), kernel_sizes=3, )
paddle.nn.functional.unfold(x=Tensor([2, 3, 10, 10],"float64"), kernel_sizes=3, )
paddle.nn.functional.unfold(x=Tensor([2, 3, 10, 10],"float64"), kernel_sizes=list[2,4,], paddings=1, )
paddle.nn.functional.unfold(x=Tensor([2, 3, 10, 10],"float64"), kernel_sizes=list[2,4,], paddings=1, strides=2, )
paddle.nn.functional.unfold(x=Tensor([2, 3, 10, 10],"float64"), kernel_sizes=list[3,3,], )
paddle.nn.functional.unfold(x=Tensor([2, 3, 10, 10],"float64"), kernel_sizes=list[3,3,], paddings=1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 128],"float16"), Tensor([288, 128],"int8"), bias=Tensor([288],"float16"), weight_scale=Tensor([288],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 64],"float16"), Tensor([128, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int4", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([1, 32, 64],"float16"), Tensor([256, 64],"int8"), bias=Tensor([256],"float16"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", group_size=-1, )
paddle.nn.quant.weight_only_linear(Tensor([100, 320],"float16"), weight=Tensor([512, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([512, 512],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([100, 512],"float16"), weight=Tensor([640, 512],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 256],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 64],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 64],"float16"), weight=Tensor([256, 64],"int8"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([101, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([104, 320],"float16"), weight=Tensor([512, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([104, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([104, 512],"float16"), weight=Tensor([512, 512],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([104, 512],"float16"), weight=Tensor([640, 512],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([123, 11008],"float16"), weight=Tensor([768, 11008],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([123, 768],"float16"), weight=Tensor([22016, 768],"int8"), weight_scale=Tensor([22016],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([123, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([123, 768],"float16"), weight=Tensor([768, 768],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([131, 11008],"float16"), weight=Tensor([768, 11008],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([131, 768],"float16"), weight=Tensor([22016, 768],"int8"), weight_scale=Tensor([22016],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([131, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([131, 768],"float16"), weight=Tensor([768, 768],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([136, 11008],"float16"), weight=Tensor([768, 11008],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([136, 768],"float16"), weight=Tensor([22016, 768],"int8"), weight_scale=Tensor([22016],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([136, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([136, 768],"float16"), weight=Tensor([768, 768],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([145, 11008],"float16"), weight=Tensor([768, 11008],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([145, 768],"float16"), weight=Tensor([22016, 768],"int8"), weight_scale=Tensor([22016],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([145, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([145, 768],"float16"), weight=Tensor([768, 768],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([154, 11008],"float16"), weight=Tensor([768, 11008],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([154, 768],"float16"), weight=Tensor([22016, 768],"int8"), weight_scale=Tensor([22016],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([154, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([154, 768],"float16"), weight=Tensor([768, 768],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([167, 11008],"float16"), weight=Tensor([768, 11008],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([167, 768],"float16"), weight=Tensor([22016, 768],"int8"), weight_scale=Tensor([22016],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([167, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([167, 768],"float16"), weight=Tensor([768, 768],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([172, 11008],"float16"), weight=Tensor([768, 11008],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([172, 768],"float16"), weight=Tensor([22016, 768],"int8"), weight_scale=Tensor([22016],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([172, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([172, 768],"float16"), weight=Tensor([768, 768],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([181, 11008],"float16"), weight=Tensor([768, 11008],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([181, 768],"float16"), weight=Tensor([22016, 768],"int8"), weight_scale=Tensor([22016],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([181, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([181, 768],"float16"), weight=Tensor([768, 768],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 1, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 11008],"float16"), weight=Tensor([768, 11008],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 256],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 320],"float16"), weight=Tensor([512, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 512],"float16"), weight=Tensor([512, 512],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 512],"float16"), weight=Tensor([640, 512],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 64],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 64],"float16"), weight=Tensor([256, 64],"int8"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 768],"float16"), weight=Tensor([22016, 768],"int8"), weight_scale=Tensor([22016],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([2, 768],"float16"), weight=Tensor([768, 768],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([203, 11008],"float16"), weight=Tensor([768, 11008],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([203, 768],"float16"), weight=Tensor([22016, 768],"int8"), weight_scale=Tensor([22016],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([203, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([203, 768],"float16"), weight=Tensor([768, 768],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([221, 11008],"float16"), weight=Tensor([768, 11008],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([221, 768],"float16"), weight=Tensor([22016, 768],"int8"), weight_scale=Tensor([22016],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([221, 768],"float16"), weight=Tensor([2304, 768],"int8"), bias=None, weight_scale=Tensor([2304],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([221, 768],"float16"), weight=Tensor([768, 768],"int8"), weight_scale=Tensor([768],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([58, 256],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([58, 64],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([58, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([58, 64],"float16"), weight=Tensor([256, 64],"int8"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([58, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([59, 256],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([59, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([59, 64],"float16"), weight=Tensor([256, 64],"int8"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([59, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([60, 256],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([60, 64],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([60, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([60, 64],"float16"), weight=Tensor([256, 64],"int8"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([60, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([64, 320],"float16"), weight=Tensor([512, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([64, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([64, 512],"float16"), weight=Tensor([512, 512],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([64, 512],"float16"), weight=Tensor([640, 512],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([67, 256],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([67, 64],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([67, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([67, 64],"float16"), weight=Tensor([256, 64],"int8"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([67, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([68, 256],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([68, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([68, 64],"float16"), weight=Tensor([256, 64],"int8"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([68, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([71, 320],"float16"), weight=Tensor([512, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([71, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([71, 512],"float16"), weight=Tensor([512, 512],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([71, 512],"float16"), weight=Tensor([640, 512],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([74, 64],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([74, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([74, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([76, 256],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([76, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([76, 64],"float16"), weight=Tensor([256, 64],"int8"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([76, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([77, 320],"float16"), weight=Tensor([512, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([77, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([77, 512],"float16"), weight=Tensor([512, 512],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([77, 512],"float16"), weight=Tensor([640, 512],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([78, 256],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([78, 64],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([78, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([78, 64],"float16"), weight=Tensor([256, 64],"int8"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([78, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([81, 320],"float16"), weight=Tensor([512, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([81, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([81, 512],"float16"), weight=Tensor([512, 512],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([81, 512],"float16"), weight=Tensor([640, 512],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([87, 64],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([87, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([87, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([88, 64],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([88, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([88, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([89, 320],"float16"), weight=Tensor([512, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([89, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([89, 512],"float16"), weight=Tensor([512, 512],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([89, 512],"float16"), weight=Tensor([640, 512],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([90, 256],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([90, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([90, 64],"float16"), weight=Tensor([256, 64],"int8"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([90, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([91, 256],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([91, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([91, 64],"float16"), weight=Tensor([256, 64],"int8"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([91, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([92, 320],"float16"), weight=Tensor([512, 320],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([92, 512],"float16"), weight=Tensor([1024, 512],"int8"), bias=Tensor([1024],"float16"), weight_scale=Tensor([1024],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([92, 512],"float16"), weight=Tensor([512, 512],"int8"), weight_scale=Tensor([512],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([92, 512],"float16"), weight=Tensor([640, 512],"int8"), weight_scale=Tensor([640],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([97, 64],"float16"), weight=Tensor([128, 64],"int8"), weight_scale=Tensor([128],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([97, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([97, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([98, 256],"float16"), weight=Tensor([64, 256],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([98, 64],"float16"), weight=Tensor([192, 64],"int8"), bias=Tensor([192],"float16"), weight_scale=Tensor([192],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([98, 64],"float16"), weight=Tensor([256, 64],"int8"), weight_scale=Tensor([256],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_only_linear(Tensor([98, 64],"float16"), weight=Tensor([64, 64],"int8"), weight_scale=Tensor([64],"float16"), weight_dtype="int8", )
paddle.nn.quant.weight_quantize(Tensor([11008, 64],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([11008, 768],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([128, 288],"float16"), algo="weight_only_int8", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 288],"float16"), algo="weight_only_int8", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 288],"float16"), algo="weight_only_int8", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 288],"float16"), algo="weight_only_int8", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 288],"float16"), algo="weight_only_int8", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([256, 64],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([320, 512],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([512, 1024],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([512, 512],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([512, 640],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([64, 128],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([64, 192],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([64, 22016],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([64, 256],"float16"), algo="weight_only_int4", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 256],"float16"), algo="weight_only_int4", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 256],"float16"), algo="weight_only_int4", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 256],"float16"), algo="weight_only_int4", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 256],"float16"), algo="weight_only_int4", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 256],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([64, 256],"float16"), algo="weight_only_int8", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 256],"float16"), algo="weight_only_int8", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 256],"float16"), algo="weight_only_int8", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 256],"float16"), algo="weight_only_int8", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 256],"float16"), algo="weight_only_int8", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 64],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([768, 22016],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([768, 2304],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([768, 768],"float16"), algo="weight_only_int8", )
paddle.nn.utils.parameters_to_vector(list[Tensor([10, 15],"float32"),Tensor([15],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([10, 20],"float32"),Tensor([20],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([10, 3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([2, 2],"float32"),Tensor([2],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([3, 2, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.parameters_to_vector(list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([165],"float32"), list[Tensor([10, 15],"float32"),Tensor([15],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([27],"float32"), list[Tensor([3, 2, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([30],"float32"), list[Tensor([10, 3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([387],"float32"), list[Tensor([3, 2, 4, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([6],"float32"), list[Tensor([2, 2],"float32"),Tensor([2],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([960],"float32"), list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([99],"float32"), list[Tensor([3, 2, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.pdist(Tensor([10, 20],"float32"), 0, )
paddle.pdist(Tensor([10, 20],"float32"), 1.0, )
paddle.pdist(Tensor([10, 20],"float32"), 1.5, )
paddle.pdist(Tensor([10, 20],"float32"), 2.0, )
paddle.pdist(Tensor([10, 20],"float32"), 2.5, )
paddle.pdist(Tensor([10, 20],"float32"), 3.0, )
paddle.pdist(Tensor([10, 20],"float32"), math.inf, )
paddle.pdist(Tensor([50, 20],"float64"), 2.0, )
paddle.polygamma(Tensor([10, 20, 1],"float32"), 1, )
paddle.polygamma(Tensor([2, 2, 6],"float64"), 2, )
paddle.polygamma(Tensor([2, 6],"float64"), 1, )
paddle.polygamma(Tensor([6],"float32"), 1, )
paddle.polygamma(Tensor([6],"float32"), 2, )
paddle.polygamma(Tensor([6],"float32"), 3, )
paddle.polygamma(Tensor([6],"float64"), 1, )
paddle.polygamma(Tensor([6],"float64"), 2, )
paddle.polygamma(Tensor([6],"float64"), 3, )
paddle.polygamma(Tensor([],"float32"), 2, )
paddle.rad2deg(Tensor([1],"float32"), )
paddle.rad2deg(Tensor([1],"int64"), )
paddle.rad2deg(Tensor([6],"float32"), )
paddle.rad2deg(Tensor([8, 16, 32],"float32"), )
paddle.rad2deg(Tensor([],"float32"), )
paddle.rad2deg(x=Tensor([10],"float32"), )
paddle.rad2deg(x=Tensor([10],"float64"), )
paddle.rad2deg(x=Tensor([10],"int32"), )
paddle.rad2deg(x=Tensor([10],"int64"), )
paddle.rad2deg(x=Tensor([1],"float64"), )
paddle.rad2deg(x=Tensor([4, 4, 4, 4],"float64"), )
paddle.rad2deg(x=Tensor([4, 4, 4],"float64"), )
paddle.rad2deg(x=Tensor([4, 4],"float64"), )
paddle.real(Tensor([10, 10, 10, 20],"complex64"), )
paddle.real(Tensor([2, 20, 2, 3],"complex128"), )
paddle.real(Tensor([2, 20, 2, 3],"complex64"), )
paddle.real(Tensor([],"complex64"), )
paddle.real(x=Tensor([1, 10],"complex64"), )
paddle.real(x=Tensor([20, 10],"complex128"), )
paddle.real(x=Tensor([20, 10],"complex64"), )
paddle.reciprocal(Tensor([16, 1, 640, 640],"float16"), )
paddle.reciprocal(Tensor([16, 1, 640, 640],"float32"), )
paddle.reciprocal(Tensor([2, 300, 2048],"float32"), )
paddle.reciprocal(Tensor([4, 1, 640, 640],"float16"), )
paddle.reciprocal(Tensor([4, 1, 640, 640],"float32"), )
paddle.reciprocal(Tensor([4, 1, 960, 960],"float32"), )
paddle.reciprocal(Tensor([8, 1, 640, 640],"float16"), )
paddle.reciprocal(Tensor([8, 1, 640, 640],"float32"), )
paddle.reciprocal(Tensor([8, 1, 960, 960],"float16"), )
paddle.reciprocal(Tensor([8, 1, 960, 960],"float32"), )
paddle.reciprocal(Tensor([],"float32"), )
paddle.reciprocal(x=Tensor([3, 3, 3],"float32"), )
paddle.reciprocal(x=Tensor([3, 3, 3],"float64"), )
paddle.renorm(Tensor([10, 20, 1],"float32"), 1.0, -1, 2.05, )
paddle.renorm(Tensor([2, 2, 3],"float32"), 1.0, -1, 2.05, )
paddle.renorm(Tensor([2, 2, 3],"float32"), 1.0, 2, 2.05, )
paddle.renorm(x=Tensor([3, 2, 3],"float32"), p=1, axis=0, max_norm=5, )
paddle.renorm(x=Tensor([3, 2, 3],"float64"), p=1, axis=0, max_norm=5, )
paddle.renorm(x=Tensor([3, 2, 3],"float64"), p=1.2, axis=2, max_norm=6.5, )
paddle.renorm(x=Tensor([3, 2, 3],"float64"), p=1.5, axis=2, max_norm=20, )
paddle.renorm(x=Tensor([3, 2, 3],"float64"), p=2, axis=1, max_norm=20, )
paddle.renorm(x=Tensor([3, 2, 3],"float64"), p=2, axis=1, max_norm=40, )
paddle.renorm(x=Tensor([3, 2, 3],"float64"), p=2, axis=1, max_norm=50, )
paddle.repeat_interleave(Tensor([1, 128],"float32"), 128, 0, )
paddle.repeat_interleave(Tensor([1, 1500, 1024],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([1, 1500, 1280],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([1, 1500, 384],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([1, 1500, 512],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([1, 1500, 768],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([1, 2],"float32"), 2, axis=1, )
paddle.repeat_interleave(Tensor([1, 2],"int64"), 1, axis=0, )
paddle.repeat_interleave(Tensor([1, 2],"int64"), 2, axis=0, )
paddle.repeat_interleave(Tensor([1, 3],"int64"), 5, axis=0, )
paddle.repeat_interleave(Tensor([1, 70],"int64"), 3, 1, )
paddle.repeat_interleave(Tensor([10, 2],"float32"), 2, axis=1, )
paddle.repeat_interleave(Tensor([13, 384, 1],"float32"), 1, 2, )
paddle.repeat_interleave(Tensor([14, 1, 384, 384],"float32"), repeats=3, axis=1, )
paddle.repeat_interleave(Tensor([16, 384, 1],"float32"), 1, 2, )
paddle.repeat_interleave(Tensor([2, 2],"float32"), 2, axis=1, )
paddle.repeat_interleave(Tensor([2, 3],"bfloat16"), 2, None, )
paddle.repeat_interleave(Tensor([2, 3],"int32"), 2, None, )
paddle.repeat_interleave(Tensor([3, 2],"float32"), 2, axis=1, )
paddle.repeat_interleave(Tensor([3, 384, 1],"float32"), 1, 2, )
paddle.repeat_interleave(Tensor([4, 2],"float32"), 2, axis=1, )
paddle.repeat_interleave(Tensor([5, 1, 768, 768],"float32"), repeats=3, axis=1, )
paddle.repeat_interleave(Tensor([5, 2],"float32"), 2, axis=1, )
paddle.repeat_interleave(Tensor([7, 1, 192, 672],"float32"), repeats=3, axis=1, )
paddle.repeat_interleave(Tensor([7, 2],"float32"), 2, axis=1, )
paddle.repeat_interleave(Tensor([8, 2],"float32"), 2, axis=1, )
paddle.repeat_interleave(Tensor([],"float32"), 2, None, )
paddle.repeat_interleave(x=Tensor([4, 2, 4, 4, 5],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([4, 2, 4, 4, 5],"float64"), repeats=2, axis=1, )
paddle.repeat_interleave(x=Tensor([4, 2, 4, 4, 5],"int32"), repeats=2, axis=3, )
paddle.repeat_interleave(x=Tensor([4, 2, 4, 5],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([4, 2, 4],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([4, 2],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([4],"float32"), repeats=3, )
paddle.repeat_interleave(x=Tensor([4],"float64"), repeats=3, )
paddle.rot90(Tensor([2, 3],"float32"), k=1, axes=list[0,1,], )
paddle.rot90(x=Tensor([2, 2],"float64"), k=-4, )
paddle.rot90(x=Tensor([3, 4],"float64"), )
paddle.rot90(x=Tensor([4, 4, 4, 4],"float64"), )
paddle.rot90(x=Tensor([4, 4, 4, 4],"float64"), k=-1, axes=list[1,2,], )
paddle.rot90(x=Tensor([4, 4, 4, 4],"float64"), k=-1, axes=tuple(2,3,), )
paddle.rot90(x=Tensor([4, 4, 4],"float64"), )
paddle.rot90(x=Tensor([4, 4],"float32"), )
paddle.rot90(x=Tensor([4, 4],"float64"), )
paddle.rot90(x=Tensor([4, 4],"float64"), k=-1, )
paddle.rot90(x=Tensor([4, 4],"float64"), k=4, )
paddle.rot90(x=Tensor([4, 4],"int32"), )
paddle.rot90(x=Tensor([4, 4],"int64"), )
paddle.row_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1],"float64"),Tensor([1],"float64"),Tensor([1],"float64"),], )
paddle.row_stack(list[Tensor([1],"float64"),], )
paddle.row_stack(list[Tensor([2],"float64"),Tensor([1, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([5],"float64"),Tensor([5],"float64"),Tensor([5],"float64"),], )
paddle.row_stack(list[Tensor([],"float16"),], )
paddle.row_stack(list[Tensor([],"float32"),], )
paddle.row_stack(list[Tensor([],"float64"),Tensor([],"float64"),Tensor([],"float64"),], )
paddle.row_stack(list[Tensor([],"float64"),], )
paddle.row_stack(list[Tensor([],"int32"),], )
paddle.row_stack(list[Tensor([],"int64"),], )
paddle.rsqrt(Tensor([1, 1, 1],"float32"), )
paddle.rsqrt(Tensor([1, 1, 4096],"float32"), )
paddle.rsqrt(Tensor([1, 10, 1],"float32"), )
paddle.rsqrt(Tensor([1, 1024, 1],"float32"), )
paddle.rsqrt(Tensor([1, 11, 1],"float32"), )
paddle.rsqrt(Tensor([1, 128],"float32"), )
paddle.rsqrt(Tensor([1, 17, 1],"float32"), )
paddle.rsqrt(Tensor([1, 1],"float32"), )
paddle.rsqrt(Tensor([1, 2, 1],"float32"), )
paddle.rsqrt(Tensor([1, 20, 1],"float32"), )
paddle.rsqrt(Tensor([1, 2048, 1],"float32"), )
paddle.rsqrt(Tensor([1, 256],"float32"), )
paddle.rsqrt(Tensor([1, 300, 1],"float32"), )
paddle.rsqrt(Tensor([1, 4, 1],"float32"), )
paddle.rsqrt(Tensor([1, 4096, 1],"float32"), )
paddle.rsqrt(Tensor([1, 5, 1],"float32"), )
paddle.rsqrt(Tensor([1, 512],"float32"), )
paddle.rsqrt(Tensor([1, 58, 1],"float32"), )
paddle.rsqrt(Tensor([1, 6, 1],"float32"), )
paddle.rsqrt(Tensor([1, 7, 1],"float32"), )
paddle.rsqrt(Tensor([1, 8, 1],"float32"), )
paddle.rsqrt(Tensor([10, 2, 1],"float32"), )
paddle.rsqrt(Tensor([10000, 2, 3],"float32"), )
paddle.rsqrt(Tensor([10000, 2, 3],"float64"), )
paddle.rsqrt(Tensor([10000],"float32"), )
paddle.rsqrt(Tensor([12, 17, 1],"float32"), )
paddle.rsqrt(Tensor([12, 24, 1],"float32"), )
paddle.rsqrt(Tensor([12, 9, 1],"float32"), )
paddle.rsqrt(Tensor([13, 1, 1],"float32"), )
paddle.rsqrt(Tensor([13, 10, 1],"float32"), )
paddle.rsqrt(Tensor([13, 1007, 1],"float32"), )
paddle.rsqrt(Tensor([13, 2, 16, 4, 1],"float32"), )
paddle.rsqrt(Tensor([13, 3, 1],"float32"), )
paddle.rsqrt(Tensor([13, 7, 1],"float32"), )
paddle.rsqrt(Tensor([13, 8, 1],"float32"), )
paddle.rsqrt(Tensor([13, 9, 1],"float32"), )
paddle.rsqrt(Tensor([134, 4, 1],"float32"), )
paddle.rsqrt(Tensor([14, 7, 1],"float32"), )
paddle.rsqrt(Tensor([145, 4, 1],"float32"), )
paddle.rsqrt(Tensor([158, 4, 1],"float32"), )
paddle.rsqrt(Tensor([16, 1],"float32"), )
paddle.rsqrt(Tensor([16, 1],"float64"), )
paddle.rsqrt(Tensor([168, 4, 1],"float32"), )
paddle.rsqrt(Tensor([2, 1, 1],"float32"), )
paddle.rsqrt(Tensor([2, 10, 1],"float32"), )
paddle.rsqrt(Tensor([2, 107, 1],"float32"), )
paddle.rsqrt(Tensor([2, 109, 1],"float32"), )
paddle.rsqrt(Tensor([2, 110, 1],"float32"), )
paddle.rsqrt(Tensor([2, 111, 1],"float32"), )
paddle.rsqrt(Tensor([2, 112, 1],"float32"), )
paddle.rsqrt(Tensor([2, 114, 1],"float32"), )
paddle.rsqrt(Tensor([2, 1],"float16"), )
paddle.rsqrt(Tensor([2, 1],"float32"), )
paddle.rsqrt(Tensor([2, 288, 1],"float32"), )
paddle.rsqrt(Tensor([2, 3, 1],"float32"), )
paddle.rsqrt(Tensor([2, 302, 1],"float32"), )
paddle.rsqrt(Tensor([2, 304, 1],"float32"), )
paddle.rsqrt(Tensor([2, 346, 1],"float32"), )
paddle.rsqrt(Tensor([2, 35, 1],"float32"), )
paddle.rsqrt(Tensor([2, 37, 1],"float32"), )
paddle.rsqrt(Tensor([2, 38, 1],"float32"), )
paddle.rsqrt(Tensor([2, 39, 1],"float32"), )
paddle.rsqrt(Tensor([2, 3],"float32"), )
paddle.rsqrt(Tensor([2, 3],"float64"), )
paddle.rsqrt(Tensor([2, 45, 1],"float32"), )
paddle.rsqrt(Tensor([2, 5, 1],"float32"), )
paddle.rsqrt(Tensor([2, 50, 1],"float32"), )
paddle.rsqrt(Tensor([2, 51, 1],"float32"), )
paddle.rsqrt(Tensor([2, 52, 1],"float32"), )
paddle.rsqrt(Tensor([2, 57, 1],"float32"), )
paddle.rsqrt(Tensor([2, 6, 1],"float32"), )
paddle.rsqrt(Tensor([2, 74, 1],"float32"), )
paddle.rsqrt(Tensor([2, 79, 1],"float32"), )
paddle.rsqrt(Tensor([2, 80, 1],"float32"), )
paddle.rsqrt(Tensor([2, 82, 1],"float32"), )
paddle.rsqrt(Tensor([2, 91, 1],"float32"), )
paddle.rsqrt(Tensor([20, 1, 1],"float32"), )
paddle.rsqrt(Tensor([2048, 1, 1],"float32"), )
paddle.rsqrt(Tensor([32, 1],"float16"), )
paddle.rsqrt(Tensor([32, 1],"float32"), )
paddle.rsqrt(Tensor([38, 2, 1],"float32"), )
paddle.rsqrt(Tensor([39, 2, 1],"float32"), )
paddle.rsqrt(Tensor([4, 1, 1],"float32"), )
paddle.rsqrt(Tensor([4, 115, 1],"float32"), )
paddle.rsqrt(Tensor([4, 127, 1],"float32"), )
paddle.rsqrt(Tensor([4, 128],"float32"), )
paddle.rsqrt(Tensor([4, 132, 1],"float32"), )
paddle.rsqrt(Tensor([4, 147, 1],"float32"), )
paddle.rsqrt(Tensor([4, 148, 1],"float32"), )
paddle.rsqrt(Tensor([4, 152, 1],"float32"), )
paddle.rsqrt(Tensor([4, 156, 1],"float32"), )
paddle.rsqrt(Tensor([4, 164, 1],"float32"), )
paddle.rsqrt(Tensor([4, 172, 1],"float32"), )
paddle.rsqrt(Tensor([4, 182, 1],"float32"), )
paddle.rsqrt(Tensor([4, 198, 1],"float32"), )
paddle.rsqrt(Tensor([4, 1],"float32"), )
paddle.rsqrt(Tensor([4, 256],"float32"), )
paddle.rsqrt(Tensor([4, 3, 1],"float32"), )
paddle.rsqrt(Tensor([4, 304, 1],"float32"), )
paddle.rsqrt(Tensor([4, 346, 1],"float32"), )
paddle.rsqrt(Tensor([4, 377, 1],"float32"), )
paddle.rsqrt(Tensor([4, 396, 1],"float32"), )
paddle.rsqrt(Tensor([4, 5, 1],"float32"), )
paddle.rsqrt(Tensor([4, 512],"float32"), )
paddle.rsqrt(Tensor([40, 2, 1],"float32"), )
paddle.rsqrt(Tensor([41, 2, 1],"float32"), )
paddle.rsqrt(Tensor([47, 2, 1],"float32"), )
paddle.rsqrt(Tensor([5, 10, 1],"float32"), )
paddle.rsqrt(Tensor([5, 2, 1],"float32"), )
paddle.rsqrt(Tensor([5, 4, 1],"float32"), )
paddle.rsqrt(Tensor([5, 6, 1],"float32"), )
paddle.rsqrt(Tensor([51, 2, 1],"float32"), )
paddle.rsqrt(Tensor([53, 2, 1],"float32"), )
paddle.rsqrt(Tensor([54, 2, 1],"float32"), )
paddle.rsqrt(Tensor([57, 2, 1],"float32"), )
paddle.rsqrt(Tensor([58, 1, 1],"float32"), )
paddle.rsqrt(Tensor([6, 1, 1],"float32"), )
paddle.rsqrt(Tensor([6, 3, 1],"float32"), )
paddle.rsqrt(Tensor([6, 5, 1],"float32"), )
paddle.rsqrt(Tensor([8, 128],"float32"), )
paddle.rsqrt(Tensor([8, 1],"float32"), )
paddle.rsqrt(Tensor([8, 256],"float32"), )
paddle.rsqrt(Tensor([8, 512, 1],"float32"), )
paddle.rsqrt(Tensor([8, 512],"float32"), )
paddle.rsqrt(Tensor([8, 63, 1],"float32"), )
paddle.rsqrt(Tensor([],"float32"), )
paddle.rsqrt(x=Tensor([2, 3, 2],"float32"), )
paddle.rsqrt(x=Tensor([2, 3, 2],"float64"), )
paddle.rsqrt(x=Tensor([2, 3, 3],"float64"), )
paddle.rsqrt(x=Tensor([],"float64"), )
paddle.select_scatter(Tensor([2, 3, 4, 5, 6],"int32"), Tensor([2, 3, 5, 6],"int32"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 4, 5],"float64"), Tensor([2, 3, 5],"float64"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 4],"float32"), Tensor([2, 4],"float32"), 1, 1, )
paddle.sgn(Tensor([12, 20, 2],"float16"), )
paddle.sgn(Tensor([12, 20, 2],"float32"), )
paddle.sgn(Tensor([12, 20, 2],"float64"), )
paddle.sgn(Tensor([2, 4],"complex128"), )
paddle.sgn(Tensor([2, 4],"complex64"), )
paddle.sgn(Tensor([],"float32"), )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, 99, 299, Tensor([299],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, 99, None, Tensor([512],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, None, None, None, False, False, True, 1888, False, )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, None, None, None, False, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, None, None, None, True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, None, None, Tensor([512],"float64"), True, False, True, None, False, )
paddle.signbit(Tensor([11, 17, 10],"int16"), )
paddle.signbit(Tensor([11, 17, 10],"int32"), )
paddle.signbit(Tensor([11, 17],"float32"), )
paddle.signbit(Tensor([12, 20, 2],"float32"), )
paddle.signbit(Tensor([12, 20, 2],"float64"), )
paddle.signbit(Tensor([12, 20, 2],"int16"), )
paddle.signbit(Tensor([12, 20, 2],"int32"), )
paddle.signbit(Tensor([12, 20, 2],"int64"), )
paddle.signbit(Tensor([12, 20, 2],"int8"), )
paddle.signbit(Tensor([12, 20, 2],"uint8"), )
paddle.signbit(Tensor([132],"int64"), )
paddle.signbit(Tensor([132],"uint8"), )
paddle.signbit(Tensor([2, 3, 4, 5],"float64"), )
paddle.signbit(Tensor([2, 3, 4, 5],"int8"), )
paddle.signbit(Tensor([8, 17, 5, 6, 7],"float16"), )
paddle.sin(Tensor([1, 128, 1, 32],"float32"), )
paddle.sin(Tensor([1, 25, 1],"float32"), )
paddle.sin(Tensor([1, 2],"float32"), )
paddle.sin(Tensor([1, 4096, 1, 128],"float32"), )
paddle.sin(Tensor([1, 4096, 1, 64],"float32"), )
paddle.sin(Tensor([10, 10],"float32"), )
paddle.sin(Tensor([10, 20, 1],"float32"), )
paddle.sin(Tensor([10, 2],"float32"), )
paddle.sin(Tensor([100, 128],"float32"), )
paddle.sin(Tensor([100, 256],"float32"), )
paddle.sin(Tensor([1024, 256],"float32"), )
paddle.sin(Tensor([11, 50],"float32"), )
paddle.sin(Tensor([1156, 256],"float32"), )
paddle.sin(Tensor([121, 128],"float32"), )
paddle.sin(Tensor([121, 256],"float32"), )
paddle.sin(Tensor([1296, 256],"float32"), )
paddle.sin(Tensor([14, 16],"float32"), )
paddle.sin(Tensor([144, 128],"float32"), )
paddle.sin(Tensor([144, 256],"float32"), )
paddle.sin(Tensor([1444, 256],"float32"), )
paddle.sin(Tensor([1500, 192],"float32"), )
paddle.sin(Tensor([1500, 256],"float32"), )
paddle.sin(Tensor([1500, 384],"float32"), )
paddle.sin(Tensor([1500, 512],"float32"), )
paddle.sin(Tensor([1500, 640],"float32"), )
paddle.sin(Tensor([16, 16],"float32"), )
paddle.sin(Tensor([1600, 256],"float32"), )
paddle.sin(Tensor([1600, 64],"float32"), )
paddle.sin(Tensor([169, 128],"float32"), )
paddle.sin(Tensor([169, 256],"float32"), )
paddle.sin(Tensor([1764, 256],"float32"), )
paddle.sin(Tensor([1936, 256],"float32"), )
paddle.sin(Tensor([196, 128],"float32"), )
paddle.sin(Tensor([196, 192],"float32"), )
paddle.sin(Tensor([196, 256],"float32"), )
paddle.sin(Tensor([2, 107136, 1],"float32"), )
paddle.sin(Tensor([2, 10],"float32"), )
paddle.sin(Tensor([2, 14],"float32"), )
paddle.sin(Tensor([2, 16],"float32"), )
paddle.sin(Tensor([2, 28],"float32"), )
paddle.sin(Tensor([2, 2],"float32"), )
paddle.sin(Tensor([2, 3, 4],"float32"), )
paddle.sin(Tensor([2, 32],"float32"), )
paddle.sin(Tensor([2, 3],"float32"), )
paddle.sin(Tensor([2, 44],"float32"), )
paddle.sin(Tensor([2048, 1],"float32"), )
paddle.sin(Tensor([2048, 2],"float32"), )
paddle.sin(Tensor([2048, 32],"float32"), )
paddle.sin(Tensor([2116, 256],"float32"), )
paddle.sin(Tensor([2116, 64],"float32"), )
paddle.sin(Tensor([225, 128],"float32"), )
paddle.sin(Tensor([225, 256],"float32"), )
paddle.sin(Tensor([225, 64],"float32"), )
paddle.sin(Tensor([2304, 256],"float32"), )
paddle.sin(Tensor([2304, 64],"float32"), )
paddle.sin(Tensor([2500, 256],"float32"), )
paddle.sin(Tensor([256, 128],"float32"), )
paddle.sin(Tensor([256, 256],"float32"), )
paddle.sin(Tensor([256, 64],"float32"), )
paddle.sin(Tensor([2704, 256],"float32"), )
paddle.sin(Tensor([28, 16],"float32"), )
paddle.sin(Tensor([289, 128],"float32"), )
paddle.sin(Tensor([289, 256],"float32"), )
paddle.sin(Tensor([289, 64],"float32"), )
paddle.sin(Tensor([2916, 256],"float32"), )
paddle.sin(Tensor([2],"float32"), )
paddle.sin(Tensor([2],"float64"), )
paddle.sin(Tensor([3, 28],"float32"), )
paddle.sin(Tensor([3, 2],"float32"), )
paddle.sin(Tensor([3, 306],"float32"), )
paddle.sin(Tensor([304],"float32"), )
paddle.sin(Tensor([3136, 256],"float32"), )
paddle.sin(Tensor([324, 128],"float32"), )
paddle.sin(Tensor([324, 256],"float32"), )
paddle.sin(Tensor([32768, 32],"float32"), )
paddle.sin(Tensor([3364, 256],"float32"), )
paddle.sin(Tensor([36, 306],"float32"), )
paddle.sin(Tensor([3600, 256],"float32"), )
paddle.sin(Tensor([361, 128],"float32"), )
paddle.sin(Tensor([361, 256],"float32"), )
paddle.sin(Tensor([4, 157920, 1],"float32"), )
paddle.sin(Tensor([4, 2],"float32"), )
paddle.sin(Tensor([400, 128],"float32"), )
paddle.sin(Tensor([400, 256],"float32"), )
paddle.sin(Tensor([400, 64],"float16"), )
paddle.sin(Tensor([400, 64],"float32"), )
paddle.sin(Tensor([400, 96],"float32"), )
paddle.sin(Tensor([4000, 12],"float32"), )
paddle.sin(Tensor([4004, 12],"float32"), )
paddle.sin(Tensor([441, 128],"float32"), )
paddle.sin(Tensor([441, 256],"float32"), )
paddle.sin(Tensor([450, 12],"float32"), )
paddle.sin(Tensor([454, 12],"float32"), )
paddle.sin(Tensor([484, 128],"float32"), )
paddle.sin(Tensor([484, 256],"float32"), )
paddle.sin(Tensor([5, 2],"float32"), )
paddle.sin(Tensor([5000, 192],"float32"), )
paddle.sin(Tensor([5000, 256],"float32"), )
paddle.sin(Tensor([511],"float64"), )
paddle.sin(Tensor([512, 16],"float32"), )
paddle.sin(Tensor([513],"float64"), )
paddle.sin(Tensor([529, 128],"float32"), )
paddle.sin(Tensor([529, 256],"float32"), )
paddle.sin(Tensor([529, 64],"float32"), )
paddle.sin(Tensor([529, 96],"float32"), )
paddle.sin(Tensor([576, 128],"float32"), )
paddle.sin(Tensor([576, 256],"float32"), )
paddle.sin(Tensor([64, 32],"float16"), )
paddle.sin(Tensor([65, 32],"float16"), )
paddle.sin(Tensor([7, 110],"float32"), )
paddle.sin(Tensor([7, 2],"float32"), )
paddle.sin(Tensor([8, 16, 32],"complex128"), )
paddle.sin(Tensor([8, 16, 32],"complex64"), )
paddle.sin(Tensor([8, 16, 32],"float16"), )
paddle.sin(Tensor([8, 16, 32],"float32"), )
paddle.sin(Tensor([8, 16, 32],"float64"), )
paddle.sin(Tensor([8, 2],"float32"), )
paddle.sin(Tensor([],"float32"), )
paddle.sin(x=Tensor([2, 2, 3],"float64"), )
paddle.sin(x=Tensor([2, 2, 3],"float64"), name="test_sin", )
paddle.sin(x=Tensor([3],"float64"), )
paddle.sin(x=Tensor([4],"float32"), )
paddle.sin(x=Tensor([4],"float64"), )
paddle.sinc(Tensor([16, 64],"float32"), )
paddle.sinc(Tensor([16, 64],"float64"), )
paddle.sinc(Tensor([6],"float32"), )
paddle.sinc(Tensor([6],"float64"), )
paddle.sinh(Tensor([10, 20, 1],"float32"), )
paddle.sinh(Tensor([8, 16, 32],"complex128"), )
paddle.sinh(Tensor([8, 16, 32],"complex64"), )
paddle.sinh(Tensor([8, 16, 32],"float16"), )
paddle.sinh(Tensor([8, 16, 32],"float32"), )
paddle.sinh(Tensor([8, 16, 32],"float64"), )
paddle.sinh(Tensor([],"float32"), )
paddle.sinh(x=Tensor([1, 2],"float32"), )
paddle.sinh(x=Tensor([1, 2],"float64"), )
paddle.sinh(x=Tensor([1],"float64"), )
paddle.sinh(x=Tensor([2, 2],"float64"), )
paddle.sinh(x=Tensor([2, 3, 2, 2],"float64"), )
paddle.sqrt(Tensor([1, 1, 1],"float32"), )
paddle.sqrt(Tensor([1, 1, 3],"float64"), )
paddle.sqrt(Tensor([1, 10, 1],"float32"), )
paddle.sqrt(Tensor([1, 10],"float64"), )
paddle.sqrt(Tensor([1, 11, 1],"float32"), )
paddle.sqrt(Tensor([1, 12, 1],"float32"), )
paddle.sqrt(Tensor([1, 13, 1],"float32"), )
paddle.sqrt(Tensor([1, 14, 1],"float32"), )
paddle.sqrt(Tensor([1, 159],"float32"), )
paddle.sqrt(Tensor([1, 16, 1],"float32"), )
paddle.sqrt(Tensor([1, 1],"float32"), )
paddle.sqrt(Tensor([1, 2, 1],"float32"), )
paddle.sqrt(Tensor([1, 2, 2],"float32"), )
paddle.sqrt(Tensor([1, 20, 1],"float32"), )
paddle.sqrt(Tensor([1, 3, 10],"float64"), )
paddle.sqrt(Tensor([1, 3, 1],"float32"), )
paddle.sqrt(Tensor([1, 4, 1],"float32"), )
paddle.sqrt(Tensor([1, 4],"float32"), )
paddle.sqrt(Tensor([1, 4],"float64"), )
paddle.sqrt(Tensor([1, 5, 1],"float32"), )
paddle.sqrt(Tensor([1, 6, 1],"float32"), )
paddle.sqrt(Tensor([1, 7, 1],"float32"), )
paddle.sqrt(Tensor([1, 8, 1],"float32"), )
paddle.sqrt(Tensor([1, 9, 1],"float32"), )
paddle.sqrt(Tensor([1, 93431],"float32"), )
paddle.sqrt(Tensor([1, 995],"float32"), )
paddle.sqrt(Tensor([10, 1],"float32"), )
paddle.sqrt(Tensor([100, 1],"float32"), )
paddle.sqrt(Tensor([103, 1],"float32"), )
paddle.sqrt(Tensor([104, 1],"float32"), )
paddle.sqrt(Tensor([104, 93431],"float32"), )
paddle.sqrt(Tensor([108, 1],"float32"), )
paddle.sqrt(Tensor([10],"float32"), )
paddle.sqrt(Tensor([11, 1],"float32"), )
paddle.sqrt(Tensor([111, 1],"float32"), )
paddle.sqrt(Tensor([12, 1],"float32"), )
paddle.sqrt(Tensor([124, 1, 14, 14],"float32"), )
paddle.sqrt(Tensor([124, 1, 24, 24],"float32"), )
paddle.sqrt(Tensor([124, 1, 28, 28],"float32"), )
paddle.sqrt(Tensor([124, 1, 48, 48],"float32"), )
paddle.sqrt(Tensor([124, 1, 56, 56],"float32"), )
paddle.sqrt(Tensor([124, 1, 96, 96],"float32"), )
paddle.sqrt(Tensor([128, 1, 14, 14],"float16"), )
paddle.sqrt(Tensor([128, 1, 14, 14],"float32"), )
paddle.sqrt(Tensor([128, 1, 24, 24],"float32"), )
paddle.sqrt(Tensor([128, 1, 28, 28],"float16"), )
paddle.sqrt(Tensor([128, 1, 28, 28],"float32"), )
paddle.sqrt(Tensor([128, 1, 48, 48],"float32"), )
paddle.sqrt(Tensor([128, 1, 56, 56],"float16"), )
paddle.sqrt(Tensor([128, 1, 56, 56],"float32"), )
paddle.sqrt(Tensor([128, 1, 96, 96],"float32"), )
paddle.sqrt(Tensor([128, 1],"float32"), )
paddle.sqrt(Tensor([128, 93431],"float32"), )
paddle.sqrt(Tensor([13, 1],"float32"), )
paddle.sqrt(Tensor([13, 7, 1],"float32"), )
paddle.sqrt(Tensor([14, 1],"float32"), )
paddle.sqrt(Tensor([15, 1],"float32"), )
paddle.sqrt(Tensor([16, 1, 1, 1],"float32"), )
paddle.sqrt(Tensor([16, 1, 14, 14],"float32"), )
paddle.sqrt(Tensor([16, 1, 24, 24],"float32"), )
paddle.sqrt(Tensor([16, 1, 28, 28],"float32"), )
paddle.sqrt(Tensor([16, 1, 48, 48],"float32"), )
paddle.sqrt(Tensor([16, 1, 56, 56],"float32"), )
paddle.sqrt(Tensor([16, 1, 96, 96],"float32"), )
paddle.sqrt(Tensor([16, 10, 1],"float32"), )
paddle.sqrt(Tensor([16, 1025, 107],"float32"), )
paddle.sqrt(Tensor([16, 11, 1],"float32"), )
paddle.sqrt(Tensor([16, 12, 1],"float32"), )
paddle.sqrt(Tensor([16, 13, 1],"float32"), )
paddle.sqrt(Tensor([16, 14, 1],"float32"), )
paddle.sqrt(Tensor([16, 15, 1],"float32"), )
paddle.sqrt(Tensor([16, 159],"float32"), )
paddle.sqrt(Tensor([16, 16, 1],"float32"), )
paddle.sqrt(Tensor([16, 17, 1],"float32"), )
paddle.sqrt(Tensor([16, 18, 1],"float32"), )
paddle.sqrt(Tensor([16, 19, 1],"float32"), )
paddle.sqrt(Tensor([16, 1],"float32"), )
paddle.sqrt(Tensor([16, 2, 1],"float32"), )
paddle.sqrt(Tensor([16, 20, 1],"float32"), )
paddle.sqrt(Tensor([16, 21, 1],"float32"), )
paddle.sqrt(Tensor([16, 22, 1],"float32"), )
paddle.sqrt(Tensor([16, 23, 1],"float32"), )
paddle.sqrt(Tensor([16, 24, 1],"float32"), )
paddle.sqrt(Tensor([16, 25, 1],"float32"), )
paddle.sqrt(Tensor([16, 257, 511],"float32"), )
paddle.sqrt(Tensor([16, 26, 1],"float32"), )
paddle.sqrt(Tensor([16, 27, 1],"float32"), )
paddle.sqrt(Tensor([16, 28, 1],"float32"), )
paddle.sqrt(Tensor([16, 29, 1],"float32"), )
paddle.sqrt(Tensor([16, 3, 1],"float32"), )
paddle.sqrt(Tensor([16, 30, 1],"float32"), )
paddle.sqrt(Tensor([16, 31, 1],"float32"), )
paddle.sqrt(Tensor([16, 32, 1],"float32"), )
paddle.sqrt(Tensor([16, 33, 1],"float32"), )
paddle.sqrt(Tensor([16, 34, 1],"float32"), )
paddle.sqrt(Tensor([16, 35, 1],"float32"), )
paddle.sqrt(Tensor([16, 36, 1],"float32"), )
paddle.sqrt(Tensor([16, 37, 1],"float32"), )
paddle.sqrt(Tensor([16, 38, 1],"float32"), )
paddle.sqrt(Tensor([16, 39, 1],"float32"), )
paddle.sqrt(Tensor([16, 40, 1],"float32"), )
paddle.sqrt(Tensor([16, 42, 1],"float32"), )
paddle.sqrt(Tensor([16, 43, 1],"float32"), )
paddle.sqrt(Tensor([16, 45, 1],"float32"), )
paddle.sqrt(Tensor([16, 48, 1],"float32"), )
paddle.sqrt(Tensor([16, 49, 1],"float32"), )
paddle.sqrt(Tensor([16, 5, 1],"float32"), )
paddle.sqrt(Tensor([16, 50, 1],"float32"), )
paddle.sqrt(Tensor([16, 513, 213],"float32"), )
paddle.sqrt(Tensor([16, 52, 1],"float32"), )
paddle.sqrt(Tensor([16, 54, 1],"float32"), )
paddle.sqrt(Tensor([16, 55, 1],"float32"), )
paddle.sqrt(Tensor([16, 6, 1],"float32"), )
paddle.sqrt(Tensor([16, 7, 1],"float32"), )
paddle.sqrt(Tensor([16, 77, 1],"float32"), )
paddle.sqrt(Tensor([16, 8, 1],"float32"), )
paddle.sqrt(Tensor([16, 9, 1],"float32"), )
paddle.sqrt(Tensor([17, 1],"float32"), )
paddle.sqrt(Tensor([18, 1],"float32"), )
paddle.sqrt(Tensor([19, 1],"float32"), )
paddle.sqrt(Tensor([192, 1, 1, 1],"float32"), )
paddle.sqrt(Tensor([1],"float32"), )
paddle.sqrt(Tensor([1],"float64"), )
paddle.sqrt(Tensor([2, 1, 1],"float32"), )
paddle.sqrt(Tensor([2, 1, 512, 4, 4],"float32"), )
paddle.sqrt(Tensor([2, 10, 1],"float32"), )
paddle.sqrt(Tensor([2, 11, 1],"float32"), )
paddle.sqrt(Tensor([2, 12, 1],"float32"), )
paddle.sqrt(Tensor([2, 13, 1],"float32"), )
paddle.sqrt(Tensor([2, 14, 1],"float32"), )
paddle.sqrt(Tensor([2, 15, 1],"float32"), )
paddle.sqrt(Tensor([2, 16, 1],"float32"), )
paddle.sqrt(Tensor([2, 18, 1],"float32"), )
paddle.sqrt(Tensor([2, 19, 1],"float32"), )
paddle.sqrt(Tensor([2, 1],"float32"), )
paddle.sqrt(Tensor([2, 1],"float64"), )
paddle.sqrt(Tensor([2, 2, 1],"float32"), )
paddle.sqrt(Tensor([2, 2, 2],"float32"), )
paddle.sqrt(Tensor([2, 20, 1],"float32"), )
paddle.sqrt(Tensor([2, 21, 1],"float32"), )
paddle.sqrt(Tensor([2, 22, 1],"float32"), )
paddle.sqrt(Tensor([2, 23, 1],"float32"), )
paddle.sqrt(Tensor([2, 25, 1],"float32"), )
paddle.sqrt(Tensor([2, 28, 1],"float32"), )
paddle.sqrt(Tensor([2, 3, 1],"float32"), )
paddle.sqrt(Tensor([2, 30, 1],"float32"), )
paddle.sqrt(Tensor([2, 3],"float32"), )
paddle.sqrt(Tensor([2, 4, 1],"float32"), )
paddle.sqrt(Tensor([2, 5, 1],"float32"), )
paddle.sqrt(Tensor([2, 6, 1],"float32"), )
paddle.sqrt(Tensor([2, 7, 1],"float32"), )
paddle.sqrt(Tensor([2, 8, 1],"float32"), )
paddle.sqrt(Tensor([2, 9, 1],"float32"), )
paddle.sqrt(Tensor([21, 1],"float32"), )
paddle.sqrt(Tensor([22, 1],"float32"), )
paddle.sqrt(Tensor([23, 1],"float32"), )
paddle.sqrt(Tensor([24, 1, 1, 1],"float32"), )
paddle.sqrt(Tensor([24, 1],"float32"), )
paddle.sqrt(Tensor([25, 1],"float32"), )
paddle.sqrt(Tensor([26, 1],"float32"), )
paddle.sqrt(Tensor([26, 7, 1],"float32"), )
paddle.sqrt(Tensor([27, 1],"float32"), )
paddle.sqrt(Tensor([28, 1],"float32"), )
paddle.sqrt(Tensor([29, 1],"float32"), )
paddle.sqrt(Tensor([2],"float32"), )
paddle.sqrt(Tensor([3, 1],"float32"), )
paddle.sqrt(Tensor([3, 3],"float64"), )
paddle.sqrt(Tensor([30, 1],"float32"), )
paddle.sqrt(Tensor([304],"float32"), )
paddle.sqrt(Tensor([31, 1],"float32"), )
paddle.sqrt(Tensor([32, 1, 1, 1],"float32"), )
paddle.sqrt(Tensor([32, 1, 14, 14],"float32"), )
paddle.sqrt(Tensor([32, 1, 28, 28],"float32"), )
paddle.sqrt(Tensor([32, 1, 56, 56],"float32"), )
paddle.sqrt(Tensor([32, 159],"float32"), )
paddle.sqrt(Tensor([32, 1],"float32"), )
paddle.sqrt(Tensor([32, 32, 128],"float32"), )
paddle.sqrt(Tensor([33, 1],"float32"), )
paddle.sqrt(Tensor([34, 1],"float32"), )
paddle.sqrt(Tensor([35, 1],"float32"), )
paddle.sqrt(Tensor([36, 1],"float32"), )
paddle.sqrt(Tensor([37, 1],"float32"), )
paddle.sqrt(Tensor([38, 1],"float32"), )
paddle.sqrt(Tensor([384, 1, 1, 1],"float32"), )
paddle.sqrt(Tensor([39, 1],"float32"), )
paddle.sqrt(Tensor([3],"float64"), )
paddle.sqrt(Tensor([4, 1, 1],"float32"), )
paddle.sqrt(Tensor([4, 1, 32, 32],"float32"), )
paddle.sqrt(Tensor([4, 10, 1],"float32"), )
paddle.sqrt(Tensor([4, 113, 1],"float32"), )
paddle.sqrt(Tensor([4, 119, 1],"float32"), )
paddle.sqrt(Tensor([4, 12, 1],"float32"), )
paddle.sqrt(Tensor([4, 120, 1],"float32"), )
paddle.sqrt(Tensor([4, 121, 1],"float32"), )
paddle.sqrt(Tensor([4, 127, 1],"float32"), )
paddle.sqrt(Tensor([4, 130, 1],"float32"), )
paddle.sqrt(Tensor([4, 135, 1],"float32"), )
paddle.sqrt(Tensor([4, 15, 1],"float32"), )
paddle.sqrt(Tensor([4, 15, 3, 256, 256],"float32"), )
paddle.sqrt(Tensor([4, 16, 1],"float32"), )
paddle.sqrt(Tensor([4, 163, 1],"float32"), )
paddle.sqrt(Tensor([4, 166, 1],"float32"), )
paddle.sqrt(Tensor([4, 167, 1],"float32"), )
paddle.sqrt(Tensor([4, 17, 1],"float32"), )
paddle.sqrt(Tensor([4, 171, 1],"float32"), )
paddle.sqrt(Tensor([4, 173, 1],"float32"), )
paddle.sqrt(Tensor([4, 174, 1],"float32"), )
paddle.sqrt(Tensor([4, 176, 1],"float32"), )
paddle.sqrt(Tensor([4, 180, 1],"float32"), )
paddle.sqrt(Tensor([4, 19, 1],"float32"), )
paddle.sqrt(Tensor([4, 1],"float32"), )
paddle.sqrt(Tensor([4, 2, 1],"float32"), )
paddle.sqrt(Tensor([4, 20, 1],"float32"), )
paddle.sqrt(Tensor([4, 211, 1],"float32"), )
paddle.sqrt(Tensor([4, 22, 1],"float32"), )
paddle.sqrt(Tensor([4, 23, 1],"float32"), )
paddle.sqrt(Tensor([4, 234, 1],"float32"), )
paddle.sqrt(Tensor([4, 24, 1],"float32"), )
paddle.sqrt(Tensor([4, 25, 1],"float32"), )
paddle.sqrt(Tensor([4, 26, 1],"float32"), )
paddle.sqrt(Tensor([4, 27, 1],"float32"), )
paddle.sqrt(Tensor([4, 272, 1],"float32"), )
paddle.sqrt(Tensor([4, 28, 1],"float32"), )
paddle.sqrt(Tensor([4, 280, 376, 25],"float32"), )
paddle.sqrt(Tensor([4, 29, 1],"float32"), )
paddle.sqrt(Tensor([4, 3, 1],"float32"), )
paddle.sqrt(Tensor([4, 30, 1],"float32"), )
paddle.sqrt(Tensor([4, 31, 1],"float32"), )
paddle.sqrt(Tensor([4, 33, 1],"float32"), )
paddle.sqrt(Tensor([4, 333, 1],"float32"), )
paddle.sqrt(Tensor([4, 34, 1],"float32"), )
paddle.sqrt(Tensor([4, 35, 1],"float32"), )
paddle.sqrt(Tensor([4, 36, 1],"float32"), )
paddle.sqrt(Tensor([4, 37, 1],"float32"), )
paddle.sqrt(Tensor([4, 39, 1],"float32"), )
paddle.sqrt(Tensor([4, 394, 1],"float32"), )
paddle.sqrt(Tensor([4, 4, 1],"float32"), )
paddle.sqrt(Tensor([4, 40, 1],"float32"), )
paddle.sqrt(Tensor([4, 41, 1],"float32"), )
paddle.sqrt(Tensor([4, 418, 1],"float32"), )
paddle.sqrt(Tensor([4, 43, 1],"float32"), )
paddle.sqrt(Tensor([4, 45, 1],"float32"), )
paddle.sqrt(Tensor([4, 46, 1],"float32"), )
paddle.sqrt(Tensor([4, 465, 1],"float32"), )
paddle.sqrt(Tensor([4, 47, 1],"float32"), )
paddle.sqrt(Tensor([4, 48, 1],"float32"), )
paddle.sqrt(Tensor([4, 5, 1],"float32"), )
paddle.sqrt(Tensor([4, 50, 1],"float32"), )
paddle.sqrt(Tensor([4, 51, 1],"float32"), )
paddle.sqrt(Tensor([4, 52, 1],"float32"), )
paddle.sqrt(Tensor([4, 525, 1],"float32"), )
paddle.sqrt(Tensor([4, 53, 1],"float32"), )
paddle.sqrt(Tensor([4, 56, 1],"float32"), )
paddle.sqrt(Tensor([4, 58, 1],"float32"), )
paddle.sqrt(Tensor([4, 6, 1],"float32"), )
paddle.sqrt(Tensor([4, 62, 1],"float32"), )
paddle.sqrt(Tensor([4, 63, 1],"float32"), )
paddle.sqrt(Tensor([4, 64, 1],"float32"), )
paddle.sqrt(Tensor([4, 65, 1],"float32"), )
paddle.sqrt(Tensor([4, 7, 1],"float32"), )
paddle.sqrt(Tensor([4, 73, 1],"float32"), )
paddle.sqrt(Tensor([4, 77, 1],"float32"), )
paddle.sqrt(Tensor([4, 78, 1],"float32"), )
paddle.sqrt(Tensor([4, 80, 1],"float32"), )
paddle.sqrt(Tensor([4, 83, 1],"float32"), )
paddle.sqrt(Tensor([4, 89, 1],"float32"), )
paddle.sqrt(Tensor([4, 90, 1],"float32"), )
paddle.sqrt(Tensor([4, 92, 1],"float32"), )
paddle.sqrt(Tensor([4, 94, 311],"float32"), )
paddle.sqrt(Tensor([4, 95, 1],"float32"), )
paddle.sqrt(Tensor([4, 97, 1],"float32"), )
paddle.sqrt(Tensor([4, 98, 1],"float32"), )
paddle.sqrt(Tensor([4, 99, 1],"float32"), )
paddle.sqrt(Tensor([40, 1],"float32"), )
paddle.sqrt(Tensor([40, 995],"float32"), )
paddle.sqrt(Tensor([41, 1],"float32"), )
paddle.sqrt(Tensor([42, 1],"float32"), )
paddle.sqrt(Tensor([43, 1],"float32"), )
paddle.sqrt(Tensor([44, 1],"float32"), )
paddle.sqrt(Tensor([45, 1],"float32"), )
paddle.sqrt(Tensor([46, 1],"float32"), )
paddle.sqrt(Tensor([47, 1],"float32"), )
paddle.sqrt(Tensor([48, 1, 1, 1],"float32"), )
paddle.sqrt(Tensor([48, 1],"float32"), )
paddle.sqrt(Tensor([49, 1],"float32"), )
paddle.sqrt(Tensor([4],"float32"), )
paddle.sqrt(Tensor([4],"float64"), )
paddle.sqrt(Tensor([5, 1],"float32"), )
paddle.sqrt(Tensor([5, 3],"float64"), )
paddle.sqrt(Tensor([50, 1],"float32"), )
paddle.sqrt(Tensor([51, 1],"float32"), )
paddle.sqrt(Tensor([513],"float64"), )
paddle.sqrt(Tensor([52, 1],"float32"), )
paddle.sqrt(Tensor([52, 7, 1],"float32"), )
paddle.sqrt(Tensor([54, 1],"float32"), )
paddle.sqrt(Tensor([55, 1],"float32"), )
paddle.sqrt(Tensor([56, 1],"float32"), )
paddle.sqrt(Tensor([57, 1],"float32"), )
paddle.sqrt(Tensor([59, 1],"float32"), )
paddle.sqrt(Tensor([5],"float32"), )
paddle.sqrt(Tensor([5],"float64"), )
paddle.sqrt(Tensor([6, 1],"float32"), )
paddle.sqrt(Tensor([60, 1],"float32"), )
paddle.sqrt(Tensor([62, 1],"float32"), )
paddle.sqrt(Tensor([63, 1],"float32"), )
paddle.sqrt(Tensor([64, 1, 1, 1],"float32"), )
paddle.sqrt(Tensor([64, 1, 14, 14],"float32"), )
paddle.sqrt(Tensor([64, 1, 28, 28],"float32"), )
paddle.sqrt(Tensor([64, 1, 56, 56],"float32"), )
paddle.sqrt(Tensor([64, 13, 1],"float32"), )
paddle.sqrt(Tensor([64, 14, 1],"float32"), )
paddle.sqrt(Tensor([64, 15, 1],"float32"), )
paddle.sqrt(Tensor([64, 16, 1],"float32"), )
paddle.sqrt(Tensor([64, 17, 1],"float32"), )
paddle.sqrt(Tensor([64, 18, 1],"float32"), )
paddle.sqrt(Tensor([64, 19, 1],"float32"), )
paddle.sqrt(Tensor([64, 1],"float32"), )
paddle.sqrt(Tensor([64, 20, 1],"float32"), )
paddle.sqrt(Tensor([64, 21, 1],"float32"), )
paddle.sqrt(Tensor([64, 22, 1],"float32"), )
paddle.sqrt(Tensor([64, 23, 1],"float32"), )
paddle.sqrt(Tensor([64, 24, 1],"float32"), )
paddle.sqrt(Tensor([64, 25, 1],"float32"), )
paddle.sqrt(Tensor([64, 26, 1],"float32"), )
paddle.sqrt(Tensor([64, 27, 1],"float32"), )
paddle.sqrt(Tensor([64, 28, 1],"float32"), )
paddle.sqrt(Tensor([64, 29, 1],"float32"), )
paddle.sqrt(Tensor([64, 3, 256, 256],"float32"), )
paddle.sqrt(Tensor([64, 30, 1],"float32"), )
paddle.sqrt(Tensor([64, 31, 1],"float32"), )
paddle.sqrt(Tensor([64, 32, 1],"float32"), )
paddle.sqrt(Tensor([64, 33, 1],"float32"), )
paddle.sqrt(Tensor([64, 34, 1],"float32"), )
paddle.sqrt(Tensor([64, 35, 1],"float32"), )
paddle.sqrt(Tensor([64, 36, 1],"float32"), )
paddle.sqrt(Tensor([64, 37, 1],"float32"), )
paddle.sqrt(Tensor([64, 38, 1],"float32"), )
paddle.sqrt(Tensor([64, 39, 1],"float32"), )
paddle.sqrt(Tensor([64, 40, 1],"float32"), )
paddle.sqrt(Tensor([64, 41, 1],"float32"), )
paddle.sqrt(Tensor([64, 42, 1],"float32"), )
paddle.sqrt(Tensor([64, 43, 1],"float32"), )
paddle.sqrt(Tensor([64, 44, 1],"float32"), )
paddle.sqrt(Tensor([64, 46, 1],"float32"), )
paddle.sqrt(Tensor([64, 47, 1],"float32"), )
paddle.sqrt(Tensor([64, 48, 1],"float32"), )
paddle.sqrt(Tensor([64, 50, 1],"float32"), )
paddle.sqrt(Tensor([64, 51, 1],"float32"), )
paddle.sqrt(Tensor([64, 52, 1],"float32"), )
paddle.sqrt(Tensor([64, 53, 1],"float32"), )
paddle.sqrt(Tensor([64, 54, 1],"float32"), )
paddle.sqrt(Tensor([64, 77, 1],"float32"), )
paddle.sqrt(Tensor([64, 995],"float32"), )
paddle.sqrt(Tensor([65, 1],"float32"), )
paddle.sqrt(Tensor([66, 1],"float32"), )
paddle.sqrt(Tensor([67, 1],"float32"), )
paddle.sqrt(Tensor([68, 1],"float32"), )
paddle.sqrt(Tensor([69, 1],"float32"), )
paddle.sqrt(Tensor([6],"float32"), )
paddle.sqrt(Tensor([7, 1],"float32"), )
paddle.sqrt(Tensor([72, 1],"float32"), )
paddle.sqrt(Tensor([74, 1],"float32"), )
paddle.sqrt(Tensor([75, 1],"float32"), )
paddle.sqrt(Tensor([76, 1],"float32"), )
paddle.sqrt(Tensor([77, 1],"float32"), )
paddle.sqrt(Tensor([78, 1],"float32"), )
paddle.sqrt(Tensor([79, 1],"float32"), )
paddle.sqrt(Tensor([8, 1, 1, 1],"float32"), )
paddle.sqrt(Tensor([8, 1, 1],"float32"), )
paddle.sqrt(Tensor([8, 1, 24, 24],"float32"), )
paddle.sqrt(Tensor([8, 1, 32, 32],"float32"), )
paddle.sqrt(Tensor([8, 1, 48, 48],"float32"), )
paddle.sqrt(Tensor([8, 1, 96, 96],"float32"), )
paddle.sqrt(Tensor([8, 10, 1],"float32"), )
paddle.sqrt(Tensor([8, 11, 1],"float32"), )
paddle.sqrt(Tensor([8, 12, 1],"float32"), )
paddle.sqrt(Tensor([8, 13, 1],"float32"), )
paddle.sqrt(Tensor([8, 14, 1],"float32"), )
paddle.sqrt(Tensor([8, 15, 1],"float32"), )
paddle.sqrt(Tensor([8, 16, 1],"float32"), )
paddle.sqrt(Tensor([8, 16, 32],"float32"), )
paddle.sqrt(Tensor([8, 17, 1],"float32"), )
paddle.sqrt(Tensor([8, 18, 1],"float32"), )
paddle.sqrt(Tensor([8, 19, 1],"float32"), )
paddle.sqrt(Tensor([8, 1],"float32"), )
paddle.sqrt(Tensor([8, 2, 1],"float32"), )
paddle.sqrt(Tensor([8, 20, 1],"float32"), )
paddle.sqrt(Tensor([8, 21, 1],"float32"), )
paddle.sqrt(Tensor([8, 22, 1],"float32"), )
paddle.sqrt(Tensor([8, 23, 1],"float32"), )
paddle.sqrt(Tensor([8, 24, 1],"float32"), )
paddle.sqrt(Tensor([8, 25, 1],"float32"), )
paddle.sqrt(Tensor([8, 26, 1],"float32"), )
paddle.sqrt(Tensor([8, 27, 1],"float32"), )
paddle.sqrt(Tensor([8, 28, 1],"float32"), )
paddle.sqrt(Tensor([8, 29, 1],"float32"), )
paddle.sqrt(Tensor([8, 3, 1],"float32"), )
paddle.sqrt(Tensor([8, 30, 1],"float32"), )
paddle.sqrt(Tensor([8, 31, 1],"float32"), )
paddle.sqrt(Tensor([8, 32, 1],"float32"), )
paddle.sqrt(Tensor([8, 33, 1],"float32"), )
paddle.sqrt(Tensor([8, 34, 1],"float32"), )
paddle.sqrt(Tensor([8, 35, 1],"float32"), )
paddle.sqrt(Tensor([8, 36, 1],"float32"), )
paddle.sqrt(Tensor([8, 37, 1],"float32"), )
paddle.sqrt(Tensor([8, 38, 1],"float32"), )
paddle.sqrt(Tensor([8, 39, 1],"float32"), )
paddle.sqrt(Tensor([8, 4, 1],"float32"), )
paddle.sqrt(Tensor([8, 40, 1],"float32"), )
paddle.sqrt(Tensor([8, 41, 1],"float32"), )
paddle.sqrt(Tensor([8, 42, 1],"float32"), )
paddle.sqrt(Tensor([8, 43, 1],"float32"), )
paddle.sqrt(Tensor([8, 44, 1],"float32"), )
paddle.sqrt(Tensor([8, 45, 1],"float32"), )
paddle.sqrt(Tensor([8, 46, 1],"float32"), )
paddle.sqrt(Tensor([8, 47, 1],"float32"), )
paddle.sqrt(Tensor([8, 48, 1],"float32"), )
paddle.sqrt(Tensor([8, 5, 1],"float32"), )
paddle.sqrt(Tensor([8, 50, 1],"float32"), )
paddle.sqrt(Tensor([8, 52, 1],"float32"), )
paddle.sqrt(Tensor([8, 53, 1],"float32"), )
paddle.sqrt(Tensor([8, 54, 1],"float32"), )
paddle.sqrt(Tensor([8, 6, 1],"float32"), )
paddle.sqrt(Tensor([8, 7, 1],"float32"), )
paddle.sqrt(Tensor([8, 8, 1],"float32"), )
paddle.sqrt(Tensor([8, 9, 1],"float32"), )
paddle.sqrt(Tensor([81, 1],"float32"), )
paddle.sqrt(Tensor([83, 1],"float32"), )
paddle.sqrt(Tensor([84, 1],"float32"), )
paddle.sqrt(Tensor([85, 1],"float32"), )
paddle.sqrt(Tensor([87, 1],"float32"), )
paddle.sqrt(Tensor([88, 1],"float32"), )
paddle.sqrt(Tensor([89, 1],"float32"), )
paddle.sqrt(Tensor([8],"float32"), )
paddle.sqrt(Tensor([9, 1],"float32"), )
paddle.sqrt(Tensor([90, 1],"float32"), )
paddle.sqrt(Tensor([91, 1],"float32"), )
paddle.sqrt(Tensor([94, 1],"float32"), )
paddle.sqrt(Tensor([95, 1],"float32"), )
paddle.sqrt(Tensor([96, 1, 1, 1],"float32"), )
paddle.sqrt(Tensor([96, 1],"float32"), )
paddle.sqrt(Tensor([98, 1],"float32"), )
paddle.sqrt(Tensor([9],"float32"), )
paddle.sqrt(Tensor([],"float32"), )
paddle.sqrt(Tensor([],"float64"), )
paddle.sqrt(x=Tensor([13, 1, 1],"float32"), )
paddle.sqrt(x=Tensor([16, 1, 1],"float32"), )
paddle.sqrt(x=Tensor([16, 1, 2],"float32"), )
paddle.sqrt(x=Tensor([1],"float64"), )
paddle.sqrt(x=Tensor([2, 1, 2],"float32"), )
paddle.sqrt(x=Tensor([2],"float64"), )
paddle.sqrt(x=Tensor([3, 1, 1],"float32"), )
paddle.sqrt(x=Tensor([3, 3],"float64"), )
paddle.sqrt(x=Tensor([3],"float64"), )
paddle.sqrt(x=Tensor([3],"float64"), name=None, )
paddle.sqrt(x=Tensor([4],"float64"), )
paddle.square(Tensor([1, 1, 1],"float32"), )
paddle.square(Tensor([1, 196608],"float32"), )
paddle.square(Tensor([1, 1],"float32"), )
paddle.square(Tensor([1, 3072],"float32"), )
paddle.square(Tensor([10, 10],"float32"), )
paddle.square(Tensor([10, 10],"float32"), name=None, )
paddle.square(Tensor([10, 2, 3],"float32"), )
paddle.square(Tensor([10, 2],"float32"), )
paddle.square(Tensor([10, 2],"float64"), )
paddle.square(Tensor([10, 3],"float32"), )
paddle.square(Tensor([100, 1],"float32"), name=None, )
paddle.square(Tensor([1000, 1000],"float16"), )
paddle.square(Tensor([1000, 1000],"float32"), )
paddle.square(Tensor([1000, 10],"float16"), )
paddle.square(Tensor([1000, 10],"float32"), )
paddle.square(Tensor([1000],"float16"), )
paddle.square(Tensor([1000],"float32"), )
paddle.square(Tensor([1001088],"float32"), )
paddle.square(Tensor([1011072],"float32"), )
paddle.square(Tensor([1024, 1024],"float16"), )
paddle.square(Tensor([1024, 1024],"float32"), )
paddle.square(Tensor([1024, 10],"float16"), )
paddle.square(Tensor([1024, 10],"float32"), )
paddle.square(Tensor([1024, 2],"float16"), )
paddle.square(Tensor([1024, 2],"float32"), )
paddle.square(Tensor([10240, 1],"float32"), name=None, )
paddle.square(Tensor([1024],"float16"), )
paddle.square(Tensor([1024],"float32"), )
paddle.square(Tensor([104, 128],"float32"), )
paddle.square(Tensor([104, 93431],"float32"), )
paddle.square(Tensor([1048576],"float16"), )
paddle.square(Tensor([10],"float16"), )
paddle.square(Tensor([10],"float32"), )
paddle.square(Tensor([12288],"float16"), )
paddle.square(Tensor([12582912],"float16"), )
paddle.square(Tensor([128, 128],"float32"), )
paddle.square(Tensor([128, 93431],"float32"), )
paddle.square(Tensor([13, 7, 32],"float32"), )
paddle.square(Tensor([16, 159],"float32"), )
paddle.square(Tensor([16, 512],"float32"), )
paddle.square(Tensor([16, 96, 1],"float32"), )
paddle.square(Tensor([16, 96, 2],"float32"), )
paddle.square(Tensor([16, 96, 2],"float32"), name=None, )
paddle.square(Tensor([16384],"float16"), )
paddle.square(Tensor([16777216],"float16"), )
paddle.square(Tensor([18, 6],"float32"), )
paddle.square(Tensor([1820, 1],"float32"), name=None, )
paddle.square(Tensor([1],"float32"), )
paddle.square(Tensor([1],"float64"), )
paddle.square(Tensor([2, 10, 10],"float32"), )
paddle.square(Tensor([2, 10, 10],"float32"), name=None, )
paddle.square(Tensor([2, 1],"float32"), )
paddle.square(Tensor([2, 2],"float32"), )
paddle.square(Tensor([2, 3],"float32"), )
paddle.square(Tensor([2, 3],"float64"), )
paddle.square(Tensor([2, 42],"float32"), )
paddle.square(Tensor([2, 4],"float64"), )
paddle.square(Tensor([2, 96, 2],"float32"), )
paddle.square(Tensor([2, 96, 2],"float32"), name=None, )
paddle.square(Tensor([2430, 1],"float32"), name=None, )
paddle.square(Tensor([26, 7, 32],"float32"), )
paddle.square(Tensor([282600, 1],"float32"), name=None, )
paddle.square(Tensor([3, 2, 3, 3],"float32"), )
paddle.square(Tensor([3, 3, 10, 10],"float32"), )
paddle.square(Tensor([3, 3, 10, 10],"float32"), name=None, )
paddle.square(Tensor([3, 3],"float64"), )
paddle.square(Tensor([3, 4],"float32"), )
paddle.square(Tensor([3, 8],"float32"), )
paddle.square(Tensor([3, 96, 1],"float32"), )
paddle.square(Tensor([300, 4096],"float32"), )
paddle.square(Tensor([32, 159],"float32"), )
paddle.square(Tensor([32, 501, 4],"float32"), )
paddle.square(Tensor([32, 512],"float32"), )
paddle.square(Tensor([3],"float32"), )
paddle.square(Tensor([4, 1],"float32"), name=None, )
paddle.square(Tensor([4, 3, 2],"float64"), )
paddle.square(Tensor([4, 4],"float64"), )
paddle.square(Tensor([40, 512],"float32"), )
paddle.square(Tensor([40, 995],"float32"), )
paddle.square(Tensor([4096],"float16"), )
paddle.square(Tensor([4096],"float32"), )
paddle.square(Tensor([4194304],"float16"), )
paddle.square(Tensor([4830, 1],"float32"), name=None, )
paddle.square(Tensor([483100, 1],"float32"), name=None, )
paddle.square(Tensor([5, 2],"float64"), )
paddle.square(Tensor([5, 3],"float64"), )
paddle.square(Tensor([500000],"float32"), )
paddle.square(Tensor([500032],"float16"), )
paddle.square(Tensor([500032],"float32"), )
paddle.square(Tensor([512, 159],"float32"), )
paddle.square(Tensor([512, 995],"float32"), )
paddle.square(Tensor([51511296],"float16"), )
paddle.square(Tensor([52, 7, 32],"float32"), )
paddle.square(Tensor([524288],"float16"), )
paddle.square(Tensor([524288],"float32"), )
paddle.square(Tensor([64, 512],"float32"), )
paddle.square(Tensor([64, 995],"float32"), )
paddle.square(Tensor([8, 16, 32],"complex128"), )
paddle.square(Tensor([8, 16, 32],"complex64"), )
paddle.square(Tensor([8, 16, 32],"float16"), )
paddle.square(Tensor([8, 16, 32],"float32"), )
paddle.square(Tensor([8, 16, 32],"float64"), )
paddle.square(Tensor([8490, 1],"float32"), name=None, )
paddle.square(Tensor([8],"float32"), )
paddle.square(Tensor([9420, 1],"float32"), name=None, )
paddle.square(Tensor([],"float32"), )
paddle.square(Tensor([],"float64"), )
paddle.square(x=Tensor([2],"float32"), )
paddle.square(x=Tensor([2],"float64"), )
paddle.square(x=Tensor([2],"int32"), )
paddle.square(x=Tensor([2],"int64"), )
paddle.stack(list[Tensor([0],"int32"),Tensor([0],"int32"),], -1, )
paddle.stack(list[Tensor([1, 1, 1, 0],"float32"),Tensor([1, 1, 1, 0],"float32"),Tensor([1, 1, 1, 0],"float32"),Tensor([1, 1, 1, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1, 32],"float16"),Tensor([1, 1, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1],"float32"),Tensor([1, 1, 1],"float32"),Tensor([1, 1, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 2, 2],"float32"),Tensor([1, 1, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 4, 2],"float32"),Tensor([1, 1, 4, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 64, 32],"float16"),Tensor([1, 1, 64, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 101],"int32"),Tensor([1, 101],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 102],"int32"),Tensor([1, 102],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 103],"int32"),Tensor([1, 103],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 105],"int32"),Tensor([1, 105],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 106],"int32"),Tensor([1, 106],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 107],"int32"),Tensor([1, 107],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 108],"int32"),Tensor([1, 108],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 109],"int32"),Tensor([1, 109],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 10],"int32"),Tensor([1, 10],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 1100, 256],"float32"),Tensor([1, 1100, 256],"float32"),Tensor([1, 1100, 256],"float32"),Tensor([1, 1100, 256],"float32"),Tensor([1, 1100, 256],"float32"),Tensor([1, 1100, 256],"float32"),], )
paddle.stack(list[Tensor([1, 1100, 4],"float32"),Tensor([1, 1100, 4],"float32"),Tensor([1, 1100, 4],"float32"),Tensor([1, 1100, 4],"float32"),Tensor([1, 1100, 4],"float32"),Tensor([1, 1100, 4],"float32"),], )
paddle.stack(list[Tensor([1, 112],"int32"),Tensor([1, 112],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 113],"int32"),Tensor([1, 113],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 116],"int32"),Tensor([1, 116],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 117],"int32"),Tensor([1, 117],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 119],"int32"),Tensor([1, 119],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 11],"int32"),Tensor([1, 11],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 122],"int32"),Tensor([1, 122],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 123],"int32"),Tensor([1, 123],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 124],"int32"),Tensor([1, 124],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 126],"int32"),Tensor([1, 126],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 127],"int32"),Tensor([1, 127],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 128, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 129],"int32"),Tensor([1, 129],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 12],"int32"),Tensor([1, 12],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 131],"int32"),Tensor([1, 131],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 132],"int32"),Tensor([1, 132],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 138],"int32"),Tensor([1, 138],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 139],"int32"),Tensor([1, 139],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 13],"int32"),Tensor([1, 13],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 140],"int32"),Tensor([1, 140],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 142],"int32"),Tensor([1, 142],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 145],"int32"),Tensor([1, 145],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 146],"int32"),Tensor([1, 146],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 149],"int32"),Tensor([1, 149],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 14],"int32"),Tensor([1, 14],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 150],"int32"),Tensor([1, 150],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 156],"int32"),Tensor([1, 156],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 15],"int32"),Tensor([1, 15],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 168],"int32"),Tensor([1, 168],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 169],"int32"),Tensor([1, 169],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 16],"int32"),Tensor([1, 16],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 172],"int32"),Tensor([1, 172],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 17],"int32"),Tensor([1, 17],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 18, 256],"float32"),Tensor([1, 18, 256],"float32"),Tensor([1, 18, 256],"float32"),Tensor([1, 18, 256],"float32"),Tensor([1, 18, 256],"float32"),Tensor([1, 18, 256],"float32"),], )
paddle.stack(list[Tensor([1, 18, 4],"float32"),Tensor([1, 18, 4],"float32"),Tensor([1, 18, 4],"float32"),Tensor([1, 18, 4],"float32"),Tensor([1, 18, 4],"float32"),Tensor([1, 18, 4],"float32"),], )
paddle.stack(list[Tensor([1, 18],"int32"),Tensor([1, 18],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 190],"int32"),Tensor([1, 190],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 196],"int32"),Tensor([1, 196],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 19],"int32"),Tensor([1, 19],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1],"float32"),Tensor([1, 1],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1],"float32"),], )
paddle.stack(list[Tensor([1, 1],"int32"),Tensor([1, 1],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1],"int32"),], )
paddle.stack(list[Tensor([1, 2, 1, 1],"float32"),Tensor([1, 2, 1, 1],"float32"),], -1, )
paddle.stack(list[Tensor([1, 2, 2, 1],"float32"),Tensor([1, 2, 2, 1],"float32"),], -1, )
paddle.stack(list[Tensor([1, 2, 2, 32],"float16"),Tensor([1, 2, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([1, 2, 4, 32],"float16"),Tensor([1, 2, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 2, 8, 4],"float32"),Tensor([1, 2, 8, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),Tensor([1, 20, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 209],"int32"),Tensor([1, 209],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 20],"int32"),Tensor([1, 20],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 21, 256],"float32"),Tensor([1, 21, 256],"float32"),Tensor([1, 21, 256],"float32"),Tensor([1, 21, 256],"float32"),Tensor([1, 21, 256],"float32"),Tensor([1, 21, 256],"float32"),], )
paddle.stack(list[Tensor([1, 21, 4],"float32"),Tensor([1, 21, 4],"float32"),Tensor([1, 21, 4],"float32"),Tensor([1, 21, 4],"float32"),Tensor([1, 21, 4],"float32"),Tensor([1, 21, 4],"float32"),], )
paddle.stack(list[Tensor([1, 210],"int32"),Tensor([1, 210],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 215],"int32"),Tensor([1, 215],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 218],"int32"),Tensor([1, 218],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 21],"int32"),Tensor([1, 21],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 22, 256],"float32"),Tensor([1, 22, 256],"float32"),Tensor([1, 22, 256],"float32"),Tensor([1, 22, 256],"float32"),Tensor([1, 22, 256],"float32"),Tensor([1, 22, 256],"float32"),], )
paddle.stack(list[Tensor([1, 22, 4],"float32"),Tensor([1, 22, 4],"float32"),Tensor([1, 22, 4],"float32"),Tensor([1, 22, 4],"float32"),Tensor([1, 22, 4],"float32"),Tensor([1, 22, 4],"float32"),], )
paddle.stack(list[Tensor([1, 225],"int32"),Tensor([1, 225],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 227],"int32"),Tensor([1, 227],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 22],"int32"),Tensor([1, 22],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 23],"int32"),Tensor([1, 23],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 249],"int32"),Tensor([1, 249],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 24],"int32"),Tensor([1, 24],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 25, 2],"float32"),Tensor([1, 25, 2],"float32"),], axis=-2, )
paddle.stack(list[Tensor([1, 25, 4],"float32"),Tensor([1, 25, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 252],"int32"),Tensor([1, 252],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 255],"int32"),Tensor([1, 255],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 25],"int32"),Tensor([1, 25],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 26],"int32"),Tensor([1, 26],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 27],"int32"),Tensor([1, 27],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 28],"int32"),Tensor([1, 28],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 296],"int32"),Tensor([1, 296],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 29],"int32"),Tensor([1, 29],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 2],"int32"),Tensor([1, 2],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),Tensor([1, 30, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 300, 256],"float32"),Tensor([1, 300, 256],"float32"),Tensor([1, 300, 256],"float32"),Tensor([1, 300, 256],"float32"),Tensor([1, 300, 256],"float32"),Tensor([1, 300, 256],"float32"),], )
paddle.stack(list[Tensor([1, 300, 4096],"float32"),Tensor([1, 300, 4096],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 300, 4],"float32"),Tensor([1, 300, 4],"float32"),Tensor([1, 300, 4],"float32"),Tensor([1, 300, 4],"float32"),Tensor([1, 300, 4],"float32"),Tensor([1, 300, 4],"float32"),], )
paddle.stack(list[Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 300],"int64"),Tensor([1, 300],"int64"),], axis=-1, )
paddle.stack(list[Tensor([1, 303],"int32"),Tensor([1, 303],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 30],"int32"),Tensor([1, 30],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 31],"int32"),Tensor([1, 31],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 329],"int32"),Tensor([1, 329],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=0, )
paddle.stack(list[Tensor([1, 32],"int32"),Tensor([1, 32],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 333],"int32"),Tensor([1, 333],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 33],"int32"),Tensor([1, 33],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 34],"int32"),Tensor([1, 34],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 35],"int32"),Tensor([1, 35],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 36],"int32"),Tensor([1, 36],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 37],"int32"),Tensor([1, 37],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 38],"int32"),Tensor([1, 38],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 39],"int32"),Tensor([1, 39],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 3],"float32"),Tensor([1, 3],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 3],"int32"),Tensor([1, 3],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 4, 1, 1],"float32"),Tensor([1, 4, 1, 1],"float32"),], -1, )
paddle.stack(list[Tensor([1, 4, 2, 1],"float32"),Tensor([1, 4, 2, 1],"float32"),], -1, )
paddle.stack(list[Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),Tensor([1, 4, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 4, 8, 4],"float32"),Tensor([1, 4, 8, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 192, 192],"float32"),Tensor([1, 400, 192, 192],"float32"),Tensor([1, 400, 192, 192],"float32"),Tensor([1, 400, 192, 192],"float32"),Tensor([1, 400, 192, 192],"float32"),Tensor([1, 400, 192, 192],"float32"),], )
paddle.stack(list[Tensor([1, 400, 2],"float32"),Tensor([1, 400, 2],"float32"),Tensor([1, 400, 2],"float32"),Tensor([1, 400, 2],"float32"),Tensor([1, 400, 2],"float32"),Tensor([1, 400, 2],"float32"),], )
paddle.stack(list[Tensor([1, 400, 4],"float32"),Tensor([1, 400, 4],"float32"),Tensor([1, 400, 4],"float32"),Tensor([1, 400, 4],"float32"),Tensor([1, 400, 4],"float32"),Tensor([1, 400, 4],"float32"),], )
paddle.stack(list[Tensor([1, 400],"int32"),Tensor([1, 400],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 40],"int32"),Tensor([1, 40],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 41],"int32"),Tensor([1, 41],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 42],"int32"),Tensor([1, 42],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 43],"int32"),Tensor([1, 43],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 44],"int32"),Tensor([1, 44],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 45],"int32"),Tensor([1, 45],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 46],"int32"),Tensor([1, 46],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 47],"int32"),Tensor([1, 47],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 48],"int32"),Tensor([1, 48],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 492, 11],"float32"),Tensor([1, 492, 11],"float32"),Tensor([1, 492, 11],"float32"),Tensor([1, 492, 11],"float32"),Tensor([1, 492, 11],"float32"),Tensor([1, 492, 11],"float32"),], )
paddle.stack(list[Tensor([1, 492, 4],"float32"),Tensor([1, 492, 4],"float32"),Tensor([1, 492, 4],"float32"),Tensor([1, 492, 4],"float32"),Tensor([1, 492, 4],"float32"),Tensor([1, 492, 4],"float32"),], )
paddle.stack(list[Tensor([1, 496, 11],"float32"),Tensor([1, 496, 11],"float32"),Tensor([1, 496, 11],"float32"),Tensor([1, 496, 11],"float32"),Tensor([1, 496, 11],"float32"),Tensor([1, 496, 11],"float32"),], )
paddle.stack(list[Tensor([1, 496, 4],"float32"),Tensor([1, 496, 4],"float32"),Tensor([1, 496, 4],"float32"),Tensor([1, 496, 4],"float32"),Tensor([1, 496, 4],"float32"),Tensor([1, 496, 4],"float32"),], )
paddle.stack(list[Tensor([1, 49],"int32"),Tensor([1, 49],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 4],"float32"),Tensor([1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 4],"float32"),], )
paddle.stack(list[Tensor([1, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 4],"int32"),Tensor([1, 4],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 500, 11],"float32"),Tensor([1, 500, 11],"float32"),Tensor([1, 500, 11],"float32"),Tensor([1, 500, 11],"float32"),Tensor([1, 500, 11],"float32"),Tensor([1, 500, 11],"float32"),], )
paddle.stack(list[Tensor([1, 500, 4],"float32"),Tensor([1, 500, 4],"float32"),Tensor([1, 500, 4],"float32"),Tensor([1, 500, 4],"float32"),Tensor([1, 500, 4],"float32"),Tensor([1, 500, 4],"float32"),], )
paddle.stack(list[Tensor([1, 50],"int32"),Tensor([1, 50],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 51],"int32"),Tensor([1, 51],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 52],"int32"),Tensor([1, 52],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 53],"int32"),Tensor([1, 53],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 54],"int32"),Tensor([1, 54],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 55],"int32"),Tensor([1, 55],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 56],"int32"),Tensor([1, 56],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 57],"int32"),Tensor([1, 57],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 58],"int32"),Tensor([1, 58],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 59],"int32"),Tensor([1, 59],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 5],"int32"),Tensor([1, 5],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 6, 1, 1],"float32"),Tensor([1, 6, 1, 1],"float32"),], -1, )
paddle.stack(list[Tensor([1, 6, 2, 1],"float32"),Tensor([1, 6, 2, 1],"float32"),], -1, )
paddle.stack(list[Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),Tensor([1, 6, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 60],"int32"),Tensor([1, 60],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 61],"int32"),Tensor([1, 61],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 62],"int32"),Tensor([1, 62],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 63],"int32"),Tensor([1, 63],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 640, 640],"float32"),], )
paddle.stack(list[Tensor([1, 64],"int32"),Tensor([1, 64],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 65],"int32"),Tensor([1, 65],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 66],"int32"),Tensor([1, 66],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 67],"int32"),Tensor([1, 67],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 68],"int32"),Tensor([1, 68],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 69],"int32"),Tensor([1, 69],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 6],"int32"),Tensor([1, 6],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 70],"int32"),Tensor([1, 70],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 71],"int32"),Tensor([1, 71],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 72],"int32"),Tensor([1, 72],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 73],"int32"),Tensor([1, 73],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 74],"int32"),Tensor([1, 74],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 75],"int32"),Tensor([1, 75],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 76],"int32"),Tensor([1, 76],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 77],"int32"),Tensor([1, 77],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 78],"int32"),Tensor([1, 78],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 79],"int32"),Tensor([1, 79],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 7],"int32"),Tensor([1, 7],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 80],"int32"),Tensor([1, 80],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 81],"int32"),Tensor([1, 81],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 83],"int32"),Tensor([1, 83],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 84],"int32"),Tensor([1, 84],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 85],"int32"),Tensor([1, 85],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 86],"int32"),Tensor([1, 86],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 87],"int32"),Tensor([1, 87],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 88],"int32"),Tensor([1, 88],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 8],"int32"),Tensor([1, 8],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 9, 256],"float32"),Tensor([1, 9, 256],"float32"),Tensor([1, 9, 256],"float32"),Tensor([1, 9, 256],"float32"),Tensor([1, 9, 256],"float32"),Tensor([1, 9, 256],"float32"),], )
paddle.stack(list[Tensor([1, 9, 4],"float32"),Tensor([1, 9, 4],"float32"),Tensor([1, 9, 4],"float32"),Tensor([1, 9, 4],"float32"),Tensor([1, 9, 4],"float32"),Tensor([1, 9, 4],"float32"),], )
paddle.stack(list[Tensor([1, 91],"int32"),Tensor([1, 91],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 92],"int32"),Tensor([1, 92],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 93],"int32"),Tensor([1, 93],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 9408],"int64"),Tensor([1, 9408],"int64"),], axis=-1, )
paddle.stack(list[Tensor([1, 96],"int32"),Tensor([1, 96],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 97],"int32"),Tensor([1, 97],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 99],"int32"),Tensor([1, 99],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 9],"int32"),Tensor([1, 9],"int32"),], axis=-1, )
paddle.stack(list[Tensor([10, 10, 10],"float64"),Tensor([10, 10, 10],"float64"),], -1, )
paddle.stack(list[Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10, 15],"int64"),Tensor([10, 15],"int64"),], -1, )
paddle.stack(list[Tensor([10, 2, 1, 1],"float32"),Tensor([10, 2, 1, 1],"float32"),], -1, )
paddle.stack(list[Tensor([10, 2, 1, 4],"float32"),Tensor([10, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([10, 2, 2, 1],"float32"),Tensor([10, 2, 2, 1],"float32"),], -1, )
paddle.stack(list[Tensor([100, 100],"float32"),Tensor([100, 100],"float32"),Tensor([100, 100],"float32"),Tensor([100, 100],"float32"),], axis=-1, )
paddle.stack(list[Tensor([100, 100],"float32"),Tensor([100, 100],"float32"),], axis=-1, )
paddle.stack(list[Tensor([100, 9408],"int64"),Tensor([100, 9408],"int64"),], axis=-1, )
paddle.stack(list[Tensor([1001],"float32"),Tensor([1001],"float32"),Tensor([1001],"float32"),Tensor([1001],"float32"),], -1, )
paddle.stack(list[Tensor([1002],"float32"),Tensor([1002],"float32"),Tensor([1002],"float32"),Tensor([1002],"float32"),], -1, )
paddle.stack(list[Tensor([100352],"float32"),Tensor([100352],"float32"),Tensor([100352],"float32"),Tensor([100352],"float32"),], -1, )
paddle.stack(list[Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),Tensor([100],"float32"),], -1, )
paddle.stack(list[Tensor([100],"float32"),Tensor([100],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 11],"float32"),Tensor([10105, 11],"float32"),Tensor([10105, 11],"float32"),Tensor([10105, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 12],"float32"),Tensor([10105, 12],"float32"),Tensor([10105, 12],"float32"),Tensor([10105, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 13],"float32"),Tensor([10105, 13],"float32"),Tensor([10105, 13],"float32"),Tensor([10105, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 14],"float32"),Tensor([10105, 14],"float32"),Tensor([10105, 14],"float32"),Tensor([10105, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 15],"float32"),Tensor([10105, 15],"float32"),Tensor([10105, 15],"float32"),Tensor([10105, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 18],"float32"),Tensor([10105, 18],"float32"),Tensor([10105, 18],"float32"),Tensor([10105, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 2],"float32"),Tensor([10105, 2],"float32"),Tensor([10105, 2],"float32"),Tensor([10105, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 3],"float32"),Tensor([10105, 3],"float32"),Tensor([10105, 3],"float32"),Tensor([10105, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 4],"float32"),Tensor([10105, 4],"float32"),Tensor([10105, 4],"float32"),Tensor([10105, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 5],"float32"),Tensor([10105, 5],"float32"),Tensor([10105, 5],"float32"),Tensor([10105, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 6],"float32"),Tensor([10105, 6],"float32"),Tensor([10105, 6],"float32"),Tensor([10105, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 7],"float32"),Tensor([10105, 7],"float32"),Tensor([10105, 7],"float32"),Tensor([10105, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 8],"float32"),Tensor([10105, 8],"float32"),Tensor([10105, 8],"float32"),Tensor([10105, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 9],"float32"),Tensor([10105, 9],"float32"),Tensor([10105, 9],"float32"),Tensor([10105, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([1010],"float32"),Tensor([1010],"float32"),Tensor([1010],"float32"),Tensor([1010],"float32"),], -1, )
paddle.stack(list[Tensor([1011],"float32"),Tensor([1011],"float32"),Tensor([1011],"float32"),Tensor([1011],"float32"),], -1, )
paddle.stack(list[Tensor([10164],"float32"),Tensor([10164],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1016],"float32"),Tensor([1016],"float32"),Tensor([1016],"float32"),Tensor([1016],"float32"),], -1, )
paddle.stack(list[Tensor([1017],"float32"),Tensor([1017],"float32"),Tensor([1017],"float32"),Tensor([1017],"float32"),], -1, )
paddle.stack(list[Tensor([101],"float32"),Tensor([101],"float32"),Tensor([101],"float32"),Tensor([101],"float32"),], -1, )
paddle.stack(list[Tensor([101],"float32"),Tensor([101],"float32"),], axis=-1, )
paddle.stack(list[Tensor([102400],"float32"),Tensor([102400],"float32"),Tensor([102400],"float32"),Tensor([102400],"float32"),], -1, )
paddle.stack(list[Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),], -1, )
paddle.stack(list[Tensor([1024],"float32"),Tensor([1024],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1025],"float32"),Tensor([1025],"float32"),Tensor([1025],"float32"),Tensor([1025],"float32"),], -1, )
paddle.stack(list[Tensor([1026],"float32"),Tensor([1026],"float32"),Tensor([1026],"float32"),Tensor([1026],"float32"),], -1, )
paddle.stack(list[Tensor([10285, 10],"float32"),Tensor([10285, 10],"float32"),Tensor([10285, 10],"float32"),Tensor([10285, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 11],"float32"),Tensor([10285, 11],"float32"),Tensor([10285, 11],"float32"),Tensor([10285, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 12],"float32"),Tensor([10285, 12],"float32"),Tensor([10285, 12],"float32"),Tensor([10285, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 14],"float32"),Tensor([10285, 14],"float32"),Tensor([10285, 14],"float32"),Tensor([10285, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 15],"float32"),Tensor([10285, 15],"float32"),Tensor([10285, 15],"float32"),Tensor([10285, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 16],"float32"),Tensor([10285, 16],"float32"),Tensor([10285, 16],"float32"),Tensor([10285, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 188],"float32"),Tensor([10285, 188],"float32"),Tensor([10285, 188],"float32"),Tensor([10285, 188],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 1],"float32"),Tensor([10285, 1],"float32"),Tensor([10285, 1],"float32"),Tensor([10285, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 20],"float32"),Tensor([10285, 20],"float32"),Tensor([10285, 20],"float32"),Tensor([10285, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 21],"float32"),Tensor([10285, 21],"float32"),Tensor([10285, 21],"float32"),Tensor([10285, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 223],"float32"),Tensor([10285, 223],"float32"),Tensor([10285, 223],"float32"),Tensor([10285, 223],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 238],"float32"),Tensor([10285, 238],"float32"),Tensor([10285, 238],"float32"),Tensor([10285, 238],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 23],"float32"),Tensor([10285, 23],"float32"),Tensor([10285, 23],"float32"),Tensor([10285, 23],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 25],"float32"),Tensor([10285, 25],"float32"),Tensor([10285, 25],"float32"),Tensor([10285, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 26],"float32"),Tensor([10285, 26],"float32"),Tensor([10285, 26],"float32"),Tensor([10285, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 29],"float32"),Tensor([10285, 29],"float32"),Tensor([10285, 29],"float32"),Tensor([10285, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 2],"float32"),Tensor([10285, 2],"float32"),Tensor([10285, 2],"float32"),Tensor([10285, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 32],"float32"),Tensor([10285, 32],"float32"),Tensor([10285, 32],"float32"),Tensor([10285, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 35],"float32"),Tensor([10285, 35],"float32"),Tensor([10285, 35],"float32"),Tensor([10285, 35],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 394],"float32"),Tensor([10285, 394],"float32"),Tensor([10285, 394],"float32"),Tensor([10285, 394],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 3],"float32"),Tensor([10285, 3],"float32"),Tensor([10285, 3],"float32"),Tensor([10285, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 40],"float32"),Tensor([10285, 40],"float32"),Tensor([10285, 40],"float32"),Tensor([10285, 40],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 42],"float32"),Tensor([10285, 42],"float32"),Tensor([10285, 42],"float32"),Tensor([10285, 42],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 45],"float32"),Tensor([10285, 45],"float32"),Tensor([10285, 45],"float32"),Tensor([10285, 45],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 48],"float32"),Tensor([10285, 48],"float32"),Tensor([10285, 48],"float32"),Tensor([10285, 48],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 4],"float32"),Tensor([10285, 4],"float32"),Tensor([10285, 4],"float32"),Tensor([10285, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 58],"float32"),Tensor([10285, 58],"float32"),Tensor([10285, 58],"float32"),Tensor([10285, 58],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 5],"float32"),Tensor([10285, 5],"float32"),Tensor([10285, 5],"float32"),Tensor([10285, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 66],"float32"),Tensor([10285, 66],"float32"),Tensor([10285, 66],"float32"),Tensor([10285, 66],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 78],"float32"),Tensor([10285, 78],"float32"),Tensor([10285, 78],"float32"),Tensor([10285, 78],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 8],"float32"),Tensor([10285, 8],"float32"),Tensor([10285, 8],"float32"),Tensor([10285, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 90],"float32"),Tensor([10285, 90],"float32"),Tensor([10285, 90],"float32"),Tensor([10285, 90],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 95],"float32"),Tensor([10285, 95],"float32"),Tensor([10285, 95],"float32"),Tensor([10285, 95],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 98],"float32"),Tensor([10285, 98],"float32"),Tensor([10285, 98],"float32"),Tensor([10285, 98],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 99],"float32"),Tensor([10285, 99],"float32"),Tensor([10285, 99],"float32"),Tensor([10285, 99],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285, 9],"float32"),Tensor([10285, 9],"float32"),Tensor([10285, 9],"float32"),Tensor([10285, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([10285],"float32"),Tensor([10285],"float32"),], axis=-1, )
paddle.stack(list[Tensor([102],"float32"),Tensor([102],"float32"),Tensor([102],"float32"),Tensor([102],"float32"),], -1, )
paddle.stack(list[Tensor([102],"float32"),Tensor([102],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1030],"float32"),Tensor([1030],"float32"),Tensor([1030],"float32"),Tensor([1030],"float32"),], -1, )
paddle.stack(list[Tensor([1031],"float32"),Tensor([1031],"float32"),Tensor([1031],"float32"),Tensor([1031],"float32"),], -1, )
paddle.stack(list[Tensor([10368],"float32"),Tensor([10368],"float32"),Tensor([10368],"float32"),Tensor([10368],"float32"),], -1, )
paddle.stack(list[Tensor([103],"float32"),Tensor([103],"float32"),Tensor([103],"float32"),Tensor([103],"float32"),], -1, )
paddle.stack(list[Tensor([103],"float32"),Tensor([103],"float32"),], axis=-1, )
paddle.stack(list[Tensor([104, 104],"float32"),Tensor([104, 104],"float32"),Tensor([104, 104],"float32"),Tensor([104, 104],"float32"),], axis=-1, )
paddle.stack(list[Tensor([104, 104],"float32"),Tensor([104, 104],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1044],"float32"),Tensor([1044],"float32"),Tensor([1044],"float32"),Tensor([1044],"float32"),], -1, )
paddle.stack(list[Tensor([104],"float32"),Tensor([104],"float32"),Tensor([104],"float32"),Tensor([104],"float32"),], -1, )
paddle.stack(list[Tensor([104],"float32"),Tensor([104],"float32"),], axis=-1, )
paddle.stack(list[Tensor([105],"float32"),Tensor([105],"float32"),Tensor([105],"float32"),Tensor([105],"float32"),], -1, )
paddle.stack(list[Tensor([105],"float32"),Tensor([105],"float32"),], axis=-1, )
paddle.stack(list[Tensor([106],"float32"),Tensor([106],"float32"),Tensor([106],"float32"),Tensor([106],"float32"),], -1, )
paddle.stack(list[Tensor([106],"float32"),Tensor([106],"float32"),], axis=-1, )
paddle.stack(list[Tensor([107],"float32"),Tensor([107],"float32"),Tensor([107],"float32"),Tensor([107],"float32"),], -1, )
paddle.stack(list[Tensor([107],"float32"),Tensor([107],"float32"),], axis=-1, )
paddle.stack(list[Tensor([108, 108],"float32"),Tensor([108, 108],"float32"),Tensor([108, 108],"float32"),Tensor([108, 108],"float32"),], axis=-1, )
paddle.stack(list[Tensor([108, 108],"float32"),Tensor([108, 108],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10800],"float32"),Tensor([10800],"float32"),Tensor([10800],"float32"),Tensor([10800],"float32"),], -1, )
paddle.stack(list[Tensor([1088],"float32"),Tensor([1088],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10890],"float32"),Tensor([10890],"float32"),Tensor([10890],"float32"),Tensor([10890],"float32"),], -1, )
paddle.stack(list[Tensor([108],"float32"),Tensor([108],"float32"),Tensor([108],"float32"),Tensor([108],"float32"),], -1, )
paddle.stack(list[Tensor([108],"float32"),Tensor([108],"float32"),], axis=-1, )
paddle.stack(list[Tensor([109],"float32"),Tensor([109],"float32"),Tensor([109],"float32"),Tensor([109],"float32"),], -1, )
paddle.stack(list[Tensor([109],"float32"),Tensor([109],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10],"float32"),Tensor([10],"float32"),Tensor([10],"float32"),Tensor([10],"float32"),], -1, )
paddle.stack(list[Tensor([10],"float32"),Tensor([10],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10],"float32"),Tensor([10],"float32"),], axis=1, )
paddle.stack(list[Tensor([10],"int32"),], 1, )
paddle.stack(list[Tensor([10],"int64"),Tensor([10],"int64"),], axis=0, )
paddle.stack(list[Tensor([11, 11],"float32"),Tensor([11, 11],"float32"),Tensor([11, 11],"float32"),Tensor([11, 11],"float32"),], axis=-1, )
paddle.stack(list[Tensor([11, 11],"float32"),Tensor([11, 11],"float32"),], axis=-1, )
paddle.stack(list[Tensor([11050, 13],"float32"),Tensor([11050, 13],"float32"),Tensor([11050, 13],"float32"),Tensor([11050, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([11050, 14],"float32"),Tensor([11050, 14],"float32"),Tensor([11050, 14],"float32"),Tensor([11050, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([11050, 16],"float32"),Tensor([11050, 16],"float32"),Tensor([11050, 16],"float32"),Tensor([11050, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([11050, 18],"float32"),Tensor([11050, 18],"float32"),Tensor([11050, 18],"float32"),Tensor([11050, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([11050, 1],"float32"),Tensor([11050, 1],"float32"),Tensor([11050, 1],"float32"),Tensor([11050, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([11050, 21],"float32"),Tensor([11050, 21],"float32"),Tensor([11050, 21],"float32"),Tensor([11050, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([11050, 2],"float32"),Tensor([11050, 2],"float32"),Tensor([11050, 2],"float32"),Tensor([11050, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([11050, 3],"float32"),Tensor([11050, 3],"float32"),Tensor([11050, 3],"float32"),Tensor([11050, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([11050, 4],"float32"),Tensor([11050, 4],"float32"),Tensor([11050, 4],"float32"),Tensor([11050, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([11050, 5],"float32"),Tensor([11050, 5],"float32"),Tensor([11050, 5],"float32"),Tensor([11050, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([11050, 8],"float32"),Tensor([11050, 8],"float32"),Tensor([11050, 8],"float32"),Tensor([11050, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([11050, 9],"float32"),Tensor([11050, 9],"float32"),Tensor([11050, 9],"float32"),Tensor([11050, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([110592],"float32"),Tensor([110592],"float32"),Tensor([110592],"float32"),Tensor([110592],"float32"),], -1, )
paddle.stack(list[Tensor([1105],"float32"),Tensor([1105],"float32"),Tensor([1105],"float32"),Tensor([1105],"float32"),], -1, )
paddle.stack(list[Tensor([110],"float32"),Tensor([110],"float32"),Tensor([110],"float32"),Tensor([110],"float32"),], -1, )
paddle.stack(list[Tensor([110],"float32"),Tensor([110],"float32"),], axis=-1, )
paddle.stack(list[Tensor([11109],"float32"),Tensor([11109],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1112],"float32"),Tensor([1112],"float32"),Tensor([1112],"float32"),Tensor([1112],"float32"),], -1, )
paddle.stack(list[Tensor([1113],"float32"),Tensor([1113],"float32"),Tensor([1113],"float32"),Tensor([1113],"float32"),], -1, )
paddle.stack(list[Tensor([111],"float32"),Tensor([111],"float32"),Tensor([111],"float32"),Tensor([111],"float32"),], -1, )
paddle.stack(list[Tensor([111],"float32"),Tensor([111],"float32"),], axis=-1, )
paddle.stack(list[Tensor([112, 112],"float32"),Tensor([112, 112],"float32"),Tensor([112, 112],"float32"),Tensor([112, 112],"float32"),], axis=-1, )
paddle.stack(list[Tensor([112, 112],"float32"),Tensor([112, 112],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1122],"float32"),Tensor([1122],"float32"),Tensor([1122],"float32"),Tensor([1122],"float32"),], -1, )
paddle.stack(list[Tensor([112],"float32"),Tensor([112],"float32"),Tensor([112],"float32"),Tensor([112],"float32"),], -1, )
paddle.stack(list[Tensor([112],"float32"),Tensor([112],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1130],"float32"),Tensor([1130],"float32"),Tensor([1130],"float32"),Tensor([1130],"float32"),], -1, )
paddle.stack(list[Tensor([1131],"float32"),Tensor([1131],"float32"),Tensor([1131],"float32"),Tensor([1131],"float32"),], -1, )
paddle.stack(list[Tensor([113],"float32"),Tensor([113],"float32"),Tensor([113],"float32"),Tensor([113],"float32"),], -1, )
paddle.stack(list[Tensor([113],"float32"),Tensor([113],"float32"),], axis=-1, )
paddle.stack(list[Tensor([114, 4, 1, 32],"float16"),Tensor([114, 4, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([11400],"float32"),Tensor([11400],"float32"),Tensor([11400],"float32"),Tensor([11400],"float32"),], -1, )
paddle.stack(list[Tensor([1144],"float32"),Tensor([1144],"float32"),Tensor([1144],"float32"),Tensor([1144],"float32"),], -1, )
paddle.stack(list[Tensor([1146],"float32"),Tensor([1146],"float32"),Tensor([1146],"float32"),Tensor([1146],"float32"),], -1, )
paddle.stack(list[Tensor([114],"float32"),Tensor([114],"float32"),Tensor([114],"float32"),Tensor([114],"float32"),], -1, )
paddle.stack(list[Tensor([114],"float32"),Tensor([114],"float32"),], axis=-1, )
paddle.stack(list[Tensor([115200],"float32"),Tensor([115200],"float32"),Tensor([115200],"float32"),Tensor([115200],"float32"),], -1, )
paddle.stack(list[Tensor([1152],"float32"),Tensor([1152],"float32"),Tensor([1152],"float32"),Tensor([1152],"float32"),], -1, )
paddle.stack(list[Tensor([1152],"float32"),Tensor([1152],"float32"),], axis=-1, )
paddle.stack(list[Tensor([11552],"float32"),Tensor([11552],"float32"),Tensor([11552],"float32"),Tensor([11552],"float32"),], -1, )
paddle.stack(list[Tensor([1156],"float32"),Tensor([1156],"float32"),Tensor([1156],"float32"),Tensor([1156],"float32"),], -1, )
paddle.stack(list[Tensor([1156],"float32"),Tensor([1156],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1157],"float32"),Tensor([1157],"float32"),Tensor([1157],"float32"),Tensor([1157],"float32"),], -1, )
paddle.stack(list[Tensor([115],"float32"),Tensor([115],"float32"),Tensor([115],"float32"),Tensor([115],"float32"),], -1, )
paddle.stack(list[Tensor([115],"float32"),Tensor([115],"float32"),], axis=-1, )
paddle.stack(list[Tensor([116, 116],"float32"),Tensor([116, 116],"float32"),Tensor([116, 116],"float32"),Tensor([116, 116],"float32"),], axis=-1, )
paddle.stack(list[Tensor([116, 116],"float32"),Tensor([116, 116],"float32"),], axis=-1, )
paddle.stack(list[Tensor([116],"float32"),Tensor([116],"float32"),Tensor([116],"float32"),Tensor([116],"float32"),], -1, )
paddle.stack(list[Tensor([116],"float32"),Tensor([116],"float32"),], axis=-1, )
paddle.stack(list[Tensor([117],"float32"),Tensor([117],"float32"),Tensor([117],"float32"),Tensor([117],"float32"),], -1, )
paddle.stack(list[Tensor([117],"float32"),Tensor([117],"float32"),], axis=-1, )
paddle.stack(list[Tensor([118],"float32"),Tensor([118],"float32"),Tensor([118],"float32"),Tensor([118],"float32"),], -1, )
paddle.stack(list[Tensor([118],"float32"),Tensor([118],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1190],"float32"),Tensor([1190],"float32"),Tensor([1190],"float32"),Tensor([1190],"float32"),], -1, )
paddle.stack(list[Tensor([1194],"float32"),Tensor([1194],"float32"),Tensor([1194],"float32"),Tensor([1194],"float32"),], -1, )
paddle.stack(list[Tensor([119],"float32"),Tensor([119],"float32"),Tensor([119],"float32"),Tensor([119],"float32"),], -1, )
paddle.stack(list[Tensor([119],"float32"),Tensor([119],"float32"),], axis=-1, )
paddle.stack(list[Tensor([11],"float32"),Tensor([11],"float32"),Tensor([11],"float32"),Tensor([11],"float32"),], -1, )
paddle.stack(list[Tensor([11],"float32"),Tensor([11],"float32"),], axis=-1, )
paddle.stack(list[Tensor([12, 12],"float32"),Tensor([12, 12],"float32"),Tensor([12, 12],"float32"),Tensor([12, 12],"float32"),], axis=-1, )
paddle.stack(list[Tensor([12, 12],"float32"),Tensor([12, 12],"float32"),], axis=-1, )
paddle.stack(list[Tensor([12, 12],"int64"),Tensor([12, 12],"int64"),], )
paddle.stack(list[Tensor([120, 120],"float32"),Tensor([120, 120],"float32"),Tensor([120, 120],"float32"),Tensor([120, 120],"float32"),], axis=-1, )
paddle.stack(list[Tensor([120, 120],"float32"),Tensor([120, 120],"float32"),], axis=-1, )
paddle.stack(list[Tensor([12096],"float32"),Tensor([12096],"float32"),], axis=-1, )
paddle.stack(list[Tensor([120],"float32"),Tensor([120],"float32"),Tensor([120],"float32"),Tensor([120],"float32"),], -1, )
paddle.stack(list[Tensor([120],"float32"),Tensor([120],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1211],"float32"),Tensor([1211],"float32"),Tensor([1211],"float32"),Tensor([1211],"float32"),], -1, )
paddle.stack(list[Tensor([1216],"float32"),Tensor([1216],"float32"),], axis=-1, )
paddle.stack(list[Tensor([121],"float32"),Tensor([121],"float32"),Tensor([121],"float32"),Tensor([121],"float32"),], -1, )
paddle.stack(list[Tensor([121],"float32"),Tensor([121],"float32"),], axis=-1, )
paddle.stack(list[Tensor([12240, 10],"float32"),Tensor([12240, 10],"float32"),Tensor([12240, 10],"float32"),Tensor([12240, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 11],"float32"),Tensor([12240, 11],"float32"),Tensor([12240, 11],"float32"),Tensor([12240, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 12],"float32"),Tensor([12240, 12],"float32"),Tensor([12240, 12],"float32"),Tensor([12240, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 13],"float32"),Tensor([12240, 13],"float32"),Tensor([12240, 13],"float32"),Tensor([12240, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 14],"float32"),Tensor([12240, 14],"float32"),Tensor([12240, 14],"float32"),Tensor([12240, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 16],"float32"),Tensor([12240, 16],"float32"),Tensor([12240, 16],"float32"),Tensor([12240, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 17],"float32"),Tensor([12240, 17],"float32"),Tensor([12240, 17],"float32"),Tensor([12240, 17],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 18],"float32"),Tensor([12240, 18],"float32"),Tensor([12240, 18],"float32"),Tensor([12240, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 19],"float32"),Tensor([12240, 19],"float32"),Tensor([12240, 19],"float32"),Tensor([12240, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 1],"float32"),Tensor([12240, 1],"float32"),Tensor([12240, 1],"float32"),Tensor([12240, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 20],"float32"),Tensor([12240, 20],"float32"),Tensor([12240, 20],"float32"),Tensor([12240, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 21],"float32"),Tensor([12240, 21],"float32"),Tensor([12240, 21],"float32"),Tensor([12240, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 22],"float32"),Tensor([12240, 22],"float32"),Tensor([12240, 22],"float32"),Tensor([12240, 22],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 23],"float32"),Tensor([12240, 23],"float32"),Tensor([12240, 23],"float32"),Tensor([12240, 23],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 25],"float32"),Tensor([12240, 25],"float32"),Tensor([12240, 25],"float32"),Tensor([12240, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 27],"float32"),Tensor([12240, 27],"float32"),Tensor([12240, 27],"float32"),Tensor([12240, 27],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 29],"float32"),Tensor([12240, 29],"float32"),Tensor([12240, 29],"float32"),Tensor([12240, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 2],"float32"),Tensor([12240, 2],"float32"),Tensor([12240, 2],"float32"),Tensor([12240, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 30],"float32"),Tensor([12240, 30],"float32"),Tensor([12240, 30],"float32"),Tensor([12240, 30],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 32],"float32"),Tensor([12240, 32],"float32"),Tensor([12240, 32],"float32"),Tensor([12240, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 37],"float32"),Tensor([12240, 37],"float32"),Tensor([12240, 37],"float32"),Tensor([12240, 37],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 41],"float32"),Tensor([12240, 41],"float32"),Tensor([12240, 41],"float32"),Tensor([12240, 41],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 4],"float32"),Tensor([12240, 4],"float32"),Tensor([12240, 4],"float32"),Tensor([12240, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 5],"float32"),Tensor([12240, 5],"float32"),Tensor([12240, 5],"float32"),Tensor([12240, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 64],"float32"),Tensor([12240, 64],"float32"),Tensor([12240, 64],"float32"),Tensor([12240, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 7],"float32"),Tensor([12240, 7],"float32"),Tensor([12240, 7],"float32"),Tensor([12240, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 8],"float32"),Tensor([12240, 8],"float32"),Tensor([12240, 8],"float32"),Tensor([12240, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([12240, 97],"float32"),Tensor([12240, 97],"float32"),Tensor([12240, 97],"float32"),Tensor([12240, 97],"float32"),], axis=1, )
paddle.stack(list[Tensor([122],"float32"),Tensor([122],"float32"),Tensor([122],"float32"),Tensor([122],"float32"),], -1, )
paddle.stack(list[Tensor([122],"float32"),Tensor([122],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1232],"float32"),Tensor([1232],"float32"),], axis=-1, )
paddle.stack(list[Tensor([123904],"float32"),Tensor([123904],"float32"),Tensor([123904],"float32"),Tensor([123904],"float32"),], -1, )
paddle.stack(list[Tensor([123],"float32"),Tensor([123],"float32"),Tensor([123],"float32"),Tensor([123],"float32"),], -1, )
paddle.stack(list[Tensor([123],"float32"),Tensor([123],"float32"),], axis=-1, )
paddle.stack(list[Tensor([12480],"float32"),Tensor([12480],"float32"),Tensor([12480],"float32"),Tensor([12480],"float32"),], -1, )
paddle.stack(list[Tensor([124],"float32"),Tensor([124],"float32"),Tensor([124],"float32"),Tensor([124],"float32"),], -1, )
paddle.stack(list[Tensor([124],"float32"),Tensor([124],"float32"),], axis=-1, )
paddle.stack(list[Tensor([12544],"float32"),Tensor([12544],"float32"),Tensor([12544],"float32"),Tensor([12544],"float32"),], -1, )
paddle.stack(list[Tensor([125],"float32"),Tensor([125],"float32"),Tensor([125],"float32"),Tensor([125],"float32"),], -1, )
paddle.stack(list[Tensor([125],"float32"),Tensor([125],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1262],"float32"),Tensor([1262],"float32"),Tensor([1262],"float32"),Tensor([1262],"float32"),], -1, )
paddle.stack(list[Tensor([126],"float32"),Tensor([126],"float32"),Tensor([126],"float32"),Tensor([126],"float32"),], -1, )
paddle.stack(list[Tensor([126],"float32"),Tensor([126],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1273],"float32"),Tensor([1273],"float32"),Tensor([1273],"float32"),Tensor([1273],"float32"),], -1, )
paddle.stack(list[Tensor([127],"float32"),Tensor([127],"float32"),Tensor([127],"float32"),Tensor([127],"float32"),], -1, )
paddle.stack(list[Tensor([127],"float32"),Tensor([127],"float32"),], axis=-1, )
paddle.stack(list[Tensor([128, 128],"float32"),Tensor([128, 128],"float32"),Tensor([128, 128],"float32"),Tensor([128, 128],"float32"),], axis=-1, )
paddle.stack(list[Tensor([128, 128],"float32"),Tensor([128, 128],"float32"),], axis=-1, )
paddle.stack(list[Tensor([128, 32, 476, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 512],"float16"),Tensor([128, 512],"float16"),Tensor([128, 512],"float16"),], axis=1, )
paddle.stack(list[Tensor([128, 512],"int32"),Tensor([128, 512],"int32"),Tensor([128, 512],"int32"),], axis=1, )
paddle.stack(list[Tensor([12800],"float32"),Tensor([12800],"float32"),Tensor([12800],"float32"),Tensor([12800],"float32"),], -1, )
paddle.stack(list[Tensor([1280],"float32"),Tensor([1280],"float32"),], axis=-1, )
paddle.stack(list[Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),], -1, )
paddle.stack(list[Tensor([128],"float32"),Tensor([128],"float32"),], axis=-1, )
paddle.stack(list[Tensor([128],"int64"),Tensor([128],"int64"),], )
paddle.stack(list[Tensor([12960],"float32"),Tensor([12960],"float32"),Tensor([12960],"float32"),Tensor([12960],"float32"),], -1, )
paddle.stack(list[Tensor([1296],"float32"),Tensor([1296],"float32"),Tensor([1296],"float32"),Tensor([1296],"float32"),], -1, )
paddle.stack(list[Tensor([1296],"float32"),Tensor([1296],"float32"),], axis=-1, )
paddle.stack(list[Tensor([129792],"float32"),Tensor([129792],"float32"),Tensor([129792],"float32"),Tensor([129792],"float32"),], -1, )
paddle.stack(list[Tensor([1297],"float32"),Tensor([1297],"float32"),Tensor([1297],"float32"),Tensor([1297],"float32"),], -1, )
paddle.stack(list[Tensor([1298],"float32"),Tensor([1298],"float32"),Tensor([1298],"float32"),Tensor([1298],"float32"),], -1, )
paddle.stack(list[Tensor([129],"float32"),Tensor([129],"float32"),Tensor([129],"float32"),Tensor([129],"float32"),], -1, )
paddle.stack(list[Tensor([129],"float32"),Tensor([129],"float32"),], axis=-1, )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], -1, )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),], axis=-1, )
paddle.stack(list[Tensor([12],"int32"),Tensor([12],"int32"),], axis=-1, )
paddle.stack(list[Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 13],"float32"),Tensor([13, 13],"float32"),Tensor([13, 13],"float32"),Tensor([13, 13],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 13],"float32"),Tensor([13, 13],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 3],"float32"),Tensor([13, 3],"float32"),Tensor([13, 3],"float32"),Tensor([13, 3],"float32"),Tensor([13, 3],"float32"),Tensor([13, 3],"float32"),Tensor([13, 3],"float32"),], )
paddle.stack(list[Tensor([13, 3],"int64"),Tensor([13, 3],"int64"),Tensor([13, 3],"int64"),Tensor([13, 3],"int64"),Tensor([13, 3],"int64"),Tensor([13, 3],"int64"),], )
paddle.stack(list[Tensor([13, 4, 7, 4],"float32"),Tensor([13, 4, 7, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 7, 14],"float32"),Tensor([13, 7, 14],"float32"),Tensor([13, 7, 14],"float32"),Tensor([13, 7, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13, 7, 64],"float32"),Tensor([13, 7, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1309],"float32"),Tensor([1309],"float32"),Tensor([1309],"float32"),Tensor([1309],"float32"),], -1, )
paddle.stack(list[Tensor([130],"float32"),Tensor([130],"float32"),Tensor([130],"float32"),Tensor([130],"float32"),], -1, )
paddle.stack(list[Tensor([130],"float32"),Tensor([130],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13125, 10],"float32"),Tensor([13125, 10],"float32"),Tensor([13125, 10],"float32"),Tensor([13125, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([13125, 1],"float32"),Tensor([13125, 1],"float32"),Tensor([13125, 1],"float32"),Tensor([13125, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([13125, 2],"float32"),Tensor([13125, 2],"float32"),Tensor([13125, 2],"float32"),Tensor([13125, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([13125, 3],"float32"),Tensor([13125, 3],"float32"),Tensor([13125, 3],"float32"),Tensor([13125, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([13125, 4],"float32"),Tensor([13125, 4],"float32"),Tensor([13125, 4],"float32"),Tensor([13125, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([13125, 5],"float32"),Tensor([13125, 5],"float32"),Tensor([13125, 5],"float32"),Tensor([13125, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([13125, 6],"float32"),Tensor([13125, 6],"float32"),Tensor([13125, 6],"float32"),Tensor([13125, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([13125, 7],"float32"),Tensor([13125, 7],"float32"),Tensor([13125, 7],"float32"),Tensor([13125, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([13125, 8],"float32"),Tensor([13125, 8],"float32"),Tensor([13125, 8],"float32"),Tensor([13125, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([1312],"float32"),Tensor([1312],"float32"),Tensor([1312],"float32"),Tensor([1312],"float32"),], -1, )
paddle.stack(list[Tensor([131],"float32"),Tensor([131],"float32"),Tensor([131],"float32"),Tensor([131],"float32"),], -1, )
paddle.stack(list[Tensor([131],"float32"),Tensor([131],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1321],"float32"),Tensor([1321],"float32"),Tensor([1321],"float32"),Tensor([1321],"float32"),], -1, )
paddle.stack(list[Tensor([132],"float32"),Tensor([132],"float32"),Tensor([132],"float32"),Tensor([132],"float32"),], -1, )
paddle.stack(list[Tensor([132],"float32"),Tensor([132],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1332],"float32"),Tensor([1332],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1339],"float32"),Tensor([1339],"float32"),Tensor([1339],"float32"),Tensor([1339],"float32"),], -1, )
paddle.stack(list[Tensor([133],"float32"),Tensor([133],"float32"),Tensor([133],"float32"),Tensor([133],"float32"),], -1, )
paddle.stack(list[Tensor([133],"float32"),Tensor([133],"float32"),], axis=-1, )
paddle.stack(list[Tensor([134, 4, 2, 32],"float16"),Tensor([134, 4, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([134, 4, 4, 32],"float16"),Tensor([134, 4, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([1344],"float32"),Tensor([1344],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1349],"float32"),Tensor([1349],"float32"),Tensor([1349],"float32"),Tensor([1349],"float32"),], -1, )
paddle.stack(list[Tensor([134],"float32"),Tensor([134],"float32"),Tensor([134],"float32"),Tensor([134],"float32"),], -1, )
paddle.stack(list[Tensor([134],"float32"),Tensor([134],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1359],"float32"),Tensor([1359],"float32"),Tensor([1359],"float32"),Tensor([1359],"float32"),], -1, )
paddle.stack(list[Tensor([135],"float32"),Tensor([135],"float32"),Tensor([135],"float32"),Tensor([135],"float32"),], -1, )
paddle.stack(list[Tensor([135],"float32"),Tensor([135],"float32"),], axis=-1, )
paddle.stack(list[Tensor([136, 136],"float32"),Tensor([136, 136],"float32"),Tensor([136, 136],"float32"),Tensor([136, 136],"float32"),], axis=-1, )
paddle.stack(list[Tensor([136, 136],"float32"),Tensor([136, 136],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1360, 10],"float32"),Tensor([1360, 10],"float32"),Tensor([1360, 10],"float32"),Tensor([1360, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 11],"float32"),Tensor([1360, 11],"float32"),Tensor([1360, 11],"float32"),Tensor([1360, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 12],"float32"),Tensor([1360, 12],"float32"),Tensor([1360, 12],"float32"),Tensor([1360, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 13],"float32"),Tensor([1360, 13],"float32"),Tensor([1360, 13],"float32"),Tensor([1360, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 14],"float32"),Tensor([1360, 14],"float32"),Tensor([1360, 14],"float32"),Tensor([1360, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 15],"float32"),Tensor([1360, 15],"float32"),Tensor([1360, 15],"float32"),Tensor([1360, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 16],"float32"),Tensor([1360, 16],"float32"),Tensor([1360, 16],"float32"),Tensor([1360, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 17],"float32"),Tensor([1360, 17],"float32"),Tensor([1360, 17],"float32"),Tensor([1360, 17],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 18],"float32"),Tensor([1360, 18],"float32"),Tensor([1360, 18],"float32"),Tensor([1360, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 19],"float32"),Tensor([1360, 19],"float32"),Tensor([1360, 19],"float32"),Tensor([1360, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 1],"float32"),Tensor([1360, 1],"float32"),Tensor([1360, 1],"float32"),Tensor([1360, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 20],"float32"),Tensor([1360, 20],"float32"),Tensor([1360, 20],"float32"),Tensor([1360, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 21],"float32"),Tensor([1360, 21],"float32"),Tensor([1360, 21],"float32"),Tensor([1360, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 22],"float32"),Tensor([1360, 22],"float32"),Tensor([1360, 22],"float32"),Tensor([1360, 22],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 23],"float32"),Tensor([1360, 23],"float32"),Tensor([1360, 23],"float32"),Tensor([1360, 23],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 24],"float32"),Tensor([1360, 24],"float32"),Tensor([1360, 24],"float32"),Tensor([1360, 24],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 25],"float32"),Tensor([1360, 25],"float32"),Tensor([1360, 25],"float32"),Tensor([1360, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 26],"float32"),Tensor([1360, 26],"float32"),Tensor([1360, 26],"float32"),Tensor([1360, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 27],"float32"),Tensor([1360, 27],"float32"),Tensor([1360, 27],"float32"),Tensor([1360, 27],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 28],"float32"),Tensor([1360, 28],"float32"),Tensor([1360, 28],"float32"),Tensor([1360, 28],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 29],"float32"),Tensor([1360, 29],"float32"),Tensor([1360, 29],"float32"),Tensor([1360, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 2],"float32"),Tensor([1360, 2],"float32"),Tensor([1360, 2],"float32"),Tensor([1360, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 30],"float32"),Tensor([1360, 30],"float32"),Tensor([1360, 30],"float32"),Tensor([1360, 30],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 31],"float32"),Tensor([1360, 31],"float32"),Tensor([1360, 31],"float32"),Tensor([1360, 31],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 32],"float32"),Tensor([1360, 32],"float32"),Tensor([1360, 32],"float32"),Tensor([1360, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 33],"float32"),Tensor([1360, 33],"float32"),Tensor([1360, 33],"float32"),Tensor([1360, 33],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 34],"float32"),Tensor([1360, 34],"float32"),Tensor([1360, 34],"float32"),Tensor([1360, 34],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 35],"float32"),Tensor([1360, 35],"float32"),Tensor([1360, 35],"float32"),Tensor([1360, 35],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 38],"float32"),Tensor([1360, 38],"float32"),Tensor([1360, 38],"float32"),Tensor([1360, 38],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 39],"float32"),Tensor([1360, 39],"float32"),Tensor([1360, 39],"float32"),Tensor([1360, 39],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 3],"float32"),Tensor([1360, 3],"float32"),Tensor([1360, 3],"float32"),Tensor([1360, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 40],"float32"),Tensor([1360, 40],"float32"),Tensor([1360, 40],"float32"),Tensor([1360, 40],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 4],"float32"),Tensor([1360, 4],"float32"),Tensor([1360, 4],"float32"),Tensor([1360, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 5],"float32"),Tensor([1360, 5],"float32"),Tensor([1360, 5],"float32"),Tensor([1360, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 6],"float32"),Tensor([1360, 6],"float32"),Tensor([1360, 6],"float32"),Tensor([1360, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 7],"float32"),Tensor([1360, 7],"float32"),Tensor([1360, 7],"float32"),Tensor([1360, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 8],"float32"),Tensor([1360, 8],"float32"),Tensor([1360, 8],"float32"),Tensor([1360, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360, 9],"float32"),Tensor([1360, 9],"float32"),Tensor([1360, 9],"float32"),Tensor([1360, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([1360],"float32"),Tensor([1360],"float32"),], axis=-1, )
paddle.stack(list[Tensor([136],"float32"),Tensor([136],"float32"),Tensor([136],"float32"),Tensor([136],"float32"),], -1, )
paddle.stack(list[Tensor([136],"float32"),Tensor([136],"float32"),], axis=-1, )
paddle.stack(list[Tensor([137],"float32"),Tensor([137],"float32"),Tensor([137],"float32"),Tensor([137],"float32"),], -1, )
paddle.stack(list[Tensor([137],"float32"),Tensor([137],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1382],"float32"),Tensor([1382],"float32"),Tensor([1382],"float32"),Tensor([1382],"float32"),], -1, )
paddle.stack(list[Tensor([138],"float32"),Tensor([138],"float32"),Tensor([138],"float32"),Tensor([138],"float32"),], -1, )
paddle.stack(list[Tensor([138],"float32"),Tensor([138],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1393],"float32"),Tensor([1393],"float32"),Tensor([1393],"float32"),Tensor([1393],"float32"),], -1, )
paddle.stack(list[Tensor([139],"float32"),Tensor([139],"float32"),Tensor([139],"float32"),Tensor([139],"float32"),], -1, )
paddle.stack(list[Tensor([139],"float32"),Tensor([139],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13],"float32"),Tensor([13],"float32"),Tensor([13],"float32"),Tensor([13],"float32"),], -1, )
paddle.stack(list[Tensor([13],"float32"),Tensor([13],"float32"),], axis=-1, )
paddle.stack(list[Tensor([13],"int64"),Tensor([13],"int64"),Tensor([13],"int64"),Tensor([13],"int64"),Tensor([13],"int64"),Tensor([13],"int64"),Tensor([13],"int64"),], 1, )
paddle.stack(list[Tensor([13],"int64"),Tensor([13],"int64"),], axis=-1, )
paddle.stack(list[Tensor([13],"int64"),Tensor([13],"int64"),], axis=1, )
paddle.stack(list[Tensor([14, 14],"float32"),Tensor([14, 14],"float32"),Tensor([14, 14],"float32"),Tensor([14, 14],"float32"),], axis=-1, )
paddle.stack(list[Tensor([14, 14],"float32"),Tensor([14, 14],"float32"),], axis=-1, )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([14, 14],"int64"),Tensor([14, 14],"int64"),], )
paddle.stack(list[Tensor([14, 64],"float32"),Tensor([14, 64],"float32"),Tensor([14, 64],"float32"),Tensor([14, 64],"float32"),Tensor([14, 64],"float32"),Tensor([14, 64],"float32"),Tensor([14, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1401],"float32"),Tensor([1401],"float32"),Tensor([1401],"float32"),Tensor([1401],"float32"),], -1, )
paddle.stack(list[Tensor([1404],"float32"),Tensor([1404],"float32"),Tensor([1404],"float32"),Tensor([1404],"float32"),], -1, )
paddle.stack(list[Tensor([1405],"float32"),Tensor([1405],"float32"),Tensor([1405],"float32"),Tensor([1405],"float32"),], -1, )
paddle.stack(list[Tensor([1407],"float32"),Tensor([1407],"float32"),Tensor([1407],"float32"),Tensor([1407],"float32"),], -1, )
paddle.stack(list[Tensor([1408],"float32"),Tensor([1408],"float32"),], axis=-1, )
paddle.stack(list[Tensor([140],"float32"),Tensor([140],"float32"),Tensor([140],"float32"),Tensor([140],"float32"),], -1, )
paddle.stack(list[Tensor([140],"float32"),Tensor([140],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1410],"float32"),Tensor([1410],"float32"),Tensor([1410],"float32"),Tensor([1410],"float32"),], -1, )
paddle.stack(list[Tensor([14112],"float32"),Tensor([14112],"float32"),Tensor([14112],"float32"),Tensor([14112],"float32"),], -1, )
paddle.stack(list[Tensor([1417],"float32"),Tensor([1417],"float32"),Tensor([1417],"float32"),Tensor([1417],"float32"),], -1, )
paddle.stack(list[Tensor([141],"float32"),Tensor([141],"float32"),Tensor([141],"float32"),Tensor([141],"float32"),], -1, )
paddle.stack(list[Tensor([141],"float32"),Tensor([141],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1422],"float32"),Tensor([1422],"float32"),Tensor([1422],"float32"),Tensor([1422],"float32"),], -1, )
paddle.stack(list[Tensor([1429],"float32"),Tensor([1429],"float32"),Tensor([1429],"float32"),Tensor([1429],"float32"),], -1, )
paddle.stack(list[Tensor([142],"float32"),Tensor([142],"float32"),Tensor([142],"float32"),Tensor([142],"float32"),], -1, )
paddle.stack(list[Tensor([142],"float32"),Tensor([142],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1431],"float32"),Tensor([1431],"float32"),Tensor([1431],"float32"),Tensor([1431],"float32"),], -1, )
paddle.stack(list[Tensor([143],"float32"),Tensor([143],"float32"),Tensor([143],"float32"),Tensor([143],"float32"),], -1, )
paddle.stack(list[Tensor([143],"float32"),Tensor([143],"float32"),], axis=-1, )
paddle.stack(list[Tensor([144, 144],"float32"),Tensor([144, 144],"float32"),Tensor([144, 144],"float32"),Tensor([144, 144],"float32"),], axis=-1, )
paddle.stack(list[Tensor([144, 144],"float32"),Tensor([144, 144],"float32"),], axis=-1, )
paddle.stack(list[Tensor([14400],"float32"),Tensor([14400],"float32"),Tensor([14400],"float32"),Tensor([14400],"float32"),], -1, )
paddle.stack(list[Tensor([1443],"float32"),Tensor([1443],"float32"),Tensor([1443],"float32"),Tensor([1443],"float32"),], -1, )
paddle.stack(list[Tensor([1444],"float32"),Tensor([1444],"float32"),Tensor([1444],"float32"),Tensor([1444],"float32"),], -1, )
paddle.stack(list[Tensor([1444],"float32"),Tensor([1444],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1448],"float32"),Tensor([1448],"float32"),Tensor([1448],"float32"),Tensor([1448],"float32"),], -1, )
paddle.stack(list[Tensor([144],"float32"),Tensor([144],"float32"),Tensor([144],"float32"),Tensor([144],"float32"),], -1, )
paddle.stack(list[Tensor([144],"float32"),Tensor([144],"float32"),], axis=-1, )
paddle.stack(list[Tensor([145, 4, 2, 32],"float16"),Tensor([145, 4, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([145, 4, 4, 32],"float16"),Tensor([145, 4, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([1450],"float32"),Tensor([1450],"float32"),Tensor([1450],"float32"),Tensor([1450],"float32"),], -1, )
paddle.stack(list[Tensor([1454],"float32"),Tensor([1454],"float32"),Tensor([1454],"float32"),Tensor([1454],"float32"),], -1, )
paddle.stack(list[Tensor([1455],"float32"),Tensor([1455],"float32"),Tensor([1455],"float32"),Tensor([1455],"float32"),], -1, )
paddle.stack(list[Tensor([145],"float32"),Tensor([145],"float32"),Tensor([145],"float32"),Tensor([145],"float32"),], -1, )
paddle.stack(list[Tensor([145],"float32"),Tensor([145],"float32"),], axis=-1, )
paddle.stack(list[Tensor([146],"float32"),Tensor([146],"float32"),Tensor([146],"float32"),Tensor([146],"float32"),], -1, )
paddle.stack(list[Tensor([146],"float32"),Tensor([146],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1471],"float32"),Tensor([1471],"float32"),Tensor([1471],"float32"),Tensor([1471],"float32"),], -1, )
paddle.stack(list[Tensor([1472],"float32"),Tensor([1472],"float32"),Tensor([1472],"float32"),Tensor([1472],"float32"),], -1, )
paddle.stack(list[Tensor([1472],"float32"),Tensor([1472],"float32"),], axis=-1, )
paddle.stack(list[Tensor([147456],"float32"),Tensor([147456],"float32"),Tensor([147456],"float32"),Tensor([147456],"float32"),], -1, )
paddle.stack(list[Tensor([147],"float32"),Tensor([147],"float32"),Tensor([147],"float32"),Tensor([147],"float32"),], -1, )
paddle.stack(list[Tensor([147],"float32"),Tensor([147],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1481],"float32"),Tensor([1481],"float32"),Tensor([1481],"float32"),Tensor([1481],"float32"),], -1, )
paddle.stack(list[Tensor([1482],"float32"),Tensor([1482],"float32"),Tensor([1482],"float32"),Tensor([1482],"float32"),], -1, )
paddle.stack(list[Tensor([1486],"float32"),Tensor([1486],"float32"),Tensor([1486],"float32"),Tensor([1486],"float32"),], -1, )
paddle.stack(list[Tensor([1487],"float32"),Tensor([1487],"float32"),Tensor([1487],"float32"),Tensor([1487],"float32"),], -1, )
paddle.stack(list[Tensor([148],"float32"),Tensor([148],"float32"),Tensor([148],"float32"),Tensor([148],"float32"),], -1, )
paddle.stack(list[Tensor([148],"float32"),Tensor([148],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1491],"float32"),Tensor([1491],"float32"),Tensor([1491],"float32"),Tensor([1491],"float32"),], -1, )
paddle.stack(list[Tensor([1499],"float32"),Tensor([1499],"float32"),Tensor([1499],"float32"),Tensor([1499],"float32"),], -1, )
paddle.stack(list[Tensor([149],"float32"),Tensor([149],"float32"),Tensor([149],"float32"),Tensor([149],"float32"),], -1, )
paddle.stack(list[Tensor([149],"float32"),Tensor([149],"float32"),], axis=-1, )
paddle.stack(list[Tensor([14],"float32"),Tensor([14],"float32"),Tensor([14],"float32"),Tensor([14],"float32"),], -1, )
paddle.stack(list[Tensor([14],"float32"),Tensor([14],"float32"),], axis=-1, )
paddle.stack(list[Tensor([14],"int64"),Tensor([14],"int64"),], axis=-1, )
paddle.stack(list[Tensor([15, 15],"float32"),Tensor([15, 15],"float32"),Tensor([15, 15],"float32"),Tensor([15, 15],"float32"),], axis=-1, )
paddle.stack(list[Tensor([15, 15],"float32"),Tensor([15, 15],"float32"),], -1, )
paddle.stack(list[Tensor([15, 15],"float32"),Tensor([15, 15],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1500],"float32"),Tensor([1500],"float32"),Tensor([1500],"float32"),Tensor([1500],"float32"),], -1, )
paddle.stack(list[Tensor([1503],"float32"),Tensor([1503],"float32"),Tensor([1503],"float32"),Tensor([1503],"float32"),], -1, )
paddle.stack(list[Tensor([150528],"float32"),Tensor([150528],"float32"),Tensor([150528],"float32"),Tensor([150528],"float32"),], -1, )
paddle.stack(list[Tensor([1505],"float32"),Tensor([1505],"float32"),Tensor([1505],"float32"),Tensor([1505],"float32"),], -1, )
paddle.stack(list[Tensor([1508],"float32"),Tensor([1508],"float32"),Tensor([1508],"float32"),Tensor([1508],"float32"),], -1, )
paddle.stack(list[Tensor([150],"float32"),Tensor([150],"float32"),Tensor([150],"float32"),Tensor([150],"float32"),], -1, )
paddle.stack(list[Tensor([150],"float32"),Tensor([150],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1515],"float32"),Tensor([1515],"float32"),Tensor([1515],"float32"),Tensor([1515],"float32"),], -1, )
paddle.stack(list[Tensor([151],"float32"),Tensor([151],"float32"),Tensor([151],"float32"),Tensor([151],"float32"),], -1, )
paddle.stack(list[Tensor([151],"float32"),Tensor([151],"float32"),], axis=-1, )
paddle.stack(list[Tensor([152, 152],"float32"),Tensor([152, 152],"float32"),Tensor([152, 152],"float32"),Tensor([152, 152],"float32"),], axis=-1, )
paddle.stack(list[Tensor([152, 152],"float32"),Tensor([152, 152],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1520],"float32"),Tensor([1520],"float32"),Tensor([1520],"float32"),Tensor([1520],"float32"),], -1, )
paddle.stack(list[Tensor([15210],"float32"),Tensor([15210],"float32"),Tensor([15210],"float32"),Tensor([15210],"float32"),], -1, )
paddle.stack(list[Tensor([1524],"float32"),Tensor([1524],"float32"),Tensor([1524],"float32"),Tensor([1524],"float32"),], -1, )
paddle.stack(list[Tensor([1525],"float32"),Tensor([1525],"float32"),Tensor([1525],"float32"),Tensor([1525],"float32"),], -1, )
paddle.stack(list[Tensor([1526],"float32"),Tensor([1526],"float32"),Tensor([1526],"float32"),Tensor([1526],"float32"),], -1, )
paddle.stack(list[Tensor([1527],"float32"),Tensor([1527],"float32"),Tensor([1527],"float32"),Tensor([1527],"float32"),], -1, )
paddle.stack(list[Tensor([152],"float32"),Tensor([152],"float32"),Tensor([152],"float32"),Tensor([152],"float32"),], -1, )
paddle.stack(list[Tensor([152],"float32"),Tensor([152],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1530],"float32"),Tensor([1530],"float32"),Tensor([1530],"float32"),Tensor([1530],"float32"),], -1, )
paddle.stack(list[Tensor([1536],"float32"),Tensor([1536],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1537],"float32"),Tensor([1537],"float32"),Tensor([1537],"float32"),Tensor([1537],"float32"),], -1, )
paddle.stack(list[Tensor([1539],"float32"),Tensor([1539],"float32"),Tensor([1539],"float32"),Tensor([1539],"float32"),], -1, )
paddle.stack(list[Tensor([153],"float32"),Tensor([153],"float32"),Tensor([153],"float32"),Tensor([153],"float32"),], -1, )
paddle.stack(list[Tensor([153],"float32"),Tensor([153],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1544],"float32"),Tensor([1544],"float32"),Tensor([1544],"float32"),Tensor([1544],"float32"),], -1, )
paddle.stack(list[Tensor([15488],"float32"),Tensor([15488],"float32"),Tensor([15488],"float32"),Tensor([15488],"float32"),], -1, )
paddle.stack(list[Tensor([1548],"float32"),Tensor([1548],"float32"),Tensor([1548],"float32"),Tensor([1548],"float32"),], -1, )
paddle.stack(list[Tensor([154],"float32"),Tensor([154],"float32"),Tensor([154],"float32"),Tensor([154],"float32"),], -1, )
paddle.stack(list[Tensor([154],"float32"),Tensor([154],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1550],"float32"),Tensor([1550],"float32"),Tensor([1550],"float32"),Tensor([1550],"float32"),], -1, )
paddle.stack(list[Tensor([1552],"float32"),Tensor([1552],"float32"),Tensor([1552],"float32"),Tensor([1552],"float32"),], -1, )
paddle.stack(list[Tensor([1553],"float32"),Tensor([1553],"float32"),Tensor([1553],"float32"),Tensor([1553],"float32"),], -1, )
paddle.stack(list[Tensor([1555],"float32"),Tensor([1555],"float32"),Tensor([1555],"float32"),Tensor([1555],"float32"),], -1, )
paddle.stack(list[Tensor([1556],"float32"),Tensor([1556],"float32"),Tensor([1556],"float32"),Tensor([1556],"float32"),], -1, )
paddle.stack(list[Tensor([1559],"float32"),Tensor([1559],"float32"),Tensor([1559],"float32"),Tensor([1559],"float32"),], -1, )
paddle.stack(list[Tensor([155],"float32"),Tensor([155],"float32"),Tensor([155],"float32"),Tensor([155],"float32"),], -1, )
paddle.stack(list[Tensor([155],"float32"),Tensor([155],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1561],"float32"),Tensor([1561],"float32"),Tensor([1561],"float32"),Tensor([1561],"float32"),], -1, )
paddle.stack(list[Tensor([1562],"float32"),Tensor([1562],"float32"),Tensor([1562],"float32"),Tensor([1562],"float32"),], -1, )
paddle.stack(list[Tensor([1563],"float32"),Tensor([1563],"float32"),Tensor([1563],"float32"),Tensor([1563],"float32"),], -1, )
paddle.stack(list[Tensor([1567],"float32"),Tensor([1567],"float32"),Tensor([1567],"float32"),Tensor([1567],"float32"),], -1, )
paddle.stack(list[Tensor([1568],"float32"),Tensor([1568],"float32"),Tensor([1568],"float32"),Tensor([1568],"float32"),], -1, )
paddle.stack(list[Tensor([1569],"float32"),Tensor([1569],"float32"),Tensor([1569],"float32"),Tensor([1569],"float32"),], -1, )
paddle.stack(list[Tensor([156],"float32"),Tensor([156],"float32"),Tensor([156],"float32"),Tensor([156],"float32"),], -1, )
paddle.stack(list[Tensor([156],"float32"),Tensor([156],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1574],"float32"),Tensor([1574],"float32"),Tensor([1574],"float32"),Tensor([1574],"float32"),], -1, )
paddle.stack(list[Tensor([1576],"float32"),Tensor([1576],"float32"),], axis=-1, )
paddle.stack(list[Tensor([157920, 2],"float32"),Tensor([157920, 2],"float32"),Tensor([157920, 2],"float32"),Tensor([157920, 2],"float32"),], )
paddle.stack(list[Tensor([157920, 4],"float32"),Tensor([157920, 4],"float32"),Tensor([157920, 4],"float32"),Tensor([157920, 4],"float32"),], )
paddle.stack(list[Tensor([157920, 7],"float32"),Tensor([157920, 7],"float32"),Tensor([157920, 7],"float32"),Tensor([157920, 7],"float32"),], axis=0, )
paddle.stack(list[Tensor([157920],"float32"),Tensor([157920],"float32"),Tensor([157920],"float32"),Tensor([157920],"float32"),], axis=0, )
paddle.stack(list[Tensor([157920],"int32"),Tensor([157920],"int32"),Tensor([157920],"int32"),Tensor([157920],"int32"),], axis=0, )
paddle.stack(list[Tensor([157],"float32"),Tensor([157],"float32"),Tensor([157],"float32"),Tensor([157],"float32"),], -1, )
paddle.stack(list[Tensor([157],"float32"),Tensor([157],"float32"),], axis=-1, )
paddle.stack(list[Tensor([158, 4, 2, 32],"float16"),Tensor([158, 4, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([158, 4, 4, 32],"float16"),Tensor([158, 4, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([1580],"float32"),Tensor([1580],"float32"),Tensor([1580],"float32"),Tensor([1580],"float32"),], -1, )
paddle.stack(list[Tensor([1584],"float32"),Tensor([1584],"float32"),Tensor([1584],"float32"),Tensor([1584],"float32"),], -1, )
paddle.stack(list[Tensor([1585],"float32"),Tensor([1585],"float32"),Tensor([1585],"float32"),Tensor([1585],"float32"),], -1, )
paddle.stack(list[Tensor([158],"float32"),Tensor([158],"float32"),Tensor([158],"float32"),Tensor([158],"float32"),], -1, )
paddle.stack(list[Tensor([158],"float32"),Tensor([158],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1590],"float32"),Tensor([1590],"float32"),Tensor([1590],"float32"),Tensor([1590],"float32"),], -1, )
paddle.stack(list[Tensor([1596],"float32"),Tensor([1596],"float32"),Tensor([1596],"float32"),Tensor([1596],"float32"),], -1, )
paddle.stack(list[Tensor([1597],"float32"),Tensor([1597],"float32"),Tensor([1597],"float32"),Tensor([1597],"float32"),], -1, )
paddle.stack(list[Tensor([1598],"float32"),Tensor([1598],"float32"),Tensor([1598],"float32"),Tensor([1598],"float32"),], -1, )
paddle.stack(list[Tensor([159],"float32"),Tensor([159],"float32"),Tensor([159],"float32"),Tensor([159],"float32"),], -1, )
paddle.stack(list[Tensor([159],"float32"),Tensor([159],"float32"),], axis=-1, )
paddle.stack(list[Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),], )
paddle.stack(list[Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),], -1, )
paddle.stack(list[Tensor([15],"float32"),Tensor([15],"float32"),], axis=-1, )
paddle.stack(list[Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),], -1, )
paddle.stack(list[Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([16, 2, 16],"float32"),Tensor([16, 2, 16],"float32"),Tensor([16, 2, 16],"float32"),Tensor([16, 2, 16],"float32"),Tensor([16, 2, 16],"float32"),Tensor([16, 2, 16],"float32"),Tensor([16, 2, 16],"float32"),Tensor([16, 2, 16],"float32"),Tensor([16, 2, 16],"float32"),Tensor([16, 2, 16],"float32"),Tensor([16, 2, 16],"float32"),Tensor([16, 2, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([16, 300],"int64"),Tensor([16, 300],"int64"),], axis=-1, )
paddle.stack(list[Tensor([16, 32, 11645, 4],"float32"),Tensor([16, 32, 11645, 4],"float32"),Tensor([16, 32, 11645, 4],"float32"),Tensor([16, 32, 11645, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([16, 32, 300, 4],"float32"),Tensor([16, 32, 300, 4],"float32"),Tensor([16, 32, 300, 4],"float32"),Tensor([16, 32, 300, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([16, 32, 300, 4],"float32"),Tensor([16, 32, 300, 4],"float32"),Tensor([16, 32, 300, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([16, 32, 400, 4],"float32"),Tensor([16, 32, 400, 4],"float32"),Tensor([16, 32, 400, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([16, 32, 492, 4],"float32"),Tensor([16, 32, 492, 4],"float32"),Tensor([16, 32, 492, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([16, 32, 498, 4],"float32"),Tensor([16, 32, 498, 4],"float32"),Tensor([16, 32, 498, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([16, 32, 500, 4],"float32"),Tensor([16, 32, 500, 4],"float32"),Tensor([16, 32, 500, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([16, 476, 4],"float32"),Tensor([16, 476, 4],"float32"),Tensor([16, 476, 4],"float32"),Tensor([16, 476, 4],"float32"),Tensor([16, 476, 4],"float32"),Tensor([16, 476, 4],"float32"),], )
paddle.stack(list[Tensor([16, 476, 80],"float32"),Tensor([16, 476, 80],"float32"),Tensor([16, 476, 80],"float32"),Tensor([16, 476, 80],"float32"),Tensor([16, 476, 80],"float32"),Tensor([16, 476, 80],"float32"),], )
paddle.stack(list[Tensor([160, 160],"float32"),Tensor([160, 160],"float32"),Tensor([160, 160],"float32"),Tensor([160, 160],"float32"),], axis=-1, )
paddle.stack(list[Tensor([160, 160],"float32"),Tensor([160, 160],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1600],"float32"),Tensor([1600],"float32"),Tensor([1600],"float32"),Tensor([1600],"float32"),], -1, )
paddle.stack(list[Tensor([1600],"float32"),Tensor([1600],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1602],"float32"),Tensor([1602],"float32"),Tensor([1602],"float32"),Tensor([1602],"float32"),], -1, )
paddle.stack(list[Tensor([1603],"float32"),Tensor([1603],"float32"),Tensor([1603],"float32"),Tensor([1603],"float32"),], -1, )
paddle.stack(list[Tensor([1605],"float32"),Tensor([1605],"float32"),Tensor([1605],"float32"),Tensor([1605],"float32"),], -1, )
paddle.stack(list[Tensor([1606],"float32"),Tensor([1606],"float32"),Tensor([1606],"float32"),Tensor([1606],"float32"),], -1, )
paddle.stack(list[Tensor([1607],"float32"),Tensor([1607],"float32"),Tensor([1607],"float32"),Tensor([1607],"float32"),], -1, )
paddle.stack(list[Tensor([1608],"float32"),Tensor([1608],"float32"),Tensor([1608],"float32"),Tensor([1608],"float32"),], -1, )
paddle.stack(list[Tensor([1609],"float32"),Tensor([1609],"float32"),Tensor([1609],"float32"),Tensor([1609],"float32"),], -1, )
paddle.stack(list[Tensor([160],"float32"),Tensor([160],"float32"),Tensor([160],"float32"),Tensor([160],"float32"),], -1, )
paddle.stack(list[Tensor([160],"float32"),Tensor([160],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1610],"float32"),Tensor([1610],"float32"),Tensor([1610],"float32"),Tensor([1610],"float32"),], -1, )
paddle.stack(list[Tensor([1617],"float32"),Tensor([1617],"float32"),Tensor([1617],"float32"),Tensor([1617],"float32"),], -1, )
paddle.stack(list[Tensor([1619],"float32"),Tensor([1619],"float32"),Tensor([1619],"float32"),Tensor([1619],"float32"),], -1, )
paddle.stack(list[Tensor([161],"float32"),Tensor([161],"float32"),Tensor([161],"float32"),Tensor([161],"float32"),], -1, )
paddle.stack(list[Tensor([161],"float32"),Tensor([161],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1624],"float32"),Tensor([1624],"float32"),Tensor([1624],"float32"),Tensor([1624],"float32"),], -1, )
paddle.stack(list[Tensor([1625],"float32"),Tensor([1625],"float32"),Tensor([1625],"float32"),Tensor([1625],"float32"),], -1, )
paddle.stack(list[Tensor([1627],"float32"),Tensor([1627],"float32"),Tensor([1627],"float32"),Tensor([1627],"float32"),], -1, )
paddle.stack(list[Tensor([1628],"float32"),Tensor([1628],"float32"),Tensor([1628],"float32"),Tensor([1628],"float32"),], -1, )
paddle.stack(list[Tensor([162],"float32"),Tensor([162],"float32"),Tensor([162],"float32"),Tensor([162],"float32"),], -1, )
paddle.stack(list[Tensor([162],"float32"),Tensor([162],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1633],"float32"),Tensor([1633],"float32"),Tensor([1633],"float32"),Tensor([1633],"float32"),], -1, )
paddle.stack(list[Tensor([1635],"float32"),Tensor([1635],"float32"),Tensor([1635],"float32"),Tensor([1635],"float32"),], -1, )
paddle.stack(list[Tensor([1637],"float32"),Tensor([1637],"float32"),Tensor([1637],"float32"),Tensor([1637],"float32"),], -1, )
paddle.stack(list[Tensor([16384],"float32"),Tensor([16384],"float32"),Tensor([16384],"float32"),Tensor([16384],"float32"),], -1, )
paddle.stack(list[Tensor([163],"float32"),Tensor([163],"float32"),Tensor([163],"float32"),Tensor([163],"float32"),], -1, )
paddle.stack(list[Tensor([163],"float32"),Tensor([163],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1641],"float32"),Tensor([1641],"float32"),Tensor([1641],"float32"),Tensor([1641],"float32"),], -1, )
paddle.stack(list[Tensor([1642],"float32"),Tensor([1642],"float32"),Tensor([1642],"float32"),Tensor([1642],"float32"),], -1, )
paddle.stack(list[Tensor([1644],"float32"),Tensor([1644],"float32"),Tensor([1644],"float32"),Tensor([1644],"float32"),], -1, )
paddle.stack(list[Tensor([1646],"float32"),Tensor([1646],"float32"),Tensor([1646],"float32"),Tensor([1646],"float32"),], -1, )
paddle.stack(list[Tensor([1648],"float32"),Tensor([1648],"float32"),Tensor([1648],"float32"),Tensor([1648],"float32"),], -1, )
paddle.stack(list[Tensor([1649],"float32"),Tensor([1649],"float32"),Tensor([1649],"float32"),Tensor([1649],"float32"),], -1, )
paddle.stack(list[Tensor([164],"float32"),Tensor([164],"float32"),Tensor([164],"float32"),Tensor([164],"float32"),], -1, )
paddle.stack(list[Tensor([164],"float32"),Tensor([164],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1656],"float32"),Tensor([1656],"float32"),Tensor([1656],"float32"),Tensor([1656],"float32"),], -1, )
paddle.stack(list[Tensor([165888],"float32"),Tensor([165888],"float32"),Tensor([165888],"float32"),Tensor([165888],"float32"),], -1, )
paddle.stack(list[Tensor([165],"float32"),Tensor([165],"float32"),Tensor([165],"float32"),Tensor([165],"float32"),], -1, )
paddle.stack(list[Tensor([165],"float32"),Tensor([165],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1663],"float32"),Tensor([1663],"float32"),Tensor([1663],"float32"),Tensor([1663],"float32"),], -1, )
paddle.stack(list[Tensor([1664],"float32"),Tensor([1664],"float32"),], axis=-1, )
paddle.stack(list[Tensor([16660, 10],"float32"),Tensor([16660, 10],"float32"),Tensor([16660, 10],"float32"),Tensor([16660, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 12],"float32"),Tensor([16660, 12],"float32"),Tensor([16660, 12],"float32"),Tensor([16660, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 135],"float32"),Tensor([16660, 135],"float32"),Tensor([16660, 135],"float32"),Tensor([16660, 135],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 142],"float32"),Tensor([16660, 142],"float32"),Tensor([16660, 142],"float32"),Tensor([16660, 142],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 14],"float32"),Tensor([16660, 14],"float32"),Tensor([16660, 14],"float32"),Tensor([16660, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 15],"float32"),Tensor([16660, 15],"float32"),Tensor([16660, 15],"float32"),Tensor([16660, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 16],"float32"),Tensor([16660, 16],"float32"),Tensor([16660, 16],"float32"),Tensor([16660, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 17],"float32"),Tensor([16660, 17],"float32"),Tensor([16660, 17],"float32"),Tensor([16660, 17],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 18],"float32"),Tensor([16660, 18],"float32"),Tensor([16660, 18],"float32"),Tensor([16660, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 19],"float32"),Tensor([16660, 19],"float32"),Tensor([16660, 19],"float32"),Tensor([16660, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 1],"float32"),Tensor([16660, 1],"float32"),Tensor([16660, 1],"float32"),Tensor([16660, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 20],"float32"),Tensor([16660, 20],"float32"),Tensor([16660, 20],"float32"),Tensor([16660, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 27],"float32"),Tensor([16660, 27],"float32"),Tensor([16660, 27],"float32"),Tensor([16660, 27],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 28],"float32"),Tensor([16660, 28],"float32"),Tensor([16660, 28],"float32"),Tensor([16660, 28],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 29],"float32"),Tensor([16660, 29],"float32"),Tensor([16660, 29],"float32"),Tensor([16660, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 2],"float32"),Tensor([16660, 2],"float32"),Tensor([16660, 2],"float32"),Tensor([16660, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 36],"float32"),Tensor([16660, 36],"float32"),Tensor([16660, 36],"float32"),Tensor([16660, 36],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 3],"float32"),Tensor([16660, 3],"float32"),Tensor([16660, 3],"float32"),Tensor([16660, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 41],"float32"),Tensor([16660, 41],"float32"),Tensor([16660, 41],"float32"),Tensor([16660, 41],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 49],"float32"),Tensor([16660, 49],"float32"),Tensor([16660, 49],"float32"),Tensor([16660, 49],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 4],"float32"),Tensor([16660, 4],"float32"),Tensor([16660, 4],"float32"),Tensor([16660, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 52],"float32"),Tensor([16660, 52],"float32"),Tensor([16660, 52],"float32"),Tensor([16660, 52],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 58],"float32"),Tensor([16660, 58],"float32"),Tensor([16660, 58],"float32"),Tensor([16660, 58],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 5],"float32"),Tensor([16660, 5],"float32"),Tensor([16660, 5],"float32"),Tensor([16660, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 64],"float32"),Tensor([16660, 64],"float32"),Tensor([16660, 64],"float32"),Tensor([16660, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 6],"float32"),Tensor([16660, 6],"float32"),Tensor([16660, 6],"float32"),Tensor([16660, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 71],"float32"),Tensor([16660, 71],"float32"),Tensor([16660, 71],"float32"),Tensor([16660, 71],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 77],"float32"),Tensor([16660, 77],"float32"),Tensor([16660, 77],"float32"),Tensor([16660, 77],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 7],"float32"),Tensor([16660, 7],"float32"),Tensor([16660, 7],"float32"),Tensor([16660, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 88],"float32"),Tensor([16660, 88],"float32"),Tensor([16660, 88],"float32"),Tensor([16660, 88],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 92],"float32"),Tensor([16660, 92],"float32"),Tensor([16660, 92],"float32"),Tensor([16660, 92],"float32"),], axis=1, )
paddle.stack(list[Tensor([16660, 9],"float32"),Tensor([16660, 9],"float32"),Tensor([16660, 9],"float32"),Tensor([16660, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([1666],"float32"),Tensor([1666],"float32"),Tensor([1666],"float32"),Tensor([1666],"float32"),], -1, )
paddle.stack(list[Tensor([166],"float32"),Tensor([166],"float32"),Tensor([166],"float32"),Tensor([166],"float32"),], -1, )
paddle.stack(list[Tensor([166],"float32"),Tensor([166],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1671],"float32"),Tensor([1671],"float32"),Tensor([1671],"float32"),Tensor([1671],"float32"),], -1, )
paddle.stack(list[Tensor([1672],"float32"),Tensor([1672],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1673],"float32"),Tensor([1673],"float32"),Tensor([1673],"float32"),Tensor([1673],"float32"),], -1, )
paddle.stack(list[Tensor([1675],"float32"),Tensor([1675],"float32"),Tensor([1675],"float32"),Tensor([1675],"float32"),], -1, )
paddle.stack(list[Tensor([1677],"float32"),Tensor([1677],"float32"),Tensor([1677],"float32"),Tensor([1677],"float32"),], -1, )
paddle.stack(list[Tensor([167],"float32"),Tensor([167],"float32"),Tensor([167],"float32"),Tensor([167],"float32"),], -1, )
paddle.stack(list[Tensor([167],"float32"),Tensor([167],"float32"),], axis=-1, )
paddle.stack(list[Tensor([168, 168],"float32"),Tensor([168, 168],"float32"),Tensor([168, 168],"float32"),Tensor([168, 168],"float32"),], axis=-1, )
paddle.stack(list[Tensor([168, 168],"float32"),Tensor([168, 168],"float32"),], axis=-1, )
paddle.stack(list[Tensor([168, 4, 2, 32],"float16"),Tensor([168, 4, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([168, 4, 4, 32],"float16"),Tensor([168, 4, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([1680],"float32"),Tensor([1680],"float32"),Tensor([1680],"float32"),Tensor([1680],"float32"),], -1, )
paddle.stack(list[Tensor([1686],"float32"),Tensor([1686],"float32"),Tensor([1686],"float32"),Tensor([1686],"float32"),], -1, )
paddle.stack(list[Tensor([1687],"float32"),Tensor([1687],"float32"),Tensor([1687],"float32"),Tensor([1687],"float32"),], -1, )
paddle.stack(list[Tensor([168],"float32"),Tensor([168],"float32"),Tensor([168],"float32"),Tensor([168],"float32"),], -1, )
paddle.stack(list[Tensor([168],"float32"),Tensor([168],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1693],"float32"),Tensor([1693],"float32"),Tensor([1693],"float32"),Tensor([1693],"float32"),], -1, )
paddle.stack(list[Tensor([1694],"float32"),Tensor([1694],"float32"),Tensor([1694],"float32"),Tensor([1694],"float32"),], -1, )
paddle.stack(list[Tensor([1699],"float32"),Tensor([1699],"float32"),Tensor([1699],"float32"),Tensor([1699],"float32"),], -1, )
paddle.stack(list[Tensor([169],"float32"),Tensor([169],"float32"),Tensor([169],"float32"),Tensor([169],"float32"),], -1, )
paddle.stack(list[Tensor([169],"float32"),Tensor([169],"float32"),], axis=-1, )
paddle.stack(list[Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], -1, )
paddle.stack(list[Tensor([16],"float32"),Tensor([16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([17, 17],"float32"),Tensor([17, 17],"float32"),Tensor([17, 17],"float32"),Tensor([17, 17],"float32"),], axis=-1, )
paddle.stack(list[Tensor([17, 17],"float32"),Tensor([17, 17],"float32"),], -1, )
paddle.stack(list[Tensor([17, 17],"float32"),Tensor([17, 17],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1700],"float32"),Tensor([1700],"float32"),Tensor([1700],"float32"),Tensor([1700],"float32"),], -1, )
paddle.stack(list[Tensor([1703],"float32"),Tensor([1703],"float32"),Tensor([1703],"float32"),Tensor([1703],"float32"),], -1, )
paddle.stack(list[Tensor([1705],"float32"),Tensor([1705],"float32"),Tensor([1705],"float32"),Tensor([1705],"float32"),], -1, )
paddle.stack(list[Tensor([1707],"float32"),Tensor([1707],"float32"),Tensor([1707],"float32"),Tensor([1707],"float32"),], -1, )
paddle.stack(list[Tensor([1708],"float32"),Tensor([1708],"float32"),Tensor([1708],"float32"),Tensor([1708],"float32"),], -1, )
paddle.stack(list[Tensor([1709],"float32"),Tensor([1709],"float32"),Tensor([1709],"float32"),Tensor([1709],"float32"),], -1, )
paddle.stack(list[Tensor([170],"float32"),Tensor([170],"float32"),Tensor([170],"float32"),Tensor([170],"float32"),], -1, )
paddle.stack(list[Tensor([170],"float32"),Tensor([170],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1710],"float32"),Tensor([1710],"float32"),Tensor([1710],"float32"),Tensor([1710],"float32"),], -1, )
paddle.stack(list[Tensor([1716],"float32"),Tensor([1716],"float32"),Tensor([1716],"float32"),Tensor([1716],"float32"),], -1, )
paddle.stack(list[Tensor([1717],"float32"),Tensor([1717],"float32"),Tensor([1717],"float32"),Tensor([1717],"float32"),], -1, )
paddle.stack(list[Tensor([1718],"float32"),Tensor([1718],"float32"),Tensor([1718],"float32"),Tensor([1718],"float32"),], -1, )
paddle.stack(list[Tensor([1719],"float32"),Tensor([1719],"float32"),Tensor([1719],"float32"),Tensor([1719],"float32"),], -1, )
paddle.stack(list[Tensor([171],"float32"),Tensor([171],"float32"),Tensor([171],"float32"),Tensor([171],"float32"),], -1, )
paddle.stack(list[Tensor([171],"float32"),Tensor([171],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1724],"float32"),Tensor([1724],"float32"),Tensor([1724],"float32"),Tensor([1724],"float32"),], -1, )
paddle.stack(list[Tensor([1726, 10],"float32"),Tensor([1726, 10],"float32"),Tensor([1726, 10],"float32"),Tensor([1726, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 11],"float32"),Tensor([1726, 11],"float32"),Tensor([1726, 11],"float32"),Tensor([1726, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 12],"float32"),Tensor([1726, 12],"float32"),Tensor([1726, 12],"float32"),Tensor([1726, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 13],"float32"),Tensor([1726, 13],"float32"),Tensor([1726, 13],"float32"),Tensor([1726, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 14],"float32"),Tensor([1726, 14],"float32"),Tensor([1726, 14],"float32"),Tensor([1726, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 15],"float32"),Tensor([1726, 15],"float32"),Tensor([1726, 15],"float32"),Tensor([1726, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 16],"float32"),Tensor([1726, 16],"float32"),Tensor([1726, 16],"float32"),Tensor([1726, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 17],"float32"),Tensor([1726, 17],"float32"),Tensor([1726, 17],"float32"),Tensor([1726, 17],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 18],"float32"),Tensor([1726, 18],"float32"),Tensor([1726, 18],"float32"),Tensor([1726, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 19],"float32"),Tensor([1726, 19],"float32"),Tensor([1726, 19],"float32"),Tensor([1726, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 1],"float32"),Tensor([1726, 1],"float32"),Tensor([1726, 1],"float32"),Tensor([1726, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 20],"float32"),Tensor([1726, 20],"float32"),Tensor([1726, 20],"float32"),Tensor([1726, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 21],"float32"),Tensor([1726, 21],"float32"),Tensor([1726, 21],"float32"),Tensor([1726, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 22],"float32"),Tensor([1726, 22],"float32"),Tensor([1726, 22],"float32"),Tensor([1726, 22],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 23],"float32"),Tensor([1726, 23],"float32"),Tensor([1726, 23],"float32"),Tensor([1726, 23],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 24],"float32"),Tensor([1726, 24],"float32"),Tensor([1726, 24],"float32"),Tensor([1726, 24],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 25],"float32"),Tensor([1726, 25],"float32"),Tensor([1726, 25],"float32"),Tensor([1726, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 26],"float32"),Tensor([1726, 26],"float32"),Tensor([1726, 26],"float32"),Tensor([1726, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 27],"float32"),Tensor([1726, 27],"float32"),Tensor([1726, 27],"float32"),Tensor([1726, 27],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 28],"float32"),Tensor([1726, 28],"float32"),Tensor([1726, 28],"float32"),Tensor([1726, 28],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 29],"float32"),Tensor([1726, 29],"float32"),Tensor([1726, 29],"float32"),Tensor([1726, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 2],"float32"),Tensor([1726, 2],"float32"),Tensor([1726, 2],"float32"),Tensor([1726, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 30],"float32"),Tensor([1726, 30],"float32"),Tensor([1726, 30],"float32"),Tensor([1726, 30],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 31],"float32"),Tensor([1726, 31],"float32"),Tensor([1726, 31],"float32"),Tensor([1726, 31],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 32],"float32"),Tensor([1726, 32],"float32"),Tensor([1726, 32],"float32"),Tensor([1726, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 33],"float32"),Tensor([1726, 33],"float32"),Tensor([1726, 33],"float32"),Tensor([1726, 33],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 34],"float32"),Tensor([1726, 34],"float32"),Tensor([1726, 34],"float32"),Tensor([1726, 34],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 36],"float32"),Tensor([1726, 36],"float32"),Tensor([1726, 36],"float32"),Tensor([1726, 36],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 3],"float32"),Tensor([1726, 3],"float32"),Tensor([1726, 3],"float32"),Tensor([1726, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 4],"float32"),Tensor([1726, 4],"float32"),Tensor([1726, 4],"float32"),Tensor([1726, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 5],"float32"),Tensor([1726, 5],"float32"),Tensor([1726, 5],"float32"),Tensor([1726, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 6],"float32"),Tensor([1726, 6],"float32"),Tensor([1726, 6],"float32"),Tensor([1726, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 7],"float32"),Tensor([1726, 7],"float32"),Tensor([1726, 7],"float32"),Tensor([1726, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 8],"float32"),Tensor([1726, 8],"float32"),Tensor([1726, 8],"float32"),Tensor([1726, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726, 9],"float32"),Tensor([1726, 9],"float32"),Tensor([1726, 9],"float32"),Tensor([1726, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([1726],"float32"),Tensor([1726],"float32"),Tensor([1726],"float32"),Tensor([1726],"float32"),], -1, )
paddle.stack(list[Tensor([1726],"float32"),Tensor([1726],"float32"),], axis=-1, )
paddle.stack(list[Tensor([172800],"float32"),Tensor([172800],"float32"),Tensor([172800],"float32"),Tensor([172800],"float32"),], -1, )
paddle.stack(list[Tensor([1728],"float32"),Tensor([1728],"float32"),Tensor([1728],"float32"),Tensor([1728],"float32"),], -1, )
paddle.stack(list[Tensor([1728],"float32"),Tensor([1728],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1729],"float32"),Tensor([1729],"float32"),Tensor([1729],"float32"),Tensor([1729],"float32"),], -1, )
paddle.stack(list[Tensor([172],"float32"),Tensor([172],"float32"),Tensor([172],"float32"),Tensor([172],"float32"),], -1, )
paddle.stack(list[Tensor([172],"float32"),Tensor([172],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1732],"float32"),Tensor([1732],"float32"),Tensor([1732],"float32"),Tensor([1732],"float32"),], -1, )
paddle.stack(list[Tensor([1734],"float32"),Tensor([1734],"float32"),Tensor([1734],"float32"),Tensor([1734],"float32"),], -1, )
paddle.stack(list[Tensor([1736],"float32"),Tensor([1736],"float32"),Tensor([1736],"float32"),Tensor([1736],"float32"),], -1, )
paddle.stack(list[Tensor([1739],"float32"),Tensor([1739],"float32"),Tensor([1739],"float32"),Tensor([1739],"float32"),], -1, )
paddle.stack(list[Tensor([173],"float32"),Tensor([173],"float32"),Tensor([173],"float32"),Tensor([173],"float32"),], -1, )
paddle.stack(list[Tensor([173],"float32"),Tensor([173],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1740],"float32"),Tensor([1740],"float32"),Tensor([1740],"float32"),Tensor([1740],"float32"),], -1, )
paddle.stack(list[Tensor([1741],"float32"),Tensor([1741],"float32"),Tensor([1741],"float32"),Tensor([1741],"float32"),], -1, )
paddle.stack(list[Tensor([174240],"float32"),Tensor([174240],"float32"),Tensor([174240],"float32"),Tensor([174240],"float32"),], -1, )
paddle.stack(list[Tensor([1745],"float32"),Tensor([1745],"float32"),Tensor([1745],"float32"),Tensor([1745],"float32"),], -1, )
paddle.stack(list[Tensor([1746],"float32"),Tensor([1746],"float32"),Tensor([1746],"float32"),Tensor([1746],"float32"),], -1, )
paddle.stack(list[Tensor([1749],"float32"),Tensor([1749],"float32"),Tensor([1749],"float32"),Tensor([1749],"float32"),], -1, )
paddle.stack(list[Tensor([174],"float32"),Tensor([174],"float32"),Tensor([174],"float32"),Tensor([174],"float32"),], -1, )
paddle.stack(list[Tensor([174],"float32"),Tensor([174],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1751],"float32"),Tensor([1751],"float32"),Tensor([1751],"float32"),Tensor([1751],"float32"),], -1, )
paddle.stack(list[Tensor([1752],"float32"),Tensor([1752],"float32"),Tensor([1752],"float32"),Tensor([1752],"float32"),], -1, )
paddle.stack(list[Tensor([1755],"float32"),Tensor([1755],"float32"),Tensor([1755],"float32"),Tensor([1755],"float32"),], -1, )
paddle.stack(list[Tensor([1756],"float32"),Tensor([1756],"float32"),Tensor([1756],"float32"),Tensor([1756],"float32"),], -1, )
paddle.stack(list[Tensor([1757],"float32"),Tensor([1757],"float32"),Tensor([1757],"float32"),Tensor([1757],"float32"),], -1, )
paddle.stack(list[Tensor([1758],"float32"),Tensor([1758],"float32"),Tensor([1758],"float32"),Tensor([1758],"float32"),], -1, )
paddle.stack(list[Tensor([175],"float32"),Tensor([175],"float32"),Tensor([175],"float32"),Tensor([175],"float32"),], -1, )
paddle.stack(list[Tensor([175],"float32"),Tensor([175],"float32"),], axis=-1, )
paddle.stack(list[Tensor([176, 176],"float32"),Tensor([176, 176],"float32"),Tensor([176, 176],"float32"),Tensor([176, 176],"float32"),], axis=-1, )
paddle.stack(list[Tensor([176, 176],"float32"),Tensor([176, 176],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1761],"float32"),Tensor([1761],"float32"),Tensor([1761],"float32"),Tensor([1761],"float32"),], -1, )
paddle.stack(list[Tensor([1763],"float32"),Tensor([1763],"float32"),Tensor([1763],"float32"),Tensor([1763],"float32"),], -1, )
paddle.stack(list[Tensor([17640],"float32"),Tensor([17640],"float32"),Tensor([17640],"float32"),Tensor([17640],"float32"),], -1, )
paddle.stack(list[Tensor([1764],"float32"),Tensor([1764],"float32"),Tensor([1764],"float32"),Tensor([1764],"float32"),], -1, )
paddle.stack(list[Tensor([1764],"float32"),Tensor([1764],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1766],"float32"),Tensor([1766],"float32"),Tensor([1766],"float32"),Tensor([1766],"float32"),], -1, )
paddle.stack(list[Tensor([1767],"float32"),Tensor([1767],"float32"),Tensor([1767],"float32"),Tensor([1767],"float32"),], -1, )
paddle.stack(list[Tensor([176],"float32"),Tensor([176],"float32"),Tensor([176],"float32"),Tensor([176],"float32"),], -1, )
paddle.stack(list[Tensor([176],"float32"),Tensor([176],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1770],"float32"),Tensor([1770],"float32"),Tensor([1770],"float32"),Tensor([1770],"float32"),], -1, )
paddle.stack(list[Tensor([1772],"float32"),Tensor([1772],"float32"),Tensor([1772],"float32"),Tensor([1772],"float32"),], -1, )
paddle.stack(list[Tensor([1774],"float32"),Tensor([1774],"float32"),Tensor([1774],"float32"),Tensor([1774],"float32"),], -1, )
paddle.stack(list[Tensor([1775],"float32"),Tensor([1775],"float32"),Tensor([1775],"float32"),Tensor([1775],"float32"),], -1, )
paddle.stack(list[Tensor([1776],"float32"),Tensor([1776],"float32"),Tensor([1776],"float32"),Tensor([1776],"float32"),], -1, )
paddle.stack(list[Tensor([177],"float32"),Tensor([177],"float32"),Tensor([177],"float32"),Tensor([177],"float32"),], -1, )
paddle.stack(list[Tensor([177],"float32"),Tensor([177],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1780],"float32"),Tensor([1780],"float32"),Tensor([1780],"float32"),Tensor([1780],"float32"),], -1, )
paddle.stack(list[Tensor([1782],"float32"),Tensor([1782],"float32"),Tensor([1782],"float32"),Tensor([1782],"float32"),], -1, )
paddle.stack(list[Tensor([1783],"float32"),Tensor([1783],"float32"),Tensor([1783],"float32"),Tensor([1783],"float32"),], -1, )
paddle.stack(list[Tensor([1785],"float32"),Tensor([1785],"float32"),Tensor([1785],"float32"),Tensor([1785],"float32"),], -1, )
paddle.stack(list[Tensor([1787],"float32"),Tensor([1787],"float32"),Tensor([1787],"float32"),Tensor([1787],"float32"),], -1, )
paddle.stack(list[Tensor([1789],"float32"),Tensor([1789],"float32"),Tensor([1789],"float32"),Tensor([1789],"float32"),], -1, )
paddle.stack(list[Tensor([178],"float32"),Tensor([178],"float32"),Tensor([178],"float32"),Tensor([178],"float32"),], -1, )
paddle.stack(list[Tensor([178],"float32"),Tensor([178],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1792],"float32"),Tensor([1792],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1793],"float32"),Tensor([1793],"float32"),Tensor([1793],"float32"),Tensor([1793],"float32"),], -1, )
paddle.stack(list[Tensor([1795],"float32"),Tensor([1795],"float32"),Tensor([1795],"float32"),Tensor([1795],"float32"),], -1, )
paddle.stack(list[Tensor([179],"float32"),Tensor([179],"float32"),Tensor([179],"float32"),Tensor([179],"float32"),], -1, )
paddle.stack(list[Tensor([179],"float32"),Tensor([179],"float32"),], axis=-1, )
paddle.stack(list[Tensor([17],"float32"),Tensor([17],"float32"),Tensor([17],"float32"),Tensor([17],"float32"),], -1, )
paddle.stack(list[Tensor([17],"float32"),Tensor([17],"float32"),], axis=-1, )
paddle.stack(list[Tensor([18, 18],"float32"),Tensor([18, 18],"float32"),Tensor([18, 18],"float32"),Tensor([18, 18],"float32"),], axis=-1, )
paddle.stack(list[Tensor([18, 18],"float32"),Tensor([18, 18],"float32"),], -1, )
paddle.stack(list[Tensor([18, 18],"float32"),Tensor([18, 18],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1801],"float32"),Tensor([1801],"float32"),Tensor([1801],"float32"),Tensor([1801],"float32"),], -1, )
paddle.stack(list[Tensor([1805],"float32"),Tensor([1805],"float32"),Tensor([1805],"float32"),Tensor([1805],"float32"),], -1, )
paddle.stack(list[Tensor([180],"float32"),Tensor([180],"float32"),Tensor([180],"float32"),Tensor([180],"float32"),], -1, )
paddle.stack(list[Tensor([180],"float32"),Tensor([180],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1813],"float32"),Tensor([1813],"float32"),Tensor([1813],"float32"),Tensor([1813],"float32"),], -1, )
paddle.stack(list[Tensor([1814],"float32"),Tensor([1814],"float32"),Tensor([1814],"float32"),Tensor([1814],"float32"),], -1, )
paddle.stack(list[Tensor([181],"float32"),Tensor([181],"float32"),Tensor([181],"float32"),Tensor([181],"float32"),], -1, )
paddle.stack(list[Tensor([181],"float32"),Tensor([181],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1820],"float32"),Tensor([1820],"float32"),Tensor([1820],"float32"),Tensor([1820],"float32"),], -1, )
paddle.stack(list[Tensor([1821],"float32"),Tensor([1821],"float32"),Tensor([1821],"float32"),Tensor([1821],"float32"),], -1, )
paddle.stack(list[Tensor([1823],"float32"),Tensor([1823],"float32"),Tensor([1823],"float32"),Tensor([1823],"float32"),], -1, )
paddle.stack(list[Tensor([182400],"float32"),Tensor([182400],"float32"),Tensor([182400],"float32"),Tensor([182400],"float32"),], -1, )
paddle.stack(list[Tensor([1824],"float32"),Tensor([1824],"float32"),Tensor([1824],"float32"),Tensor([1824],"float32"),], -1, )
paddle.stack(list[Tensor([1827],"float32"),Tensor([1827],"float32"),Tensor([1827],"float32"),Tensor([1827],"float32"),], -1, )
paddle.stack(list[Tensor([1828],"float32"),Tensor([1828],"float32"),Tensor([1828],"float32"),Tensor([1828],"float32"),], -1, )
paddle.stack(list[Tensor([1829],"float32"),Tensor([1829],"float32"),Tensor([1829],"float32"),Tensor([1829],"float32"),], -1, )
paddle.stack(list[Tensor([182],"float32"),Tensor([182],"float32"),Tensor([182],"float32"),Tensor([182],"float32"),], -1, )
paddle.stack(list[Tensor([182],"float32"),Tensor([182],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1830],"float32"),Tensor([1830],"float32"),Tensor([1830],"float32"),Tensor([1830],"float32"),], -1, )
paddle.stack(list[Tensor([1832],"float32"),Tensor([1832],"float32"),Tensor([1832],"float32"),Tensor([1832],"float32"),], -1, )
paddle.stack(list[Tensor([1833],"float32"),Tensor([1833],"float32"),Tensor([1833],"float32"),Tensor([1833],"float32"),], -1, )
paddle.stack(list[Tensor([1839],"float32"),Tensor([1839],"float32"),Tensor([1839],"float32"),Tensor([1839],"float32"),], -1, )
paddle.stack(list[Tensor([183],"float32"),Tensor([183],"float32"),Tensor([183],"float32"),Tensor([183],"float32"),], -1, )
paddle.stack(list[Tensor([183],"float32"),Tensor([183],"float32"),], axis=-1, )
paddle.stack(list[Tensor([184, 184],"float32"),Tensor([184, 184],"float32"),Tensor([184, 184],"float32"),Tensor([184, 184],"float32"),], axis=-1, )
paddle.stack(list[Tensor([184, 184],"float32"),Tensor([184, 184],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1840],"float32"),Tensor([1840],"float32"),Tensor([1840],"float32"),Tensor([1840],"float32"),], -1, )
paddle.stack(list[Tensor([1841],"float32"),Tensor([1841],"float32"),Tensor([1841],"float32"),Tensor([1841],"float32"),], -1, )
paddle.stack(list[Tensor([1842],"float32"),Tensor([1842],"float32"),Tensor([1842],"float32"),Tensor([1842],"float32"),], -1, )
paddle.stack(list[Tensor([18432],"float32"),Tensor([18432],"float32"),Tensor([18432],"float32"),Tensor([18432],"float32"),], -1, )
paddle.stack(list[Tensor([1844],"float32"),Tensor([1844],"float32"),Tensor([1844],"float32"),Tensor([1844],"float32"),], -1, )
paddle.stack(list[Tensor([1846],"float32"),Tensor([1846],"float32"),Tensor([1846],"float32"),Tensor([1846],"float32"),], -1, )
paddle.stack(list[Tensor([18496],"float32"),Tensor([18496],"float32"),Tensor([18496],"float32"),Tensor([18496],"float32"),], -1, )
paddle.stack(list[Tensor([1849],"float32"),Tensor([1849],"float32"),Tensor([1849],"float32"),Tensor([1849],"float32"),], -1, )
paddle.stack(list[Tensor([184],"float32"),Tensor([184],"float32"),Tensor([184],"float32"),Tensor([184],"float32"),], -1, )
paddle.stack(list[Tensor([184],"float32"),Tensor([184],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1851],"float32"),Tensor([1851],"float32"),Tensor([1851],"float32"),Tensor([1851],"float32"),], -1, )
paddle.stack(list[Tensor([1852],"float32"),Tensor([1852],"float32"),Tensor([1852],"float32"),Tensor([1852],"float32"),], -1, )
paddle.stack(list[Tensor([1853],"float32"),Tensor([1853],"float32"),Tensor([1853],"float32"),Tensor([1853],"float32"),], -1, )
paddle.stack(list[Tensor([1855],"float32"),Tensor([1855],"float32"),Tensor([1855],"float32"),Tensor([1855],"float32"),], -1, )
paddle.stack(list[Tensor([1856],"float32"),Tensor([1856],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1857],"float32"),Tensor([1857],"float32"),Tensor([1857],"float32"),Tensor([1857],"float32"),], -1, )
paddle.stack(list[Tensor([1858],"float32"),Tensor([1858],"float32"),Tensor([1858],"float32"),Tensor([1858],"float32"),], -1, )
paddle.stack(list[Tensor([1859],"float32"),Tensor([1859],"float32"),Tensor([1859],"float32"),Tensor([1859],"float32"),], -1, )
paddle.stack(list[Tensor([185],"float32"),Tensor([185],"float32"),Tensor([185],"float32"),Tensor([185],"float32"),], -1, )
paddle.stack(list[Tensor([185],"float32"),Tensor([185],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1860],"float32"),Tensor([1860],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1862],"float32"),Tensor([1862],"float32"),Tensor([1862],"float32"),Tensor([1862],"float32"),], -1, )
paddle.stack(list[Tensor([1864],"float32"),Tensor([1864],"float32"),Tensor([1864],"float32"),Tensor([1864],"float32"),], -1, )
paddle.stack(list[Tensor([1865],"float32"),Tensor([1865],"float32"),Tensor([1865],"float32"),Tensor([1865],"float32"),], -1, )
paddle.stack(list[Tensor([1867],"float32"),Tensor([1867],"float32"),Tensor([1867],"float32"),Tensor([1867],"float32"),], -1, )
paddle.stack(list[Tensor([1868],"float32"),Tensor([1868],"float32"),Tensor([1868],"float32"),Tensor([1868],"float32"),], -1, )
paddle.stack(list[Tensor([186],"float32"),Tensor([186],"float32"),Tensor([186],"float32"),Tensor([186],"float32"),], -1, )
paddle.stack(list[Tensor([186],"float32"),Tensor([186],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1870],"float32"),Tensor([1870],"float32"),Tensor([1870],"float32"),Tensor([1870],"float32"),], -1, )
paddle.stack(list[Tensor([1871],"float32"),Tensor([1871],"float32"),Tensor([1871],"float32"),Tensor([1871],"float32"),], -1, )
paddle.stack(list[Tensor([1872],"float32"),Tensor([1872],"float32"),Tensor([1872],"float32"),Tensor([1872],"float32"),], -1, )
paddle.stack(list[Tensor([1873],"float32"),Tensor([1873],"float32"),Tensor([1873],"float32"),Tensor([1873],"float32"),], -1, )
paddle.stack(list[Tensor([1879],"float32"),Tensor([1879],"float32"),Tensor([1879],"float32"),Tensor([1879],"float32"),], -1, )
paddle.stack(list[Tensor([187],"float32"),Tensor([187],"float32"),Tensor([187],"float32"),Tensor([187],"float32"),], -1, )
paddle.stack(list[Tensor([187],"float32"),Tensor([187],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1881],"float32"),Tensor([1881],"float32"),Tensor([1881],"float32"),Tensor([1881],"float32"),], -1, )
paddle.stack(list[Tensor([1887],"float32"),Tensor([1887],"float32"),Tensor([1887],"float32"),Tensor([1887],"float32"),], -1, )
paddle.stack(list[Tensor([1889],"float32"),Tensor([1889],"float32"),Tensor([1889],"float32"),Tensor([1889],"float32"),], -1, )
paddle.stack(list[Tensor([188],"float32"),Tensor([188],"float32"),Tensor([188],"float32"),Tensor([188],"float32"),], -1, )
paddle.stack(list[Tensor([188],"float32"),Tensor([188],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1890],"float32"),Tensor([1890],"float32"),Tensor([1890],"float32"),Tensor([1890],"float32"),], -1, )
paddle.stack(list[Tensor([1893],"float32"),Tensor([1893],"float32"),Tensor([1893],"float32"),Tensor([1893],"float32"),], -1, )
paddle.stack(list[Tensor([1894],"float32"),Tensor([1894],"float32"),Tensor([1894],"float32"),Tensor([1894],"float32"),], -1, )
paddle.stack(list[Tensor([1896],"float32"),Tensor([1896],"float32"),Tensor([1896],"float32"),Tensor([1896],"float32"),], -1, )
paddle.stack(list[Tensor([1898],"float32"),Tensor([1898],"float32"),Tensor([1898],"float32"),Tensor([1898],"float32"),], -1, )
paddle.stack(list[Tensor([1899],"float32"),Tensor([1899],"float32"),Tensor([1899],"float32"),Tensor([1899],"float32"),], -1, )
paddle.stack(list[Tensor([189],"float32"),Tensor([189],"float32"),Tensor([189],"float32"),Tensor([189],"float32"),], -1, )
paddle.stack(list[Tensor([189],"float32"),Tensor([189],"float32"),], axis=-1, )
paddle.stack(list[Tensor([18],"float32"),Tensor([18],"float32"),Tensor([18],"float32"),Tensor([18],"float32"),], -1, )
paddle.stack(list[Tensor([18],"float32"),Tensor([18],"float32"),], axis=-1, )
paddle.stack(list[Tensor([19, 19],"float32"),Tensor([19, 19],"float32"),Tensor([19, 19],"float32"),Tensor([19, 19],"float32"),], axis=-1, )
paddle.stack(list[Tensor([19, 19],"float32"),Tensor([19, 19],"float32"),], axis=-1, )
paddle.stack(list[Tensor([19, 29],"int64"),Tensor([19, 29],"int64"),], -1, )
paddle.stack(list[Tensor([1900],"float32"),Tensor([1900],"float32"),Tensor([1900],"float32"),Tensor([1900],"float32"),], -1, )
paddle.stack(list[Tensor([1907],"float32"),Tensor([1907],"float32"),Tensor([1907],"float32"),Tensor([1907],"float32"),], -1, )
paddle.stack(list[Tensor([190],"float32"),Tensor([190],"float32"),Tensor([190],"float32"),Tensor([190],"float32"),], -1, )
paddle.stack(list[Tensor([190],"float32"),Tensor([190],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1911],"float32"),Tensor([1911],"float32"),Tensor([1911],"float32"),Tensor([1911],"float32"),], -1, )
paddle.stack(list[Tensor([19125, 11],"float32"),Tensor([19125, 11],"float32"),Tensor([19125, 11],"float32"),Tensor([19125, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 121],"float32"),Tensor([19125, 121],"float32"),Tensor([19125, 121],"float32"),Tensor([19125, 121],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 12],"float32"),Tensor([19125, 12],"float32"),Tensor([19125, 12],"float32"),Tensor([19125, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 131],"float32"),Tensor([19125, 131],"float32"),Tensor([19125, 131],"float32"),Tensor([19125, 131],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 13],"float32"),Tensor([19125, 13],"float32"),Tensor([19125, 13],"float32"),Tensor([19125, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 143],"float32"),Tensor([19125, 143],"float32"),Tensor([19125, 143],"float32"),Tensor([19125, 143],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 14],"float32"),Tensor([19125, 14],"float32"),Tensor([19125, 14],"float32"),Tensor([19125, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 16],"float32"),Tensor([19125, 16],"float32"),Tensor([19125, 16],"float32"),Tensor([19125, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 18],"float32"),Tensor([19125, 18],"float32"),Tensor([19125, 18],"float32"),Tensor([19125, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 1],"float32"),Tensor([19125, 1],"float32"),Tensor([19125, 1],"float32"),Tensor([19125, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 21],"float32"),Tensor([19125, 21],"float32"),Tensor([19125, 21],"float32"),Tensor([19125, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 22],"float32"),Tensor([19125, 22],"float32"),Tensor([19125, 22],"float32"),Tensor([19125, 22],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 24],"float32"),Tensor([19125, 24],"float32"),Tensor([19125, 24],"float32"),Tensor([19125, 24],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 25],"float32"),Tensor([19125, 25],"float32"),Tensor([19125, 25],"float32"),Tensor([19125, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 26],"float32"),Tensor([19125, 26],"float32"),Tensor([19125, 26],"float32"),Tensor([19125, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 28],"float32"),Tensor([19125, 28],"float32"),Tensor([19125, 28],"float32"),Tensor([19125, 28],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 2],"float32"),Tensor([19125, 2],"float32"),Tensor([19125, 2],"float32"),Tensor([19125, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 30],"float32"),Tensor([19125, 30],"float32"),Tensor([19125, 30],"float32"),Tensor([19125, 30],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 31],"float32"),Tensor([19125, 31],"float32"),Tensor([19125, 31],"float32"),Tensor([19125, 31],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 37],"float32"),Tensor([19125, 37],"float32"),Tensor([19125, 37],"float32"),Tensor([19125, 37],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 41],"float32"),Tensor([19125, 41],"float32"),Tensor([19125, 41],"float32"),Tensor([19125, 41],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 43],"float32"),Tensor([19125, 43],"float32"),Tensor([19125, 43],"float32"),Tensor([19125, 43],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 44],"float32"),Tensor([19125, 44],"float32"),Tensor([19125, 44],"float32"),Tensor([19125, 44],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 4],"float32"),Tensor([19125, 4],"float32"),Tensor([19125, 4],"float32"),Tensor([19125, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 53],"float32"),Tensor([19125, 53],"float32"),Tensor([19125, 53],"float32"),Tensor([19125, 53],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 54],"float32"),Tensor([19125, 54],"float32"),Tensor([19125, 54],"float32"),Tensor([19125, 54],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 56],"float32"),Tensor([19125, 56],"float32"),Tensor([19125, 56],"float32"),Tensor([19125, 56],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 5],"float32"),Tensor([19125, 5],"float32"),Tensor([19125, 5],"float32"),Tensor([19125, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 69],"float32"),Tensor([19125, 69],"float32"),Tensor([19125, 69],"float32"),Tensor([19125, 69],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 6],"float32"),Tensor([19125, 6],"float32"),Tensor([19125, 6],"float32"),Tensor([19125, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 73],"float32"),Tensor([19125, 73],"float32"),Tensor([19125, 73],"float32"),Tensor([19125, 73],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 77],"float32"),Tensor([19125, 77],"float32"),Tensor([19125, 77],"float32"),Tensor([19125, 77],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 7],"float32"),Tensor([19125, 7],"float32"),Tensor([19125, 7],"float32"),Tensor([19125, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 83],"float32"),Tensor([19125, 83],"float32"),Tensor([19125, 83],"float32"),Tensor([19125, 83],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 89],"float32"),Tensor([19125, 89],"float32"),Tensor([19125, 89],"float32"),Tensor([19125, 89],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 8],"float32"),Tensor([19125, 8],"float32"),Tensor([19125, 8],"float32"),Tensor([19125, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([19125, 9],"float32"),Tensor([19125, 9],"float32"),Tensor([19125, 9],"float32"),Tensor([19125, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([1913],"float32"),Tensor([1913],"float32"),Tensor([1913],"float32"),Tensor([1913],"float32"),], -1, )
paddle.stack(list[Tensor([1914],"float32"),Tensor([1914],"float32"),Tensor([1914],"float32"),Tensor([1914],"float32"),], -1, )
paddle.stack(list[Tensor([191],"float32"),Tensor([191],"float32"),Tensor([191],"float32"),Tensor([191],"float32"),], -1, )
paddle.stack(list[Tensor([191],"float32"),Tensor([191],"float32"),], axis=-1, )
paddle.stack(list[Tensor([192, 192],"float32"),Tensor([192, 192],"float32"),Tensor([192, 192],"float32"),Tensor([192, 192],"float32"),], axis=-1, )
paddle.stack(list[Tensor([192, 192],"float32"),Tensor([192, 192],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1920],"float32"),Tensor([1920],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1921],"float32"),Tensor([1921],"float32"),Tensor([1921],"float32"),Tensor([1921],"float32"),], -1, )
paddle.stack(list[Tensor([192],"float32"),Tensor([192],"float32"),Tensor([192],"float32"),Tensor([192],"float32"),], -1, )
paddle.stack(list[Tensor([192],"float32"),Tensor([192],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1930],"float32"),Tensor([1930],"float32"),Tensor([1930],"float32"),Tensor([1930],"float32"),], -1, )
paddle.stack(list[Tensor([1932],"float32"),Tensor([1932],"float32"),Tensor([1932],"float32"),Tensor([1932],"float32"),], -1, )
paddle.stack(list[Tensor([1935],"float32"),Tensor([1935],"float32"),Tensor([1935],"float32"),Tensor([1935],"float32"),], -1, )
paddle.stack(list[Tensor([1936],"float32"),Tensor([1936],"float32"),Tensor([1936],"float32"),Tensor([1936],"float32"),], -1, )
paddle.stack(list[Tensor([1936],"float32"),Tensor([1936],"float32"),], axis=-1, )
paddle.stack(list[Tensor([193],"float32"),Tensor([193],"float32"),Tensor([193],"float32"),Tensor([193],"float32"),], -1, )
paddle.stack(list[Tensor([193],"float32"),Tensor([193],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1940],"float32"),Tensor([1940],"float32"),Tensor([1940],"float32"),Tensor([1940],"float32"),], -1, )
paddle.stack(list[Tensor([1942],"float32"),Tensor([1942],"float32"),Tensor([1942],"float32"),Tensor([1942],"float32"),], -1, )
paddle.stack(list[Tensor([1944],"float32"),Tensor([1944],"float32"),Tensor([1944],"float32"),Tensor([1944],"float32"),], -1, )
paddle.stack(list[Tensor([1945],"float32"),Tensor([1945],"float32"),Tensor([1945],"float32"),Tensor([1945],"float32"),], -1, )
paddle.stack(list[Tensor([1946],"float32"),Tensor([1946],"float32"),Tensor([1946],"float32"),Tensor([1946],"float32"),], -1, )
paddle.stack(list[Tensor([1947],"float32"),Tensor([1947],"float32"),Tensor([1947],"float32"),Tensor([1947],"float32"),], -1, )
paddle.stack(list[Tensor([1948],"float32"),Tensor([1948],"float32"),Tensor([1948],"float32"),Tensor([1948],"float32"),], -1, )
paddle.stack(list[Tensor([194],"float32"),Tensor([194],"float32"),Tensor([194],"float32"),Tensor([194],"float32"),], -1, )
paddle.stack(list[Tensor([194],"float32"),Tensor([194],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1951],"float32"),Tensor([1951],"float32"),Tensor([1951],"float32"),Tensor([1951],"float32"),], -1, )
paddle.stack(list[Tensor([1954],"float32"),Tensor([1954],"float32"),Tensor([1954],"float32"),Tensor([1954],"float32"),], -1, )
paddle.stack(list[Tensor([1955],"float32"),Tensor([1955],"float32"),Tensor([1955],"float32"),Tensor([1955],"float32"),], -1, )
paddle.stack(list[Tensor([195],"float32"),Tensor([195],"float32"),Tensor([195],"float32"),Tensor([195],"float32"),], -1, )
paddle.stack(list[Tensor([195],"float32"),Tensor([195],"float32"),], axis=-1, )
paddle.stack(list[Tensor([196],"float32"),Tensor([196],"float32"),Tensor([196],"float32"),Tensor([196],"float32"),], -1, )
paddle.stack(list[Tensor([196],"float32"),Tensor([196],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1971],"float32"),Tensor([1971],"float32"),Tensor([1971],"float32"),Tensor([1971],"float32"),], -1, )
paddle.stack(list[Tensor([1972],"float32"),Tensor([1972],"float32"),Tensor([1972],"float32"),Tensor([1972],"float32"),], -1, )
paddle.stack(list[Tensor([1973],"float32"),Tensor([1973],"float32"),Tensor([1973],"float32"),Tensor([1973],"float32"),], -1, )
paddle.stack(list[Tensor([1975],"float32"),Tensor([1975],"float32"),Tensor([1975],"float32"),Tensor([1975],"float32"),], -1, )
paddle.stack(list[Tensor([1979],"float32"),Tensor([1979],"float32"),Tensor([1979],"float32"),Tensor([1979],"float32"),], -1, )
paddle.stack(list[Tensor([197],"float32"),Tensor([197],"float32"),Tensor([197],"float32"),Tensor([197],"float32"),], -1, )
paddle.stack(list[Tensor([197],"float32"),Tensor([197],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1980],"float32"),Tensor([1980],"float32"),Tensor([1980],"float32"),Tensor([1980],"float32"),], -1, )
paddle.stack(list[Tensor([1982],"float32"),Tensor([1982],"float32"),Tensor([1982],"float32"),Tensor([1982],"float32"),], -1, )
paddle.stack(list[Tensor([1984],"float32"),Tensor([1984],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1986],"float32"),Tensor([1986],"float32"),Tensor([1986],"float32"),Tensor([1986],"float32"),], -1, )
paddle.stack(list[Tensor([1988],"float32"),Tensor([1988],"float32"),Tensor([1988],"float32"),Tensor([1988],"float32"),], -1, )
paddle.stack(list[Tensor([1989],"float32"),Tensor([1989],"float32"),Tensor([1989],"float32"),Tensor([1989],"float32"),], -1, )
paddle.stack(list[Tensor([198],"float32"),Tensor([198],"float32"),Tensor([198],"float32"),Tensor([198],"float32"),], -1, )
paddle.stack(list[Tensor([198],"float32"),Tensor([198],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1990],"float32"),Tensor([1990],"float32"),Tensor([1990],"float32"),Tensor([1990],"float32"),], -1, )
paddle.stack(list[Tensor([1991],"float32"),Tensor([1991],"float32"),Tensor([1991],"float32"),Tensor([1991],"float32"),], -1, )
paddle.stack(list[Tensor([1993],"float32"),Tensor([1993],"float32"),Tensor([1993],"float32"),Tensor([1993],"float32"),], -1, )
paddle.stack(list[Tensor([1994],"float32"),Tensor([1994],"float32"),Tensor([1994],"float32"),Tensor([1994],"float32"),], -1, )
paddle.stack(list[Tensor([199680],"float32"),Tensor([199680],"float32"),Tensor([199680],"float32"),Tensor([199680],"float32"),], -1, )
paddle.stack(list[Tensor([1997],"float32"),Tensor([1997],"float32"),Tensor([1997],"float32"),Tensor([1997],"float32"),], -1, )
paddle.stack(list[Tensor([1998],"float32"),Tensor([1998],"float32"),Tensor([1998],"float32"),Tensor([1998],"float32"),], -1, )
paddle.stack(list[Tensor([1999],"float32"),Tensor([1999],"float32"),Tensor([1999],"float32"),Tensor([1999],"float32"),], -1, )
paddle.stack(list[Tensor([199],"float32"),Tensor([199],"float32"),Tensor([199],"float32"),Tensor([199],"float32"),], -1, )
paddle.stack(list[Tensor([199],"float32"),Tensor([199],"float32"),], axis=-1, )
paddle.stack(list[Tensor([19],"float32"),Tensor([19],"float32"),Tensor([19],"float32"),Tensor([19],"float32"),], -1, )
paddle.stack(list[Tensor([19],"float32"),Tensor([19],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], -1, )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),], -1, )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),], 1, )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float64"),Tensor([1],"float64"),], -1, )
paddle.stack(list[Tensor([1],"int64"),Tensor([1],"int64"),], axis=-1, )
paddle.stack(list[Tensor([1],"int64"),Tensor([1],"int64"),], axis=0, )
paddle.stack(list[Tensor([1],"int64"),Tensor([1],"int64"),], axis=1, )
paddle.stack(list[Tensor([2, 1, 3, 0],"complex128"),Tensor([2, 1, 3, 0],"complex128"),Tensor([2, 1, 3, 0],"complex128"),Tensor([2, 1, 3, 0],"complex128"),], axis=-1, )
paddle.stack(list[Tensor([2, 1, 3],"complex128"),Tensor([2, 1, 3],"complex128"),Tensor([2, 1, 3],"complex128"),], axis=-1, )
paddle.stack(list[Tensor([2, 1, 64],"float16"),Tensor([2, 1, 64],"float16"),], axis=0, )
paddle.stack(list[Tensor([2, 1, 8, 4],"float32"),Tensor([2, 1, 8, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2, 10, 2, 1, 4],"float32"),Tensor([2, 10, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([2, 100],"int32"),Tensor([2, 100],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 101],"int32"),Tensor([2, 101],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 102],"int32"),Tensor([2, 102],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 103],"int32"),Tensor([2, 103],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 105],"int32"),Tensor([2, 105],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 106],"int32"),Tensor([2, 106],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 107],"int32"),Tensor([2, 107],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 108],"int32"),Tensor([2, 108],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 109],"int32"),Tensor([2, 109],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 10],"int32"),Tensor([2, 10],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 1100, 256],"float32"),Tensor([2, 1100, 256],"float32"),Tensor([2, 1100, 256],"float32"),Tensor([2, 1100, 256],"float32"),Tensor([2, 1100, 256],"float32"),Tensor([2, 1100, 256],"float32"),], )
paddle.stack(list[Tensor([2, 1100, 4],"float32"),Tensor([2, 1100, 4],"float32"),Tensor([2, 1100, 4],"float32"),Tensor([2, 1100, 4],"float32"),Tensor([2, 1100, 4],"float32"),Tensor([2, 1100, 4],"float32"),], )
paddle.stack(list[Tensor([2, 1100, 80],"float32"),Tensor([2, 1100, 80],"float32"),Tensor([2, 1100, 80],"float32"),Tensor([2, 1100, 80],"float32"),Tensor([2, 1100, 80],"float32"),Tensor([2, 1100, 80],"float32"),], )
paddle.stack(list[Tensor([2, 110],"int32"),Tensor([2, 110],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 111],"int32"),Tensor([2, 111],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 112],"int32"),Tensor([2, 112],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 113],"int32"),Tensor([2, 113],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 114, 4, 1, 32],"float16"),Tensor([2, 114, 4, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([2, 114],"int32"),Tensor([2, 114],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 115],"int32"),Tensor([2, 115],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 116],"int32"),Tensor([2, 116],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 117],"int32"),Tensor([2, 117],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 118],"int32"),Tensor([2, 118],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 119],"int32"),Tensor([2, 119],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 11],"int32"),Tensor([2, 11],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 120],"int32"),Tensor([2, 120],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 122],"int32"),Tensor([2, 122],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 123],"int32"),Tensor([2, 123],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 124],"int32"),Tensor([2, 124],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 125],"int32"),Tensor([2, 125],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 126],"int32"),Tensor([2, 126],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 127],"int32"),Tensor([2, 127],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 129],"int32"),Tensor([2, 129],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 12],"int32"),Tensor([2, 12],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 130],"int32"),Tensor([2, 130],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 131],"int32"),Tensor([2, 131],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 132],"int32"),Tensor([2, 132],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 133],"int32"),Tensor([2, 133],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 136],"int32"),Tensor([2, 136],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 138],"int32"),Tensor([2, 138],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 139],"int32"),Tensor([2, 139],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 13],"int32"),Tensor([2, 13],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 140],"int32"),Tensor([2, 140],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 141],"int32"),Tensor([2, 141],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 142],"int32"),Tensor([2, 142],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 145],"int32"),Tensor([2, 145],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 146],"int32"),Tensor([2, 146],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 147],"int32"),Tensor([2, 147],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 149],"int32"),Tensor([2, 149],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 14],"int32"),Tensor([2, 14],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 150],"int32"),Tensor([2, 150],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 152],"int32"),Tensor([2, 152],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 153],"int32"),Tensor([2, 153],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 154],"int32"),Tensor([2, 154],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 155],"int32"),Tensor([2, 155],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 156],"int32"),Tensor([2, 156],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 157],"int32"),Tensor([2, 157],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 158],"int32"),Tensor([2, 158],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 159],"int32"),Tensor([2, 159],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 15],"int32"),Tensor([2, 15],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 160],"int32"),Tensor([2, 160],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 163],"int32"),Tensor([2, 163],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 168],"int32"),Tensor([2, 168],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 169],"int32"),Tensor([2, 169],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 16],"int32"),Tensor([2, 16],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 170],"int32"),Tensor([2, 170],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 176],"int32"),Tensor([2, 176],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 177],"int32"),Tensor([2, 177],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 179],"int32"),Tensor([2, 179],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 17],"int32"),Tensor([2, 17],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 184],"int32"),Tensor([2, 184],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 185],"int32"),Tensor([2, 185],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 189],"int32"),Tensor([2, 189],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 18],"int32"),Tensor([2, 18],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 190],"int32"),Tensor([2, 190],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 194],"int32"),Tensor([2, 194],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 196],"int32"),Tensor([2, 196],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 197],"int32"),Tensor([2, 197],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 19],"int32"),Tensor([2, 19],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 1],"float32"),Tensor([2, 1],"float32"),], -1, )
paddle.stack(list[Tensor([2, 1],"int32"),Tensor([2, 1],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 2, 1, 0],"float16"),Tensor([2, 2, 1, 0],"float16"),Tensor([2, 2, 1, 0],"float16"),Tensor([2, 2, 1, 0],"float16"),], axis=-1, )
paddle.stack(list[Tensor([2, 2, 1, 0],"int64"),Tensor([2, 2, 1, 0],"int64"),Tensor([2, 2, 1, 0],"int64"),Tensor([2, 2, 1, 0],"int64"),], axis=-1, )
paddle.stack(list[Tensor([2, 2, 1, 32],"float16"),Tensor([2, 2, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([2, 2, 16],"float32"),Tensor([2, 2, 16],"float32"),Tensor([2, 2, 16],"float32"),Tensor([2, 2, 16],"float32"),Tensor([2, 2, 16],"float32"),Tensor([2, 2, 16],"float32"),Tensor([2, 2, 16],"float32"),Tensor([2, 2, 16],"float32"),Tensor([2, 2, 16],"float32"),Tensor([2, 2, 16],"float32"),Tensor([2, 2, 16],"float32"),Tensor([2, 2, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2, 2, 1],"float16"),Tensor([2, 2, 1],"float16"),Tensor([2, 2, 1],"float16"),], axis=-1, )
paddle.stack(list[Tensor([2, 2, 1],"int64"),Tensor([2, 2, 1],"int64"),Tensor([2, 2, 1],"int64"),], axis=-1, )
paddle.stack(list[Tensor([2, 2, 64, 32],"float16"),Tensor([2, 2, 64, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([2, 2, 8, 8],"float32"),Tensor([2, 2, 8, 8],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2, 201],"int32"),Tensor([2, 201],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 204],"int32"),Tensor([2, 204],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 207],"int32"),Tensor([2, 207],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 208],"int32"),Tensor([2, 208],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 209],"int32"),Tensor([2, 209],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 20],"int32"),Tensor([2, 20],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 210],"int32"),Tensor([2, 210],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 218],"int32"),Tensor([2, 218],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 21],"int32"),Tensor([2, 21],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 220],"int32"),Tensor([2, 220],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 222],"int32"),Tensor([2, 222],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 224],"int32"),Tensor([2, 224],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 227],"int32"),Tensor([2, 227],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 22],"int32"),Tensor([2, 22],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 239],"int32"),Tensor([2, 239],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 23],"int32"),Tensor([2, 23],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 240],"int32"),Tensor([2, 240],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 249],"int32"),Tensor([2, 249],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 24],"int32"),Tensor([2, 24],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 255],"int32"),Tensor([2, 255],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 25],"int32"),Tensor([2, 25],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 26],"int32"),Tensor([2, 26],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 275],"int32"),Tensor([2, 275],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 27],"int32"),Tensor([2, 27],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 283],"int32"),Tensor([2, 283],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 284],"int32"),Tensor([2, 284],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 286],"int32"),Tensor([2, 286],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 28],"int32"),Tensor([2, 28],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 293],"int32"),Tensor([2, 293],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 296],"int32"),Tensor([2, 296],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 29],"int32"),Tensor([2, 29],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 2],"float32"),Tensor([2, 2],"float32"),Tensor([2, 2],"float32"),Tensor([2, 2],"float32"),], 1, )
paddle.stack(list[Tensor([2, 2],"float32"),Tensor([2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([2, 2],"int32"),Tensor([2, 2],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 3, 4],"float32"),Tensor([2, 3, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([2, 300, 256],"float16"),Tensor([2, 300, 256],"float16"),Tensor([2, 300, 256],"float16"),Tensor([2, 300, 256],"float16"),Tensor([2, 300, 256],"float16"),Tensor([2, 300, 256],"float16"),], )
paddle.stack(list[Tensor([2, 300, 256],"float32"),Tensor([2, 300, 256],"float32"),Tensor([2, 300, 256],"float32"),Tensor([2, 300, 256],"float32"),Tensor([2, 300, 256],"float32"),Tensor([2, 300, 256],"float32"),], )
paddle.stack(list[Tensor([2, 300, 4],"float32"),], )
paddle.stack(list[Tensor([2, 300],"float32"),Tensor([2, 300],"float32"),Tensor([2, 300],"float32"),Tensor([2, 300],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2, 300],"int64"),Tensor([2, 300],"int64"),], axis=-1, )
paddle.stack(list[Tensor([2, 30],"int32"),Tensor([2, 30],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 319],"int32"),Tensor([2, 319],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 31],"int32"),Tensor([2, 31],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 324],"int32"),Tensor([2, 324],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 329],"int32"),Tensor([2, 329],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 32],"int32"),Tensor([2, 32],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 333],"int32"),Tensor([2, 333],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 33],"int32"),Tensor([2, 33],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 34],"int32"),Tensor([2, 34],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 35, 2, 1, 32],"float16"),Tensor([2, 35, 2, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([2, 35],"int32"),Tensor([2, 35],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 369],"int32"),Tensor([2, 369],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 36],"int32"),Tensor([2, 36],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 37],"int32"),Tensor([2, 37],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 38, 64],"float16"),Tensor([2, 38, 64],"float16"),], axis=0, )
paddle.stack(list[Tensor([2, 38],"int32"),Tensor([2, 38],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 39, 64],"float16"),Tensor([2, 39, 64],"float16"),], axis=0, )
paddle.stack(list[Tensor([2, 39],"int32"),Tensor([2, 39],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 3],"int32"),Tensor([2, 3],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 4, 3, 0],"float64"),Tensor([2, 4, 3, 0],"float64"),Tensor([2, 4, 3, 0],"float64"),Tensor([2, 4, 3, 0],"float64"),], axis=-1, )
paddle.stack(list[Tensor([2, 4, 3],"float64"),Tensor([2, 4, 3],"float64"),Tensor([2, 4, 3],"float64"),], axis=-1, )
paddle.stack(list[Tensor([2, 4, 8, 4],"float32"),Tensor([2, 4, 8, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2, 40, 64],"float16"),Tensor([2, 40, 64],"float16"),], axis=0, )
paddle.stack(list[Tensor([2, 400, 136, 136],"float32"),Tensor([2, 400, 136, 136],"float32"),Tensor([2, 400, 136, 136],"float32"),Tensor([2, 400, 136, 136],"float32"),Tensor([2, 400, 136, 136],"float32"),Tensor([2, 400, 136, 136],"float32"),], )
paddle.stack(list[Tensor([2, 400, 2],"float32"),Tensor([2, 400, 2],"float32"),Tensor([2, 400, 2],"float32"),Tensor([2, 400, 2],"float32"),Tensor([2, 400, 2],"float32"),Tensor([2, 400, 2],"float32"),], )
paddle.stack(list[Tensor([2, 400, 4],"float32"),Tensor([2, 400, 4],"float32"),Tensor([2, 400, 4],"float32"),Tensor([2, 400, 4],"float32"),Tensor([2, 400, 4],"float32"),Tensor([2, 400, 4],"float32"),], )
paddle.stack(list[Tensor([2, 400],"int32"),Tensor([2, 400],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 40],"int32"),Tensor([2, 40],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 41, 64],"float16"),Tensor([2, 41, 64],"float16"),], axis=0, )
paddle.stack(list[Tensor([2, 41],"int32"),Tensor([2, 41],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 42],"int32"),Tensor([2, 42],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 43],"int32"),Tensor([2, 43],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 44],"int32"),Tensor([2, 44],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 45],"int32"),Tensor([2, 45],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 461],"int32"),Tensor([2, 461],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 46],"int32"),Tensor([2, 46],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 47, 64],"float16"),Tensor([2, 47, 64],"float16"),], axis=0, )
paddle.stack(list[Tensor([2, 47],"int32"),Tensor([2, 47],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 48],"int32"),Tensor([2, 48],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 492, 1],"float32"),Tensor([2, 492, 1],"float32"),Tensor([2, 492, 1],"float32"),Tensor([2, 492, 1],"float32"),Tensor([2, 492, 1],"float32"),Tensor([2, 492, 1],"float32"),], )
paddle.stack(list[Tensor([2, 492, 4],"float32"),Tensor([2, 492, 4],"float32"),Tensor([2, 492, 4],"float32"),Tensor([2, 492, 4],"float32"),Tensor([2, 492, 4],"float32"),Tensor([2, 492, 4],"float32"),], )
paddle.stack(list[Tensor([2, 498, 1],"float32"),Tensor([2, 498, 1],"float32"),Tensor([2, 498, 1],"float32"),Tensor([2, 498, 1],"float32"),Tensor([2, 498, 1],"float32"),Tensor([2, 498, 1],"float32"),], )
paddle.stack(list[Tensor([2, 498, 4],"float32"),Tensor([2, 498, 4],"float32"),Tensor([2, 498, 4],"float32"),Tensor([2, 498, 4],"float32"),Tensor([2, 498, 4],"float32"),Tensor([2, 498, 4],"float32"),], )
paddle.stack(list[Tensor([2, 49],"int32"),Tensor([2, 49],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 4],"int32"),Tensor([2, 4],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 500, 4],"float32"),Tensor([2, 500, 4],"float32"),Tensor([2, 500, 4],"float32"),Tensor([2, 500, 4],"float32"),Tensor([2, 500, 4],"float32"),Tensor([2, 500, 4],"float32"),], )
paddle.stack(list[Tensor([2, 50],"int32"),Tensor([2, 50],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 51, 64],"float16"),Tensor([2, 51, 64],"float16"),], axis=0, )
paddle.stack(list[Tensor([2, 512],"float16"),Tensor([2, 512],"float16"),Tensor([2, 512],"float16"),], axis=1, )
paddle.stack(list[Tensor([2, 512],"int32"),Tensor([2, 512],"int32"),Tensor([2, 512],"int32"),], axis=1, )
paddle.stack(list[Tensor([2, 51],"int32"),Tensor([2, 51],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 52],"int32"),Tensor([2, 52],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 53, 64],"float16"),Tensor([2, 53, 64],"float16"),], axis=0, )
paddle.stack(list[Tensor([2, 53],"int32"),Tensor([2, 53],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 54, 64],"float16"),Tensor([2, 54, 64],"float16"),], axis=0, )
paddle.stack(list[Tensor([2, 54],"int32"),Tensor([2, 54],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 55],"int32"),Tensor([2, 55],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 56],"int32"),Tensor([2, 56],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 57, 64],"float16"),Tensor([2, 57, 64],"float16"),], axis=0, )
paddle.stack(list[Tensor([2, 57],"int32"),Tensor([2, 57],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 58],"int32"),Tensor([2, 58],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 59],"int32"),Tensor([2, 59],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 5],"float64"),Tensor([2, 5],"float64"),], -1, )
paddle.stack(list[Tensor([2, 5],"int32"),Tensor([2, 5],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 6, 10, 3],"float32"),Tensor([2, 6, 10, 3],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2, 6, 3, 3],"float32"),Tensor([2, 6, 3, 3],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2, 6, 7, 3],"float32"),Tensor([2, 6, 7, 3],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2, 6, 8, 8],"float32"),Tensor([2, 6, 8, 8],"float32"),Tensor([2, 6, 8, 8],"float32"),], axis=-4, )
paddle.stack(list[Tensor([2, 60],"int32"),Tensor([2, 60],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 61],"int32"),Tensor([2, 61],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 62],"int32"),Tensor([2, 62],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 63],"int32"),Tensor([2, 63],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 64],"int32"),Tensor([2, 64],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 65],"int32"),Tensor([2, 65],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 66],"int32"),Tensor([2, 66],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 67],"int32"),Tensor([2, 67],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 68],"int32"),Tensor([2, 68],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 69],"int32"),Tensor([2, 69],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 6],"int32"),Tensor([2, 6],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 70],"int32"),Tensor([2, 70],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 71],"int32"),Tensor([2, 71],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 72],"int32"),Tensor([2, 72],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 73],"int32"),Tensor([2, 73],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 74],"int32"),Tensor([2, 74],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 75],"int32"),Tensor([2, 75],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 76],"int32"),Tensor([2, 76],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 77],"int32"),Tensor([2, 77],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 78],"int32"),Tensor([2, 78],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 79],"int32"),Tensor([2, 79],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 7],"int32"),Tensor([2, 7],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 8, 1, 32],"float16"),Tensor([2, 8, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([2, 8, 64, 32],"float16"),Tensor([2, 8, 64, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([2, 8, 8],"float32"),Tensor([2, 8, 8],"float32"),Tensor([2, 8, 8],"float32"),Tensor([2, 8, 8],"float32"),Tensor([2, 8, 8],"float32"),Tensor([2, 8, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([2, 8, 8],"float32"),Tensor([2, 8, 8],"float32"),Tensor([2, 8, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([2, 80],"int32"),Tensor([2, 80],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 81],"int32"),Tensor([2, 81],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 82],"int32"),Tensor([2, 82],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 83],"int32"),Tensor([2, 83],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 84],"int32"),Tensor([2, 84],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 85],"int32"),Tensor([2, 85],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 86],"int32"),Tensor([2, 86],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 87],"int32"),Tensor([2, 87],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 88],"int32"),Tensor([2, 88],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 89],"int32"),Tensor([2, 89],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 8],"int32"),Tensor([2, 8],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 900],"int64"),Tensor([2, 900],"int64"),], axis=-1, )
paddle.stack(list[Tensor([2, 90],"int32"),Tensor([2, 90],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 91],"int32"),Tensor([2, 91],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 92],"int32"),Tensor([2, 92],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 93],"int32"),Tensor([2, 93],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 9408],"int64"),Tensor([2, 9408],"int64"),], axis=-1, )
paddle.stack(list[Tensor([2, 94],"int32"),Tensor([2, 94],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 95],"int32"),Tensor([2, 95],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 96],"int32"),Tensor([2, 96],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 97],"int32"),Tensor([2, 97],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 98],"int32"),Tensor([2, 98],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 99],"int32"),Tensor([2, 99],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2, 9],"int32"),Tensor([2, 9],"int32"),], axis=-1, )
paddle.stack(list[Tensor([20, 1, 2, 2],"float32"),Tensor([20, 1, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([20, 1, 4, 2],"float32"),Tensor([20, 1, 4, 2],"float32"),], -1, )
paddle.stack(list[Tensor([20, 20],"float32"),Tensor([20, 20],"float32"),Tensor([20, 20],"float32"),Tensor([20, 20],"float32"),], axis=-1, )
paddle.stack(list[Tensor([20, 20],"float32"),Tensor([20, 20],"float32"),], -1, )
paddle.stack(list[Tensor([20, 20],"float32"),Tensor([20, 20],"float32"),], axis=-1, )
paddle.stack(list[Tensor([200, 200],"float32"),Tensor([200, 200],"float32"),Tensor([200, 200],"float32"),Tensor([200, 200],"float32"),], axis=-1, )
paddle.stack(list[Tensor([200, 200],"float32"),Tensor([200, 200],"float32"),], axis=-1, )
paddle.stack(list[Tensor([200, 9408],"int64"),Tensor([200, 9408],"int64"),], axis=-1, )
paddle.stack(list[Tensor([200],"float32"),Tensor([200],"float32"),Tensor([200],"float32"),Tensor([200],"float32"),], -1, )
paddle.stack(list[Tensor([200],"float32"),Tensor([200],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2016],"float32"),Tensor([2016],"float32"),Tensor([2016],"float32"),Tensor([2016],"float32"),], -1, )
paddle.stack(list[Tensor([201],"float32"),Tensor([201],"float32"),Tensor([201],"float32"),Tensor([201],"float32"),], -1, )
paddle.stack(list[Tensor([201],"float32"),Tensor([201],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2020],"float32"),Tensor([2020],"float32"),Tensor([2020],"float32"),Tensor([2020],"float32"),], -1, )
paddle.stack(list[Tensor([2023],"float32"),Tensor([2023],"float32"),Tensor([2023],"float32"),Tensor([2023],"float32"),], -1, )
paddle.stack(list[Tensor([20250],"float32"),Tensor([20250],"float32"),Tensor([20250],"float32"),Tensor([20250],"float32"),], -1, )
paddle.stack(list[Tensor([2029],"float32"),Tensor([2029],"float32"),Tensor([2029],"float32"),Tensor([2029],"float32"),], -1, )
paddle.stack(list[Tensor([202],"float32"),Tensor([202],"float32"),Tensor([202],"float32"),Tensor([202],"float32"),], -1, )
paddle.stack(list[Tensor([202],"float32"),Tensor([202],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2032],"float32"),Tensor([2032],"float32"),Tensor([2032],"float32"),Tensor([2032],"float32"),], -1, )
paddle.stack(list[Tensor([2035],"float32"),Tensor([2035],"float32"),Tensor([2035],"float32"),Tensor([2035],"float32"),], -1, )
paddle.stack(list[Tensor([2038],"float32"),Tensor([2038],"float32"),Tensor([2038],"float32"),Tensor([2038],"float32"),], -1, )
paddle.stack(list[Tensor([2039],"float32"),Tensor([2039],"float32"),Tensor([2039],"float32"),Tensor([2039],"float32"),], -1, )
paddle.stack(list[Tensor([203],"float32"),Tensor([203],"float32"),Tensor([203],"float32"),Tensor([203],"float32"),], -1, )
paddle.stack(list[Tensor([203],"float32"),Tensor([203],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2040],"float32"),Tensor([2040],"float32"),Tensor([2040],"float32"),Tensor([2040],"float32"),], -1, )
paddle.stack(list[Tensor([2048, 1, 2, 32],"float16"),Tensor([2048, 1, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([2048, 1, 4, 32],"float16"),Tensor([2048, 1, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([2048, 1],"float32"),Tensor([2048, 1],"float32"),Tensor([2048, 1],"float32"),Tensor([2048, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2048, 1],"float32"),Tensor([2048, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2048, 2],"float32"),Tensor([2048, 2],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2048, 32],"float32"),Tensor([2048, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),], -1, )
paddle.stack(list[Tensor([2048],"float32"),Tensor([2048],"float32"),], axis=-1, )
paddle.stack(list[Tensor([204],"float32"),Tensor([204],"float32"),Tensor([204],"float32"),Tensor([204],"float32"),], -1, )
paddle.stack(list[Tensor([204],"float32"),Tensor([204],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2050],"float32"),Tensor([2050],"float32"),Tensor([2050],"float32"),Tensor([2050],"float32"),], -1, )
paddle.stack(list[Tensor([2053],"float32"),Tensor([2053],"float32"),Tensor([2053],"float32"),Tensor([2053],"float32"),], -1, )
paddle.stack(list[Tensor([2059],"float32"),Tensor([2059],"float32"),Tensor([2059],"float32"),Tensor([2059],"float32"),], -1, )
paddle.stack(list[Tensor([205],"float32"),Tensor([205],"float32"),Tensor([205],"float32"),Tensor([205],"float32"),], -1, )
paddle.stack(list[Tensor([205],"float32"),Tensor([205],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2063],"float32"),Tensor([2063],"float32"),Tensor([2063],"float32"),Tensor([2063],"float32"),], -1, )
paddle.stack(list[Tensor([206],"float32"),Tensor([206],"float32"),Tensor([206],"float32"),Tensor([206],"float32"),], -1, )
paddle.stack(list[Tensor([206],"float32"),Tensor([206],"float32"),], axis=-1, )
paddle.stack(list[Tensor([207360],"float32"),Tensor([207360],"float32"),Tensor([207360],"float32"),Tensor([207360],"float32"),], -1, )
paddle.stack(list[Tensor([20736],"float32"),Tensor([20736],"float32"),Tensor([20736],"float32"),Tensor([20736],"float32"),], -1, )
paddle.stack(list[Tensor([2075],"float32"),Tensor([2075],"float32"),Tensor([2075],"float32"),Tensor([2075],"float32"),], -1, )
paddle.stack(list[Tensor([207],"float32"),Tensor([207],"float32"),Tensor([207],"float32"),Tensor([207],"float32"),], -1, )
paddle.stack(list[Tensor([207],"float32"),Tensor([207],"float32"),], axis=-1, )
paddle.stack(list[Tensor([208, 208],"float32"),Tensor([208, 208],"float32"),Tensor([208, 208],"float32"),Tensor([208, 208],"float32"),], axis=-1, )
paddle.stack(list[Tensor([208, 208],"float32"),Tensor([208, 208],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2080],"float32"),Tensor([2080],"float32"),Tensor([2080],"float32"),Tensor([2080],"float32"),], -1, )
paddle.stack(list[Tensor([2086],"float32"),Tensor([2086],"float32"),Tensor([2086],"float32"),Tensor([2086],"float32"),], -1, )
paddle.stack(list[Tensor([2089],"float32"),Tensor([2089],"float32"),Tensor([2089],"float32"),Tensor([2089],"float32"),], -1, )
paddle.stack(list[Tensor([208],"float32"),Tensor([208],"float32"),Tensor([208],"float32"),Tensor([208],"float32"),], -1, )
paddle.stack(list[Tensor([208],"float32"),Tensor([208],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2095],"float32"),Tensor([2095],"float32"),Tensor([2095],"float32"),Tensor([2095],"float32"),], -1, )
paddle.stack(list[Tensor([2099],"float32"),Tensor([2099],"float32"),Tensor([2099],"float32"),Tensor([2099],"float32"),], -1, )
paddle.stack(list[Tensor([209],"float32"),Tensor([209],"float32"),Tensor([209],"float32"),Tensor([209],"float32"),], -1, )
paddle.stack(list[Tensor([209],"float32"),Tensor([209],"float32"),], axis=-1, )
paddle.stack(list[Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),], -1, )
paddle.stack(list[Tensor([20],"float32"),Tensor([20],"float32"),], axis=-1, )
paddle.stack(list[Tensor([21, 21],"float32"),Tensor([21, 21],"float32"),Tensor([21, 21],"float32"),Tensor([21, 21],"float32"),], axis=-1, )
paddle.stack(list[Tensor([21, 21],"float32"),Tensor([21, 21],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2100, 1],"float32"),Tensor([2100, 1],"float32"),Tensor([2100, 1],"float32"),Tensor([2100, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([2100, 2],"float32"),Tensor([2100, 2],"float32"),Tensor([2100, 2],"float32"),Tensor([2100, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([2100, 3],"float32"),Tensor([2100, 3],"float32"),Tensor([2100, 3],"float32"),Tensor([2100, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([2100, 4],"float32"),Tensor([2100, 4],"float32"),Tensor([2100, 4],"float32"),Tensor([2100, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([2100, 5],"float32"),Tensor([2100, 5],"float32"),Tensor([2100, 5],"float32"),Tensor([2100, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([2100, 6],"float32"),Tensor([2100, 6],"float32"),Tensor([2100, 6],"float32"),Tensor([2100, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([2100, 7],"float32"),Tensor([2100, 7],"float32"),Tensor([2100, 7],"float32"),Tensor([2100, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([2100],"float32"),Tensor([2100],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2106],"float32"),Tensor([2106],"float32"),Tensor([2106],"float32"),Tensor([2106],"float32"),], -1, )
paddle.stack(list[Tensor([2109],"float32"),Tensor([2109],"float32"),Tensor([2109],"float32"),Tensor([2109],"float32"),], -1, )
paddle.stack(list[Tensor([210],"float32"),Tensor([210],"float32"),Tensor([210],"float32"),Tensor([210],"float32"),], -1, )
paddle.stack(list[Tensor([210],"float32"),Tensor([210],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2110],"float32"),Tensor([2110],"float32"),Tensor([2110],"float32"),Tensor([2110],"float32"),], -1, )
paddle.stack(list[Tensor([2112],"float32"),Tensor([2112],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2113],"float32"),Tensor([2113],"float32"),Tensor([2113],"float32"),Tensor([2113],"float32"),], -1, )
paddle.stack(list[Tensor([2114],"float32"),Tensor([2114],"float32"),Tensor([2114],"float32"),Tensor([2114],"float32"),], -1, )
paddle.stack(list[Tensor([211],"float32"),Tensor([211],"float32"),Tensor([211],"float32"),Tensor([211],"float32"),], -1, )
paddle.stack(list[Tensor([211],"float32"),Tensor([211],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2125, 10],"float32"),Tensor([2125, 10],"float32"),Tensor([2125, 10],"float32"),Tensor([2125, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 11],"float32"),Tensor([2125, 11],"float32"),Tensor([2125, 11],"float32"),Tensor([2125, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 12],"float32"),Tensor([2125, 12],"float32"),Tensor([2125, 12],"float32"),Tensor([2125, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 13],"float32"),Tensor([2125, 13],"float32"),Tensor([2125, 13],"float32"),Tensor([2125, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 14],"float32"),Tensor([2125, 14],"float32"),Tensor([2125, 14],"float32"),Tensor([2125, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 15],"float32"),Tensor([2125, 15],"float32"),Tensor([2125, 15],"float32"),Tensor([2125, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 16],"float32"),Tensor([2125, 16],"float32"),Tensor([2125, 16],"float32"),Tensor([2125, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 17],"float32"),Tensor([2125, 17],"float32"),Tensor([2125, 17],"float32"),Tensor([2125, 17],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 18],"float32"),Tensor([2125, 18],"float32"),Tensor([2125, 18],"float32"),Tensor([2125, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 19],"float32"),Tensor([2125, 19],"float32"),Tensor([2125, 19],"float32"),Tensor([2125, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 1],"float32"),Tensor([2125, 1],"float32"),Tensor([2125, 1],"float32"),Tensor([2125, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 20],"float32"),Tensor([2125, 20],"float32"),Tensor([2125, 20],"float32"),Tensor([2125, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 21],"float32"),Tensor([2125, 21],"float32"),Tensor([2125, 21],"float32"),Tensor([2125, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 22],"float32"),Tensor([2125, 22],"float32"),Tensor([2125, 22],"float32"),Tensor([2125, 22],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 23],"float32"),Tensor([2125, 23],"float32"),Tensor([2125, 23],"float32"),Tensor([2125, 23],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 24],"float32"),Tensor([2125, 24],"float32"),Tensor([2125, 24],"float32"),Tensor([2125, 24],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 25],"float32"),Tensor([2125, 25],"float32"),Tensor([2125, 25],"float32"),Tensor([2125, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 26],"float32"),Tensor([2125, 26],"float32"),Tensor([2125, 26],"float32"),Tensor([2125, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 27],"float32"),Tensor([2125, 27],"float32"),Tensor([2125, 27],"float32"),Tensor([2125, 27],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 28],"float32"),Tensor([2125, 28],"float32"),Tensor([2125, 28],"float32"),Tensor([2125, 28],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 29],"float32"),Tensor([2125, 29],"float32"),Tensor([2125, 29],"float32"),Tensor([2125, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 2],"float32"),Tensor([2125, 2],"float32"),Tensor([2125, 2],"float32"),Tensor([2125, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 30],"float32"),Tensor([2125, 30],"float32"),Tensor([2125, 30],"float32"),Tensor([2125, 30],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 31],"float32"),Tensor([2125, 31],"float32"),Tensor([2125, 31],"float32"),Tensor([2125, 31],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 32],"float32"),Tensor([2125, 32],"float32"),Tensor([2125, 32],"float32"),Tensor([2125, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 34],"float32"),Tensor([2125, 34],"float32"),Tensor([2125, 34],"float32"),Tensor([2125, 34],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 35],"float32"),Tensor([2125, 35],"float32"),Tensor([2125, 35],"float32"),Tensor([2125, 35],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 37],"float32"),Tensor([2125, 37],"float32"),Tensor([2125, 37],"float32"),Tensor([2125, 37],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 38],"float32"),Tensor([2125, 38],"float32"),Tensor([2125, 38],"float32"),Tensor([2125, 38],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 39],"float32"),Tensor([2125, 39],"float32"),Tensor([2125, 39],"float32"),Tensor([2125, 39],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 3],"float32"),Tensor([2125, 3],"float32"),Tensor([2125, 3],"float32"),Tensor([2125, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 40],"float32"),Tensor([2125, 40],"float32"),Tensor([2125, 40],"float32"),Tensor([2125, 40],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 42],"float32"),Tensor([2125, 42],"float32"),Tensor([2125, 42],"float32"),Tensor([2125, 42],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 44],"float32"),Tensor([2125, 44],"float32"),Tensor([2125, 44],"float32"),Tensor([2125, 44],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 45],"float32"),Tensor([2125, 45],"float32"),Tensor([2125, 45],"float32"),Tensor([2125, 45],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 4],"float32"),Tensor([2125, 4],"float32"),Tensor([2125, 4],"float32"),Tensor([2125, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 5],"float32"),Tensor([2125, 5],"float32"),Tensor([2125, 5],"float32"),Tensor([2125, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 6],"float32"),Tensor([2125, 6],"float32"),Tensor([2125, 6],"float32"),Tensor([2125, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 77],"float32"),Tensor([2125, 77],"float32"),Tensor([2125, 77],"float32"),Tensor([2125, 77],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 7],"float32"),Tensor([2125, 7],"float32"),Tensor([2125, 7],"float32"),Tensor([2125, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 8],"float32"),Tensor([2125, 8],"float32"),Tensor([2125, 8],"float32"),Tensor([2125, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125, 9],"float32"),Tensor([2125, 9],"float32"),Tensor([2125, 9],"float32"),Tensor([2125, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([2125],"float32"),Tensor([2125],"float32"),], axis=-1, )
paddle.stack(list[Tensor([212],"float32"),Tensor([212],"float32"),Tensor([212],"float32"),Tensor([212],"float32"),], -1, )
paddle.stack(list[Tensor([212],"float32"),Tensor([212],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2130],"float32"),Tensor([2130],"float32"),Tensor([2130],"float32"),Tensor([2130],"float32"),], -1, )
paddle.stack(list[Tensor([2133],"float32"),Tensor([2133],"float32"),Tensor([2133],"float32"),Tensor([2133],"float32"),], -1, )
paddle.stack(list[Tensor([2139],"float32"),Tensor([2139],"float32"),Tensor([2139],"float32"),Tensor([2139],"float32"),], -1, )
paddle.stack(list[Tensor([213],"float32"),Tensor([213],"float32"),Tensor([213],"float32"),Tensor([213],"float32"),], -1, )
paddle.stack(list[Tensor([213],"float32"),Tensor([213],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2146],"float32"),Tensor([2146],"float32"),Tensor([2146],"float32"),Tensor([2146],"float32"),], -1, )
paddle.stack(list[Tensor([2148],"float32"),Tensor([2148],"float32"),Tensor([2148],"float32"),Tensor([2148],"float32"),], -1, )
paddle.stack(list[Tensor([214],"float32"),Tensor([214],"float32"),Tensor([214],"float32"),Tensor([214],"float32"),], -1, )
paddle.stack(list[Tensor([214],"float32"),Tensor([214],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2150],"float32"),Tensor([2150],"float32"),Tensor([2150],"float32"),Tensor([2150],"float32"),], -1, )
paddle.stack(list[Tensor([2151],"float32"),Tensor([2151],"float32"),Tensor([2151],"float32"),Tensor([2151],"float32"),], -1, )
paddle.stack(list[Tensor([2156],"float32"),Tensor([2156],"float32"),Tensor([2156],"float32"),Tensor([2156],"float32"),], -1, )
paddle.stack(list[Tensor([2158],"float32"),Tensor([2158],"float32"),Tensor([2158],"float32"),Tensor([2158],"float32"),], -1, )
paddle.stack(list[Tensor([215],"float32"),Tensor([215],"float32"),Tensor([215],"float32"),Tensor([215],"float32"),], -1, )
paddle.stack(list[Tensor([215],"float32"),Tensor([215],"float32"),], axis=-1, )
paddle.stack(list[Tensor([216, 216],"float32"),Tensor([216, 216],"float32"),Tensor([216, 216],"float32"),Tensor([216, 216],"float32"),], axis=-1, )
paddle.stack(list[Tensor([216, 216],"float32"),Tensor([216, 216],"float32"),], axis=-1, )
paddle.stack(list[Tensor([21632],"float32"),Tensor([21632],"float32"),Tensor([21632],"float32"),Tensor([21632],"float32"),], -1, )
paddle.stack(list[Tensor([216],"float32"),Tensor([216],"float32"),Tensor([216],"float32"),Tensor([216],"float32"),], -1, )
paddle.stack(list[Tensor([216],"float32"),Tensor([216],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2170],"float32"),Tensor([2170],"float32"),Tensor([2170],"float32"),Tensor([2170],"float32"),], -1, )
paddle.stack(list[Tensor([2171],"float32"),Tensor([2171],"float32"),Tensor([2171],"float32"),Tensor([2171],"float32"),], -1, )
paddle.stack(list[Tensor([2176],"float32"),Tensor([2176],"float32"),], axis=-1, )
paddle.stack(list[Tensor([217],"float32"),Tensor([217],"float32"),Tensor([217],"float32"),Tensor([217],"float32"),], -1, )
paddle.stack(list[Tensor([217],"float32"),Tensor([217],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2180],"float32"),Tensor([2180],"float32"),Tensor([2180],"float32"),Tensor([2180],"float32"),], -1, )
paddle.stack(list[Tensor([2183],"float32"),Tensor([2183],"float32"),Tensor([2183],"float32"),Tensor([2183],"float32"),], -1, )
paddle.stack(list[Tensor([2185],"float32"),Tensor([2185],"float32"),Tensor([2185],"float32"),Tensor([2185],"float32"),], -1, )
paddle.stack(list[Tensor([2188],"float32"),Tensor([2188],"float32"),Tensor([2188],"float32"),Tensor([2188],"float32"),], -1, )
paddle.stack(list[Tensor([218],"float32"),Tensor([218],"float32"),Tensor([218],"float32"),Tensor([218],"float32"),], -1, )
paddle.stack(list[Tensor([218],"float32"),Tensor([218],"float32"),], axis=-1, )
paddle.stack(list[Tensor([219],"float32"),Tensor([219],"float32"),Tensor([219],"float32"),Tensor([219],"float32"),], -1, )
paddle.stack(list[Tensor([219],"float32"),Tensor([219],"float32"),], axis=-1, )
paddle.stack(list[Tensor([21],"float32"),Tensor([21],"float32"),Tensor([21],"float32"),Tensor([21],"float32"),], -1, )
paddle.stack(list[Tensor([21],"float32"),Tensor([21],"float32"),], axis=-1, )
paddle.stack(list[Tensor([22, 22],"float32"),Tensor([22, 22],"float32"),Tensor([22, 22],"float32"),Tensor([22, 22],"float32"),], axis=-1, )
paddle.stack(list[Tensor([22, 22],"float32"),Tensor([22, 22],"float32"),], -1, )
paddle.stack(list[Tensor([22, 22],"float32"),Tensor([22, 22],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2201],"float32"),Tensor([2201],"float32"),Tensor([2201],"float32"),Tensor([2201],"float32"),], -1, )
paddle.stack(list[Tensor([220],"float32"),Tensor([220],"float32"),Tensor([220],"float32"),Tensor([220],"float32"),], -1, )
paddle.stack(list[Tensor([220],"float32"),Tensor([220],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2214],"float32"),Tensor([2214],"float32"),Tensor([2214],"float32"),Tensor([2214],"float32"),], -1, )
paddle.stack(list[Tensor([2215],"float32"),Tensor([2215],"float32"),Tensor([2215],"float32"),Tensor([2215],"float32"),], -1, )
paddle.stack(list[Tensor([221],"float32"),Tensor([221],"float32"),Tensor([221],"float32"),Tensor([221],"float32"),], -1, )
paddle.stack(list[Tensor([221],"float32"),Tensor([221],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2220],"float32"),Tensor([2220],"float32"),Tensor([2220],"float32"),Tensor([2220],"float32"),], -1, )
paddle.stack(list[Tensor([2222],"float32"),Tensor([2222],"float32"),Tensor([2222],"float32"),Tensor([2222],"float32"),], -1, )
paddle.stack(list[Tensor([222],"float32"),Tensor([222],"float32"),Tensor([222],"float32"),Tensor([222],"float32"),], -1, )
paddle.stack(list[Tensor([222],"float32"),Tensor([222],"float32"),], axis=-1, )
paddle.stack(list[Tensor([223],"float32"),Tensor([223],"float32"),Tensor([223],"float32"),Tensor([223],"float32"),], -1, )
paddle.stack(list[Tensor([223],"float32"),Tensor([223],"float32"),], axis=-1, )
paddle.stack(list[Tensor([224, 224],"float32"),Tensor([224, 224],"float32"),Tensor([224, 224],"float32"),Tensor([224, 224],"float32"),], axis=-1, )
paddle.stack(list[Tensor([224, 224],"float32"),Tensor([224, 224],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2240],"float32"),Tensor([2240],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2244],"float32"),Tensor([2244],"float32"),Tensor([2244],"float32"),Tensor([2244],"float32"),], -1, )
paddle.stack(list[Tensor([224],"float32"),Tensor([224],"float32"),Tensor([224],"float32"),Tensor([224],"float32"),], -1, )
paddle.stack(list[Tensor([224],"float32"),Tensor([224],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2253],"float32"),Tensor([2253],"float32"),Tensor([2253],"float32"),Tensor([2253],"float32"),], -1, )
paddle.stack(list[Tensor([2256],"float32"),Tensor([2256],"float32"),Tensor([2256],"float32"),Tensor([2256],"float32"),], -1, )
paddle.stack(list[Tensor([225],"float32"),Tensor([225],"float32"),Tensor([225],"float32"),Tensor([225],"float32"),], -1, )
paddle.stack(list[Tensor([225],"float32"),Tensor([225],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2268],"float32"),Tensor([2268],"float32"),Tensor([2268],"float32"),Tensor([2268],"float32"),], -1, )
paddle.stack(list[Tensor([226],"float32"),Tensor([226],"float32"),Tensor([226],"float32"),Tensor([226],"float32"),], -1, )
paddle.stack(list[Tensor([2271],"float32"),Tensor([2271],"float32"),Tensor([2271],"float32"),Tensor([2271],"float32"),], -1, )
paddle.stack(list[Tensor([2272],"float32"),Tensor([2272],"float32"),Tensor([2272],"float32"),Tensor([2272],"float32"),], -1, )
paddle.stack(list[Tensor([227],"float32"),Tensor([227],"float32"),Tensor([227],"float32"),Tensor([227],"float32"),], -1, )
paddle.stack(list[Tensor([227],"float32"),Tensor([227],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2289],"float32"),Tensor([2289],"float32"),Tensor([2289],"float32"),Tensor([2289],"float32"),], -1, )
paddle.stack(list[Tensor([228],"float32"),Tensor([228],"float32"),Tensor([228],"float32"),Tensor([228],"float32"),], -1, )
paddle.stack(list[Tensor([228],"float32"),Tensor([228],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2290],"float32"),Tensor([2290],"float32"),Tensor([2290],"float32"),Tensor([2290],"float32"),], -1, )
paddle.stack(list[Tensor([2297],"float32"),Tensor([2297],"float32"),Tensor([2297],"float32"),Tensor([2297],"float32"),], -1, )
paddle.stack(list[Tensor([229],"float32"),Tensor([229],"float32"),Tensor([229],"float32"),Tensor([229],"float32"),], -1, )
paddle.stack(list[Tensor([229],"float32"),Tensor([229],"float32"),], axis=-1, )
paddle.stack(list[Tensor([22],"float32"),Tensor([22],"float32"),Tensor([22],"float32"),Tensor([22],"float32"),], -1, )
paddle.stack(list[Tensor([22],"float32"),Tensor([22],"float32"),], axis=-1, )
paddle.stack(list[Tensor([23, 23],"float32"),Tensor([23, 23],"float32"),Tensor([23, 23],"float32"),Tensor([23, 23],"float32"),], axis=-1, )
paddle.stack(list[Tensor([23, 23],"float32"),Tensor([23, 23],"float32"),], -1, )
paddle.stack(list[Tensor([23, 23],"float32"),Tensor([23, 23],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2304],"float32"),Tensor([2304],"float32"),Tensor([2304],"float32"),Tensor([2304],"float32"),], -1, )
paddle.stack(list[Tensor([2304],"float32"),Tensor([2304],"float32"),], axis=-1, )
paddle.stack(list[Tensor([230],"float32"),Tensor([230],"float32"),Tensor([230],"float32"),Tensor([230],"float32"),], -1, )
paddle.stack(list[Tensor([230],"float32"),Tensor([230],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2314],"float32"),Tensor([2314],"float32"),Tensor([2314],"float32"),Tensor([2314],"float32"),], -1, )
paddle.stack(list[Tensor([231],"float32"),Tensor([231],"float32"),Tensor([231],"float32"),Tensor([231],"float32"),], -1, )
paddle.stack(list[Tensor([231],"float32"),Tensor([231],"float32"),], axis=-1, )
paddle.stack(list[Tensor([232, 232],"float32"),Tensor([232, 232],"float32"),Tensor([232, 232],"float32"),Tensor([232, 232],"float32"),], axis=-1, )
paddle.stack(list[Tensor([232, 232],"float32"),Tensor([232, 232],"float32"),], axis=-1, )
paddle.stack(list[Tensor([23232],"float32"),Tensor([23232],"float32"),Tensor([23232],"float32"),Tensor([23232],"float32"),], -1, )
paddle.stack(list[Tensor([232],"float32"),Tensor([232],"float32"),Tensor([232],"float32"),Tensor([232],"float32"),], -1, )
paddle.stack(list[Tensor([232],"float32"),Tensor([232],"float32"),], axis=-1, )
paddle.stack(list[Tensor([233],"float32"),Tensor([233],"float32"),Tensor([233],"float32"),Tensor([233],"float32"),], -1, )
paddle.stack(list[Tensor([233],"float32"),Tensor([233],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2346],"float32"),Tensor([2346],"float32"),Tensor([2346],"float32"),Tensor([2346],"float32"),], -1, )
paddle.stack(list[Tensor([2349],"float32"),Tensor([2349],"float32"),Tensor([2349],"float32"),Tensor([2349],"float32"),], -1, )
paddle.stack(list[Tensor([234],"float32"),Tensor([234],"float32"),Tensor([234],"float32"),Tensor([234],"float32"),], -1, )
paddle.stack(list[Tensor([234],"float32"),Tensor([234],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2350],"float32"),Tensor([2350],"float32"),Tensor([2350],"float32"),Tensor([2350],"float32"),], -1, )
paddle.stack(list[Tensor([2352],"float32"),Tensor([2352],"float32"),Tensor([2352],"float32"),Tensor([2352],"float32"),], -1, )
paddle.stack(list[Tensor([235],"float32"),Tensor([235],"float32"),Tensor([235],"float32"),Tensor([235],"float32"),], -1, )
paddle.stack(list[Tensor([235],"float32"),Tensor([235],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2368],"float32"),Tensor([2368],"float32"),], axis=-1, )
paddle.stack(list[Tensor([236],"float32"),Tensor([236],"float32"),Tensor([236],"float32"),Tensor([236],"float32"),], -1, )
paddle.stack(list[Tensor([236],"float32"),Tensor([236],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2374],"float32"),Tensor([2374],"float32"),Tensor([2374],"float32"),Tensor([2374],"float32"),], -1, )
paddle.stack(list[Tensor([237],"float32"),Tensor([237],"float32"),Tensor([237],"float32"),Tensor([237],"float32"),], -1, )
paddle.stack(list[Tensor([237],"float32"),Tensor([237],"float32"),], axis=-1, )
paddle.stack(list[Tensor([238],"float32"),Tensor([238],"float32"),Tensor([238],"float32"),Tensor([238],"float32"),], -1, )
paddle.stack(list[Tensor([238],"float32"),Tensor([238],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2396],"float32"),Tensor([2396],"float32"),Tensor([2396],"float32"),Tensor([2396],"float32"),], -1, )
paddle.stack(list[Tensor([2398],"float32"),Tensor([2398],"float32"),Tensor([2398],"float32"),Tensor([2398],"float32"),], -1, )
paddle.stack(list[Tensor([239],"float32"),Tensor([239],"float32"),Tensor([239],"float32"),Tensor([239],"float32"),], -1, )
paddle.stack(list[Tensor([239],"float32"),Tensor([239],"float32"),], axis=-1, )
paddle.stack(list[Tensor([23],"float32"),Tensor([23],"float32"),Tensor([23],"float32"),Tensor([23],"float32"),], -1, )
paddle.stack(list[Tensor([23],"float32"),Tensor([23],"float32"),], axis=-1, )
paddle.stack(list[Tensor([24, 24],"float32"),Tensor([24, 24],"float32"),Tensor([24, 24],"float32"),Tensor([24, 24],"float32"),], axis=-1, )
paddle.stack(list[Tensor([24, 24],"float32"),Tensor([24, 24],"float32"),], -1, )
paddle.stack(list[Tensor([24, 24],"float32"),Tensor([24, 24],"float32"),], axis=-1, )
paddle.stack(list[Tensor([240, 240],"float32"),Tensor([240, 240],"float32"),Tensor([240, 240],"float32"),Tensor([240, 240],"float32"),], axis=-1, )
paddle.stack(list[Tensor([240, 240],"float32"),Tensor([240, 240],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2408],"float32"),Tensor([2408],"float32"),Tensor([2408],"float32"),Tensor([2408],"float32"),], -1, )
paddle.stack(list[Tensor([240],"float32"),Tensor([240],"float32"),Tensor([240],"float32"),Tensor([240],"float32"),], -1, )
paddle.stack(list[Tensor([240],"float32"),Tensor([240],"float32"),], axis=-1, )
paddle.stack(list[Tensor([241],"float32"),Tensor([241],"float32"),Tensor([241],"float32"),Tensor([241],"float32"),], -1, )
paddle.stack(list[Tensor([241],"float32"),Tensor([241],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2422],"float32"),Tensor([2422],"float32"),Tensor([2422],"float32"),Tensor([2422],"float32"),], -1, )
paddle.stack(list[Tensor([242],"float32"),Tensor([242],"float32"),Tensor([242],"float32"),Tensor([242],"float32"),], -1, )
paddle.stack(list[Tensor([242],"float32"),Tensor([242],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2432],"float32"),Tensor([2432],"float32"),], axis=-1, )
paddle.stack(list[Tensor([243360],"float32"),Tensor([243360],"float32"),Tensor([243360],"float32"),Tensor([243360],"float32"),], -1, )
paddle.stack(list[Tensor([2433],"float32"),Tensor([2433],"float32"),Tensor([2433],"float32"),Tensor([2433],"float32"),], -1, )
paddle.stack(list[Tensor([243],"float32"),Tensor([243],"float32"),Tensor([243],"float32"),Tensor([243],"float32"),], -1, )
paddle.stack(list[Tensor([243],"float32"),Tensor([243],"float32"),], axis=-1, )
paddle.stack(list[Tensor([244],"float32"),Tensor([244],"float32"),Tensor([244],"float32"),Tensor([244],"float32"),], -1, )
paddle.stack(list[Tensor([244],"float32"),Tensor([244],"float32"),], axis=-1, )
paddle.stack(list[Tensor([24565, 11],"float32"),Tensor([24565, 11],"float32"),Tensor([24565, 11],"float32"),Tensor([24565, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 12],"float32"),Tensor([24565, 12],"float32"),Tensor([24565, 12],"float32"),Tensor([24565, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 136],"float32"),Tensor([24565, 136],"float32"),Tensor([24565, 136],"float32"),Tensor([24565, 136],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 13],"float32"),Tensor([24565, 13],"float32"),Tensor([24565, 13],"float32"),Tensor([24565, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 14],"float32"),Tensor([24565, 14],"float32"),Tensor([24565, 14],"float32"),Tensor([24565, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 15],"float32"),Tensor([24565, 15],"float32"),Tensor([24565, 15],"float32"),Tensor([24565, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 16],"float32"),Tensor([24565, 16],"float32"),Tensor([24565, 16],"float32"),Tensor([24565, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 17],"float32"),Tensor([24565, 17],"float32"),Tensor([24565, 17],"float32"),Tensor([24565, 17],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 180],"float32"),Tensor([24565, 180],"float32"),Tensor([24565, 180],"float32"),Tensor([24565, 180],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 18],"float32"),Tensor([24565, 18],"float32"),Tensor([24565, 18],"float32"),Tensor([24565, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 19],"float32"),Tensor([24565, 19],"float32"),Tensor([24565, 19],"float32"),Tensor([24565, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 1],"float32"),Tensor([24565, 1],"float32"),Tensor([24565, 1],"float32"),Tensor([24565, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 20],"float32"),Tensor([24565, 20],"float32"),Tensor([24565, 20],"float32"),Tensor([24565, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 21],"float32"),Tensor([24565, 21],"float32"),Tensor([24565, 21],"float32"),Tensor([24565, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 22],"float32"),Tensor([24565, 22],"float32"),Tensor([24565, 22],"float32"),Tensor([24565, 22],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 24],"float32"),Tensor([24565, 24],"float32"),Tensor([24565, 24],"float32"),Tensor([24565, 24],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 25],"float32"),Tensor([24565, 25],"float32"),Tensor([24565, 25],"float32"),Tensor([24565, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 26],"float32"),Tensor([24565, 26],"float32"),Tensor([24565, 26],"float32"),Tensor([24565, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 28],"float32"),Tensor([24565, 28],"float32"),Tensor([24565, 28],"float32"),Tensor([24565, 28],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 29],"float32"),Tensor([24565, 29],"float32"),Tensor([24565, 29],"float32"),Tensor([24565, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 2],"float32"),Tensor([24565, 2],"float32"),Tensor([24565, 2],"float32"),Tensor([24565, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 32],"float32"),Tensor([24565, 32],"float32"),Tensor([24565, 32],"float32"),Tensor([24565, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 33],"float32"),Tensor([24565, 33],"float32"),Tensor([24565, 33],"float32"),Tensor([24565, 33],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 3],"float32"),Tensor([24565, 3],"float32"),Tensor([24565, 3],"float32"),Tensor([24565, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 418],"float32"),Tensor([24565, 418],"float32"),Tensor([24565, 418],"float32"),Tensor([24565, 418],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 42],"float32"),Tensor([24565, 42],"float32"),Tensor([24565, 42],"float32"),Tensor([24565, 42],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 43],"float32"),Tensor([24565, 43],"float32"),Tensor([24565, 43],"float32"),Tensor([24565, 43],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 4],"float32"),Tensor([24565, 4],"float32"),Tensor([24565, 4],"float32"),Tensor([24565, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 50],"float32"),Tensor([24565, 50],"float32"),Tensor([24565, 50],"float32"),Tensor([24565, 50],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 51],"float32"),Tensor([24565, 51],"float32"),Tensor([24565, 51],"float32"),Tensor([24565, 51],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 54],"float32"),Tensor([24565, 54],"float32"),Tensor([24565, 54],"float32"),Tensor([24565, 54],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 59],"float32"),Tensor([24565, 59],"float32"),Tensor([24565, 59],"float32"),Tensor([24565, 59],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 5],"float32"),Tensor([24565, 5],"float32"),Tensor([24565, 5],"float32"),Tensor([24565, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 63],"float32"),Tensor([24565, 63],"float32"),Tensor([24565, 63],"float32"),Tensor([24565, 63],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 64],"float32"),Tensor([24565, 64],"float32"),Tensor([24565, 64],"float32"),Tensor([24565, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 67],"float32"),Tensor([24565, 67],"float32"),Tensor([24565, 67],"float32"),Tensor([24565, 67],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 6],"float32"),Tensor([24565, 6],"float32"),Tensor([24565, 6],"float32"),Tensor([24565, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 71],"float32"),Tensor([24565, 71],"float32"),Tensor([24565, 71],"float32"),Tensor([24565, 71],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 73],"float32"),Tensor([24565, 73],"float32"),Tensor([24565, 73],"float32"),Tensor([24565, 73],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 78],"float32"),Tensor([24565, 78],"float32"),Tensor([24565, 78],"float32"),Tensor([24565, 78],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 7],"float32"),Tensor([24565, 7],"float32"),Tensor([24565, 7],"float32"),Tensor([24565, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 811],"float32"),Tensor([24565, 811],"float32"),Tensor([24565, 811],"float32"),Tensor([24565, 811],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 81],"float32"),Tensor([24565, 81],"float32"),Tensor([24565, 81],"float32"),Tensor([24565, 81],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 8],"float32"),Tensor([24565, 8],"float32"),Tensor([24565, 8],"float32"),Tensor([24565, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 92],"float32"),Tensor([24565, 92],"float32"),Tensor([24565, 92],"float32"),Tensor([24565, 92],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 97],"float32"),Tensor([24565, 97],"float32"),Tensor([24565, 97],"float32"),Tensor([24565, 97],"float32"),], axis=1, )
paddle.stack(list[Tensor([24565, 9],"float32"),Tensor([24565, 9],"float32"),Tensor([24565, 9],"float32"),Tensor([24565, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([245],"float32"),Tensor([245],"float32"),Tensor([245],"float32"),Tensor([245],"float32"),], -1, )
paddle.stack(list[Tensor([245],"float32"),Tensor([245],"float32"),], axis=-1, )
paddle.stack(list[Tensor([245],"float32"),Tensor([245],"float32"),], axis=0, )
paddle.stack(list[Tensor([246],"float32"),Tensor([246],"float32"),Tensor([246],"float32"),Tensor([246],"float32"),], -1, )
paddle.stack(list[Tensor([246],"float32"),Tensor([246],"float32"),], axis=-1, )
paddle.stack(list[Tensor([247],"float32"),Tensor([247],"float32"),Tensor([247],"float32"),Tensor([247],"float32"),], -1, )
paddle.stack(list[Tensor([248],"float32"),Tensor([248],"float32"),Tensor([248],"float32"),Tensor([248],"float32"),], -1, )
paddle.stack(list[Tensor([248],"float32"),Tensor([248],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2490],"float32"),Tensor([2490],"float32"),Tensor([2490],"float32"),Tensor([2490],"float32"),], -1, )
paddle.stack(list[Tensor([2496],"float32"),Tensor([2496],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2499],"float32"),Tensor([2499],"float32"),Tensor([2499],"float32"),Tensor([2499],"float32"),], -1, )
paddle.stack(list[Tensor([249],"float32"),Tensor([249],"float32"),Tensor([249],"float32"),Tensor([249],"float32"),], -1, )
paddle.stack(list[Tensor([249],"float32"),Tensor([249],"float32"),], axis=-1, )
paddle.stack(list[Tensor([24],"float32"),Tensor([24],"float32"),Tensor([24],"float32"),Tensor([24],"float32"),], -1, )
paddle.stack(list[Tensor([24],"float32"),Tensor([24],"float32"),], axis=-1, )
paddle.stack(list[Tensor([25, 21504],"float32"),], axis=0, )
paddle.stack(list[Tensor([25, 25],"float32"),Tensor([25, 25],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2502],"float32"),Tensor([2502],"float32"),Tensor([2502],"float32"),Tensor([2502],"float32"),], -1, )
paddle.stack(list[Tensor([25088],"float32"),Tensor([25088],"float32"),Tensor([25088],"float32"),Tensor([25088],"float32"),], -1, )
paddle.stack(list[Tensor([250],"float32"),Tensor([250],"float32"),Tensor([250],"float32"),Tensor([250],"float32"),], -1, )
paddle.stack(list[Tensor([250],"float32"),Tensor([250],"float32"),], axis=-1, )
paddle.stack(list[Tensor([251],"float32"),Tensor([251],"float32"),Tensor([251],"float32"),Tensor([251],"float32"),], -1, )
paddle.stack(list[Tensor([251],"float32"),Tensor([251],"float32"),], axis=-1, )
paddle.stack(list[Tensor([252],"float32"),Tensor([252],"float32"),Tensor([252],"float32"),Tensor([252],"float32"),], -1, )
paddle.stack(list[Tensor([252],"float32"),Tensor([252],"float32"),], axis=-1, )
paddle.stack(list[Tensor([252],"float64"),Tensor([252],"float64"),Tensor([252],"float64"),Tensor([252],"float64"),Tensor([252],"float64"),], 1, )
paddle.stack(list[Tensor([253],"float32"),Tensor([253],"float32"),Tensor([253],"float32"),Tensor([253],"float32"),], -1, )
paddle.stack(list[Tensor([253],"float32"),Tensor([253],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2541],"float32"),Tensor([2541],"float32"),], axis=-1, )
paddle.stack(list[Tensor([254],"float32"),Tensor([254],"float32"),Tensor([254],"float32"),Tensor([254],"float32"),], -1, )
paddle.stack(list[Tensor([254],"float32"),Tensor([254],"float32"),], axis=-1, )
paddle.stack(list[Tensor([255],"float32"),Tensor([255],"float32"),Tensor([255],"float32"),Tensor([255],"float32"),], -1, )
paddle.stack(list[Tensor([255],"float32"),Tensor([255],"float32"),], axis=-1, )
paddle.stack(list[Tensor([25600],"float32"),Tensor([25600],"float32"),Tensor([25600],"float32"),Tensor([25600],"float32"),], -1, )
paddle.stack(list[Tensor([2560],"float32"),Tensor([2560],"float32"),], axis=-1, )
paddle.stack(list[Tensor([256],"float32"),Tensor([256],"float32"),Tensor([256],"float32"),Tensor([256],"float32"),], -1, )
paddle.stack(list[Tensor([256],"float32"),Tensor([256],"float32"),], axis=-1, )
paddle.stack(list[Tensor([256],"int64"),Tensor([256],"int64"),], )
paddle.stack(list[Tensor([2577, 10],"float32"),Tensor([2577, 10],"float32"),Tensor([2577, 10],"float32"),Tensor([2577, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 11],"float32"),Tensor([2577, 11],"float32"),Tensor([2577, 11],"float32"),Tensor([2577, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 12],"float32"),Tensor([2577, 12],"float32"),Tensor([2577, 12],"float32"),Tensor([2577, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 13],"float32"),Tensor([2577, 13],"float32"),Tensor([2577, 13],"float32"),Tensor([2577, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 14],"float32"),Tensor([2577, 14],"float32"),Tensor([2577, 14],"float32"),Tensor([2577, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 15],"float32"),Tensor([2577, 15],"float32"),Tensor([2577, 15],"float32"),Tensor([2577, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 16],"float32"),Tensor([2577, 16],"float32"),Tensor([2577, 16],"float32"),Tensor([2577, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 17],"float32"),Tensor([2577, 17],"float32"),Tensor([2577, 17],"float32"),Tensor([2577, 17],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 18],"float32"),Tensor([2577, 18],"float32"),Tensor([2577, 18],"float32"),Tensor([2577, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 19],"float32"),Tensor([2577, 19],"float32"),Tensor([2577, 19],"float32"),Tensor([2577, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 1],"float32"),Tensor([2577, 1],"float32"),Tensor([2577, 1],"float32"),Tensor([2577, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 20],"float32"),Tensor([2577, 20],"float32"),Tensor([2577, 20],"float32"),Tensor([2577, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 21],"float32"),Tensor([2577, 21],"float32"),Tensor([2577, 21],"float32"),Tensor([2577, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 22],"float32"),Tensor([2577, 22],"float32"),Tensor([2577, 22],"float32"),Tensor([2577, 22],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 23],"float32"),Tensor([2577, 23],"float32"),Tensor([2577, 23],"float32"),Tensor([2577, 23],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 24],"float32"),Tensor([2577, 24],"float32"),Tensor([2577, 24],"float32"),Tensor([2577, 24],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 25],"float32"),Tensor([2577, 25],"float32"),Tensor([2577, 25],"float32"),Tensor([2577, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 26],"float32"),Tensor([2577, 26],"float32"),Tensor([2577, 26],"float32"),Tensor([2577, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 27],"float32"),Tensor([2577, 27],"float32"),Tensor([2577, 27],"float32"),Tensor([2577, 27],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 28],"float32"),Tensor([2577, 28],"float32"),Tensor([2577, 28],"float32"),Tensor([2577, 28],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 29],"float32"),Tensor([2577, 29],"float32"),Tensor([2577, 29],"float32"),Tensor([2577, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 2],"float32"),Tensor([2577, 2],"float32"),Tensor([2577, 2],"float32"),Tensor([2577, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 30],"float32"),Tensor([2577, 30],"float32"),Tensor([2577, 30],"float32"),Tensor([2577, 30],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 31],"float32"),Tensor([2577, 31],"float32"),Tensor([2577, 31],"float32"),Tensor([2577, 31],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 32],"float32"),Tensor([2577, 32],"float32"),Tensor([2577, 32],"float32"),Tensor([2577, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 33],"float32"),Tensor([2577, 33],"float32"),Tensor([2577, 33],"float32"),Tensor([2577, 33],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 34],"float32"),Tensor([2577, 34],"float32"),Tensor([2577, 34],"float32"),Tensor([2577, 34],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 35],"float32"),Tensor([2577, 35],"float32"),Tensor([2577, 35],"float32"),Tensor([2577, 35],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 36],"float32"),Tensor([2577, 36],"float32"),Tensor([2577, 36],"float32"),Tensor([2577, 36],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 37],"float32"),Tensor([2577, 37],"float32"),Tensor([2577, 37],"float32"),Tensor([2577, 37],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 38],"float32"),Tensor([2577, 38],"float32"),Tensor([2577, 38],"float32"),Tensor([2577, 38],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 3],"float32"),Tensor([2577, 3],"float32"),Tensor([2577, 3],"float32"),Tensor([2577, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 40],"float32"),Tensor([2577, 40],"float32"),Tensor([2577, 40],"float32"),Tensor([2577, 40],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 41],"float32"),Tensor([2577, 41],"float32"),Tensor([2577, 41],"float32"),Tensor([2577, 41],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 42],"float32"),Tensor([2577, 42],"float32"),Tensor([2577, 42],"float32"),Tensor([2577, 42],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 43],"float32"),Tensor([2577, 43],"float32"),Tensor([2577, 43],"float32"),Tensor([2577, 43],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 44],"float32"),Tensor([2577, 44],"float32"),Tensor([2577, 44],"float32"),Tensor([2577, 44],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 48],"float32"),Tensor([2577, 48],"float32"),Tensor([2577, 48],"float32"),Tensor([2577, 48],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 4],"float32"),Tensor([2577, 4],"float32"),Tensor([2577, 4],"float32"),Tensor([2577, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 52],"float32"),Tensor([2577, 52],"float32"),Tensor([2577, 52],"float32"),Tensor([2577, 52],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 54],"float32"),Tensor([2577, 54],"float32"),Tensor([2577, 54],"float32"),Tensor([2577, 54],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 5],"float32"),Tensor([2577, 5],"float32"),Tensor([2577, 5],"float32"),Tensor([2577, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 6],"float32"),Tensor([2577, 6],"float32"),Tensor([2577, 6],"float32"),Tensor([2577, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 7],"float32"),Tensor([2577, 7],"float32"),Tensor([2577, 7],"float32"),Tensor([2577, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 8],"float32"),Tensor([2577, 8],"float32"),Tensor([2577, 8],"float32"),Tensor([2577, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577, 9],"float32"),Tensor([2577, 9],"float32"),Tensor([2577, 9],"float32"),Tensor([2577, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([2577],"float32"),Tensor([2577],"float32"),Tensor([2577],"float32"),Tensor([2577],"float32"),], -1, )
paddle.stack(list[Tensor([2577],"float32"),Tensor([2577],"float32"),], axis=-1, )
paddle.stack(list[Tensor([257],"float32"),Tensor([257],"float32"),Tensor([257],"float32"),Tensor([257],"float32"),], -1, )
paddle.stack(list[Tensor([257],"float32"),Tensor([257],"float32"),], axis=-1, )
paddle.stack(list[Tensor([258],"float32"),Tensor([258],"float32"),Tensor([258],"float32"),Tensor([258],"float32"),], -1, )
paddle.stack(list[Tensor([258],"float32"),Tensor([258],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2592],"float32"),Tensor([2592],"float32"),Tensor([2592],"float32"),Tensor([2592],"float32"),], -1, )
paddle.stack(list[Tensor([259],"float32"),Tensor([259],"float32"),Tensor([259],"float32"),Tensor([259],"float32"),], -1, )
paddle.stack(list[Tensor([259],"float32"),Tensor([259],"float32"),], axis=-1, )
paddle.stack(list[Tensor([25],"float32"),Tensor([25],"float32"),Tensor([25],"float32"),Tensor([25],"float32"),], -1, )
paddle.stack(list[Tensor([25],"float32"),Tensor([25],"float32"),], axis=-1, )
paddle.stack(list[Tensor([26, 26],"float32"),Tensor([26, 26],"float32"),Tensor([26, 26],"float32"),Tensor([26, 26],"float32"),], axis=-1, )
paddle.stack(list[Tensor([26, 26],"float32"),Tensor([26, 26],"float32"),], axis=-1, )
paddle.stack(list[Tensor([26, 4, 7, 4],"float32"),Tensor([26, 4, 7, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([260],"float32"),Tensor([260],"float32"),Tensor([260],"float32"),Tensor([260],"float32"),], -1, )
paddle.stack(list[Tensor([260],"float32"),Tensor([260],"float32"),], axis=-1, )
paddle.stack(list[Tensor([261],"float32"),Tensor([261],"float32"),Tensor([261],"float32"),Tensor([261],"float32"),], -1, )
paddle.stack(list[Tensor([2624],"float32"),Tensor([2624],"float32"),Tensor([2624],"float32"),Tensor([2624],"float32"),], -1, )
paddle.stack(list[Tensor([2624],"float32"),Tensor([2624],"float32"),], axis=-1, )
paddle.stack(list[Tensor([262],"float32"),Tensor([262],"float32"),Tensor([262],"float32"),Tensor([262],"float32"),], -1, )
paddle.stack(list[Tensor([263],"float32"),Tensor([263],"float32"),Tensor([263],"float32"),Tensor([263],"float32"),], -1, )
paddle.stack(list[Tensor([263],"float32"),Tensor([263],"float32"),], axis=-1, )
paddle.stack(list[Tensor([264],"float32"),Tensor([264],"float32"),Tensor([264],"float32"),Tensor([264],"float32"),], -1, )
paddle.stack(list[Tensor([264],"float32"),Tensor([264],"float32"),], axis=-1, )
paddle.stack(list[Tensor([265],"float32"),Tensor([265],"float32"),Tensor([265],"float32"),Tensor([265],"float32"),], -1, )
paddle.stack(list[Tensor([265],"float32"),Tensor([265],"float32"),], axis=-1, )
paddle.stack(list[Tensor([266],"float32"),Tensor([266],"float32"),Tensor([266],"float32"),Tensor([266],"float32"),], -1, )
paddle.stack(list[Tensor([266],"float32"),Tensor([266],"float32"),], axis=-1, )
paddle.stack(list[Tensor([267],"float32"),Tensor([267],"float32"),Tensor([267],"float32"),Tensor([267],"float32"),], -1, )
paddle.stack(list[Tensor([267],"float32"),Tensor([267],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2688],"float32"),Tensor([2688],"float32"),], axis=-1, )
paddle.stack(list[Tensor([268],"float32"),Tensor([268],"float32"),Tensor([268],"float32"),Tensor([268],"float32"),], -1, )
paddle.stack(list[Tensor([268],"float32"),Tensor([268],"float32"),], axis=-1, )
paddle.stack(list[Tensor([269],"float32"),Tensor([269],"float32"),Tensor([269],"float32"),Tensor([269],"float32"),], -1, )
paddle.stack(list[Tensor([269],"float32"),Tensor([269],"float32"),], axis=-1, )
paddle.stack(list[Tensor([26],"float32"),Tensor([26],"float32"),Tensor([26],"float32"),Tensor([26],"float32"),], -1, )
paddle.stack(list[Tensor([26],"float32"),Tensor([26],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2704],"float32"),Tensor([2704],"float32"),Tensor([2704],"float32"),Tensor([2704],"float32"),], -1, )
paddle.stack(list[Tensor([2704],"float32"),Tensor([2704],"float32"),], axis=-1, )
paddle.stack(list[Tensor([270],"float32"),Tensor([270],"float32"),Tensor([270],"float32"),Tensor([270],"float32"),], -1, )
paddle.stack(list[Tensor([270],"float32"),Tensor([270],"float32"),], axis=-1, )
paddle.stack(list[Tensor([271],"float32"),Tensor([271],"float32"),Tensor([271],"float32"),Tensor([271],"float32"),], -1, )
paddle.stack(list[Tensor([271],"float32"),Tensor([271],"float32"),], axis=-1, )
paddle.stack(list[Tensor([272],"float32"),Tensor([272],"float32"),Tensor([272],"float32"),Tensor([272],"float32"),], -1, )
paddle.stack(list[Tensor([272],"float32"),Tensor([272],"float32"),], axis=-1, )
paddle.stack(list[Tensor([273],"float32"),Tensor([273],"float32"),Tensor([273],"float32"),Tensor([273],"float32"),], -1, )
paddle.stack(list[Tensor([274],"float32"),Tensor([274],"float32"),Tensor([274],"float32"),Tensor([274],"float32"),], -1, )
paddle.stack(list[Tensor([274],"float32"),Tensor([274],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2752],"float32"),Tensor([2752],"float32"),], axis=-1, )
paddle.stack(list[Tensor([27540, 10],"float32"),Tensor([27540, 10],"float32"),Tensor([27540, 10],"float32"),Tensor([27540, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 11],"float32"),Tensor([27540, 11],"float32"),Tensor([27540, 11],"float32"),Tensor([27540, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 121],"float32"),Tensor([27540, 121],"float32"),Tensor([27540, 121],"float32"),Tensor([27540, 121],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 12],"float32"),Tensor([27540, 12],"float32"),Tensor([27540, 12],"float32"),Tensor([27540, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 139],"float32"),Tensor([27540, 139],"float32"),Tensor([27540, 139],"float32"),Tensor([27540, 139],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 13],"float32"),Tensor([27540, 13],"float32"),Tensor([27540, 13],"float32"),Tensor([27540, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 143],"float32"),Tensor([27540, 143],"float32"),Tensor([27540, 143],"float32"),Tensor([27540, 143],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 17],"float32"),Tensor([27540, 17],"float32"),Tensor([27540, 17],"float32"),Tensor([27540, 17],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 19],"float32"),Tensor([27540, 19],"float32"),Tensor([27540, 19],"float32"),Tensor([27540, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 1],"float32"),Tensor([27540, 1],"float32"),Tensor([27540, 1],"float32"),Tensor([27540, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 20],"float32"),Tensor([27540, 20],"float32"),Tensor([27540, 20],"float32"),Tensor([27540, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 21],"float32"),Tensor([27540, 21],"float32"),Tensor([27540, 21],"float32"),Tensor([27540, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 25],"float32"),Tensor([27540, 25],"float32"),Tensor([27540, 25],"float32"),Tensor([27540, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 26],"float32"),Tensor([27540, 26],"float32"),Tensor([27540, 26],"float32"),Tensor([27540, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 28],"float32"),Tensor([27540, 28],"float32"),Tensor([27540, 28],"float32"),Tensor([27540, 28],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 29],"float32"),Tensor([27540, 29],"float32"),Tensor([27540, 29],"float32"),Tensor([27540, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 2],"float32"),Tensor([27540, 2],"float32"),Tensor([27540, 2],"float32"),Tensor([27540, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 30],"float32"),Tensor([27540, 30],"float32"),Tensor([27540, 30],"float32"),Tensor([27540, 30],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 32],"float32"),Tensor([27540, 32],"float32"),Tensor([27540, 32],"float32"),Tensor([27540, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 33],"float32"),Tensor([27540, 33],"float32"),Tensor([27540, 33],"float32"),Tensor([27540, 33],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 35],"float32"),Tensor([27540, 35],"float32"),Tensor([27540, 35],"float32"),Tensor([27540, 35],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 37],"float32"),Tensor([27540, 37],"float32"),Tensor([27540, 37],"float32"),Tensor([27540, 37],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 38],"float32"),Tensor([27540, 38],"float32"),Tensor([27540, 38],"float32"),Tensor([27540, 38],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 39],"float32"),Tensor([27540, 39],"float32"),Tensor([27540, 39],"float32"),Tensor([27540, 39],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 3],"float32"),Tensor([27540, 3],"float32"),Tensor([27540, 3],"float32"),Tensor([27540, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 405],"float32"),Tensor([27540, 405],"float32"),Tensor([27540, 405],"float32"),Tensor([27540, 405],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 420],"float32"),Tensor([27540, 420],"float32"),Tensor([27540, 420],"float32"),Tensor([27540, 420],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 44],"float32"),Tensor([27540, 44],"float32"),Tensor([27540, 44],"float32"),Tensor([27540, 44],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 46],"float32"),Tensor([27540, 46],"float32"),Tensor([27540, 46],"float32"),Tensor([27540, 46],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 4],"float32"),Tensor([27540, 4],"float32"),Tensor([27540, 4],"float32"),Tensor([27540, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 56],"float32"),Tensor([27540, 56],"float32"),Tensor([27540, 56],"float32"),Tensor([27540, 56],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 58],"float32"),Tensor([27540, 58],"float32"),Tensor([27540, 58],"float32"),Tensor([27540, 58],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 5],"float32"),Tensor([27540, 5],"float32"),Tensor([27540, 5],"float32"),Tensor([27540, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 65],"float32"),Tensor([27540, 65],"float32"),Tensor([27540, 65],"float32"),Tensor([27540, 65],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 6],"float32"),Tensor([27540, 6],"float32"),Tensor([27540, 6],"float32"),Tensor([27540, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 7],"float32"),Tensor([27540, 7],"float32"),Tensor([27540, 7],"float32"),Tensor([27540, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 80],"float32"),Tensor([27540, 80],"float32"),Tensor([27540, 80],"float32"),Tensor([27540, 80],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 8],"float32"),Tensor([27540, 8],"float32"),Tensor([27540, 8],"float32"),Tensor([27540, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([27540, 9],"float32"),Tensor([27540, 9],"float32"),Tensor([27540, 9],"float32"),Tensor([27540, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([275],"float32"),Tensor([275],"float32"),Tensor([275],"float32"),Tensor([275],"float32"),], -1, )
paddle.stack(list[Tensor([275],"float32"),Tensor([275],"float32"),], axis=-1, )
paddle.stack(list[Tensor([27648],"float32"),Tensor([27648],"float32"),Tensor([27648],"float32"),Tensor([27648],"float32"),], -1, )
paddle.stack(list[Tensor([276],"float32"),Tensor([276],"float32"),Tensor([276],"float32"),Tensor([276],"float32"),], -1, )
paddle.stack(list[Tensor([276],"float32"),Tensor([276],"float32"),], axis=-1, )
paddle.stack(list[Tensor([277],"float32"),Tensor([277],"float32"),Tensor([277],"float32"),Tensor([277],"float32"),], -1, )
paddle.stack(list[Tensor([277],"float32"),Tensor([277],"float32"),], axis=-1, )
paddle.stack(list[Tensor([278],"float32"),Tensor([278],"float32"),Tensor([278],"float32"),Tensor([278],"float32"),], -1, )
paddle.stack(list[Tensor([279],"float32"),Tensor([279],"float32"),Tensor([279],"float32"),Tensor([279],"float32"),], -1, )
paddle.stack(list[Tensor([279],"float32"),Tensor([279],"float32"),], axis=-1, )
paddle.stack(list[Tensor([27],"float32"),Tensor([27],"float32"),Tensor([27],"float32"),Tensor([27],"float32"),], -1, )
paddle.stack(list[Tensor([27],"float32"),Tensor([27],"float32"),], axis=-1, )
paddle.stack(list[Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),], axis=-3, )
paddle.stack(list[Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),], axis=-1, )
paddle.stack(list[Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),], axis=-3, )
paddle.stack(list[Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),], axis=-1, )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([280, 376, 25],"float32"),Tensor([280, 376, 25],"float32"),Tensor([280, 376, 25],"float32"),], axis=-1, )
paddle.stack(list[Tensor([280],"float32"),Tensor([280],"float32"),Tensor([280],"float32"),Tensor([280],"float32"),], -1, )
paddle.stack(list[Tensor([280],"float32"),Tensor([280],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2816],"float32"),Tensor([2816],"float32"),], axis=-1, )
paddle.stack(list[Tensor([281],"float32"),Tensor([281],"float32"),Tensor([281],"float32"),Tensor([281],"float32"),], -1, )
paddle.stack(list[Tensor([282240],"float32"),Tensor([282240],"float32"),Tensor([282240],"float32"),Tensor([282240],"float32"),], -1, )
paddle.stack(list[Tensor([282],"float32"),Tensor([282],"float32"),Tensor([282],"float32"),Tensor([282],"float32"),], -1, )
paddle.stack(list[Tensor([282],"float32"),Tensor([282],"float32"),], axis=-1, )
paddle.stack(list[Tensor([283],"float32"),Tensor([283],"float32"),Tensor([283],"float32"),Tensor([283],"float32"),], -1, )
paddle.stack(list[Tensor([283],"float32"),Tensor([283],"float32"),], axis=-1, )
paddle.stack(list[Tensor([284],"float32"),Tensor([284],"float32"),Tensor([284],"float32"),Tensor([284],"float32"),], -1, )
paddle.stack(list[Tensor([284],"float32"),Tensor([284],"float32"),], axis=-1, )
paddle.stack(list[Tensor([285],"float32"),Tensor([285],"float32"),Tensor([285],"float32"),Tensor([285],"float32"),], -1, )
paddle.stack(list[Tensor([285],"float32"),Tensor([285],"float32"),], axis=-1, )
paddle.stack(list[Tensor([286],"float32"),Tensor([286],"float32"),Tensor([286],"float32"),Tensor([286],"float32"),], -1, )
paddle.stack(list[Tensor([286],"float32"),Tensor([286],"float32"),], axis=-1, )
paddle.stack(list[Tensor([287],"float32"),Tensor([287],"float32"),Tensor([287],"float32"),Tensor([287],"float32"),], -1, )
paddle.stack(list[Tensor([287],"float32"),Tensor([287],"float32"),], axis=-1, )
paddle.stack(list[Tensor([28800],"float32"),Tensor([28800],"float32"),Tensor([28800],"float32"),Tensor([28800],"float32"),], -1, )
paddle.stack(list[Tensor([2888],"float32"),Tensor([2888],"float32"),Tensor([2888],"float32"),Tensor([2888],"float32"),], -1, )
paddle.stack(list[Tensor([288],"float32"),Tensor([288],"float32"),Tensor([288],"float32"),Tensor([288],"float32"),], -1, )
paddle.stack(list[Tensor([288],"float32"),Tensor([288],"float32"),], axis=-1, )
paddle.stack(list[Tensor([289],"float32"),Tensor([289],"float32"),Tensor([289],"float32"),Tensor([289],"float32"),], -1, )
paddle.stack(list[Tensor([289],"float32"),Tensor([289],"float32"),], axis=-1, )
paddle.stack(list[Tensor([28],"float32"),Tensor([28],"float32"),Tensor([28],"float32"),Tensor([28],"float32"),], -1, )
paddle.stack(list[Tensor([28],"float32"),Tensor([28],"float32"),], axis=-1, )
paddle.stack(list[Tensor([290],"float32"),Tensor([290],"float32"),Tensor([290],"float32"),Tensor([290],"float32"),], -1, )
paddle.stack(list[Tensor([290],"float32"),Tensor([290],"float32"),], axis=-1, )
paddle.stack(list[Tensor([291],"float32"),Tensor([291],"float32"),Tensor([291],"float32"),Tensor([291],"float32"),], -1, )
paddle.stack(list[Tensor([292],"float32"),Tensor([292],"float32"),Tensor([292],"float32"),Tensor([292],"float32"),], -1, )
paddle.stack(list[Tensor([292],"float32"),Tensor([292],"float32"),], axis=-1, )
paddle.stack(list[Tensor([293],"float32"),Tensor([293],"float32"),Tensor([293],"float32"),Tensor([293],"float32"),], -1, )
paddle.stack(list[Tensor([293],"float32"),Tensor([293],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2944],"float32"),Tensor([2944],"float32"),], axis=-1, )
paddle.stack(list[Tensor([294],"float32"),Tensor([294],"float32"),Tensor([294],"float32"),Tensor([294],"float32"),], -1, )
paddle.stack(list[Tensor([294],"float32"),Tensor([294],"float32"),], axis=-1, )
paddle.stack(list[Tensor([295],"float32"),Tensor([295],"float32"),Tensor([295],"float32"),Tensor([295],"float32"),], -1, )
paddle.stack(list[Tensor([295],"float32"),Tensor([295],"float32"),], axis=-1, )
paddle.stack(list[Tensor([296],"float32"),Tensor([296],"float32"),Tensor([296],"float32"),Tensor([296],"float32"),], -1, )
paddle.stack(list[Tensor([296],"float32"),Tensor([296],"float32"),], axis=-1, )
paddle.stack(list[Tensor([297],"float32"),Tensor([297],"float32"),Tensor([297],"float32"),Tensor([297],"float32"),], -1, )
paddle.stack(list[Tensor([297],"float32"),Tensor([297],"float32"),], axis=-1, )
paddle.stack(list[Tensor([298],"float32"),Tensor([298],"float32"),Tensor([298],"float32"),Tensor([298],"float32"),], -1, )
paddle.stack(list[Tensor([299],"float32"),Tensor([299],"float32"),Tensor([299],"float32"),Tensor([299],"float32"),], -1, )
paddle.stack(list[Tensor([299],"float32"),Tensor([299],"float32"),], axis=-1, )
paddle.stack(list[Tensor([29],"float32"),Tensor([29],"float32"),Tensor([29],"float32"),Tensor([29],"float32"),], -1, )
paddle.stack(list[Tensor([29],"float32"),Tensor([29],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),], )
paddle.stack(list[Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),], -1, )
paddle.stack(list[Tensor([2],"float32"),Tensor([2],"float32"),], -1, )
paddle.stack(list[Tensor([2],"float32"),Tensor([2],"float32"),], 0, )
paddle.stack(list[Tensor([2],"float32"),Tensor([2],"float32"),], axis=-1, )
paddle.stack(list[Tensor([2],"float32"),Tensor([2],"float32"),], axis=0, )
paddle.stack(list[Tensor([2],"float64"),Tensor([2],"float64"),], axis=0, )
paddle.stack(list[Tensor([2],"int32"),Tensor([2],"int32"),], axis=-1, )
paddle.stack(list[Tensor([2],"int32"),Tensor([2],"int32"),], axis=0, )
paddle.stack(list[Tensor([2],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),], )
paddle.stack(list[Tensor([2],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),], )
paddle.stack(list[Tensor([2],"int64"),Tensor([2],"int64"),], axis=-2, )
paddle.stack(list[Tensor([2],"int64"),Tensor([2],"int64"),], axis=0, )
paddle.stack(list[Tensor([2],"int64"),Tensor([2],"int64"),], axis=1, )
paddle.stack(list[Tensor([3, 1, 16],"float32"),Tensor([3, 1, 16],"float32"),Tensor([3, 1, 16],"float32"),Tensor([3, 1, 16],"float32"),Tensor([3, 1, 16],"float32"),Tensor([3, 1, 16],"float32"),Tensor([3, 1, 16],"float32"),Tensor([3, 1, 16],"float32"),Tensor([3, 1, 16],"float32"),Tensor([3, 1, 16],"float32"),Tensor([3, 1, 16],"float32"),Tensor([3, 1, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([3, 5, 3, 0],"float64"),Tensor([3, 5, 3, 0],"float64"),Tensor([3, 5, 3, 0],"float64"),Tensor([3, 5, 3, 0],"float64"),], axis=-1, )
paddle.stack(list[Tensor([3, 5, 3, 0],"int32"),Tensor([3, 5, 3, 0],"int32"),Tensor([3, 5, 3, 0],"int32"),Tensor([3, 5, 3, 0],"int32"),], axis=-1, )
paddle.stack(list[Tensor([3, 5, 3],"float64"),Tensor([3, 5, 3],"float64"),Tensor([3, 5, 3],"float64"),], axis=-1, )
paddle.stack(list[Tensor([3, 5, 3],"int32"),Tensor([3, 5, 3],"int32"),Tensor([3, 5, 3],"int32"),], axis=-1, )
paddle.stack(list[Tensor([3, 5, 5, 0],"complex128"),Tensor([3, 5, 5, 0],"complex128"),Tensor([3, 5, 5, 0],"complex128"),Tensor([3, 5, 5, 0],"complex128"),], axis=-1, )
paddle.stack(list[Tensor([3, 5, 5],"complex128"),Tensor([3, 5, 5],"complex128"),Tensor([3, 5, 5],"complex128"),], axis=-1, )
paddle.stack(list[Tensor([3, 6, 3, 2, 5],"float64"),Tensor([3, 6, 3, 2, 5],"float64"),Tensor([3, 6, 3, 2, 5],"float64"),], 0, )
paddle.stack(list[Tensor([3, 6, 3, 4, 5],"float64"),Tensor([3, 6, 3, 4, 5],"float64"),Tensor([3, 6, 3, 4, 5],"float64"),Tensor([3, 6, 3, 4, 5],"float64"),], 0, )
paddle.stack(list[Tensor([3, 640, 640],"float32"),Tensor([3, 640, 640],"float32"),Tensor([3, 640, 640],"float32"),Tensor([3, 640, 640],"float32"),Tensor([3, 640, 640],"float32"),Tensor([3, 640, 640],"float32"),Tensor([3, 640, 640],"float32"),Tensor([3, 640, 640],"float32"),], axis=0, )
paddle.stack(list[Tensor([3, 8, 8],"float32"),Tensor([3, 8, 8],"float32"),], )
paddle.stack(list[Tensor([30, 30],"float32"),Tensor([30, 30],"float32"),Tensor([30, 30],"float32"),Tensor([30, 30],"float32"),], axis=-1, )
paddle.stack(list[Tensor([30, 30],"float32"),Tensor([30, 30],"float32"),], -1, )
paddle.stack(list[Tensor([30, 30],"float32"),Tensor([30, 30],"float32"),], axis=-1, )
paddle.stack(list[Tensor([3008],"float32"),Tensor([3008],"float32"),], axis=-1, )
paddle.stack(list[Tensor([300],"float32"),Tensor([300],"float32"),Tensor([300],"float32"),Tensor([300],"float32"),], -1, )
paddle.stack(list[Tensor([300],"float32"),Tensor([300],"float32"),], axis=-1, )
paddle.stack(list[Tensor([301],"float32"),Tensor([301],"float32"),Tensor([301],"float32"),Tensor([301],"float32"),], -1, )
paddle.stack(list[Tensor([301],"float32"),Tensor([301],"float32"),], axis=-1, )
paddle.stack(list[Tensor([3024],"float32"),Tensor([3024],"float32"),], axis=-1, )
paddle.stack(list[Tensor([302],"float32"),Tensor([302],"float32"),Tensor([302],"float32"),Tensor([302],"float32"),], -1, )
paddle.stack(list[Tensor([302],"float32"),Tensor([302],"float32"),], axis=-1, )
paddle.stack(list[Tensor([303],"float32"),Tensor([303],"float32"),Tensor([303],"float32"),Tensor([303],"float32"),], -1, )
paddle.stack(list[Tensor([304],"float32"),Tensor([304],"float32"),Tensor([304],"float32"),Tensor([304],"float32"),], -1, )
paddle.stack(list[Tensor([304],"float32"),Tensor([304],"float32"),], axis=-1, )
paddle.stack(list[Tensor([305],"float32"),Tensor([305],"float32"),Tensor([305],"float32"),Tensor([305],"float32"),], -1, )
paddle.stack(list[Tensor([305],"float32"),Tensor([305],"float32"),], axis=-1, )
paddle.stack(list[Tensor([3060, 10],"float32"),Tensor([3060, 10],"float32"),Tensor([3060, 10],"float32"),Tensor([3060, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 11],"float32"),Tensor([3060, 11],"float32"),Tensor([3060, 11],"float32"),Tensor([3060, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 12],"float32"),Tensor([3060, 12],"float32"),Tensor([3060, 12],"float32"),Tensor([3060, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 13],"float32"),Tensor([3060, 13],"float32"),Tensor([3060, 13],"float32"),Tensor([3060, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 14],"float32"),Tensor([3060, 14],"float32"),Tensor([3060, 14],"float32"),Tensor([3060, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 15],"float32"),Tensor([3060, 15],"float32"),Tensor([3060, 15],"float32"),Tensor([3060, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 16],"float32"),Tensor([3060, 16],"float32"),Tensor([3060, 16],"float32"),Tensor([3060, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 17],"float32"),Tensor([3060, 17],"float32"),Tensor([3060, 17],"float32"),Tensor([3060, 17],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 18],"float32"),Tensor([3060, 18],"float32"),Tensor([3060, 18],"float32"),Tensor([3060, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 19],"float32"),Tensor([3060, 19],"float32"),Tensor([3060, 19],"float32"),Tensor([3060, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 1],"float32"),Tensor([3060, 1],"float32"),Tensor([3060, 1],"float32"),Tensor([3060, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 20],"float32"),Tensor([3060, 20],"float32"),Tensor([3060, 20],"float32"),Tensor([3060, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 21],"float32"),Tensor([3060, 21],"float32"),Tensor([3060, 21],"float32"),Tensor([3060, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 22],"float32"),Tensor([3060, 22],"float32"),Tensor([3060, 22],"float32"),Tensor([3060, 22],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 23],"float32"),Tensor([3060, 23],"float32"),Tensor([3060, 23],"float32"),Tensor([3060, 23],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 24],"float32"),Tensor([3060, 24],"float32"),Tensor([3060, 24],"float32"),Tensor([3060, 24],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 25],"float32"),Tensor([3060, 25],"float32"),Tensor([3060, 25],"float32"),Tensor([3060, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 26],"float32"),Tensor([3060, 26],"float32"),Tensor([3060, 26],"float32"),Tensor([3060, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 27],"float32"),Tensor([3060, 27],"float32"),Tensor([3060, 27],"float32"),Tensor([3060, 27],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 28],"float32"),Tensor([3060, 28],"float32"),Tensor([3060, 28],"float32"),Tensor([3060, 28],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 29],"float32"),Tensor([3060, 29],"float32"),Tensor([3060, 29],"float32"),Tensor([3060, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 2],"float32"),Tensor([3060, 2],"float32"),Tensor([3060, 2],"float32"),Tensor([3060, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 30],"float32"),Tensor([3060, 30],"float32"),Tensor([3060, 30],"float32"),Tensor([3060, 30],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 31],"float32"),Tensor([3060, 31],"float32"),Tensor([3060, 31],"float32"),Tensor([3060, 31],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 32],"float32"),Tensor([3060, 32],"float32"),Tensor([3060, 32],"float32"),Tensor([3060, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 33],"float32"),Tensor([3060, 33],"float32"),Tensor([3060, 33],"float32"),Tensor([3060, 33],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 34],"float32"),Tensor([3060, 34],"float32"),Tensor([3060, 34],"float32"),Tensor([3060, 34],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 35],"float32"),Tensor([3060, 35],"float32"),Tensor([3060, 35],"float32"),Tensor([3060, 35],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 36],"float32"),Tensor([3060, 36],"float32"),Tensor([3060, 36],"float32"),Tensor([3060, 36],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 37],"float32"),Tensor([3060, 37],"float32"),Tensor([3060, 37],"float32"),Tensor([3060, 37],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 38],"float32"),Tensor([3060, 38],"float32"),Tensor([3060, 38],"float32"),Tensor([3060, 38],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 39],"float32"),Tensor([3060, 39],"float32"),Tensor([3060, 39],"float32"),Tensor([3060, 39],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 3],"float32"),Tensor([3060, 3],"float32"),Tensor([3060, 3],"float32"),Tensor([3060, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 42],"float32"),Tensor([3060, 42],"float32"),Tensor([3060, 42],"float32"),Tensor([3060, 42],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 43],"float32"),Tensor([3060, 43],"float32"),Tensor([3060, 43],"float32"),Tensor([3060, 43],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 45],"float32"),Tensor([3060, 45],"float32"),Tensor([3060, 45],"float32"),Tensor([3060, 45],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 4],"float32"),Tensor([3060, 4],"float32"),Tensor([3060, 4],"float32"),Tensor([3060, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 50],"float32"),Tensor([3060, 50],"float32"),Tensor([3060, 50],"float32"),Tensor([3060, 50],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 51],"float32"),Tensor([3060, 51],"float32"),Tensor([3060, 51],"float32"),Tensor([3060, 51],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 53],"float32"),Tensor([3060, 53],"float32"),Tensor([3060, 53],"float32"),Tensor([3060, 53],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 54],"float32"),Tensor([3060, 54],"float32"),Tensor([3060, 54],"float32"),Tensor([3060, 54],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 5],"float32"),Tensor([3060, 5],"float32"),Tensor([3060, 5],"float32"),Tensor([3060, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 6],"float32"),Tensor([3060, 6],"float32"),Tensor([3060, 6],"float32"),Tensor([3060, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 7],"float32"),Tensor([3060, 7],"float32"),Tensor([3060, 7],"float32"),Tensor([3060, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 8],"float32"),Tensor([3060, 8],"float32"),Tensor([3060, 8],"float32"),Tensor([3060, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060, 9],"float32"),Tensor([3060, 9],"float32"),Tensor([3060, 9],"float32"),Tensor([3060, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([3060],"float32"),Tensor([3060],"float32"),], axis=-1, )
paddle.stack(list[Tensor([306],"float32"),Tensor([306],"float32"),Tensor([306],"float32"),Tensor([306],"float32"),], -1, )
paddle.stack(list[Tensor([306],"float32"),Tensor([306],"float32"),], axis=-1, )
paddle.stack(list[Tensor([3072],"float32"),Tensor([3072],"float32"),Tensor([3072],"float32"),Tensor([3072],"float32"),], -1, )
paddle.stack(list[Tensor([3072],"float32"),Tensor([3072],"float32"),], axis=-1, )
paddle.stack(list[Tensor([307],"float32"),Tensor([307],"float32"),Tensor([307],"float32"),Tensor([307],"float32"),], -1, )
paddle.stack(list[Tensor([307],"float32"),Tensor([307],"float32"),], axis=-1, )
paddle.stack(list[Tensor([308],"float32"),Tensor([308],"float32"),Tensor([308],"float32"),Tensor([308],"float32"),], -1, )
paddle.stack(list[Tensor([308],"float32"),Tensor([308],"float32"),], axis=-1, )
paddle.stack(list[Tensor([30976],"float32"),Tensor([30976],"float32"),Tensor([30976],"float32"),Tensor([30976],"float32"),], -1, )
paddle.stack(list[Tensor([309],"float32"),Tensor([309],"float32"),Tensor([309],"float32"),Tensor([309],"float32"),], -1, )
paddle.stack(list[Tensor([309],"float32"),Tensor([309],"float32"),], axis=-1, )
paddle.stack(list[Tensor([30],"float32"),Tensor([30],"float32"),Tensor([30],"float32"),Tensor([30],"float32"),], -1, )
paddle.stack(list[Tensor([30],"float32"),Tensor([30],"float32"),], axis=-1, )
paddle.stack(list[Tensor([310],"float32"),Tensor([310],"float32"),Tensor([310],"float32"),Tensor([310],"float32"),], -1, )
paddle.stack(list[Tensor([310],"float32"),Tensor([310],"float32"),], axis=-1, )
paddle.stack(list[Tensor([311],"float32"),Tensor([311],"float32"),Tensor([311],"float32"),Tensor([311],"float32"),], -1, )
paddle.stack(list[Tensor([3120],"float32"),Tensor([3120],"float32"),Tensor([3120],"float32"),Tensor([3120],"float32"),], -1, )
paddle.stack(list[Tensor([312],"float32"),Tensor([312],"float32"),Tensor([312],"float32"),Tensor([312],"float32"),], -1, )
paddle.stack(list[Tensor([312],"float32"),Tensor([312],"float32"),], axis=-1, )
paddle.stack(list[Tensor([3136],"float32"),Tensor([3136],"float32"),Tensor([3136],"float32"),Tensor([3136],"float32"),], -1, )
paddle.stack(list[Tensor([3136],"float32"),Tensor([3136],"float32"),], axis=-1, )
paddle.stack(list[Tensor([313],"float32"),Tensor([313],"float32"),Tensor([313],"float32"),Tensor([313],"float32"),], -1, )
paddle.stack(list[Tensor([313],"float32"),Tensor([313],"float32"),], axis=-1, )
paddle.stack(list[Tensor([314],"float32"),Tensor([314],"float32"),Tensor([314],"float32"),Tensor([314],"float32"),], -1, )
paddle.stack(list[Tensor([314],"float32"),Tensor([314],"float32"),], axis=-1, )
paddle.stack(list[Tensor([315],"float32"),Tensor([315],"float32"),Tensor([315],"float32"),Tensor([315],"float32"),], -1, )
paddle.stack(list[Tensor([315],"float32"),Tensor([315],"float32"),], axis=-1, )
paddle.stack(list[Tensor([316],"float32"),Tensor([316],"float32"),Tensor([316],"float32"),Tensor([316],"float32"),], -1, )
paddle.stack(list[Tensor([316],"float32"),Tensor([316],"float32"),], axis=-1, )
paddle.stack(list[Tensor([317],"float32"),Tensor([317],"float32"),Tensor([317],"float32"),Tensor([317],"float32"),], -1, )
paddle.stack(list[Tensor([317],"float32"),Tensor([317],"float32"),], axis=-1, )
paddle.stack(list[Tensor([318],"float32"),Tensor([318],"float32"),Tensor([318],"float32"),Tensor([318],"float32"),], -1, )
paddle.stack(list[Tensor([319],"float32"),Tensor([319],"float32"),Tensor([319],"float32"),Tensor([319],"float32"),], -1, )
paddle.stack(list[Tensor([319],"float32"),Tensor([319],"float32"),], axis=-1, )
paddle.stack(list[Tensor([31],"float32"),Tensor([31],"float32"),Tensor([31],"float32"),Tensor([31],"float32"),], -1, )
paddle.stack(list[Tensor([31],"float32"),Tensor([31],"float32"),], axis=-1, )
paddle.stack(list[Tensor([32, 32, 300, 4],"float32"),Tensor([32, 32, 300, 4],"float32"),Tensor([32, 32, 300, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([32, 32, 500, 4],"float32"),Tensor([32, 32, 500, 4],"float32"),Tensor([32, 32, 500, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([32, 32],"float32"),Tensor([32, 32],"float32"),Tensor([32, 32],"float32"),Tensor([32, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([32, 32],"float32"),Tensor([32, 32],"float32"),], -1, )
paddle.stack(list[Tensor([32, 32],"float32"),Tensor([32, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([3200],"float32"),Tensor([3200],"float32"),Tensor([3200],"float32"),Tensor([3200],"float32"),], -1, )
paddle.stack(list[Tensor([3200],"float32"),Tensor([3200],"float32"),], axis=-1, )
paddle.stack(list[Tensor([320],"float32"),Tensor([320],"float32"),Tensor([320],"float32"),Tensor([320],"float32"),], -1, )
paddle.stack(list[Tensor([320],"float32"),Tensor([320],"float32"),], axis=-1, )
paddle.stack(list[Tensor([321],"float32"),Tensor([321],"float32"),Tensor([321],"float32"),Tensor([321],"float32"),], -1, )
paddle.stack(list[Tensor([322],"float32"),Tensor([322],"float32"),Tensor([322],"float32"),Tensor([322],"float32"),], -1, )
paddle.stack(list[Tensor([322],"float32"),Tensor([322],"float32"),], axis=-1, )
paddle.stack(list[Tensor([323],"float32"),Tensor([323],"float32"),Tensor([323],"float32"),Tensor([323],"float32"),], -1, )
paddle.stack(list[Tensor([323],"float32"),Tensor([323],"float32"),], axis=-1, )
paddle.stack(list[Tensor([324000],"float32"),Tensor([324000],"float32"),Tensor([324000],"float32"),Tensor([324000],"float32"),], -1, )
paddle.stack(list[Tensor([3240],"float32"),Tensor([3240],"float32"),Tensor([3240],"float32"),Tensor([3240],"float32"),], -1, )
paddle.stack(list[Tensor([32448],"float32"),Tensor([32448],"float32"),Tensor([32448],"float32"),Tensor([32448],"float32"),], -1, )
paddle.stack(list[Tensor([324],"float32"),Tensor([324],"float32"),Tensor([324],"float32"),Tensor([324],"float32"),], -1, )
paddle.stack(list[Tensor([324],"float32"),Tensor([324],"float32"),], axis=-1, )
paddle.stack(list[Tensor([325],"float32"),Tensor([325],"float32"),Tensor([325],"float32"),Tensor([325],"float32"),], -1, )
paddle.stack(list[Tensor([325],"float32"),Tensor([325],"float32"),], axis=-1, )
paddle.stack(list[Tensor([3264],"float32"),Tensor([3264],"float32"),], axis=-1, )
paddle.stack(list[Tensor([326],"float32"),Tensor([326],"float32"),Tensor([326],"float32"),Tensor([326],"float32"),], -1, )
paddle.stack(list[Tensor([326],"float32"),Tensor([326],"float32"),], axis=-1, )
paddle.stack(list[Tensor([32768, 32],"float32"),Tensor([32768, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([327],"float32"),Tensor([327],"float32"),Tensor([327],"float32"),Tensor([327],"float32"),], -1, )
paddle.stack(list[Tensor([328],"float32"),Tensor([328],"float32"),Tensor([328],"float32"),Tensor([328],"float32"),], -1, )
paddle.stack(list[Tensor([328],"float32"),Tensor([328],"float32"),], axis=-1, )
paddle.stack(list[Tensor([329],"float32"),Tensor([329],"float32"),Tensor([329],"float32"),Tensor([329],"float32"),], -1, )
paddle.stack(list[Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),Tensor([32],"float32"),], -1, )
paddle.stack(list[Tensor([32],"float32"),Tensor([32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([32],"int64"),Tensor([32],"int64"),], axis=-1, )
paddle.stack(list[Tensor([330],"float32"),Tensor([330],"float32"),Tensor([330],"float32"),Tensor([330],"float32"),], -1, )
paddle.stack(list[Tensor([331],"float32"),Tensor([331],"float32"),Tensor([331],"float32"),Tensor([331],"float32"),], -1, )
paddle.stack(list[Tensor([3328],"float32"),Tensor([3328],"float32"),], axis=-1, )
paddle.stack(list[Tensor([332],"float32"),Tensor([332],"float32"),Tensor([332],"float32"),Tensor([332],"float32"),], -1, )
paddle.stack(list[Tensor([332],"float32"),Tensor([332],"float32"),], axis=-1, )
paddle.stack(list[Tensor([333],"float32"),Tensor([333],"float32"),Tensor([333],"float32"),Tensor([333],"float32"),], -1, )
paddle.stack(list[Tensor([333],"float32"),Tensor([333],"float32"),], axis=-1, )
paddle.stack(list[Tensor([334],"float32"),Tensor([334],"float32"),Tensor([334],"float32"),Tensor([334],"float32"),], -1, )
paddle.stack(list[Tensor([335],"float32"),Tensor([335],"float32"),Tensor([335],"float32"),Tensor([335],"float32"),], -1, )
paddle.stack(list[Tensor([336],"float32"),Tensor([336],"float32"),Tensor([336],"float32"),Tensor([336],"float32"),], -1, )
paddle.stack(list[Tensor([336],"float32"),Tensor([336],"float32"),], axis=-1, )
paddle.stack(list[Tensor([337],"float32"),Tensor([337],"float32"),Tensor([337],"float32"),Tensor([337],"float32"),], -1, )
paddle.stack(list[Tensor([337],"float32"),Tensor([337],"float32"),], axis=-1, )
paddle.stack(list[Tensor([338],"float32"),Tensor([338],"float32"),Tensor([338],"float32"),Tensor([338],"float32"),], -1, )
paddle.stack(list[Tensor([3392],"float32"),Tensor([3392],"float32"),], axis=-1, )
paddle.stack(list[Tensor([339],"float32"),Tensor([339],"float32"),Tensor([339],"float32"),Tensor([339],"float32"),], -1, )
paddle.stack(list[Tensor([339],"float32"),Tensor([339],"float32"),], axis=-1, )
paddle.stack(list[Tensor([33],"float32"),Tensor([33],"float32"),Tensor([33],"float32"),Tensor([33],"float32"),], -1, )
paddle.stack(list[Tensor([33],"float32"),Tensor([33],"float32"),], axis=-1, )
paddle.stack(list[Tensor([34, 34],"float32"),Tensor([34, 34],"float32"),Tensor([34, 34],"float32"),Tensor([34, 34],"float32"),], axis=-1, )
paddle.stack(list[Tensor([34, 34],"float32"),Tensor([34, 34],"float32"),], -1, )
paddle.stack(list[Tensor([34, 34],"float32"),Tensor([34, 34],"float32"),], axis=-1, )
paddle.stack(list[Tensor([34000, 10],"float32"),Tensor([34000, 10],"float32"),Tensor([34000, 10],"float32"),Tensor([34000, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 11],"float32"),Tensor([34000, 11],"float32"),Tensor([34000, 11],"float32"),Tensor([34000, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 126],"float32"),Tensor([34000, 126],"float32"),Tensor([34000, 126],"float32"),Tensor([34000, 126],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 12],"float32"),Tensor([34000, 12],"float32"),Tensor([34000, 12],"float32"),Tensor([34000, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 13],"float32"),Tensor([34000, 13],"float32"),Tensor([34000, 13],"float32"),Tensor([34000, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 14],"float32"),Tensor([34000, 14],"float32"),Tensor([34000, 14],"float32"),Tensor([34000, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 15],"float32"),Tensor([34000, 15],"float32"),Tensor([34000, 15],"float32"),Tensor([34000, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 17],"float32"),Tensor([34000, 17],"float32"),Tensor([34000, 17],"float32"),Tensor([34000, 17],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 18],"float32"),Tensor([34000, 18],"float32"),Tensor([34000, 18],"float32"),Tensor([34000, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 19],"float32"),Tensor([34000, 19],"float32"),Tensor([34000, 19],"float32"),Tensor([34000, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 1],"float32"),Tensor([34000, 1],"float32"),Tensor([34000, 1],"float32"),Tensor([34000, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 215],"float32"),Tensor([34000, 215],"float32"),Tensor([34000, 215],"float32"),Tensor([34000, 215],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 21],"float32"),Tensor([34000, 21],"float32"),Tensor([34000, 21],"float32"),Tensor([34000, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 22],"float32"),Tensor([34000, 22],"float32"),Tensor([34000, 22],"float32"),Tensor([34000, 22],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 24],"float32"),Tensor([34000, 24],"float32"),Tensor([34000, 24],"float32"),Tensor([34000, 24],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 25],"float32"),Tensor([34000, 25],"float32"),Tensor([34000, 25],"float32"),Tensor([34000, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 26],"float32"),Tensor([34000, 26],"float32"),Tensor([34000, 26],"float32"),Tensor([34000, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 2],"float32"),Tensor([34000, 2],"float32"),Tensor([34000, 2],"float32"),Tensor([34000, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 31],"float32"),Tensor([34000, 31],"float32"),Tensor([34000, 31],"float32"),Tensor([34000, 31],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 35],"float32"),Tensor([34000, 35],"float32"),Tensor([34000, 35],"float32"),Tensor([34000, 35],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 36],"float32"),Tensor([34000, 36],"float32"),Tensor([34000, 36],"float32"),Tensor([34000, 36],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 3],"float32"),Tensor([34000, 3],"float32"),Tensor([34000, 3],"float32"),Tensor([34000, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 42],"float32"),Tensor([34000, 42],"float32"),Tensor([34000, 42],"float32"),Tensor([34000, 42],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 4],"float32"),Tensor([34000, 4],"float32"),Tensor([34000, 4],"float32"),Tensor([34000, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 52],"float32"),Tensor([34000, 52],"float32"),Tensor([34000, 52],"float32"),Tensor([34000, 52],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 55],"float32"),Tensor([34000, 55],"float32"),Tensor([34000, 55],"float32"),Tensor([34000, 55],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 5],"float32"),Tensor([34000, 5],"float32"),Tensor([34000, 5],"float32"),Tensor([34000, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 6],"float32"),Tensor([34000, 6],"float32"),Tensor([34000, 6],"float32"),Tensor([34000, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 7],"float32"),Tensor([34000, 7],"float32"),Tensor([34000, 7],"float32"),Tensor([34000, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 8],"float32"),Tensor([34000, 8],"float32"),Tensor([34000, 8],"float32"),Tensor([34000, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([34000, 97],"float32"),Tensor([34000, 97],"float32"),Tensor([34000, 97],"float32"),Tensor([34000, 97],"float32"),], axis=1, )
paddle.stack(list[Tensor([340],"float32"),Tensor([340],"float32"),Tensor([340],"float32"),Tensor([340],"float32"),], -1, )
paddle.stack(list[Tensor([341],"float32"),Tensor([341],"float32"),Tensor([341],"float32"),Tensor([341],"float32"),], -1, )
paddle.stack(list[Tensor([342],"float32"),Tensor([342],"float32"),Tensor([342],"float32"),Tensor([342],"float32"),], -1, )
paddle.stack(list[Tensor([342],"float32"),Tensor([342],"float32"),], axis=-1, )
paddle.stack(list[Tensor([343],"float32"),Tensor([343],"float32"),Tensor([343],"float32"),Tensor([343],"float32"),], -1, )
paddle.stack(list[Tensor([343],"float32"),Tensor([343],"float32"),], axis=-1, )
paddle.stack(list[Tensor([344],"float32"),Tensor([344],"float32"),Tensor([344],"float32"),Tensor([344],"float32"),], -1, )
paddle.stack(list[Tensor([344],"float32"),Tensor([344],"float32"),], axis=-1, )
paddle.stack(list[Tensor([3456],"float32"),Tensor([3456],"float32"),], axis=-1, )
paddle.stack(list[Tensor([345],"float32"),Tensor([345],"float32"),Tensor([345],"float32"),Tensor([345],"float32"),], -1, )
paddle.stack(list[Tensor([345],"float32"),Tensor([345],"float32"),], axis=-1, )
paddle.stack(list[Tensor([346],"float32"),Tensor([346],"float32"),Tensor([346],"float32"),Tensor([346],"float32"),], -1, )
paddle.stack(list[Tensor([346],"float32"),Tensor([346],"float32"),], axis=-1, )
paddle.stack(list[Tensor([347],"float32"),Tensor([347],"float32"),Tensor([347],"float32"),Tensor([347],"float32"),], -1, )
paddle.stack(list[Tensor([347],"float32"),Tensor([347],"float32"),], axis=-1, )
paddle.stack(list[Tensor([348],"float32"),Tensor([348],"float32"),Tensor([348],"float32"),Tensor([348],"float32"),], -1, )
paddle.stack(list[Tensor([349],"float32"),Tensor([349],"float32"),Tensor([349],"float32"),Tensor([349],"float32"),], -1, )
paddle.stack(list[Tensor([34],"float32"),Tensor([34],"float32"),Tensor([34],"float32"),Tensor([34],"float32"),], -1, )
paddle.stack(list[Tensor([34],"float32"),Tensor([34],"float32"),], axis=-1, )
paddle.stack(list[Tensor([35, 2, 1, 32],"float16"),Tensor([35, 2, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([350],"float32"),Tensor([350],"float32"),Tensor([350],"float32"),Tensor([350],"float32"),], -1, )
paddle.stack(list[Tensor([351],"float32"),Tensor([351],"float32"),Tensor([351],"float32"),Tensor([351],"float32"),], -1, )
paddle.stack(list[Tensor([351],"float32"),Tensor([351],"float32"),], axis=-1, )
paddle.stack(list[Tensor([3528],"float32"),Tensor([3528],"float32"),Tensor([3528],"float32"),Tensor([3528],"float32"),], -1, )
paddle.stack(list[Tensor([352],"float32"),Tensor([352],"float32"),Tensor([352],"float32"),Tensor([352],"float32"),], -1, )
paddle.stack(list[Tensor([352],"float32"),Tensor([352],"float32"),], axis=-1, )
paddle.stack(list[Tensor([353],"float32"),Tensor([353],"float32"),Tensor([353],"float32"),Tensor([353],"float32"),], -1, )
paddle.stack(list[Tensor([3549],"float32"),Tensor([3549],"float32"),], axis=-1, )
paddle.stack(list[Tensor([354],"float32"),Tensor([354],"float32"),Tensor([354],"float32"),Tensor([354],"float32"),], -1, )
paddle.stack(list[Tensor([355],"float32"),Tensor([355],"float32"),Tensor([355],"float32"),Tensor([355],"float32"),], -1, )
paddle.stack(list[Tensor([355],"float32"),Tensor([355],"float32"),], axis=-1, )
paddle.stack(list[Tensor([356],"float32"),Tensor([356],"float32"),Tensor([356],"float32"),Tensor([356],"float32"),], -1, )
paddle.stack(list[Tensor([356],"float32"),Tensor([356],"float32"),], axis=-1, )
paddle.stack(list[Tensor([357],"float32"),Tensor([357],"float32"),Tensor([357],"float32"),Tensor([357],"float32"),], -1, )
paddle.stack(list[Tensor([357],"float32"),Tensor([357],"float32"),], axis=-1, )
paddle.stack(list[Tensor([358],"float32"),Tensor([358],"float32"),Tensor([358],"float32"),Tensor([358],"float32"),], -1, )
paddle.stack(list[Tensor([3598, 10],"float32"),Tensor([3598, 10],"float32"),Tensor([3598, 10],"float32"),Tensor([3598, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 11],"float32"),Tensor([3598, 11],"float32"),Tensor([3598, 11],"float32"),Tensor([3598, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 12],"float32"),Tensor([3598, 12],"float32"),Tensor([3598, 12],"float32"),Tensor([3598, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 13],"float32"),Tensor([3598, 13],"float32"),Tensor([3598, 13],"float32"),Tensor([3598, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 14],"float32"),Tensor([3598, 14],"float32"),Tensor([3598, 14],"float32"),Tensor([3598, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 15],"float32"),Tensor([3598, 15],"float32"),Tensor([3598, 15],"float32"),Tensor([3598, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 16],"float32"),Tensor([3598, 16],"float32"),Tensor([3598, 16],"float32"),Tensor([3598, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 17],"float32"),Tensor([3598, 17],"float32"),Tensor([3598, 17],"float32"),Tensor([3598, 17],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 18],"float32"),Tensor([3598, 18],"float32"),Tensor([3598, 18],"float32"),Tensor([3598, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 19],"float32"),Tensor([3598, 19],"float32"),Tensor([3598, 19],"float32"),Tensor([3598, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 1],"float32"),Tensor([3598, 1],"float32"),Tensor([3598, 1],"float32"),Tensor([3598, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 20],"float32"),Tensor([3598, 20],"float32"),Tensor([3598, 20],"float32"),Tensor([3598, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 21],"float32"),Tensor([3598, 21],"float32"),Tensor([3598, 21],"float32"),Tensor([3598, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 22],"float32"),Tensor([3598, 22],"float32"),Tensor([3598, 22],"float32"),Tensor([3598, 22],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 23],"float32"),Tensor([3598, 23],"float32"),Tensor([3598, 23],"float32"),Tensor([3598, 23],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 24],"float32"),Tensor([3598, 24],"float32"),Tensor([3598, 24],"float32"),Tensor([3598, 24],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 25],"float32"),Tensor([3598, 25],"float32"),Tensor([3598, 25],"float32"),Tensor([3598, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 26],"float32"),Tensor([3598, 26],"float32"),Tensor([3598, 26],"float32"),Tensor([3598, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 27],"float32"),Tensor([3598, 27],"float32"),Tensor([3598, 27],"float32"),Tensor([3598, 27],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 28],"float32"),Tensor([3598, 28],"float32"),Tensor([3598, 28],"float32"),Tensor([3598, 28],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 29],"float32"),Tensor([3598, 29],"float32"),Tensor([3598, 29],"float32"),Tensor([3598, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 2],"float32"),Tensor([3598, 2],"float32"),Tensor([3598, 2],"float32"),Tensor([3598, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 30],"float32"),Tensor([3598, 30],"float32"),Tensor([3598, 30],"float32"),Tensor([3598, 30],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 31],"float32"),Tensor([3598, 31],"float32"),Tensor([3598, 31],"float32"),Tensor([3598, 31],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 32],"float32"),Tensor([3598, 32],"float32"),Tensor([3598, 32],"float32"),Tensor([3598, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 33],"float32"),Tensor([3598, 33],"float32"),Tensor([3598, 33],"float32"),Tensor([3598, 33],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 34],"float32"),Tensor([3598, 34],"float32"),Tensor([3598, 34],"float32"),Tensor([3598, 34],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 35],"float32"),Tensor([3598, 35],"float32"),Tensor([3598, 35],"float32"),Tensor([3598, 35],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 36],"float32"),Tensor([3598, 36],"float32"),Tensor([3598, 36],"float32"),Tensor([3598, 36],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 37],"float32"),Tensor([3598, 37],"float32"),Tensor([3598, 37],"float32"),Tensor([3598, 37],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 39],"float32"),Tensor([3598, 39],"float32"),Tensor([3598, 39],"float32"),Tensor([3598, 39],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 3],"float32"),Tensor([3598, 3],"float32"),Tensor([3598, 3],"float32"),Tensor([3598, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 40],"float32"),Tensor([3598, 40],"float32"),Tensor([3598, 40],"float32"),Tensor([3598, 40],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 41],"float32"),Tensor([3598, 41],"float32"),Tensor([3598, 41],"float32"),Tensor([3598, 41],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 42],"float32"),Tensor([3598, 42],"float32"),Tensor([3598, 42],"float32"),Tensor([3598, 42],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 43],"float32"),Tensor([3598, 43],"float32"),Tensor([3598, 43],"float32"),Tensor([3598, 43],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 47],"float32"),Tensor([3598, 47],"float32"),Tensor([3598, 47],"float32"),Tensor([3598, 47],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 49],"float32"),Tensor([3598, 49],"float32"),Tensor([3598, 49],"float32"),Tensor([3598, 49],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 4],"float32"),Tensor([3598, 4],"float32"),Tensor([3598, 4],"float32"),Tensor([3598, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 50],"float32"),Tensor([3598, 50],"float32"),Tensor([3598, 50],"float32"),Tensor([3598, 50],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 53],"float32"),Tensor([3598, 53],"float32"),Tensor([3598, 53],"float32"),Tensor([3598, 53],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 54],"float32"),Tensor([3598, 54],"float32"),Tensor([3598, 54],"float32"),Tensor([3598, 54],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 5],"float32"),Tensor([3598, 5],"float32"),Tensor([3598, 5],"float32"),Tensor([3598, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 6],"float32"),Tensor([3598, 6],"float32"),Tensor([3598, 6],"float32"),Tensor([3598, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 77],"float32"),Tensor([3598, 77],"float32"),Tensor([3598, 77],"float32"),Tensor([3598, 77],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 7],"float32"),Tensor([3598, 7],"float32"),Tensor([3598, 7],"float32"),Tensor([3598, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 8],"float32"),Tensor([3598, 8],"float32"),Tensor([3598, 8],"float32"),Tensor([3598, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598, 9],"float32"),Tensor([3598, 9],"float32"),Tensor([3598, 9],"float32"),Tensor([3598, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([3598],"float32"),Tensor([3598],"float32"),], axis=-1, )
paddle.stack(list[Tensor([359],"float32"),Tensor([359],"float32"),Tensor([359],"float32"),Tensor([359],"float32"),], -1, )
paddle.stack(list[Tensor([359],"float32"),Tensor([359],"float32"),], axis=-1, )
paddle.stack(list[Tensor([35],"float32"),Tensor([35],"float32"),Tensor([35],"float32"),Tensor([35],"float32"),], -1, )
paddle.stack(list[Tensor([35],"float32"),Tensor([35],"float32"),], axis=-1, )
paddle.stack(list[Tensor([36, 36],"float32"),Tensor([36, 36],"float32"),Tensor([36, 36],"float32"),Tensor([36, 36],"float32"),], axis=-1, )
paddle.stack(list[Tensor([36, 36],"float32"),Tensor([36, 36],"float32"),], -1, )
paddle.stack(list[Tensor([36, 36],"float32"),Tensor([36, 36],"float32"),], axis=-1, )
paddle.stack(list[Tensor([3600],"float32"),Tensor([3600],"float32"),Tensor([3600],"float32"),Tensor([3600],"float32"),], -1, )
paddle.stack(list[Tensor([3600],"float32"),Tensor([3600],"float32"),], axis=-1, )
paddle.stack(list[Tensor([360],"float32"),Tensor([360],"float32"),Tensor([360],"float32"),Tensor([360],"float32"),], -1, )
paddle.stack(list[Tensor([360],"float32"),Tensor([360],"float32"),], axis=-1, )
paddle.stack(list[Tensor([361],"float32"),Tensor([361],"float32"),Tensor([361],"float32"),Tensor([361],"float32"),], -1, )
paddle.stack(list[Tensor([361],"float32"),Tensor([361],"float32"),], axis=-1, )
paddle.stack(list[Tensor([362],"float32"),Tensor([362],"float32"),Tensor([362],"float32"),Tensor([362],"float32"),], -1, )
paddle.stack(list[Tensor([362],"float32"),Tensor([362],"float32"),], axis=-1, )
paddle.stack(list[Tensor([363],"float32"),Tensor([363],"float32"),Tensor([363],"float32"),Tensor([363],"float32"),], -1, )
paddle.stack(list[Tensor([363],"float32"),Tensor([363],"float32"),], axis=-1, )
paddle.stack(list[Tensor([364],"float32"),Tensor([364],"float32"),Tensor([364],"float32"),Tensor([364],"float32"),], -1, )
paddle.stack(list[Tensor([365],"float32"),Tensor([365],"float32"),Tensor([365],"float32"),Tensor([365],"float32"),], -1, )
paddle.stack(list[Tensor([365],"float32"),Tensor([365],"float32"),], axis=-1, )
paddle.stack(list[Tensor([366],"float32"),Tensor([366],"float32"),Tensor([366],"float32"),Tensor([366],"float32"),], -1, )
paddle.stack(list[Tensor([367],"float32"),Tensor([367],"float32"),Tensor([367],"float32"),Tensor([367],"float32"),], -1, )
paddle.stack(list[Tensor([36858, 4],"float32"),], 0, )
paddle.stack(list[Tensor([36858],"float32"),Tensor([36858],"float32"),], axis=-1, )
paddle.stack(list[Tensor([36858],"float32"),], 0, )
paddle.stack(list[Tensor([36858],"int32"),], 0, )
paddle.stack(list[Tensor([36864],"float32"),Tensor([36864],"float32"),Tensor([36864],"float32"),Tensor([36864],"float32"),], -1, )
paddle.stack(list[Tensor([368],"float32"),Tensor([368],"float32"),Tensor([368],"float32"),Tensor([368],"float32"),], -1, )
paddle.stack(list[Tensor([368],"float32"),Tensor([368],"float32"),], axis=-1, )
paddle.stack(list[Tensor([369],"float32"),Tensor([369],"float32"),Tensor([369],"float32"),Tensor([369],"float32"),], -1, )
paddle.stack(list[Tensor([369],"float32"),Tensor([369],"float32"),], axis=-1, )
paddle.stack(list[Tensor([36],"float32"),Tensor([36],"float32"),Tensor([36],"float32"),Tensor([36],"float32"),], -1, )
paddle.stack(list[Tensor([36],"float32"),Tensor([36],"float32"),], axis=-1, )
paddle.stack(list[Tensor([370],"float32"),Tensor([370],"float32"),Tensor([370],"float32"),Tensor([370],"float32"),], -1, )
paddle.stack(list[Tensor([3715],"float32"),Tensor([3715],"float32"),Tensor([3715],"float32"),Tensor([3715],"float32"),], -1, )
paddle.stack(list[Tensor([371],"float32"),Tensor([371],"float32"),Tensor([371],"float32"),Tensor([371],"float32"),], -1, )
paddle.stack(list[Tensor([371],"float32"),Tensor([371],"float32"),], axis=-1, )
paddle.stack(list[Tensor([372],"float32"),Tensor([372],"float32"),Tensor([372],"float32"),Tensor([372],"float32"),], -1, )
paddle.stack(list[Tensor([372],"float32"),Tensor([372],"float32"),], axis=-1, )
paddle.stack(list[Tensor([373],"float32"),Tensor([373],"float32"),Tensor([373],"float32"),Tensor([373],"float32"),], -1, )
paddle.stack(list[Tensor([374],"float32"),Tensor([374],"float32"),Tensor([374],"float32"),Tensor([374],"float32"),], -1, )
paddle.stack(list[Tensor([375],"float32"),Tensor([375],"float32"),Tensor([375],"float32"),Tensor([375],"float32"),], -1, )
paddle.stack(list[Tensor([37632],"float32"),Tensor([37632],"float32"),Tensor([37632],"float32"),Tensor([37632],"float32"),], -1, )
paddle.stack(list[Tensor([376],"float32"),Tensor([376],"float32"),Tensor([376],"float32"),Tensor([376],"float32"),], -1, )
paddle.stack(list[Tensor([376],"float32"),Tensor([376],"float32"),], axis=-1, )
paddle.stack(list[Tensor([377],"float32"),Tensor([377],"float32"),Tensor([377],"float32"),Tensor([377],"float32"),], -1, )
paddle.stack(list[Tensor([378],"float32"),Tensor([378],"float32"),Tensor([378],"float32"),Tensor([378],"float32"),], -1, )
paddle.stack(list[Tensor([378],"float32"),Tensor([378],"float32"),], axis=-1, )
paddle.stack(list[Tensor([379],"float32"),Tensor([379],"float32"),Tensor([379],"float32"),Tensor([379],"float32"),], -1, )
paddle.stack(list[Tensor([379],"float32"),Tensor([379],"float32"),], axis=-1, )
paddle.stack(list[Tensor([37],"float32"),Tensor([37],"float32"),Tensor([37],"float32"),Tensor([37],"float32"),], -1, )
paddle.stack(list[Tensor([37],"float32"),Tensor([37],"float32"),], axis=-1, )
paddle.stack(list[Tensor([38, 2, 2, 32],"float16"),Tensor([38, 2, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([38, 2, 4, 32],"float16"),Tensor([38, 2, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([38, 38],"float32"),Tensor([38, 38],"float32"),Tensor([38, 38],"float32"),Tensor([38, 38],"float32"),], axis=-1, )
paddle.stack(list[Tensor([38, 38],"float32"),Tensor([38, 38],"float32"),], axis=-1, )
paddle.stack(list[Tensor([38, 58],"int64"),Tensor([38, 58],"int64"),], -1, )
paddle.stack(list[Tensor([380],"float32"),Tensor([380],"float32"),Tensor([380],"float32"),Tensor([380],"float32"),], -1, )
paddle.stack(list[Tensor([380],"float32"),Tensor([380],"float32"),], axis=-1, )
paddle.stack(list[Tensor([381],"float32"),Tensor([381],"float32"),Tensor([381],"float32"),Tensor([381],"float32"),], -1, )
paddle.stack(list[Tensor([382],"float32"),Tensor([382],"float32"),Tensor([382],"float32"),Tensor([382],"float32"),], -1, )
paddle.stack(list[Tensor([382],"float32"),Tensor([382],"float32"),], axis=-1, )
paddle.stack(list[Tensor([383],"float32"),Tensor([383],"float32"),Tensor([383],"float32"),Tensor([383],"float32"),], -1, )
paddle.stack(list[Tensor([38402, 4],"float32"),], 0, )
paddle.stack(list[Tensor([38402],"float32"),Tensor([38402],"float32"),], axis=-1, )
paddle.stack(list[Tensor([38402],"float32"),], 0, )
paddle.stack(list[Tensor([38402],"int32"),], 0, )
paddle.stack(list[Tensor([384],"float32"),Tensor([384],"float32"),Tensor([384],"float32"),Tensor([384],"float32"),], -1, )
paddle.stack(list[Tensor([384],"float32"),Tensor([384],"float32"),], axis=-1, )
paddle.stack(list[Tensor([385],"float32"),Tensor([385],"float32"),Tensor([385],"float32"),Tensor([385],"float32"),], -1, )
paddle.stack(list[Tensor([385],"int64"),Tensor([385],"int64"),Tensor([385],"int64"),Tensor([385],"int64"),], 1, )
paddle.stack(list[Tensor([386],"float32"),Tensor([386],"float32"),Tensor([386],"float32"),Tensor([386],"float32"),], -1, )
paddle.stack(list[Tensor([3872],"float32"),Tensor([3872],"float32"),Tensor([3872],"float32"),Tensor([3872],"float32"),], -1, )
paddle.stack(list[Tensor([387],"float32"),Tensor([387],"float32"),Tensor([387],"float32"),Tensor([387],"float32"),], -1, )
paddle.stack(list[Tensor([387],"float32"),Tensor([387],"float32"),], axis=-1, )
paddle.stack(list[Tensor([388],"float32"),Tensor([388],"float32"),Tensor([388],"float32"),Tensor([388],"float32"),], -1, )
paddle.stack(list[Tensor([388],"float32"),Tensor([388],"float32"),], axis=-1, )
paddle.stack(list[Tensor([389],"float32"),Tensor([389],"float32"),Tensor([389],"float32"),Tensor([389],"float32"),], -1, )
paddle.stack(list[Tensor([38],"float32"),Tensor([38],"float32"),Tensor([38],"float32"),Tensor([38],"float32"),], -1, )
paddle.stack(list[Tensor([38],"float32"),Tensor([38],"float32"),], axis=-1, )
paddle.stack(list[Tensor([39, 2, 2, 32],"float16"),Tensor([39, 2, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([39, 2, 4, 32],"float16"),Tensor([39, 2, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([390],"float32"),Tensor([390],"float32"),Tensor([390],"float32"),Tensor([390],"float32"),], -1, )
paddle.stack(list[Tensor([391],"float32"),Tensor([391],"float32"),Tensor([391],"float32"),Tensor([391],"float32"),], -1, )
paddle.stack(list[Tensor([391],"float32"),Tensor([391],"float32"),], axis=-1, )
paddle.stack(list[Tensor([392],"float32"),Tensor([392],"float32"),Tensor([392],"float32"),Tensor([392],"float32"),], -1, )
paddle.stack(list[Tensor([392],"float32"),Tensor([392],"float32"),], axis=-1, )
paddle.stack(list[Tensor([393],"float32"),Tensor([393],"float32"),Tensor([393],"float32"),Tensor([393],"float32"),], -1, )
paddle.stack(list[Tensor([393],"float32"),Tensor([393],"float32"),], axis=-1, )
paddle.stack(list[Tensor([394],"float32"),Tensor([394],"float32"),Tensor([394],"float32"),Tensor([394],"float32"),], -1, )
paddle.stack(list[Tensor([394],"float32"),Tensor([394],"float32"),], axis=-1, )
paddle.stack(list[Tensor([395],"float32"),Tensor([395],"float32"),Tensor([395],"float32"),Tensor([395],"float32"),], -1, )
paddle.stack(list[Tensor([395],"float32"),Tensor([395],"float32"),], axis=-1, )
paddle.stack(list[Tensor([396],"float32"),Tensor([396],"float32"),Tensor([396],"float32"),Tensor([396],"float32"),], -1, )
paddle.stack(list[Tensor([396],"float32"),Tensor([396],"float32"),], axis=-1, )
paddle.stack(list[Tensor([397],"float32"),Tensor([397],"float32"),Tensor([397],"float32"),Tensor([397],"float32"),], -1, )
paddle.stack(list[Tensor([398],"float32"),Tensor([398],"float32"),Tensor([398],"float32"),Tensor([398],"float32"),], -1, )
paddle.stack(list[Tensor([399],"float32"),Tensor([399],"float32"),Tensor([399],"float32"),Tensor([399],"float32"),], -1, )
paddle.stack(list[Tensor([399],"float32"),Tensor([399],"float32"),], axis=-1, )
paddle.stack(list[Tensor([39],"float32"),Tensor([39],"float32"),Tensor([39],"float32"),Tensor([39],"float32"),], -1, )
paddle.stack(list[Tensor([39],"float32"),Tensor([39],"float32"),], axis=-1, )
paddle.stack(list[Tensor([3],"float32"),Tensor([3],"float32"),Tensor([3],"float32"),Tensor([3],"float32"),], -1, )
paddle.stack(list[Tensor([3],"float32"),Tensor([3],"float32"),Tensor([3],"float32"),], axis=1, )
paddle.stack(list[Tensor([3],"float32"),Tensor([3],"float32"),], -1, )
paddle.stack(list[Tensor([3],"float32"),Tensor([3],"float32"),], 1, )
paddle.stack(list[Tensor([3],"float32"),Tensor([3],"float32"),], axis=-1, )
paddle.stack(list[Tensor([3],"float64"),Tensor([3],"float64"),], 0, )
paddle.stack(list[Tensor([3],"float64"),Tensor([3],"float64"),], 1, )
paddle.stack(list[Tensor([3],"float64"),], 0, )
paddle.stack(list[Tensor([4, 100, 256],"float32"),Tensor([4, 100, 256],"float32"),Tensor([4, 100, 256],"float32"),Tensor([4, 100, 256],"float32"),Tensor([4, 100, 256],"float32"),Tensor([4, 100, 256],"float32"),], )
paddle.stack(list[Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),], axis=0, )
paddle.stack(list[Tensor([4, 2, 1, 0],"float32"),Tensor([4, 2, 1, 0],"float32"),Tensor([4, 2, 1, 0],"float32"),Tensor([4, 2, 1, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([4, 2, 1],"float32"),Tensor([4, 2, 1],"float32"),Tensor([4, 2, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([4, 22400],"int64"),Tensor([4, 22400],"int64"),], axis=-1, )
paddle.stack(list[Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),], axis=1, )
paddle.stack(list[Tensor([4, 3, 5, 0],"float16"),Tensor([4, 3, 5, 0],"float16"),Tensor([4, 3, 5, 0],"float16"),Tensor([4, 3, 5, 0],"float16"),], axis=-1, )
paddle.stack(list[Tensor([4, 3, 5],"float16"),Tensor([4, 3, 5],"float16"),Tensor([4, 3, 5],"float16"),], axis=-1, )
paddle.stack(list[Tensor([4, 300, 4],"float32"),], )
paddle.stack(list[Tensor([4, 300],"int64"),Tensor([4, 300],"int64"),], axis=-1, )
paddle.stack(list[Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),], )
paddle.stack(list[Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),], )
paddle.stack(list[Tensor([4, 4, 5, 0],"int32"),Tensor([4, 4, 5, 0],"int32"),Tensor([4, 4, 5, 0],"int32"),Tensor([4, 4, 5, 0],"int32"),], axis=-1, )
paddle.stack(list[Tensor([4, 4, 5],"int32"),Tensor([4, 4, 5],"int32"),Tensor([4, 4, 5],"int32"),], axis=-1, )
paddle.stack(list[Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),], axis=0, )
paddle.stack(list[Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),], axis=0, )
paddle.stack(list[Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),], axis=0, )
paddle.stack(list[Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),], )
paddle.stack(list[Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),], axis=2, )
paddle.stack(list[Tensor([4, 500, 4],"float32"),Tensor([4, 500, 4],"float32"),Tensor([4, 500, 4],"float32"),Tensor([4, 500, 4],"float32"),Tensor([4, 500, 4],"float32"),Tensor([4, 500, 4],"float32"),], )
paddle.stack(list[Tensor([4, 500, 4],"float32"),Tensor([4, 500, 4],"float32"),Tensor([4, 500, 4],"float32"),], )
paddle.stack(list[Tensor([4, 5],"float64"),Tensor([4, 5],"float64"),], -1, )
paddle.stack(list[Tensor([4, 8],"float32"),Tensor([4, 8],"float32"),Tensor([4, 8],"float32"),Tensor([4, 8],"float32"),Tensor([4, 8],"float32"),Tensor([4, 8],"float32"),Tensor([4, 8],"float32"),Tensor([4, 8],"float32"),Tensor([4, 8],"float32"),Tensor([4, 8],"float32"),Tensor([4, 8],"float32"),], axis=0, )
paddle.stack(list[Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),], axis=0, )
paddle.stack(list[Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),], axis=1, )
paddle.stack(list[Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),], )
paddle.stack(list[Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),], )
paddle.stack(list[Tensor([4, 8],"int64"),Tensor([4, 8],"int64"),Tensor([4, 8],"int64"),Tensor([4, 8],"int64"),Tensor([4, 8],"int64"),Tensor([4, 8],"int64"),Tensor([4, 8],"int64"),Tensor([4, 8],"int64"),Tensor([4, 8],"int64"),Tensor([4, 8],"int64"),Tensor([4, 8],"int64"),], axis=0, )
paddle.stack(list[Tensor([4, 8],"int64"),Tensor([4, 8],"int64"),], axis=2, )
paddle.stack(list[Tensor([40, 2, 2, 32],"float16"),Tensor([40, 2, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([40, 2, 4, 32],"float16"),Tensor([40, 2, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([40, 40],"float32"),Tensor([40, 40],"float32"),Tensor([40, 40],"float32"),Tensor([40, 40],"float32"),], axis=-1, )
paddle.stack(list[Tensor([40, 40],"float32"),Tensor([40, 40],"float32"),], -1, )
paddle.stack(list[Tensor([40, 40],"float32"),Tensor([40, 40],"float32"),], axis=-1, )
paddle.stack(list[Tensor([400],"float32"),Tensor([400],"float32"),Tensor([400],"float32"),Tensor([400],"float32"),], -1, )
paddle.stack(list[Tensor([400],"float32"),Tensor([400],"float32"),], axis=-1, )
paddle.stack(list[Tensor([401],"float32"),Tensor([401],"float32"),Tensor([401],"float32"),Tensor([401],"float32"),], -1, )
paddle.stack(list[Tensor([402],"float32"),Tensor([402],"float32"),Tensor([402],"float32"),Tensor([402],"float32"),], -1, )
paddle.stack(list[Tensor([403],"float32"),Tensor([403],"float32"),Tensor([403],"float32"),Tensor([403],"float32"),], -1, )
paddle.stack(list[Tensor([404],"float32"),Tensor([404],"float32"),Tensor([404],"float32"),Tensor([404],"float32"),], -1, )
paddle.stack(list[Tensor([404],"float32"),Tensor([404],"float32"),], axis=-1, )
paddle.stack(list[Tensor([405],"float32"),Tensor([405],"float32"),Tensor([405],"float32"),Tensor([405],"float32"),], -1, )
paddle.stack(list[Tensor([405],"float32"),Tensor([405],"float32"),], axis=-1, )
paddle.stack(list[Tensor([406],"float32"),Tensor([406],"float32"),Tensor([406],"float32"),Tensor([406],"float32"),], -1, )
paddle.stack(list[Tensor([407],"float32"),Tensor([407],"float32"),Tensor([407],"float32"),Tensor([407],"float32"),], -1, )
paddle.stack(list[Tensor([408],"float32"),Tensor([408],"float32"),Tensor([408],"float32"),Tensor([408],"float32"),], -1, )
paddle.stack(list[Tensor([408],"float32"),Tensor([408],"float32"),], axis=-1, )
paddle.stack(list[Tensor([4096],"float32"),Tensor([4096],"float32"),Tensor([4096],"float32"),Tensor([4096],"float32"),], -1, )
paddle.stack(list[Tensor([4096],"float32"),Tensor([4096],"float32"),], axis=-1, )
paddle.stack(list[Tensor([409],"float32"),Tensor([409],"float32"),Tensor([409],"float32"),Tensor([409],"float32"),], -1, )
paddle.stack(list[Tensor([40],"float32"),Tensor([40],"float32"),Tensor([40],"float32"),Tensor([40],"float32"),], -1, )
paddle.stack(list[Tensor([40],"float32"),Tensor([40],"float32"),], axis=-1, )
paddle.stack(list[Tensor([41, 2, 2, 32],"float16"),Tensor([41, 2, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([41, 2, 4, 32],"float16"),Tensor([41, 2, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([410],"float32"),Tensor([410],"float32"),Tensor([410],"float32"),Tensor([410],"float32"),], -1, )
paddle.stack(list[Tensor([4116, 1],"float32"),Tensor([4116, 1],"float32"),Tensor([4116, 1],"float32"),Tensor([4116, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([4116, 2],"float32"),Tensor([4116, 2],"float32"),Tensor([4116, 2],"float32"),Tensor([4116, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([4116, 3],"float32"),Tensor([4116, 3],"float32"),Tensor([4116, 3],"float32"),Tensor([4116, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([4116, 4],"float32"),Tensor([4116, 4],"float32"),Tensor([4116, 4],"float32"),Tensor([4116, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([4116, 5],"float32"),Tensor([4116, 5],"float32"),Tensor([4116, 5],"float32"),Tensor([4116, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([4116, 6],"float32"),Tensor([4116, 6],"float32"),Tensor([4116, 6],"float32"),Tensor([4116, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([4116],"float32"),Tensor([4116],"float32"),], axis=-1, )
paddle.stack(list[Tensor([411],"float32"),Tensor([411],"float32"),Tensor([411],"float32"),Tensor([411],"float32"),], -1, )
paddle.stack(list[Tensor([412],"float32"),Tensor([412],"float32"),Tensor([412],"float32"),Tensor([412],"float32"),], -1, )
paddle.stack(list[Tensor([413],"float32"),Tensor([413],"float32"),Tensor([413],"float32"),Tensor([413],"float32"),], -1, )
paddle.stack(list[Tensor([41472],"float32"),Tensor([41472],"float32"),Tensor([41472],"float32"),Tensor([41472],"float32"),], -1, )
paddle.stack(list[Tensor([414],"float32"),Tensor([414],"float32"),Tensor([414],"float32"),Tensor([414],"float32"),], -1, )
paddle.stack(list[Tensor([415],"float32"),Tensor([415],"float32"),Tensor([415],"float32"),Tensor([415],"float32"),], -1, )
paddle.stack(list[Tensor([4165, 10],"float32"),Tensor([4165, 10],"float32"),Tensor([4165, 10],"float32"),Tensor([4165, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 11],"float32"),Tensor([4165, 11],"float32"),Tensor([4165, 11],"float32"),Tensor([4165, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 12],"float32"),Tensor([4165, 12],"float32"),Tensor([4165, 12],"float32"),Tensor([4165, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 13],"float32"),Tensor([4165, 13],"float32"),Tensor([4165, 13],"float32"),Tensor([4165, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 14],"float32"),Tensor([4165, 14],"float32"),Tensor([4165, 14],"float32"),Tensor([4165, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 15],"float32"),Tensor([4165, 15],"float32"),Tensor([4165, 15],"float32"),Tensor([4165, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 16],"float32"),Tensor([4165, 16],"float32"),Tensor([4165, 16],"float32"),Tensor([4165, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 17],"float32"),Tensor([4165, 17],"float32"),Tensor([4165, 17],"float32"),Tensor([4165, 17],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 18],"float32"),Tensor([4165, 18],"float32"),Tensor([4165, 18],"float32"),Tensor([4165, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 19],"float32"),Tensor([4165, 19],"float32"),Tensor([4165, 19],"float32"),Tensor([4165, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 1],"float32"),Tensor([4165, 1],"float32"),Tensor([4165, 1],"float32"),Tensor([4165, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 20],"float32"),Tensor([4165, 20],"float32"),Tensor([4165, 20],"float32"),Tensor([4165, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 21],"float32"),Tensor([4165, 21],"float32"),Tensor([4165, 21],"float32"),Tensor([4165, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 22],"float32"),Tensor([4165, 22],"float32"),Tensor([4165, 22],"float32"),Tensor([4165, 22],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 23],"float32"),Tensor([4165, 23],"float32"),Tensor([4165, 23],"float32"),Tensor([4165, 23],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 24],"float32"),Tensor([4165, 24],"float32"),Tensor([4165, 24],"float32"),Tensor([4165, 24],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 25],"float32"),Tensor([4165, 25],"float32"),Tensor([4165, 25],"float32"),Tensor([4165, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 26],"float32"),Tensor([4165, 26],"float32"),Tensor([4165, 26],"float32"),Tensor([4165, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 27],"float32"),Tensor([4165, 27],"float32"),Tensor([4165, 27],"float32"),Tensor([4165, 27],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 28],"float32"),Tensor([4165, 28],"float32"),Tensor([4165, 28],"float32"),Tensor([4165, 28],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 29],"float32"),Tensor([4165, 29],"float32"),Tensor([4165, 29],"float32"),Tensor([4165, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 2],"float32"),Tensor([4165, 2],"float32"),Tensor([4165, 2],"float32"),Tensor([4165, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 30],"float32"),Tensor([4165, 30],"float32"),Tensor([4165, 30],"float32"),Tensor([4165, 30],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 31],"float32"),Tensor([4165, 31],"float32"),Tensor([4165, 31],"float32"),Tensor([4165, 31],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 32],"float32"),Tensor([4165, 32],"float32"),Tensor([4165, 32],"float32"),Tensor([4165, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 33],"float32"),Tensor([4165, 33],"float32"),Tensor([4165, 33],"float32"),Tensor([4165, 33],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 34],"float32"),Tensor([4165, 34],"float32"),Tensor([4165, 34],"float32"),Tensor([4165, 34],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 35],"float32"),Tensor([4165, 35],"float32"),Tensor([4165, 35],"float32"),Tensor([4165, 35],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 36],"float32"),Tensor([4165, 36],"float32"),Tensor([4165, 36],"float32"),Tensor([4165, 36],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 39],"float32"),Tensor([4165, 39],"float32"),Tensor([4165, 39],"float32"),Tensor([4165, 39],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 3],"float32"),Tensor([4165, 3],"float32"),Tensor([4165, 3],"float32"),Tensor([4165, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 41],"float32"),Tensor([4165, 41],"float32"),Tensor([4165, 41],"float32"),Tensor([4165, 41],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 42],"float32"),Tensor([4165, 42],"float32"),Tensor([4165, 42],"float32"),Tensor([4165, 42],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 43],"float32"),Tensor([4165, 43],"float32"),Tensor([4165, 43],"float32"),Tensor([4165, 43],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 48],"float32"),Tensor([4165, 48],"float32"),Tensor([4165, 48],"float32"),Tensor([4165, 48],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 4],"float32"),Tensor([4165, 4],"float32"),Tensor([4165, 4],"float32"),Tensor([4165, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 50],"float32"),Tensor([4165, 50],"float32"),Tensor([4165, 50],"float32"),Tensor([4165, 50],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 54],"float32"),Tensor([4165, 54],"float32"),Tensor([4165, 54],"float32"),Tensor([4165, 54],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 55],"float32"),Tensor([4165, 55],"float32"),Tensor([4165, 55],"float32"),Tensor([4165, 55],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 5],"float32"),Tensor([4165, 5],"float32"),Tensor([4165, 5],"float32"),Tensor([4165, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 6],"float32"),Tensor([4165, 6],"float32"),Tensor([4165, 6],"float32"),Tensor([4165, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 7],"float32"),Tensor([4165, 7],"float32"),Tensor([4165, 7],"float32"),Tensor([4165, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 8],"float32"),Tensor([4165, 8],"float32"),Tensor([4165, 8],"float32"),Tensor([4165, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165, 9],"float32"),Tensor([4165, 9],"float32"),Tensor([4165, 9],"float32"),Tensor([4165, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([4165],"float32"),Tensor([4165],"float32"),], axis=-1, )
paddle.stack(list[Tensor([416],"float32"),Tensor([416],"float32"),Tensor([416],"float32"),Tensor([416],"float32"),], -1, )
paddle.stack(list[Tensor([416],"float32"),Tensor([416],"float32"),], axis=-1, )
paddle.stack(list[Tensor([417],"float32"),Tensor([417],"float32"),Tensor([417],"float32"),Tensor([417],"float32"),], -1, )
paddle.stack(list[Tensor([418],"float32"),Tensor([418],"float32"),Tensor([418],"float32"),Tensor([418],"float32"),], -1, )
paddle.stack(list[Tensor([419],"float32"),Tensor([419],"float32"),Tensor([419],"float32"),Tensor([419],"float32"),], -1, )
paddle.stack(list[Tensor([41],"float32"),Tensor([41],"float32"),Tensor([41],"float32"),Tensor([41],"float32"),], -1, )
paddle.stack(list[Tensor([41],"float32"),Tensor([41],"float32"),], axis=-1, )
paddle.stack(list[Tensor([42, 42],"float32"),Tensor([42, 42],"float32"),Tensor([42, 42],"float32"),Tensor([42, 42],"float32"),], axis=-1, )
paddle.stack(list[Tensor([42, 42],"float32"),Tensor([42, 42],"float32"),], axis=-1, )
paddle.stack(list[Tensor([420],"float32"),Tensor([420],"float32"),Tensor([420],"float32"),Tensor([420],"float32"),], -1, )
paddle.stack(list[Tensor([421],"float32"),Tensor([421],"float32"),Tensor([421],"float32"),Tensor([421],"float32"),], -1, )
paddle.stack(list[Tensor([422],"float32"),Tensor([422],"float32"),Tensor([422],"float32"),Tensor([422],"float32"),], -1, )
paddle.stack(list[Tensor([423],"float32"),Tensor([423],"float32"),Tensor([423],"float32"),Tensor([423],"float32"),], -1, )
paddle.stack(list[Tensor([424],"float32"),Tensor([424],"float32"),Tensor([424],"float32"),Tensor([424],"float32"),], -1, )
paddle.stack(list[Tensor([424],"float32"),Tensor([424],"float32"),], axis=-1, )
paddle.stack(list[Tensor([425],"float32"),Tensor([425],"float32"),Tensor([425],"float32"),Tensor([425],"float32"),], -1, )
paddle.stack(list[Tensor([425],"float32"),Tensor([425],"float32"),], axis=-1, )
paddle.stack(list[Tensor([426],"float32"),Tensor([426],"float32"),Tensor([426],"float32"),Tensor([426],"float32"),], -1, )
paddle.stack(list[Tensor([426],"float32"),Tensor([426],"float32"),], axis=-1, )
paddle.stack(list[Tensor([427],"float32"),Tensor([427],"float32"),Tensor([427],"float32"),Tensor([427],"float32"),], -1, )
paddle.stack(list[Tensor([428],"float32"),Tensor([428],"float32"),Tensor([428],"float32"),Tensor([428],"float32"),], -1, )
paddle.stack(list[Tensor([429],"float32"),Tensor([429],"float32"),Tensor([429],"float32"),Tensor([429],"float32"),], -1, )
paddle.stack(list[Tensor([429],"float32"),Tensor([429],"float32"),], axis=-1, )
paddle.stack(list[Tensor([42],"float32"),Tensor([42],"float32"),Tensor([42],"float32"),Tensor([42],"float32"),], -1, )
paddle.stack(list[Tensor([42],"float32"),Tensor([42],"float32"),], axis=-1, )
paddle.stack(list[Tensor([430],"float32"),Tensor([430],"float32"),Tensor([430],"float32"),Tensor([430],"float32"),], -1, )
paddle.stack(list[Tensor([431],"float32"),Tensor([431],"float32"),Tensor([431],"float32"),Tensor([431],"float32"),], -1, )
paddle.stack(list[Tensor([43200],"float32"),Tensor([43200],"float32"),Tensor([43200],"float32"),Tensor([43200],"float32"),], -1, )
paddle.stack(list[Tensor([432],"float32"),Tensor([432],"float32"),Tensor([432],"float32"),Tensor([432],"float32"),], -1, )
paddle.stack(list[Tensor([432],"float32"),Tensor([432],"float32"),], axis=-1, )
paddle.stack(list[Tensor([433],"float32"),Tensor([433],"float32"),Tensor([433],"float32"),Tensor([433],"float32"),], -1, )
paddle.stack(list[Tensor([434],"float32"),Tensor([434],"float32"),Tensor([434],"float32"),Tensor([434],"float32"),], -1, )
paddle.stack(list[Tensor([434],"float32"),Tensor([434],"float32"),], axis=-1, )
paddle.stack(list[Tensor([43560],"float32"),Tensor([43560],"float32"),Tensor([43560],"float32"),Tensor([43560],"float32"),], -1, )
paddle.stack(list[Tensor([435],"float32"),Tensor([435],"float32"),Tensor([435],"float32"),Tensor([435],"float32"),], -1, )
paddle.stack(list[Tensor([436],"float32"),Tensor([436],"float32"),Tensor([436],"float32"),Tensor([436],"float32"),], -1, )
paddle.stack(list[Tensor([437],"float32"),Tensor([437],"float32"),Tensor([437],"float32"),Tensor([437],"float32"),], -1, )
paddle.stack(list[Tensor([438],"float32"),Tensor([438],"float32"),Tensor([438],"float32"),Tensor([438],"float32"),], -1, )
paddle.stack(list[Tensor([439],"float32"),Tensor([439],"float32"),Tensor([439],"float32"),Tensor([439],"float32"),], -1, )
paddle.stack(list[Tensor([43],"float32"),Tensor([43],"float32"),Tensor([43],"float32"),Tensor([43],"float32"),], -1, )
paddle.stack(list[Tensor([43],"float32"),Tensor([43],"float32"),], axis=-1, )
paddle.stack(list[Tensor([44, 44],"float32"),Tensor([44, 44],"float32"),Tensor([44, 44],"float32"),Tensor([44, 44],"float32"),], axis=-1, )
paddle.stack(list[Tensor([44, 44],"float32"),Tensor([44, 44],"float32"),], -1, )
paddle.stack(list[Tensor([44, 44],"float32"),Tensor([44, 44],"float32"),], axis=-1, )
paddle.stack(list[Tensor([440],"float32"),Tensor([440],"float32"),Tensor([440],"float32"),Tensor([440],"float32"),], -1, )
paddle.stack(list[Tensor([4410],"float32"),Tensor([4410],"float32"),Tensor([4410],"float32"),Tensor([4410],"float32"),], -1, )
paddle.stack(list[Tensor([441],"float32"),Tensor([441],"float32"),Tensor([441],"float32"),Tensor([441],"float32"),], -1, )
paddle.stack(list[Tensor([441],"float32"),Tensor([441],"float32"),], axis=-1, )
paddle.stack(list[Tensor([442],"float32"),Tensor([442],"float32"),Tensor([442],"float32"),Tensor([442],"float32"),], -1, )
paddle.stack(list[Tensor([443],"float32"),Tensor([443],"float32"),Tensor([443],"float32"),Tensor([443],"float32"),], -1, )
paddle.stack(list[Tensor([443],"float32"),Tensor([443],"float32"),], axis=-1, )
paddle.stack(list[Tensor([444],"float32"),Tensor([444],"float32"),Tensor([444],"float32"),Tensor([444],"float32"),], -1, )
paddle.stack(list[Tensor([445],"float32"),Tensor([445],"float32"),Tensor([445],"float32"),Tensor([445],"float32"),], -1, )
paddle.stack(list[Tensor([446],"float32"),Tensor([446],"float32"),Tensor([446],"float32"),Tensor([446],"float32"),], -1, )
paddle.stack(list[Tensor([447],"float32"),Tensor([447],"float32"),Tensor([447],"float32"),Tensor([447],"float32"),], -1, )
paddle.stack(list[Tensor([448],"float32"),Tensor([448],"float32"),Tensor([448],"float32"),Tensor([448],"float32"),], -1, )
paddle.stack(list[Tensor([448],"float32"),Tensor([448],"float32"),], axis=-1, )
paddle.stack(list[Tensor([448],"int64"),Tensor([448],"int64"),], )
paddle.stack(list[Tensor([449],"float32"),Tensor([449],"float32"),Tensor([449],"float32"),Tensor([449],"float32"),], -1, )
paddle.stack(list[Tensor([44],"float32"),Tensor([44],"float32"),Tensor([44],"float32"),Tensor([44],"float32"),], -1, )
paddle.stack(list[Tensor([44],"float32"),Tensor([44],"float32"),], axis=-1, )
paddle.stack(list[Tensor([450],"float32"),Tensor([450],"float32"),Tensor([450],"float32"),Tensor([450],"float32"),], -1, )
paddle.stack(list[Tensor([451],"float32"),Tensor([451],"float32"),Tensor([451],"float32"),Tensor([451],"float32"),], -1, )
paddle.stack(list[Tensor([452],"float32"),Tensor([452],"float32"),Tensor([452],"float32"),Tensor([452],"float32"),], -1, )
paddle.stack(list[Tensor([452],"float32"),Tensor([452],"float32"),], axis=-1, )
paddle.stack(list[Tensor([453],"float32"),Tensor([453],"float32"),Tensor([453],"float32"),Tensor([453],"float32"),], -1, )
paddle.stack(list[Tensor([454],"float32"),Tensor([454],"float32"),Tensor([454],"float32"),Tensor([454],"float32"),], -1, )
paddle.stack(list[Tensor([455],"float32"),Tensor([455],"float32"),Tensor([455],"float32"),Tensor([455],"float32"),], -1, )
paddle.stack(list[Tensor([45600],"float32"),Tensor([45600],"float32"),Tensor([45600],"float32"),Tensor([45600],"float32"),], -1, )
paddle.stack(list[Tensor([456],"float32"),Tensor([456],"float32"),Tensor([456],"float32"),Tensor([456],"float32"),], -1, )
paddle.stack(list[Tensor([457],"float32"),Tensor([457],"float32"),Tensor([457],"float32"),Tensor([457],"float32"),], -1, )
paddle.stack(list[Tensor([458],"float32"),Tensor([458],"float32"),Tensor([458],"float32"),Tensor([458],"float32"),], -1, )
paddle.stack(list[Tensor([459],"float32"),Tensor([459],"float32"),Tensor([459],"float32"),Tensor([459],"float32"),], -1, )
paddle.stack(list[Tensor([45],"float32"),Tensor([45],"float32"),Tensor([45],"float32"),Tensor([45],"float32"),], -1, )
paddle.stack(list[Tensor([45],"float32"),Tensor([45],"float32"),], axis=-1, )
paddle.stack(list[Tensor([46, 46],"float32"),Tensor([46, 46],"float32"),Tensor([46, 46],"float32"),Tensor([46, 46],"float32"),], axis=-1, )
paddle.stack(list[Tensor([46, 46],"float32"),Tensor([46, 46],"float32"),], -1, )
paddle.stack(list[Tensor([46, 46],"float32"),Tensor([46, 46],"float32"),], axis=-1, )
paddle.stack(list[Tensor([4608],"float32"),Tensor([4608],"float32"),Tensor([4608],"float32"),Tensor([4608],"float32"),], -1, )
paddle.stack(list[Tensor([460],"float32"),Tensor([460],"float32"),Tensor([460],"float32"),Tensor([460],"float32"),], -1, )
paddle.stack(list[Tensor([461],"float32"),Tensor([461],"float32"),Tensor([461],"float32"),Tensor([461],"float32"),], -1, )
paddle.stack(list[Tensor([4624],"float32"),Tensor([4624],"float32"),Tensor([4624],"float32"),Tensor([4624],"float32"),], -1, )
paddle.stack(list[Tensor([4624],"float32"),Tensor([4624],"float32"),], axis=-1, )
paddle.stack(list[Tensor([462],"float32"),Tensor([462],"float32"),Tensor([462],"float32"),Tensor([462],"float32"),], -1, )
paddle.stack(list[Tensor([462],"float32"),Tensor([462],"float32"),], axis=-1, )
paddle.stack(list[Tensor([463],"float32"),Tensor([463],"float32"),Tensor([463],"float32"),Tensor([463],"float32"),], -1, )
paddle.stack(list[Tensor([464],"float32"),Tensor([464],"float32"),Tensor([464],"float32"),Tensor([464],"float32"),], -1, )
paddle.stack(list[Tensor([464],"float32"),Tensor([464],"float32"),], axis=-1, )
paddle.stack(list[Tensor([465],"float32"),Tensor([465],"float32"),Tensor([465],"float32"),Tensor([465],"float32"),], -1, )
paddle.stack(list[Tensor([466],"float32"),Tensor([466],"float32"),Tensor([466],"float32"),Tensor([466],"float32"),], -1, )
paddle.stack(list[Tensor([467],"float32"),Tensor([467],"float32"),Tensor([467],"float32"),Tensor([467],"float32"),], -1, )
paddle.stack(list[Tensor([468],"float32"),Tensor([468],"float32"),Tensor([468],"float32"),Tensor([468],"float32"),], -1, )
paddle.stack(list[Tensor([469],"float32"),Tensor([469],"float32"),Tensor([469],"float32"),Tensor([469],"float32"),], -1, )
paddle.stack(list[Tensor([46],"float32"),Tensor([46],"float32"),Tensor([46],"float32"),Tensor([46],"float32"),], -1, )
paddle.stack(list[Tensor([46],"float32"),Tensor([46],"float32"),], axis=-1, )
paddle.stack(list[Tensor([47, 2, 2, 32],"float16"),Tensor([47, 2, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([47, 2, 4, 32],"float16"),Tensor([47, 2, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([470],"float32"),Tensor([470],"float32"),Tensor([470],"float32"),Tensor([470],"float32"),], -1, )
paddle.stack(list[Tensor([471],"float32"),Tensor([471],"float32"),Tensor([471],"float32"),Tensor([471],"float32"),], -1, )
paddle.stack(list[Tensor([4725, 10],"float32"),Tensor([4725, 10],"float32"),Tensor([4725, 10],"float32"),Tensor([4725, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([4725, 1],"float32"),Tensor([4725, 1],"float32"),Tensor([4725, 1],"float32"),Tensor([4725, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([4725, 2],"float32"),Tensor([4725, 2],"float32"),Tensor([4725, 2],"float32"),Tensor([4725, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([4725, 3],"float32"),Tensor([4725, 3],"float32"),Tensor([4725, 3],"float32"),Tensor([4725, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([4725, 4],"float32"),Tensor([4725, 4],"float32"),Tensor([4725, 4],"float32"),Tensor([4725, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([4725, 5],"float32"),Tensor([4725, 5],"float32"),Tensor([4725, 5],"float32"),Tensor([4725, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([4725, 6],"float32"),Tensor([4725, 6],"float32"),Tensor([4725, 6],"float32"),Tensor([4725, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([4725, 7],"float32"),Tensor([4725, 7],"float32"),Tensor([4725, 7],"float32"),Tensor([4725, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([4725, 8],"float32"),Tensor([4725, 8],"float32"),Tensor([4725, 8],"float32"),Tensor([4725, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([4725, 9],"float32"),Tensor([4725, 9],"float32"),Tensor([4725, 9],"float32"),Tensor([4725, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([4725],"float32"),Tensor([4725],"float32"),], axis=-1, )
paddle.stack(list[Tensor([472],"float32"),Tensor([472],"float32"),Tensor([472],"float32"),Tensor([472],"float32"),], -1, )
paddle.stack(list[Tensor([473],"float32"),Tensor([473],"float32"),Tensor([473],"float32"),Tensor([473],"float32"),], -1, )
paddle.stack(list[Tensor([474],"float32"),Tensor([474],"float32"),Tensor([474],"float32"),Tensor([474],"float32"),], -1, )
paddle.stack(list[Tensor([475],"float32"),Tensor([475],"float32"),Tensor([475],"float32"),Tensor([475],"float32"),], -1, )
paddle.stack(list[Tensor([476],"float32"),Tensor([476],"float32"),Tensor([476],"float32"),Tensor([476],"float32"),], -1, )
paddle.stack(list[Tensor([476],"float32"),Tensor([476],"float32"),], axis=-1, )
paddle.stack(list[Tensor([477],"float32"),Tensor([477],"float32"),Tensor([477],"float32"),Tensor([477],"float32"),], -1, )
paddle.stack(list[Tensor([477],"float32"),Tensor([477],"float32"),], axis=-1, )
paddle.stack(list[Tensor([4789, 10],"float32"),Tensor([4789, 10],"float32"),Tensor([4789, 10],"float32"),Tensor([4789, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 11],"float32"),Tensor([4789, 11],"float32"),Tensor([4789, 11],"float32"),Tensor([4789, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 12],"float32"),Tensor([4789, 12],"float32"),Tensor([4789, 12],"float32"),Tensor([4789, 12],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 13],"float32"),Tensor([4789, 13],"float32"),Tensor([4789, 13],"float32"),Tensor([4789, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 14],"float32"),Tensor([4789, 14],"float32"),Tensor([4789, 14],"float32"),Tensor([4789, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 15],"float32"),Tensor([4789, 15],"float32"),Tensor([4789, 15],"float32"),Tensor([4789, 15],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 16],"float32"),Tensor([4789, 16],"float32"),Tensor([4789, 16],"float32"),Tensor([4789, 16],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 17],"float32"),Tensor([4789, 17],"float32"),Tensor([4789, 17],"float32"),Tensor([4789, 17],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 18],"float32"),Tensor([4789, 18],"float32"),Tensor([4789, 18],"float32"),Tensor([4789, 18],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 19],"float32"),Tensor([4789, 19],"float32"),Tensor([4789, 19],"float32"),Tensor([4789, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 1],"float32"),Tensor([4789, 1],"float32"),Tensor([4789, 1],"float32"),Tensor([4789, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 20],"float32"),Tensor([4789, 20],"float32"),Tensor([4789, 20],"float32"),Tensor([4789, 20],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 21],"float32"),Tensor([4789, 21],"float32"),Tensor([4789, 21],"float32"),Tensor([4789, 21],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 22],"float32"),Tensor([4789, 22],"float32"),Tensor([4789, 22],"float32"),Tensor([4789, 22],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 23],"float32"),Tensor([4789, 23],"float32"),Tensor([4789, 23],"float32"),Tensor([4789, 23],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 24],"float32"),Tensor([4789, 24],"float32"),Tensor([4789, 24],"float32"),Tensor([4789, 24],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 25],"float32"),Tensor([4789, 25],"float32"),Tensor([4789, 25],"float32"),Tensor([4789, 25],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 26],"float32"),Tensor([4789, 26],"float32"),Tensor([4789, 26],"float32"),Tensor([4789, 26],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 27],"float32"),Tensor([4789, 27],"float32"),Tensor([4789, 27],"float32"),Tensor([4789, 27],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 28],"float32"),Tensor([4789, 28],"float32"),Tensor([4789, 28],"float32"),Tensor([4789, 28],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 29],"float32"),Tensor([4789, 29],"float32"),Tensor([4789, 29],"float32"),Tensor([4789, 29],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 2],"float32"),Tensor([4789, 2],"float32"),Tensor([4789, 2],"float32"),Tensor([4789, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 30],"float32"),Tensor([4789, 30],"float32"),Tensor([4789, 30],"float32"),Tensor([4789, 30],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 31],"float32"),Tensor([4789, 31],"float32"),Tensor([4789, 31],"float32"),Tensor([4789, 31],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 32],"float32"),Tensor([4789, 32],"float32"),Tensor([4789, 32],"float32"),Tensor([4789, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 33],"float32"),Tensor([4789, 33],"float32"),Tensor([4789, 33],"float32"),Tensor([4789, 33],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 34],"float32"),Tensor([4789, 34],"float32"),Tensor([4789, 34],"float32"),Tensor([4789, 34],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 35],"float32"),Tensor([4789, 35],"float32"),Tensor([4789, 35],"float32"),Tensor([4789, 35],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 36],"float32"),Tensor([4789, 36],"float32"),Tensor([4789, 36],"float32"),Tensor([4789, 36],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 37],"float32"),Tensor([4789, 37],"float32"),Tensor([4789, 37],"float32"),Tensor([4789, 37],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 38],"float32"),Tensor([4789, 38],"float32"),Tensor([4789, 38],"float32"),Tensor([4789, 38],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 39],"float32"),Tensor([4789, 39],"float32"),Tensor([4789, 39],"float32"),Tensor([4789, 39],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 3],"float32"),Tensor([4789, 3],"float32"),Tensor([4789, 3],"float32"),Tensor([4789, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 40],"float32"),Tensor([4789, 40],"float32"),Tensor([4789, 40],"float32"),Tensor([4789, 40],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 42],"float32"),Tensor([4789, 42],"float32"),Tensor([4789, 42],"float32"),Tensor([4789, 42],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 45],"float32"),Tensor([4789, 45],"float32"),Tensor([4789, 45],"float32"),Tensor([4789, 45],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 48],"float32"),Tensor([4789, 48],"float32"),Tensor([4789, 48],"float32"),Tensor([4789, 48],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 4],"float32"),Tensor([4789, 4],"float32"),Tensor([4789, 4],"float32"),Tensor([4789, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 5],"float32"),Tensor([4789, 5],"float32"),Tensor([4789, 5],"float32"),Tensor([4789, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 6],"float32"),Tensor([4789, 6],"float32"),Tensor([4789, 6],"float32"),Tensor([4789, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 77],"float32"),Tensor([4789, 77],"float32"),Tensor([4789, 77],"float32"),Tensor([4789, 77],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 7],"float32"),Tensor([4789, 7],"float32"),Tensor([4789, 7],"float32"),Tensor([4789, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 8],"float32"),Tensor([4789, 8],"float32"),Tensor([4789, 8],"float32"),Tensor([4789, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789, 9],"float32"),Tensor([4789, 9],"float32"),Tensor([4789, 9],"float32"),Tensor([4789, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([4789],"float32"),Tensor([4789],"float32"),], axis=-1, )
paddle.stack(list[Tensor([478],"float32"),Tensor([478],"float32"),Tensor([478],"float32"),Tensor([478],"float32"),], -1, )
paddle.stack(list[Tensor([479],"float32"),Tensor([479],"float32"),Tensor([479],"float32"),Tensor([479],"float32"),], -1, )
paddle.stack(list[Tensor([47],"float32"),Tensor([47],"float32"),Tensor([47],"float32"),Tensor([47],"float32"),], -1, )
paddle.stack(list[Tensor([47],"float32"),Tensor([47],"float32"),], axis=-1, )
paddle.stack(list[Tensor([48, 48],"float32"),Tensor([48, 48],"float32"),Tensor([48, 48],"float32"),Tensor([48, 48],"float32"),], axis=-1, )
paddle.stack(list[Tensor([48, 48],"float32"),Tensor([48, 48],"float32"),], -1, )
paddle.stack(list[Tensor([48, 48],"float32"),Tensor([48, 48],"float32"),], axis=-1, )
paddle.stack(list[Tensor([480],"float32"),Tensor([480],"float32"),Tensor([480],"float32"),Tensor([480],"float32"),], -1, )
paddle.stack(list[Tensor([480],"float32"),Tensor([480],"float32"),], axis=-1, )
paddle.stack(list[Tensor([480],"int64"),Tensor([480],"int64"),], )
paddle.stack(list[Tensor([481],"float32"),Tensor([481],"float32"),Tensor([481],"float32"),Tensor([481],"float32"),], -1, )
paddle.stack(list[Tensor([482],"float32"),Tensor([482],"float32"),Tensor([482],"float32"),Tensor([482],"float32"),], -1, )
paddle.stack(list[Tensor([482],"float32"),Tensor([482],"float32"),], axis=-1, )
paddle.stack(list[Tensor([483],"float32"),Tensor([483],"float32"),Tensor([483],"float32"),Tensor([483],"float32"),], -1, )
paddle.stack(list[Tensor([484],"float32"),Tensor([484],"float32"),Tensor([484],"float32"),Tensor([484],"float32"),], -1, )
paddle.stack(list[Tensor([484],"float32"),Tensor([484],"float32"),], axis=-1, )
paddle.stack(list[Tensor([485],"float32"),Tensor([485],"float32"),Tensor([485],"float32"),Tensor([485],"float32"),], -1, )
paddle.stack(list[Tensor([486],"float32"),Tensor([486],"float32"),Tensor([486],"float32"),Tensor([486],"float32"),], -1, )
paddle.stack(list[Tensor([488],"float32"),Tensor([488],"float32"),Tensor([488],"float32"),Tensor([488],"float32"),], -1, )
paddle.stack(list[Tensor([489],"float32"),Tensor([489],"float32"),Tensor([489],"float32"),Tensor([489],"float32"),], -1, )
paddle.stack(list[Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], -1, )
paddle.stack(list[Tensor([48],"float32"),Tensor([48],"float32"),], axis=-1, )
paddle.stack(list[Tensor([490],"float32"),Tensor([490],"float32"),Tensor([490],"float32"),Tensor([490],"float32"),], -1, )
paddle.stack(list[Tensor([491],"float32"),Tensor([491],"float32"),Tensor([491],"float32"),Tensor([491],"float32"),], -1, )
paddle.stack(list[Tensor([4928],"float32"),Tensor([4928],"float32"),], axis=-1, )
paddle.stack(list[Tensor([492],"float32"),Tensor([492],"float32"),Tensor([492],"float32"),Tensor([492],"float32"),], -1, )
paddle.stack(list[Tensor([493],"float32"),Tensor([493],"float32"),Tensor([493],"float32"),Tensor([493],"float32"),], -1, )
paddle.stack(list[Tensor([493],"float32"),Tensor([493],"float32"),], axis=-1, )
paddle.stack(list[Tensor([494],"float32"),Tensor([494],"float32"),Tensor([494],"float32"),Tensor([494],"float32"),], -1, )
paddle.stack(list[Tensor([494],"float32"),Tensor([494],"float32"),], axis=-1, )
paddle.stack(list[Tensor([495],"float32"),Tensor([495],"float32"),Tensor([495],"float32"),Tensor([495],"float32"),], -1, )
paddle.stack(list[Tensor([496],"float32"),Tensor([496],"float32"),Tensor([496],"float32"),Tensor([496],"float32"),], -1, )
paddle.stack(list[Tensor([496],"float32"),Tensor([496],"float32"),], axis=-1, )
paddle.stack(list[Tensor([497],"float32"),Tensor([497],"float32"),Tensor([497],"float32"),Tensor([497],"float32"),], -1, )
paddle.stack(list[Tensor([498],"float32"),Tensor([498],"float32"),Tensor([498],"float32"),Tensor([498],"float32"),], -1, )
paddle.stack(list[Tensor([49920],"float32"),Tensor([49920],"float32"),Tensor([49920],"float32"),Tensor([49920],"float32"),], -1, )
paddle.stack(list[Tensor([499],"float32"),Tensor([499],"float32"),Tensor([499],"float32"),Tensor([499],"float32"),], -1, )
paddle.stack(list[Tensor([49],"float32"),Tensor([49],"float32"),Tensor([49],"float32"),Tensor([49],"float32"),], -1, )
paddle.stack(list[Tensor([49],"float32"),Tensor([49],"float32"),], axis=-1, )
paddle.stack(list[Tensor([4],"float32"),Tensor([4],"float32"),Tensor([4],"float32"),Tensor([4],"float32"),], -1, )
paddle.stack(list[Tensor([4],"float32"),Tensor([4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([4],"float64"),], 0, )
paddle.stack(list[Tensor([5, 1, 1],"float64"),Tensor([5, 1, 1],"float64"),Tensor([5, 1, 1],"float64"),], 0, )
paddle.stack(list[Tensor([5, 1, 1],"float64"),Tensor([5, 1, 1],"float64"),], 0, )
paddle.stack(list[Tensor([5, 2, 1, 1],"float32"),Tensor([5, 2, 1, 1],"float32"),], -1, )
paddle.stack(list[Tensor([5, 2, 1, 2],"float32"),Tensor([5, 2, 1, 2],"float32"),], axis=-1, )
paddle.stack(list[Tensor([5, 2, 15, 2],"float32"),Tensor([5, 2, 15, 2],"float32"),], axis=-1, )
paddle.stack(list[Tensor([5, 2, 17, 2],"float32"),Tensor([5, 2, 17, 2],"float32"),], axis=-1, )
paddle.stack(list[Tensor([5, 2, 2, 1],"float32"),Tensor([5, 2, 2, 1],"float32"),], -1, )
paddle.stack(list[Tensor([5, 2, 5, 0],"complex64"),Tensor([5, 2, 5, 0],"complex64"),Tensor([5, 2, 5, 0],"complex64"),Tensor([5, 2, 5, 0],"complex64"),], axis=-1, )
paddle.stack(list[Tensor([5, 2, 5],"complex64"),Tensor([5, 2, 5],"complex64"),Tensor([5, 2, 5],"complex64"),], axis=-1, )
paddle.stack(list[Tensor([5, 4, 1, 1],"float32"),Tensor([5, 4, 1, 1],"float32"),], -1, )
paddle.stack(list[Tensor([5, 4, 2, 1],"float32"),Tensor([5, 4, 2, 1],"float32"),], -1, )
paddle.stack(list[Tensor([5, 4, 3, 0],"complex64"),Tensor([5, 4, 3, 0],"complex64"),Tensor([5, 4, 3, 0],"complex64"),Tensor([5, 4, 3, 0],"complex64"),], axis=-1, )
paddle.stack(list[Tensor([5, 4, 3],"complex64"),Tensor([5, 4, 3],"complex64"),Tensor([5, 4, 3],"complex64"),], axis=-1, )
paddle.stack(list[Tensor([5, 4, 4, 0],"int64"),Tensor([5, 4, 4, 0],"int64"),Tensor([5, 4, 4, 0],"int64"),Tensor([5, 4, 4, 0],"int64"),], axis=-1, )
paddle.stack(list[Tensor([5, 4, 4],"int64"),Tensor([5, 4, 4],"int64"),Tensor([5, 4, 4],"int64"),], axis=-1, )
paddle.stack(list[Tensor([5, 4],"float64"),Tensor([5, 4],"float64"),], 0, )
paddle.stack(list[Tensor([5, 5],"float32"),Tensor([5, 5],"float32"),Tensor([5, 5],"float32"),Tensor([5, 5],"float32"),], axis=-1, )
paddle.stack(list[Tensor([5, 5],"float32"),Tensor([5, 5],"float32"),], axis=-1, )
paddle.stack(list[Tensor([5, 5],"int64"),Tensor([5, 5],"int64"),], )
paddle.stack(list[Tensor([5, 6, 1, 1],"float32"),Tensor([5, 6, 1, 1],"float32"),], -1, )
paddle.stack(list[Tensor([5, 6, 2, 1],"float32"),Tensor([5, 6, 2, 1],"float32"),], -1, )
paddle.stack(list[Tensor([50, 50],"float32"),Tensor([50, 50],"float32"),Tensor([50, 50],"float32"),Tensor([50, 50],"float32"),], axis=-1, )
paddle.stack(list[Tensor([50, 50],"float32"),Tensor([50, 50],"float32"),], axis=-1, )
paddle.stack(list[Tensor([500],"float32"),Tensor([500],"float32"),Tensor([500],"float32"),Tensor([500],"float32"),], -1, )
paddle.stack(list[Tensor([50176],"float32"),Tensor([50176],"float32"),Tensor([50176],"float32"),Tensor([50176],"float32"),], -1, )
paddle.stack(list[Tensor([501],"float32"),Tensor([501],"float32"),Tensor([501],"float32"),Tensor([501],"float32"),], -1, )
paddle.stack(list[Tensor([502],"float32"),Tensor([502],"float32"),Tensor([502],"float32"),Tensor([502],"float32"),], -1, )
paddle.stack(list[Tensor([503],"float32"),Tensor([503],"float32"),Tensor([503],"float32"),Tensor([503],"float32"),], -1, )
paddle.stack(list[Tensor([504],"float32"),Tensor([504],"float32"),Tensor([504],"float32"),Tensor([504],"float32"),], -1, )
paddle.stack(list[Tensor([505],"float32"),Tensor([505],"float32"),Tensor([505],"float32"),Tensor([505],"float32"),], -1, )
paddle.stack(list[Tensor([506],"float32"),Tensor([506],"float32"),Tensor([506],"float32"),Tensor([506],"float32"),], -1, )
paddle.stack(list[Tensor([507],"float32"),Tensor([507],"float32"),Tensor([507],"float32"),Tensor([507],"float32"),], -1, )
paddle.stack(list[Tensor([508],"float32"),Tensor([508],"float32"),Tensor([508],"float32"),Tensor([508],"float32"),], -1, )
paddle.stack(list[Tensor([508],"float32"),Tensor([508],"float32"),], axis=-1, )
paddle.stack(list[Tensor([509],"float32"),Tensor([509],"float32"),Tensor([509],"float32"),Tensor([509],"float32"),], -1, )
paddle.stack(list[Tensor([50],"float32"),Tensor([50],"float32"),Tensor([50],"float32"),Tensor([50],"float32"),], -1, )
paddle.stack(list[Tensor([50],"float32"),Tensor([50],"float32"),], axis=-1, )
paddle.stack(list[Tensor([51, 2, 2, 32],"float16"),Tensor([51, 2, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([51, 2, 4, 32],"float16"),Tensor([51, 2, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([510],"float32"),Tensor([510],"float32"),Tensor([510],"float32"),Tensor([510],"float32"),], -1, )
paddle.stack(list[Tensor([511],"float32"),Tensor([511],"float32"),Tensor([511],"float32"),Tensor([511],"float32"),], -1, )
paddle.stack(list[Tensor([512, 1],"float32"),Tensor([512, 1],"float32"),Tensor([512, 1],"float32"),Tensor([512, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),], axis=0, )
paddle.stack(list[Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),], axis=0, )
paddle.stack(list[Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),], -1, )
paddle.stack(list[Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),], axis=1, )
paddle.stack(list[Tensor([512],"float32"),Tensor([512],"float32"),], axis=-1, )
paddle.stack(list[Tensor([513],"float32"),Tensor([513],"float32"),Tensor([513],"float32"),Tensor([513],"float32"),], -1, )
paddle.stack(list[Tensor([514],"float32"),Tensor([514],"float32"),Tensor([514],"float32"),Tensor([514],"float32"),], -1, )
paddle.stack(list[Tensor([515],"float32"),Tensor([515],"float32"),Tensor([515],"float32"),Tensor([515],"float32"),], -1, )
paddle.stack(list[Tensor([516],"float32"),Tensor([516],"float32"),Tensor([516],"float32"),Tensor([516],"float32"),], -1, )
paddle.stack(list[Tensor([516],"int64"),Tensor([516],"int64"),Tensor([516],"int64"),Tensor([516],"int64"),], 1, )
paddle.stack(list[Tensor([517],"float32"),Tensor([517],"float32"),Tensor([517],"float32"),Tensor([517],"float32"),], -1, )
paddle.stack(list[Tensor([51840],"float32"),Tensor([51840],"float32"),Tensor([51840],"float32"),Tensor([51840],"float32"),], -1, )
paddle.stack(list[Tensor([5184],"float32"),Tensor([5184],"float32"),Tensor([5184],"float32"),Tensor([5184],"float32"),], -1, )
paddle.stack(list[Tensor([5184],"float32"),Tensor([5184],"float32"),], axis=-1, )
paddle.stack(list[Tensor([518],"float32"),Tensor([518],"float32"),Tensor([518],"float32"),Tensor([518],"float32"),], -1, )
paddle.stack(list[Tensor([519],"float32"),Tensor([519],"float32"),Tensor([519],"float32"),Tensor([519],"float32"),], -1, )
paddle.stack(list[Tensor([519],"float32"),Tensor([519],"float32"),], axis=-1, )
paddle.stack(list[Tensor([51],"float32"),Tensor([51],"float32"),Tensor([51],"float32"),Tensor([51],"float32"),], -1, )
paddle.stack(list[Tensor([51],"float32"),Tensor([51],"float32"),], axis=-1, )
paddle.stack(list[Tensor([52, 52],"float32"),Tensor([52, 52],"float32"),Tensor([52, 52],"float32"),Tensor([52, 52],"float32"),], axis=-1, )
paddle.stack(list[Tensor([52, 52],"float32"),Tensor([52, 52],"float32"),], axis=-1, )
paddle.stack(list[Tensor([52, 7, 16],"float32"),Tensor([52, 7, 16],"float32"),Tensor([52, 7, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([52, 7, 64],"float32"),Tensor([52, 7, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([520],"float32"),Tensor([520],"float32"),Tensor([520],"float32"),Tensor([520],"float32"),], -1, )
paddle.stack(list[Tensor([520],"float32"),Tensor([520],"float32"),], axis=-1, )
paddle.stack(list[Tensor([521],"float32"),Tensor([521],"float32"),Tensor([521],"float32"),Tensor([521],"float32"),], -1, )
paddle.stack(list[Tensor([521],"float32"),Tensor([521],"float32"),], axis=-1, )
paddle.stack(list[Tensor([522],"float32"),Tensor([522],"float32"),Tensor([522],"float32"),Tensor([522],"float32"),], -1, )
paddle.stack(list[Tensor([523],"float32"),Tensor([523],"float32"),Tensor([523],"float32"),Tensor([523],"float32"),], -1, )
paddle.stack(list[Tensor([524],"float32"),Tensor([524],"float32"),Tensor([524],"float32"),Tensor([524],"float32"),], -1, )
paddle.stack(list[Tensor([525],"float32"),Tensor([525],"float32"),Tensor([525],"float32"),Tensor([525],"float32"),], -1, )
paddle.stack(list[Tensor([526],"float32"),Tensor([526],"float32"),Tensor([526],"float32"),Tensor([526],"float32"),], -1, )
paddle.stack(list[Tensor([527],"float32"),Tensor([527],"float32"),Tensor([527],"float32"),Tensor([527],"float32"),], -1, )
paddle.stack(list[Tensor([528],"float32"),Tensor([528],"float32"),Tensor([528],"float32"),Tensor([528],"float32"),], -1, )
paddle.stack(list[Tensor([528],"float32"),Tensor([528],"float32"),], axis=-1, )
paddle.stack(list[Tensor([529],"float32"),Tensor([529],"float32"),Tensor([529],"float32"),Tensor([529],"float32"),], -1, )
paddle.stack(list[Tensor([529],"float32"),Tensor([529],"float32"),], axis=-1, )
paddle.stack(list[Tensor([52],"float32"),Tensor([52],"float32"),Tensor([52],"float32"),Tensor([52],"float32"),], -1, )
paddle.stack(list[Tensor([52],"float32"),Tensor([52],"float32"),], axis=-1, )
paddle.stack(list[Tensor([53, 2, 2, 32],"float16"),Tensor([53, 2, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([53, 2, 4, 32],"float16"),Tensor([53, 2, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([530],"float32"),Tensor([530],"float32"),Tensor([530],"float32"),Tensor([530],"float32"),], -1, )
paddle.stack(list[Tensor([531],"float32"),Tensor([531],"float32"),Tensor([531],"float32"),Tensor([531],"float32"),], -1, )
paddle.stack(list[Tensor([532],"float32"),Tensor([532],"float32"),Tensor([532],"float32"),Tensor([532],"float32"),], -1, )
paddle.stack(list[Tensor([532],"float32"),Tensor([532],"float32"),], axis=-1, )
paddle.stack(list[Tensor([533],"float32"),Tensor([533],"float32"),Tensor([533],"float32"),Tensor([533],"float32"),], -1, )
paddle.stack(list[Tensor([534],"float32"),Tensor([534],"float32"),Tensor([534],"float32"),Tensor([534],"float32"),], -1, )
paddle.stack(list[Tensor([535],"float32"),Tensor([535],"float32"),Tensor([535],"float32"),Tensor([535],"float32"),], -1, )
paddle.stack(list[Tensor([536],"float32"),Tensor([536],"float32"),Tensor([536],"float32"),Tensor([536],"float32"),], -1, )
paddle.stack(list[Tensor([5376, 1],"float32"),Tensor([5376, 1],"float32"),Tensor([5376, 1],"float32"),Tensor([5376, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([5376, 2],"float32"),Tensor([5376, 2],"float32"),Tensor([5376, 2],"float32"),Tensor([5376, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([5376, 3],"float32"),Tensor([5376, 3],"float32"),Tensor([5376, 3],"float32"),Tensor([5376, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([5376, 5],"float32"),Tensor([5376, 5],"float32"),Tensor([5376, 5],"float32"),Tensor([5376, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([5376, 6],"float32"),Tensor([5376, 6],"float32"),Tensor([5376, 6],"float32"),Tensor([5376, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([5376, 7],"float32"),Tensor([5376, 7],"float32"),Tensor([5376, 7],"float32"),Tensor([5376, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([5376, 8],"float32"),Tensor([5376, 8],"float32"),Tensor([5376, 8],"float32"),Tensor([5376, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([5376, 9],"float32"),Tensor([5376, 9],"float32"),Tensor([5376, 9],"float32"),Tensor([5376, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([5376],"float32"),Tensor([5376],"float32"),], axis=-1, )
paddle.stack(list[Tensor([537],"float32"),Tensor([537],"float32"),Tensor([537],"float32"),Tensor([537],"float32"),], -1, )
paddle.stack(list[Tensor([538],"float32"),Tensor([538],"float32"),Tensor([538],"float32"),Tensor([538],"float32"),], -1, )
paddle.stack(list[Tensor([539],"float32"),Tensor([539],"float32"),Tensor([539],"float32"),Tensor([539],"float32"),], -1, )
paddle.stack(list[Tensor([53],"float32"),Tensor([53],"float32"),Tensor([53],"float32"),Tensor([53],"float32"),], -1, )
paddle.stack(list[Tensor([53],"float32"),Tensor([53],"float32"),], axis=-1, )
paddle.stack(list[Tensor([54, 2, 2, 32],"float16"),Tensor([54, 2, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([54, 2, 4, 32],"float16"),Tensor([54, 2, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([54, 54],"float32"),Tensor([54, 54],"float32"),Tensor([54, 54],"float32"),Tensor([54, 54],"float32"),], axis=-1, )
paddle.stack(list[Tensor([54, 54],"float32"),Tensor([54, 54],"float32"),], axis=-1, )
paddle.stack(list[Tensor([5408],"float32"),Tensor([5408],"float32"),Tensor([5408],"float32"),Tensor([5408],"float32"),], -1, )
paddle.stack(list[Tensor([540],"float32"),Tensor([540],"float32"),Tensor([540],"float32"),Tensor([540],"float32"),], -1, )
paddle.stack(list[Tensor([540],"float32"),Tensor([540],"float32"),], axis=-1, )
paddle.stack(list[Tensor([541],"float32"),Tensor([541],"float32"),Tensor([541],"float32"),Tensor([541],"float32"),], -1, )
paddle.stack(list[Tensor([542],"float32"),Tensor([542],"float32"),Tensor([542],"float32"),Tensor([542],"float32"),], -1, )
paddle.stack(list[Tensor([543],"float32"),Tensor([543],"float32"),Tensor([543],"float32"),Tensor([543],"float32"),], -1, )
paddle.stack(list[Tensor([5440],"float32"),Tensor([5440],"float32"),], axis=-1, )
paddle.stack(list[Tensor([544],"float32"),Tensor([544],"float32"),Tensor([544],"float32"),Tensor([544],"float32"),], -1, )
paddle.stack(list[Tensor([544],"float32"),Tensor([544],"float32"),], axis=-1, )
paddle.stack(list[Tensor([545],"float32"),Tensor([545],"float32"),Tensor([545],"float32"),Tensor([545],"float32"),], -1, )
paddle.stack(list[Tensor([546],"float32"),Tensor([546],"float32"),Tensor([546],"float32"),Tensor([546],"float32"),], -1, )
paddle.stack(list[Tensor([547],"float32"),Tensor([547],"float32"),Tensor([547],"float32"),Tensor([547],"float32"),], -1, )
paddle.stack(list[Tensor([547],"float32"),Tensor([547],"float32"),], axis=-1, )
paddle.stack(list[Tensor([548],"float32"),Tensor([548],"float32"),Tensor([548],"float32"),Tensor([548],"float32"),], -1, )
paddle.stack(list[Tensor([549],"float32"),Tensor([549],"float32"),Tensor([549],"float32"),Tensor([549],"float32"),], -1, )
paddle.stack(list[Tensor([54],"float32"),Tensor([54],"float32"),Tensor([54],"float32"),Tensor([54],"float32"),], -1, )
paddle.stack(list[Tensor([54],"float32"),Tensor([54],"float32"),], axis=-1, )
paddle.stack(list[Tensor([550],"float32"),Tensor([550],"float32"),Tensor([550],"float32"),Tensor([550],"float32"),], -1, )
paddle.stack(list[Tensor([550],"float32"),Tensor([550],"float32"),], axis=-1, )
paddle.stack(list[Tensor([551],"float32"),Tensor([551],"float32"),Tensor([551],"float32"),Tensor([551],"float32"),], -1, )
paddle.stack(list[Tensor([552],"float32"),Tensor([552],"float32"),Tensor([552],"float32"),Tensor([552],"float32"),], -1, )
paddle.stack(list[Tensor([553],"float32"),Tensor([553],"float32"),Tensor([553],"float32"),Tensor([553],"float32"),], -1, )
paddle.stack(list[Tensor([554],"float32"),Tensor([554],"float32"),Tensor([554],"float32"),Tensor([554],"float32"),], -1, )
paddle.stack(list[Tensor([555],"float32"),Tensor([555],"float32"),Tensor([555],"float32"),Tensor([555],"float32"),], -1, )
paddle.stack(list[Tensor([556],"float32"),Tensor([556],"float32"),Tensor([556],"float32"),Tensor([556],"float32"),], -1, )
paddle.stack(list[Tensor([557],"float32"),Tensor([557],"float32"),Tensor([557],"float32"),Tensor([557],"float32"),], -1, )
paddle.stack(list[Tensor([558],"float32"),Tensor([558],"float32"),Tensor([558],"float32"),Tensor([558],"float32"),], -1, )
paddle.stack(list[Tensor([559],"float32"),Tensor([559],"float32"),Tensor([559],"float32"),Tensor([559],"float32"),], -1, )
paddle.stack(list[Tensor([55],"float32"),Tensor([55],"float32"),Tensor([55],"float32"),Tensor([55],"float32"),], -1, )
paddle.stack(list[Tensor([55],"float32"),Tensor([55],"float32"),], axis=-1, )
paddle.stack(list[Tensor([56, 56],"float32"),Tensor([56, 56],"float32"),Tensor([56, 56],"float32"),Tensor([56, 56],"float32"),], axis=-1, )
paddle.stack(list[Tensor([56, 56],"float32"),Tensor([56, 56],"float32"),], axis=-1, )
paddle.stack(list[Tensor([560],"float32"),Tensor([560],"float32"),Tensor([560],"float32"),Tensor([560],"float32"),], -1, )
paddle.stack(list[Tensor([560],"float32"),Tensor([560],"float32"),], axis=-1, )
paddle.stack(list[Tensor([561],"float32"),Tensor([561],"float32"),Tensor([561],"float32"),Tensor([561],"float32"),], -1, )
paddle.stack(list[Tensor([561],"float32"),Tensor([561],"float32"),], axis=-1, )
paddle.stack(list[Tensor([562],"float32"),Tensor([562],"float32"),Tensor([562],"float32"),Tensor([562],"float32"),], -1, )
paddle.stack(list[Tensor([563],"float32"),Tensor([563],"float32"),Tensor([563],"float32"),Tensor([563],"float32"),], -1, )
paddle.stack(list[Tensor([564],"float32"),Tensor([564],"float32"),Tensor([564],"float32"),Tensor([564],"float32"),], -1, )
paddle.stack(list[Tensor([565],"float32"),Tensor([565],"float32"),Tensor([565],"float32"),Tensor([565],"float32"),], -1, )
paddle.stack(list[Tensor([566],"float32"),Tensor([566],"float32"),Tensor([566],"float32"),Tensor([566],"float32"),], -1, )
paddle.stack(list[Tensor([567],"float32"),Tensor([567],"float32"),Tensor([567],"float32"),Tensor([567],"float32"),], -1, )
paddle.stack(list[Tensor([568],"float32"),Tensor([568],"float32"),Tensor([568],"float32"),Tensor([568],"float32"),], -1, )
paddle.stack(list[Tensor([569],"float32"),Tensor([569],"float32"),Tensor([569],"float32"),Tensor([569],"float32"),], -1, )
paddle.stack(list[Tensor([56],"float32"),Tensor([56],"float32"),Tensor([56],"float32"),Tensor([56],"float32"),], -1, )
paddle.stack(list[Tensor([56],"float32"),Tensor([56],"float32"),], axis=-1, )
paddle.stack(list[Tensor([57, 2, 2, 32],"float16"),Tensor([57, 2, 2, 32],"float16"),], -1, )
paddle.stack(list[Tensor([57, 2, 4, 32],"float16"),Tensor([57, 2, 4, 32],"float16"),], -1, )
paddle.stack(list[Tensor([570],"float32"),Tensor([570],"float32"),Tensor([570],"float32"),Tensor([570],"float32"),], -1, )
paddle.stack(list[Tensor([571],"float32"),Tensor([571],"float32"),Tensor([571],"float32"),Tensor([571],"float32"),], -1, )
paddle.stack(list[Tensor([572],"float32"),Tensor([572],"float32"),Tensor([572],"float32"),Tensor([572],"float32"),], -1, )
paddle.stack(list[Tensor([573],"float32"),Tensor([573],"float32"),Tensor([573],"float32"),Tensor([573],"float32"),], -1, )
paddle.stack(list[Tensor([574],"float32"),Tensor([574],"float32"),Tensor([574],"float32"),Tensor([574],"float32"),], -1, )
paddle.stack(list[Tensor([575],"float32"),Tensor([575],"float32"),Tensor([575],"float32"),Tensor([575],"float32"),], -1, )
paddle.stack(list[Tensor([57600],"float32"),Tensor([57600],"float32"),Tensor([57600],"float32"),Tensor([57600],"float32"),], -1, )
paddle.stack(list[Tensor([5760],"float32"),Tensor([5760],"float32"),Tensor([5760],"float32"),Tensor([5760],"float32"),], -1, )
paddle.stack(list[Tensor([576],"float32"),Tensor([576],"float32"),Tensor([576],"float32"),Tensor([576],"float32"),], -1, )
paddle.stack(list[Tensor([576],"float32"),Tensor([576],"float32"),], axis=-1, )
paddle.stack(list[Tensor([5776],"float32"),Tensor([5776],"float32"),Tensor([5776],"float32"),Tensor([5776],"float32"),], -1, )
paddle.stack(list[Tensor([5776],"float32"),Tensor([5776],"float32"),], axis=-1, )
paddle.stack(list[Tensor([577],"float32"),Tensor([577],"float32"),Tensor([577],"float32"),Tensor([577],"float32"),], -1, )
paddle.stack(list[Tensor([578],"float32"),Tensor([578],"float32"),Tensor([578],"float32"),Tensor([578],"float32"),], -1, )
paddle.stack(list[Tensor([578],"float32"),Tensor([578],"float32"),], axis=-1, )
paddle.stack(list[Tensor([579],"float32"),Tensor([579],"float32"),Tensor([579],"float32"),Tensor([579],"float32"),], -1, )
paddle.stack(list[Tensor([579],"float32"),Tensor([579],"float32"),], axis=-1, )
paddle.stack(list[Tensor([57],"float32"),Tensor([57],"float32"),Tensor([57],"float32"),Tensor([57],"float32"),], -1, )
paddle.stack(list[Tensor([57],"float32"),Tensor([57],"float32"),], axis=-1, )
paddle.stack(list[Tensor([58, 1, 2, 2],"float32"),Tensor([58, 1, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([58, 1, 8, 2],"float32"),Tensor([58, 1, 8, 2],"float32"),], -1, )
paddle.stack(list[Tensor([58, 58],"float32"),Tensor([58, 58],"float32"),Tensor([58, 58],"float32"),Tensor([58, 58],"float32"),], axis=-1, )
paddle.stack(list[Tensor([58, 58],"float32"),Tensor([58, 58],"float32"),], axis=-1, )
paddle.stack(list[Tensor([5808],"float32"),Tensor([5808],"float32"),Tensor([5808],"float32"),Tensor([5808],"float32"),], -1, )
paddle.stack(list[Tensor([580],"float32"),Tensor([580],"float32"),Tensor([580],"float32"),Tensor([580],"float32"),], -1, )
paddle.stack(list[Tensor([581],"float32"),Tensor([581],"float32"),Tensor([581],"float32"),Tensor([581],"float32"),], -1, )
paddle.stack(list[Tensor([582],"float32"),Tensor([582],"float32"),Tensor([582],"float32"),Tensor([582],"float32"),], -1, )
paddle.stack(list[Tensor([583],"float32"),Tensor([583],"float32"),Tensor([583],"float32"),Tensor([583],"float32"),], -1, )
paddle.stack(list[Tensor([584],"float32"),Tensor([584],"float32"),Tensor([584],"float32"),Tensor([584],"float32"),], -1, )
paddle.stack(list[Tensor([584],"float32"),Tensor([584],"float32"),], axis=-1, )
paddle.stack(list[Tensor([585],"float32"),Tensor([585],"float32"),Tensor([585],"float32"),Tensor([585],"float32"),], -1, )
paddle.stack(list[Tensor([586],"float32"),Tensor([586],"float32"),Tensor([586],"float32"),Tensor([586],"float32"),], -1, )
paddle.stack(list[Tensor([587],"float32"),Tensor([587],"float32"),Tensor([587],"float32"),Tensor([587],"float32"),], -1, )
paddle.stack(list[Tensor([588],"float32"),Tensor([588],"float32"),Tensor([588],"float32"),Tensor([588],"float32"),], -1, )
paddle.stack(list[Tensor([589],"float32"),Tensor([589],"float32"),Tensor([589],"float32"),Tensor([589],"float32"),], -1, )
paddle.stack(list[Tensor([58],"float32"),Tensor([58],"float32"),Tensor([58],"float32"),Tensor([58],"float32"),], -1, )
paddle.stack(list[Tensor([58],"float32"),Tensor([58],"float32"),], axis=-1, )
paddle.stack(list[Tensor([590],"float32"),Tensor([590],"float32"),Tensor([590],"float32"),Tensor([590],"float32"),], -1, )
paddle.stack(list[Tensor([591],"float32"),Tensor([591],"float32"),Tensor([591],"float32"),Tensor([591],"float32"),], -1, )
paddle.stack(list[Tensor([592],"float32"),Tensor([592],"float32"),Tensor([592],"float32"),Tensor([592],"float32"),], -1, )
paddle.stack(list[Tensor([592],"float32"),Tensor([592],"float32"),], axis=-1, )
paddle.stack(list[Tensor([593],"float32"),Tensor([593],"float32"),Tensor([593],"float32"),Tensor([593],"float32"),], -1, )
paddle.stack(list[Tensor([594],"float32"),Tensor([594],"float32"),Tensor([594],"float32"),Tensor([594],"float32"),], -1, )
paddle.stack(list[Tensor([595],"float32"),Tensor([595],"float32"),Tensor([595],"float32"),Tensor([595],"float32"),], -1, )
paddle.stack(list[Tensor([596],"float32"),Tensor([596],"float32"),Tensor([596],"float32"),Tensor([596],"float32"),], -1, )
paddle.stack(list[Tensor([597],"float32"),Tensor([597],"float32"),Tensor([597],"float32"),Tensor([597],"float32"),], -1, )
paddle.stack(list[Tensor([598],"float32"),Tensor([598],"float32"),Tensor([598],"float32"),Tensor([598],"float32"),], -1, )
paddle.stack(list[Tensor([599],"float32"),Tensor([599],"float32"),Tensor([599],"float32"),Tensor([599],"float32"),], -1, )
paddle.stack(list[Tensor([59],"float32"),Tensor([59],"float32"),Tensor([59],"float32"),Tensor([59],"float32"),], -1, )
paddle.stack(list[Tensor([59],"float32"),Tensor([59],"float32"),], axis=-1, )
paddle.stack(list[Tensor([5],"float32"),Tensor([5],"float32"),Tensor([5],"float32"),Tensor([5],"float32"),], -1, )
paddle.stack(list[Tensor([5],"float32"),Tensor([5],"float32"),], axis=-1, )
paddle.stack(list[Tensor([5],"float64"),Tensor([5],"float64"),], 0, )
paddle.stack(list[Tensor([6, 2, 15, 2],"float32"),Tensor([6, 2, 15, 2],"float32"),], axis=-1, )
paddle.stack(list[Tensor([6, 2, 17, 2],"float32"),Tensor([6, 2, 17, 2],"float32"),], axis=-1, )
paddle.stack(list[Tensor([6, 28, 28],"float32"),Tensor([6, 28, 28],"float32"),Tensor([6, 28, 28],"float32"),], axis=-4, )
paddle.stack(list[Tensor([6, 6, 7, 3],"float32"),Tensor([6, 6, 7, 3],"float32"),], axis=-1, )
paddle.stack(list[Tensor([6, 6],"float32"),Tensor([6, 6],"float32"),Tensor([6, 6],"float32"),Tensor([6, 6],"float32"),], axis=-1, )
paddle.stack(list[Tensor([6, 6],"float32"),Tensor([6, 6],"float32"),], axis=-1, )
paddle.stack(list[Tensor([6, 8, 8],"float32"),Tensor([6, 8, 8],"float32"),Tensor([6, 8, 8],"float32"),], axis=-4, )
paddle.stack(list[Tensor([60, 60],"float32"),Tensor([60, 60],"float32"),Tensor([60, 60],"float32"),Tensor([60, 60],"float32"),], axis=-1, )
paddle.stack(list[Tensor([60, 60],"float32"),Tensor([60, 60],"float32"),], -1, )
paddle.stack(list[Tensor([60, 60],"float32"),Tensor([60, 60],"float32"),], axis=-1, )
paddle.stack(list[Tensor([602],"float32"),Tensor([602],"float32"),Tensor([602],"float32"),Tensor([602],"float32"),], -1, )
paddle.stack(list[Tensor([603],"float32"),Tensor([603],"float32"),Tensor([603],"float32"),Tensor([603],"float32"),], -1, )
paddle.stack(list[Tensor([604],"float32"),Tensor([604],"float32"),Tensor([604],"float32"),Tensor([604],"float32"),], -1, )
paddle.stack(list[Tensor([605],"float32"),Tensor([605],"float32"),Tensor([605],"float32"),Tensor([605],"float32"),], -1, )
paddle.stack(list[Tensor([6069],"float32"),Tensor([6069],"float32"),], axis=-1, )
paddle.stack(list[Tensor([606],"float32"),Tensor([606],"float32"),Tensor([606],"float32"),Tensor([606],"float32"),], -1, )
paddle.stack(list[Tensor([607],"float32"),Tensor([607],"float32"),Tensor([607],"float32"),Tensor([607],"float32"),], -1, )
paddle.stack(list[Tensor([60840],"float32"),Tensor([60840],"float32"),Tensor([60840],"float32"),Tensor([60840],"float32"),], -1, )
paddle.stack(list[Tensor([608],"float32"),Tensor([608],"float32"),Tensor([608],"float32"),Tensor([608],"float32"),], -1, )
paddle.stack(list[Tensor([608],"float32"),Tensor([608],"float32"),], axis=-1, )
paddle.stack(list[Tensor([609],"float32"),Tensor([609],"float32"),Tensor([609],"float32"),Tensor([609],"float32"),], -1, )
paddle.stack(list[Tensor([60],"float32"),Tensor([60],"float32"),Tensor([60],"float32"),Tensor([60],"float32"),], -1, )
paddle.stack(list[Tensor([60],"float32"),Tensor([60],"float32"),], axis=-1, )
paddle.stack(list[Tensor([610],"float32"),Tensor([610],"float32"),Tensor([610],"float32"),Tensor([610],"float32"),], -1, )
paddle.stack(list[Tensor([610],"float32"),Tensor([610],"float32"),], axis=-1, )
paddle.stack(list[Tensor([611],"float32"),Tensor([611],"float32"),Tensor([611],"float32"),Tensor([611],"float32"),], -1, )
paddle.stack(list[Tensor([612],"float32"),Tensor([612],"float32"),Tensor([612],"float32"),Tensor([612],"float32"),], -1, )
paddle.stack(list[Tensor([613],"float32"),Tensor([613],"float32"),Tensor([613],"float32"),Tensor([613],"float32"),], -1, )
paddle.stack(list[Tensor([614],"float32"),Tensor([614],"float32"),Tensor([614],"float32"),Tensor([614],"float32"),], -1, )
paddle.stack(list[Tensor([6150],"float32"),Tensor([6150],"float32"),], axis=-1, )
paddle.stack(list[Tensor([616],"float32"),Tensor([616],"float32"),Tensor([616],"float32"),Tensor([616],"float32"),], -1, )
paddle.stack(list[Tensor([617],"float32"),Tensor([617],"float32"),Tensor([617],"float32"),Tensor([617],"float32"),], -1, )
paddle.stack(list[Tensor([618],"float32"),Tensor([618],"float32"),Tensor([618],"float32"),Tensor([618],"float32"),], -1, )
paddle.stack(list[Tensor([61952],"float32"),Tensor([61952],"float32"),Tensor([61952],"float32"),Tensor([61952],"float32"),], -1, )
paddle.stack(list[Tensor([619],"float32"),Tensor([619],"float32"),Tensor([619],"float32"),Tensor([619],"float32"),], -1, )
paddle.stack(list[Tensor([61],"float32"),Tensor([61],"float32"),Tensor([61],"float32"),Tensor([61],"float32"),], -1, )
paddle.stack(list[Tensor([61],"float32"),Tensor([61],"float32"),], axis=-1, )
paddle.stack(list[Tensor([620],"float32"),Tensor([620],"float32"),Tensor([620],"float32"),Tensor([620],"float32"),], -1, )
paddle.stack(list[Tensor([621],"float32"),Tensor([621],"float32"),Tensor([621],"float32"),Tensor([621],"float32"),], -1, )
paddle.stack(list[Tensor([622],"float32"),Tensor([622],"float32"),Tensor([622],"float32"),Tensor([622],"float32"),], -1, )
paddle.stack(list[Tensor([623],"float32"),Tensor([623],"float32"),Tensor([623],"float32"),Tensor([623],"float32"),], -1, )
paddle.stack(list[Tensor([624],"float32"),Tensor([624],"float32"),Tensor([624],"float32"),Tensor([624],"float32"),], -1, )
paddle.stack(list[Tensor([624],"float32"),Tensor([624],"float32"),], axis=-1, )
paddle.stack(list[Tensor([625],"float32"),Tensor([625],"float32"),Tensor([625],"float32"),Tensor([625],"float32"),], -1, )
paddle.stack(list[Tensor([626],"float32"),Tensor([626],"float32"),Tensor([626],"float32"),Tensor([626],"float32"),], -1, )
paddle.stack(list[Tensor([6272],"float32"),Tensor([6272],"float32"),Tensor([6272],"float32"),Tensor([6272],"float32"),], -1, )
paddle.stack(list[Tensor([627],"float32"),Tensor([627],"float32"),Tensor([627],"float32"),Tensor([627],"float32"),], -1, )
paddle.stack(list[Tensor([628],"float32"),Tensor([628],"float32"),Tensor([628],"float32"),Tensor([628],"float32"),], -1, )
paddle.stack(list[Tensor([629],"float32"),Tensor([629],"float32"),Tensor([629],"float32"),Tensor([629],"float32"),], -1, )
paddle.stack(list[Tensor([62],"float32"),Tensor([62],"float32"),Tensor([62],"float32"),Tensor([62],"float32"),], -1, )
paddle.stack(list[Tensor([62],"float32"),Tensor([62],"float32"),], axis=-1, )
paddle.stack(list[Tensor([630],"float32"),Tensor([630],"float32"),Tensor([630],"float32"),Tensor([630],"float32"),], -1, )
paddle.stack(list[Tensor([631],"float32"),Tensor([631],"float32"),Tensor([631],"float32"),Tensor([631],"float32"),], -1, )
paddle.stack(list[Tensor([632],"float32"),Tensor([632],"float32"),Tensor([632],"float32"),Tensor([632],"float32"),], -1, )
paddle.stack(list[Tensor([633],"float32"),Tensor([633],"float32"),Tensor([633],"float32"),Tensor([633],"float32"),], -1, )
paddle.stack(list[Tensor([634],"float32"),Tensor([634],"float32"),Tensor([634],"float32"),Tensor([634],"float32"),], -1, )
paddle.stack(list[Tensor([635],"float32"),Tensor([635],"float32"),Tensor([635],"float32"),Tensor([635],"float32"),], -1, )
paddle.stack(list[Tensor([636],"float32"),Tensor([636],"float32"),Tensor([636],"float32"),Tensor([636],"float32"),], -1, )
paddle.stack(list[Tensor([636],"float32"),Tensor([636],"float32"),], axis=-1, )
paddle.stack(list[Tensor([637],"float32"),Tensor([637],"float32"),Tensor([637],"float32"),Tensor([637],"float32"),], -1, )
paddle.stack(list[Tensor([638],"float32"),Tensor([638],"float32"),Tensor([638],"float32"),Tensor([638],"float32"),], -1, )
paddle.stack(list[Tensor([639],"float32"),Tensor([639],"float32"),Tensor([639],"float32"),Tensor([639],"float32"),], -1, )
paddle.stack(list[Tensor([63],"float32"),Tensor([63],"float32"),Tensor([63],"float32"),Tensor([63],"float32"),], -1, )
paddle.stack(list[Tensor([63],"float32"),Tensor([63],"float32"),], axis=-1, )
paddle.stack(list[Tensor([64, 32, 500, 4],"float32"),Tensor([64, 32, 500, 4],"float32"),Tensor([64, 32, 500, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([64, 64, 64, 64],"float32"),Tensor([64, 64, 64, 64],"float32"),Tensor([64, 64, 64, 64],"float32"),Tensor([64, 64, 64, 64],"float32"),Tensor([64, 64, 64, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([64, 64],"float32"),Tensor([64, 64],"float32"),Tensor([64, 64],"float32"),Tensor([64, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([64, 64],"float32"),Tensor([64, 64],"float32"),], -1, )
paddle.stack(list[Tensor([64, 64],"float32"),Tensor([64, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([6400, 4],"float32"),], 0, )
paddle.stack(list[Tensor([6400],"float32"),Tensor([6400],"float32"),Tensor([6400],"float32"),Tensor([6400],"float32"),], -1, )
paddle.stack(list[Tensor([6400],"float32"),Tensor([6400],"float32"),], axis=-1, )
paddle.stack(list[Tensor([6400],"float32"),], 0, )
paddle.stack(list[Tensor([6400],"int32"),], 0, )
paddle.stack(list[Tensor([640],"float32"),Tensor([640],"float32"),Tensor([640],"float32"),Tensor([640],"float32"),], -1, )
paddle.stack(list[Tensor([640],"float32"),Tensor([640],"float32"),], axis=-1, )
paddle.stack(list[Tensor([641],"float32"),Tensor([641],"float32"),Tensor([641],"float32"),Tensor([641],"float32"),], -1, )
paddle.stack(list[Tensor([642],"float32"),Tensor([642],"float32"),Tensor([642],"float32"),Tensor([642],"float32"),], -1, )
paddle.stack(list[Tensor([643],"float32"),Tensor([643],"float32"),Tensor([643],"float32"),Tensor([643],"float32"),], -1, )
paddle.stack(list[Tensor([644],"float32"),Tensor([644],"float32"),Tensor([644],"float32"),Tensor([644],"float32"),], -1, )
paddle.stack(list[Tensor([647],"float32"),Tensor([647],"float32"),Tensor([647],"float32"),Tensor([647],"float32"),], -1, )
paddle.stack(list[Tensor([648],"float32"),Tensor([648],"float32"),Tensor([648],"float32"),Tensor([648],"float32"),], -1, )
paddle.stack(list[Tensor([649],"float32"),Tensor([649],"float32"),Tensor([649],"float32"),Tensor([649],"float32"),], -1, )
paddle.stack(list[Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], -1, )
paddle.stack(list[Tensor([64],"float32"),Tensor([64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([650],"float32"),Tensor([650],"float32"),Tensor([650],"float32"),Tensor([650],"float32"),], -1, )
paddle.stack(list[Tensor([651],"float32"),Tensor([651],"float32"),Tensor([651],"float32"),Tensor([651],"float32"),], -1, )
paddle.stack(list[Tensor([652],"float32"),Tensor([652],"float32"),Tensor([652],"float32"),Tensor([652],"float32"),], -1, )
paddle.stack(list[Tensor([652],"float32"),Tensor([652],"float32"),], axis=-1, )
paddle.stack(list[Tensor([653],"float32"),Tensor([653],"float32"),Tensor([653],"float32"),Tensor([653],"float32"),], -1, )
paddle.stack(list[Tensor([654],"float32"),Tensor([654],"float32"),Tensor([654],"float32"),Tensor([654],"float32"),], -1, )
paddle.stack(list[Tensor([65536],"float32"),Tensor([65536],"float32"),Tensor([65536],"float32"),Tensor([65536],"float32"),], -1, )
paddle.stack(list[Tensor([656],"float32"),Tensor([656],"float32"),Tensor([656],"float32"),Tensor([656],"float32"),], -1, )
paddle.stack(list[Tensor([657],"float32"),Tensor([657],"float32"),Tensor([657],"float32"),Tensor([657],"float32"),], -1, )
paddle.stack(list[Tensor([658],"float32"),Tensor([658],"float32"),Tensor([658],"float32"),Tensor([658],"float32"),], -1, )
paddle.stack(list[Tensor([65],"float32"),Tensor([65],"float32"),Tensor([65],"float32"),Tensor([65],"float32"),], -1, )
paddle.stack(list[Tensor([65],"float32"),Tensor([65],"float32"),], axis=-1, )
paddle.stack(list[Tensor([662],"float32"),Tensor([662],"float32"),Tensor([662],"float32"),Tensor([662],"float32"),], -1, )
paddle.stack(list[Tensor([663],"float32"),Tensor([663],"float32"),Tensor([663],"float32"),Tensor([663],"float32"),], -1, )
paddle.stack(list[Tensor([664],"float32"),Tensor([664],"float32"),Tensor([664],"float32"),Tensor([664],"float32"),], -1, )
paddle.stack(list[Tensor([664],"float32"),Tensor([664],"float32"),], axis=-1, )
paddle.stack(list[Tensor([665],"float32"),Tensor([665],"float32"),Tensor([665],"float32"),Tensor([665],"float32"),], -1, )
paddle.stack(list[Tensor([666],"float32"),Tensor([666],"float32"),Tensor([666],"float32"),Tensor([666],"float32"),], -1, )
paddle.stack(list[Tensor([667],"float32"),Tensor([667],"float32"),Tensor([667],"float32"),Tensor([667],"float32"),], -1, )
paddle.stack(list[Tensor([668],"float32"),Tensor([668],"float32"),Tensor([668],"float32"),Tensor([668],"float32"),], -1, )
paddle.stack(list[Tensor([668],"float32"),Tensor([668],"float32"),], axis=-1, )
paddle.stack(list[Tensor([669],"float32"),Tensor([669],"float32"),Tensor([669],"float32"),Tensor([669],"float32"),], -1, )
paddle.stack(list[Tensor([66],"float32"),Tensor([66],"float32"),Tensor([66],"float32"),Tensor([66],"float32"),], -1, )
paddle.stack(list[Tensor([66],"float32"),Tensor([66],"float32"),], axis=-1, )
paddle.stack(list[Tensor([670],"float32"),Tensor([670],"float32"),Tensor([670],"float32"),Tensor([670],"float32"),], -1, )
paddle.stack(list[Tensor([671],"float32"),Tensor([671],"float32"),Tensor([671],"float32"),Tensor([671],"float32"),], -1, )
paddle.stack(list[Tensor([672],"float32"),Tensor([672],"float32"),Tensor([672],"float32"),Tensor([672],"float32"),], -1, )
paddle.stack(list[Tensor([672],"float32"),Tensor([672],"float32"),], axis=-1, )
paddle.stack(list[Tensor([673],"float32"),Tensor([673],"float32"),Tensor([673],"float32"),Tensor([673],"float32"),], -1, )
paddle.stack(list[Tensor([674],"float32"),Tensor([674],"float32"),Tensor([674],"float32"),Tensor([674],"float32"),], -1, )
paddle.stack(list[Tensor([675],"float32"),Tensor([675],"float32"),Tensor([675],"float32"),Tensor([675],"float32"),], -1, )
paddle.stack(list[Tensor([676],"float32"),Tensor([676],"float32"),Tensor([676],"float32"),Tensor([676],"float32"),], -1, )
paddle.stack(list[Tensor([676],"float32"),Tensor([676],"float32"),], axis=-1, )
paddle.stack(list[Tensor([677],"float32"),Tensor([677],"float32"),Tensor([677],"float32"),Tensor([677],"float32"),], -1, )
paddle.stack(list[Tensor([678],"float32"),Tensor([678],"float32"),Tensor([678],"float32"),Tensor([678],"float32"),], -1, )
paddle.stack(list[Tensor([679],"float32"),Tensor([679],"float32"),Tensor([679],"float32"),Tensor([679],"float32"),], -1, )
paddle.stack(list[Tensor([67],"float32"),Tensor([67],"float32"),Tensor([67],"float32"),Tensor([67],"float32"),], -1, )
paddle.stack(list[Tensor([67],"float32"),Tensor([67],"float32"),], axis=-1, )
paddle.stack(list[Tensor([68, 68],"float32"),Tensor([68, 68],"float32"),Tensor([68, 68],"float32"),Tensor([68, 68],"float32"),], axis=-1, )
paddle.stack(list[Tensor([68, 68],"float32"),Tensor([68, 68],"float32"),], -1, )
paddle.stack(list[Tensor([68, 68],"float32"),Tensor([68, 68],"float32"),], axis=-1, )
paddle.stack(list[Tensor([6804, 10],"float32"),Tensor([6804, 10],"float32"),Tensor([6804, 10],"float32"),Tensor([6804, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([6804, 1],"float32"),Tensor([6804, 1],"float32"),Tensor([6804, 1],"float32"),Tensor([6804, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([6804, 2],"float32"),Tensor([6804, 2],"float32"),Tensor([6804, 2],"float32"),Tensor([6804, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([6804, 3],"float32"),Tensor([6804, 3],"float32"),Tensor([6804, 3],"float32"),Tensor([6804, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([6804, 4],"float32"),Tensor([6804, 4],"float32"),Tensor([6804, 4],"float32"),Tensor([6804, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([6804, 5],"float32"),Tensor([6804, 5],"float32"),Tensor([6804, 5],"float32"),Tensor([6804, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([6804, 6],"float32"),Tensor([6804, 6],"float32"),Tensor([6804, 6],"float32"),Tensor([6804, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([6804, 7],"float32"),Tensor([6804, 7],"float32"),Tensor([6804, 7],"float32"),Tensor([6804, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([6804, 8],"float32"),Tensor([6804, 8],"float32"),Tensor([6804, 8],"float32"),Tensor([6804, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([6804, 9],"float32"),Tensor([6804, 9],"float32"),Tensor([6804, 9],"float32"),Tensor([6804, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([6804],"float32"),Tensor([6804],"float32"),], axis=-1, )
paddle.stack(list[Tensor([680],"float32"),Tensor([680],"float32"),Tensor([680],"float32"),Tensor([680],"float32"),], -1, )
paddle.stack(list[Tensor([681],"float32"),Tensor([681],"float32"),Tensor([681],"float32"),Tensor([681],"float32"),], -1, )
paddle.stack(list[Tensor([682],"float32"),Tensor([682],"float32"),Tensor([682],"float32"),Tensor([682],"float32"),], -1, )
paddle.stack(list[Tensor([683],"float32"),Tensor([683],"float32"),Tensor([683],"float32"),Tensor([683],"float32"),], -1, )
paddle.stack(list[Tensor([684],"float32"),Tensor([684],"float32"),Tensor([684],"float32"),Tensor([684],"float32"),], -1, )
paddle.stack(list[Tensor([684],"float32"),Tensor([684],"float32"),], axis=-1, )
paddle.stack(list[Tensor([685],"float32"),Tensor([685],"float32"),Tensor([685],"float32"),Tensor([685],"float32"),], -1, )
paddle.stack(list[Tensor([686],"float32"),Tensor([686],"float32"),Tensor([686],"float32"),Tensor([686],"float32"),], -1, )
paddle.stack(list[Tensor([6885, 1],"float32"),Tensor([6885, 1],"float32"),Tensor([6885, 1],"float32"),Tensor([6885, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([6885, 2],"float32"),Tensor([6885, 2],"float32"),Tensor([6885, 2],"float32"),Tensor([6885, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([6885, 3],"float32"),Tensor([6885, 3],"float32"),Tensor([6885, 3],"float32"),Tensor([6885, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([6885, 5],"float32"),Tensor([6885, 5],"float32"),Tensor([6885, 5],"float32"),Tensor([6885, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([6885],"float32"),Tensor([6885],"float32"),], axis=-1, )
paddle.stack(list[Tensor([688],"float32"),Tensor([688],"float32"),Tensor([688],"float32"),Tensor([688],"float32"),], -1, )
paddle.stack(list[Tensor([688],"float32"),Tensor([688],"float32"),], axis=-1, )
paddle.stack(list[Tensor([689],"float32"),Tensor([689],"float32"),Tensor([689],"float32"),Tensor([689],"float32"),], -1, )
paddle.stack(list[Tensor([68],"float32"),Tensor([68],"float32"),Tensor([68],"float32"),Tensor([68],"float32"),], -1, )
paddle.stack(list[Tensor([68],"float32"),Tensor([68],"float32"),], axis=-1, )
paddle.stack(list[Tensor([690],"float32"),Tensor([690],"float32"),Tensor([690],"float32"),Tensor([690],"float32"),], -1, )
paddle.stack(list[Tensor([6912],"float32"),Tensor([6912],"float32"),Tensor([6912],"float32"),Tensor([6912],"float32"),], -1, )
paddle.stack(list[Tensor([691],"float32"),Tensor([691],"float32"),Tensor([691],"float32"),Tensor([691],"float32"),], -1, )
paddle.stack(list[Tensor([692],"float32"),Tensor([692],"float32"),Tensor([692],"float32"),Tensor([692],"float32"),], -1, )
paddle.stack(list[Tensor([692],"float32"),Tensor([692],"float32"),], axis=-1, )
paddle.stack(list[Tensor([693],"float32"),Tensor([693],"float32"),Tensor([693],"float32"),Tensor([693],"float32"),], -1, )
paddle.stack(list[Tensor([694],"float32"),Tensor([694],"float32"),Tensor([694],"float32"),Tensor([694],"float32"),], -1, )
paddle.stack(list[Tensor([696],"float32"),Tensor([696],"float32"),Tensor([696],"float32"),Tensor([696],"float32"),], -1, )
paddle.stack(list[Tensor([696],"float32"),Tensor([696],"float32"),], axis=-1, )
paddle.stack(list[Tensor([697],"float32"),Tensor([697],"float32"),Tensor([697],"float32"),Tensor([697],"float32"),], -1, )
paddle.stack(list[Tensor([698],"float32"),Tensor([698],"float32"),Tensor([698],"float32"),Tensor([698],"float32"),], -1, )
paddle.stack(list[Tensor([699],"float32"),Tensor([699],"float32"),Tensor([699],"float32"),Tensor([699],"float32"),], -1, )
paddle.stack(list[Tensor([69],"float32"),Tensor([69],"float32"),Tensor([69],"float32"),Tensor([69],"float32"),], -1, )
paddle.stack(list[Tensor([69],"float32"),Tensor([69],"float32"),], axis=-1, )
paddle.stack(list[Tensor([6],"float32"),Tensor([6],"float32"),Tensor([6],"float32"),Tensor([6],"float32"),], -1, )
paddle.stack(list[Tensor([6],"float32"),Tensor([6],"float32"),], )
paddle.stack(list[Tensor([6],"float32"),Tensor([6],"float32"),], axis=-1, )
paddle.stack(list[Tensor([6],"float32"),], )
paddle.stack(list[Tensor([7, 7],"float32"),Tensor([7, 7],"float32"),Tensor([7, 7],"float32"),Tensor([7, 7],"float32"),], axis=-1, )
paddle.stack(list[Tensor([7, 7],"float32"),Tensor([7, 7],"float32"),], axis=-1, )
paddle.stack(list[Tensor([7, 7],"int64"),Tensor([7, 7],"int64"),Tensor([7, 7],"int64"),Tensor([7, 7],"int64"),], axis=-1, )
paddle.stack(list[Tensor([7, 7],"int64"),Tensor([7, 7],"int64"),], )
paddle.stack(list[Tensor([702],"float32"),Tensor([702],"float32"),Tensor([702],"float32"),Tensor([702],"float32"),], -1, )
paddle.stack(list[Tensor([703],"float32"),Tensor([703],"float32"),Tensor([703],"float32"),Tensor([703],"float32"),], -1, )
paddle.stack(list[Tensor([704],"float32"),Tensor([704],"float32"),Tensor([704],"float32"),Tensor([704],"float32"),], -1, )
paddle.stack(list[Tensor([704],"float32"),Tensor([704],"float32"),], axis=-1, )
paddle.stack(list[Tensor([70560],"float32"),Tensor([70560],"float32"),Tensor([70560],"float32"),Tensor([70560],"float32"),], -1, )
paddle.stack(list[Tensor([7056],"float32"),Tensor([7056],"float32"),Tensor([7056],"float32"),Tensor([7056],"float32"),], -1, )
paddle.stack(list[Tensor([7056],"float32"),Tensor([7056],"float32"),], axis=-1, )
paddle.stack(list[Tensor([706],"float32"),Tensor([706],"float32"),Tensor([706],"float32"),Tensor([706],"float32"),], -1, )
paddle.stack(list[Tensor([707],"float32"),Tensor([707],"float32"),Tensor([707],"float32"),Tensor([707],"float32"),], -1, )
paddle.stack(list[Tensor([708],"float32"),Tensor([708],"float32"),Tensor([708],"float32"),Tensor([708],"float32"),], -1, )
paddle.stack(list[Tensor([709],"float32"),Tensor([709],"float32"),Tensor([709],"float32"),Tensor([709],"float32"),], -1, )
paddle.stack(list[Tensor([70],"float32"),Tensor([70],"float32"),Tensor([70],"float32"),Tensor([70],"float32"),], -1, )
paddle.stack(list[Tensor([70],"float32"),Tensor([70],"float32"),], axis=-1, )
paddle.stack(list[Tensor([710],"float32"),Tensor([710],"float32"),Tensor([710],"float32"),Tensor([710],"float32"),], -1, )
paddle.stack(list[Tensor([711],"float32"),Tensor([711],"float32"),Tensor([711],"float32"),Tensor([711],"float32"),], -1, )
paddle.stack(list[Tensor([714],"float32"),Tensor([714],"float32"),Tensor([714],"float32"),Tensor([714],"float32"),], -1, )
paddle.stack(list[Tensor([716],"float32"),Tensor([716],"float32"),Tensor([716],"float32"),Tensor([716],"float32"),], -1, )
paddle.stack(list[Tensor([717],"float32"),Tensor([717],"float32"),Tensor([717],"float32"),Tensor([717],"float32"),], -1, )
paddle.stack(list[Tensor([718],"float32"),Tensor([718],"float32"),Tensor([718],"float32"),Tensor([718],"float32"),], -1, )
paddle.stack(list[Tensor([719],"float32"),Tensor([719],"float32"),Tensor([719],"float32"),Tensor([719],"float32"),], -1, )
paddle.stack(list[Tensor([71],"float32"),Tensor([71],"float32"),Tensor([71],"float32"),Tensor([71],"float32"),], -1, )
paddle.stack(list[Tensor([71],"float32"),Tensor([71],"float32"),], axis=-1, )
paddle.stack(list[Tensor([72, 72],"float32"),Tensor([72, 72],"float32"),Tensor([72, 72],"float32"),Tensor([72, 72],"float32"),], axis=-1, )
paddle.stack(list[Tensor([72, 72],"float32"),Tensor([72, 72],"float32"),], -1, )
paddle.stack(list[Tensor([72, 72],"float32"),Tensor([72, 72],"float32"),], axis=-1, )
paddle.stack(list[Tensor([7200],"float32"),Tensor([7200],"float32"),Tensor([7200],"float32"),Tensor([7200],"float32"),], -1, )
paddle.stack(list[Tensor([720],"float32"),Tensor([720],"float32"),Tensor([720],"float32"),Tensor([720],"float32"),], -1, )
paddle.stack(list[Tensor([720],"float32"),Tensor([720],"float32"),], axis=-1, )
paddle.stack(list[Tensor([721],"float32"),Tensor([721],"float32"),Tensor([721],"float32"),Tensor([721],"float32"),], -1, )
paddle.stack(list[Tensor([722],"float32"),Tensor([722],"float32"),Tensor([722],"float32"),Tensor([722],"float32"),], -1, )
paddle.stack(list[Tensor([725],"float32"),Tensor([725],"float32"),Tensor([725],"float32"),Tensor([725],"float32"),], -1, )
paddle.stack(list[Tensor([726],"float32"),Tensor([726],"float32"),Tensor([726],"float32"),Tensor([726],"float32"),], -1, )
paddle.stack(list[Tensor([727],"float32"),Tensor([727],"float32"),Tensor([727],"float32"),Tensor([727],"float32"),], -1, )
paddle.stack(list[Tensor([728],"float32"),Tensor([728],"float32"),Tensor([728],"float32"),Tensor([728],"float32"),], -1, )
paddle.stack(list[Tensor([729],"float32"),Tensor([729],"float32"),Tensor([729],"float32"),Tensor([729],"float32"),], -1, )
paddle.stack(list[Tensor([72],"float32"),Tensor([72],"float32"),Tensor([72],"float32"),Tensor([72],"float32"),], -1, )
paddle.stack(list[Tensor([72],"float32"),Tensor([72],"float32"),], axis=-1, )
paddle.stack(list[Tensor([730],"float32"),Tensor([730],"float32"),Tensor([730],"float32"),Tensor([730],"float32"),], -1, )
paddle.stack(list[Tensor([731],"float32"),Tensor([731],"float32"),Tensor([731],"float32"),Tensor([731],"float32"),], -1, )
paddle.stack(list[Tensor([732],"float32"),Tensor([732],"float32"),Tensor([732],"float32"),Tensor([732],"float32"),], -1, )
paddle.stack(list[Tensor([733],"float32"),Tensor([733],"float32"),Tensor([733],"float32"),Tensor([733],"float32"),], -1, )
paddle.stack(list[Tensor([734],"float32"),Tensor([734],"float32"),Tensor([734],"float32"),Tensor([734],"float32"),], -1, )
paddle.stack(list[Tensor([735],"float32"),Tensor([735],"float32"),Tensor([735],"float32"),Tensor([735],"float32"),], -1, )
paddle.stack(list[Tensor([736],"float32"),Tensor([736],"float32"),Tensor([736],"float32"),Tensor([736],"float32"),], -1, )
paddle.stack(list[Tensor([73728],"float32"),Tensor([73728],"float32"),Tensor([73728],"float32"),Tensor([73728],"float32"),], -1, )
paddle.stack(list[Tensor([738],"float32"),Tensor([738],"float32"),Tensor([738],"float32"),Tensor([738],"float32"),], -1, )
paddle.stack(list[Tensor([73984],"float32"),Tensor([73984],"float32"),Tensor([73984],"float32"),Tensor([73984],"float32"),], -1, )
paddle.stack(list[Tensor([739],"float32"),Tensor([739],"float32"),Tensor([739],"float32"),Tensor([739],"float32"),], -1, )
paddle.stack(list[Tensor([73],"float32"),Tensor([73],"float32"),Tensor([73],"float32"),Tensor([73],"float32"),], -1, )
paddle.stack(list[Tensor([73],"float32"),Tensor([73],"float32"),], axis=-1, )
paddle.stack(list[Tensor([740],"float32"),Tensor([740],"float32"),Tensor([740],"float32"),Tensor([740],"float32"),], -1, )
paddle.stack(list[Tensor([741],"float32"),Tensor([741],"float32"),Tensor([741],"float32"),Tensor([741],"float32"),], -1, )
paddle.stack(list[Tensor([742],"float32"),Tensor([742],"float32"),Tensor([742],"float32"),Tensor([742],"float32"),], -1, )
paddle.stack(list[Tensor([743],"float32"),Tensor([743],"float32"),Tensor([743],"float32"),Tensor([743],"float32"),], -1, )
paddle.stack(list[Tensor([747],"float32"),Tensor([747],"float32"),Tensor([747],"float32"),Tensor([747],"float32"),], -1, )
paddle.stack(list[Tensor([748],"float32"),Tensor([748],"float32"),Tensor([748],"float32"),Tensor([748],"float32"),], -1, )
paddle.stack(list[Tensor([749],"float32"),Tensor([749],"float32"),Tensor([749],"float32"),Tensor([749],"float32"),], -1, )
paddle.stack(list[Tensor([74],"float32"),Tensor([74],"float32"),Tensor([74],"float32"),Tensor([74],"float32"),], -1, )
paddle.stack(list[Tensor([74],"float32"),Tensor([74],"float32"),], axis=-1, )
paddle.stack(list[Tensor([750],"float32"),Tensor([750],"float32"),Tensor([750],"float32"),Tensor([750],"float32"),], -1, )
paddle.stack(list[Tensor([751],"float32"),Tensor([751],"float32"),Tensor([751],"float32"),Tensor([751],"float32"),], -1, )
paddle.stack(list[Tensor([752],"float32"),Tensor([752],"float32"),Tensor([752],"float32"),Tensor([752],"float32"),], -1, )
paddle.stack(list[Tensor([755],"float32"),Tensor([755],"float32"),Tensor([755],"float32"),Tensor([755],"float32"),], -1, )
paddle.stack(list[Tensor([756],"float32"),Tensor([756],"float32"),Tensor([756],"float32"),Tensor([756],"float32"),], -1, )
paddle.stack(list[Tensor([757],"float32"),Tensor([757],"float32"),Tensor([757],"float32"),Tensor([757],"float32"),], -1, )
paddle.stack(list[Tensor([7581],"float32"),Tensor([7581],"float32"),], axis=-1, )
paddle.stack(list[Tensor([758],"float32"),Tensor([758],"float32"),Tensor([758],"float32"),Tensor([758],"float32"),], -1, )
paddle.stack(list[Tensor([759],"float32"),Tensor([759],"float32"),Tensor([759],"float32"),Tensor([759],"float32"),], -1, )
paddle.stack(list[Tensor([75],"float32"),Tensor([75],"float32"),Tensor([75],"float32"),Tensor([75],"float32"),], -1, )
paddle.stack(list[Tensor([75],"float32"),Tensor([75],"float32"),], axis=-1, )
paddle.stack(list[Tensor([76, 115],"int64"),Tensor([76, 115],"int64"),], -1, )
paddle.stack(list[Tensor([76, 76],"float32"),Tensor([76, 76],"float32"),Tensor([76, 76],"float32"),Tensor([76, 76],"float32"),], axis=-1, )
paddle.stack(list[Tensor([76, 76],"float32"),Tensor([76, 76],"float32"),], axis=-1, )
paddle.stack(list[Tensor([7600],"float32"),Tensor([7600],"float32"),Tensor([7600],"float32"),Tensor([7600],"float32"),], -1, )
paddle.stack(list[Tensor([760],"float32"),Tensor([760],"float32"),Tensor([760],"float32"),Tensor([760],"float32"),], -1, )
paddle.stack(list[Tensor([761],"float32"),Tensor([761],"float32"),Tensor([761],"float32"),Tensor([761],"float32"),], -1, )
paddle.stack(list[Tensor([762],"float32"),Tensor([762],"float32"),Tensor([762],"float32"),Tensor([762],"float32"),], -1, )
paddle.stack(list[Tensor([765],"float32"),Tensor([765],"float32"),Tensor([765],"float32"),Tensor([765],"float32"),], -1, )
paddle.stack(list[Tensor([766],"float32"),Tensor([766],"float32"),Tensor([766],"float32"),Tensor([766],"float32"),], -1, )
paddle.stack(list[Tensor([767],"float32"),Tensor([767],"float32"),Tensor([767],"float32"),Tensor([767],"float32"),], -1, )
paddle.stack(list[Tensor([7681, 1],"float32"),Tensor([7681, 1],"float32"),Tensor([7681, 1],"float32"),Tensor([7681, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([7681, 2],"float32"),Tensor([7681, 2],"float32"),Tensor([7681, 2],"float32"),Tensor([7681, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([7681, 3],"float32"),Tensor([7681, 3],"float32"),Tensor([7681, 3],"float32"),Tensor([7681, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([7681, 5],"float32"),Tensor([7681, 5],"float32"),Tensor([7681, 5],"float32"),Tensor([7681, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([7681],"float32"),Tensor([7681],"float32"),], axis=-1, )
paddle.stack(list[Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),], axis=1, )
paddle.stack(list[Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),], -1, )
paddle.stack(list[Tensor([768],"float32"),Tensor([768],"float32"),], axis=-1, )
paddle.stack(list[Tensor([769],"float32"),Tensor([769],"float32"),Tensor([769],"float32"),Tensor([769],"float32"),], -1, )
paddle.stack(list[Tensor([76],"float32"),Tensor([76],"float32"),Tensor([76],"float32"),Tensor([76],"float32"),], -1, )
paddle.stack(list[Tensor([76],"float32"),Tensor([76],"float32"),], axis=-1, )
paddle.stack(list[Tensor([770],"float32"),Tensor([770],"float32"),Tensor([770],"float32"),Tensor([770],"float32"),], -1, )
paddle.stack(list[Tensor([771],"float32"),Tensor([771],"float32"),Tensor([771],"float32"),Tensor([771],"float32"),], -1, )
paddle.stack(list[Tensor([772],"float32"),Tensor([772],"float32"),Tensor([772],"float32"),Tensor([772],"float32"),], -1, )
paddle.stack(list[Tensor([773],"float32"),Tensor([773],"float32"),Tensor([773],"float32"),Tensor([773],"float32"),], -1, )
paddle.stack(list[Tensor([7744],"float32"),Tensor([7744],"float32"),Tensor([7744],"float32"),Tensor([7744],"float32"),], -1, )
paddle.stack(list[Tensor([7744],"float32"),Tensor([7744],"float32"),], axis=-1, )
paddle.stack(list[Tensor([774],"float32"),Tensor([774],"float32"),Tensor([774],"float32"),Tensor([774],"float32"),], -1, )
paddle.stack(list[Tensor([775],"float32"),Tensor([775],"float32"),Tensor([775],"float32"),Tensor([775],"float32"),], -1, )
paddle.stack(list[Tensor([776],"float32"),Tensor([776],"float32"),Tensor([776],"float32"),Tensor([776],"float32"),], -1, )
paddle.stack(list[Tensor([777],"float32"),Tensor([777],"float32"),Tensor([777],"float32"),Tensor([777],"float32"),], -1, )
paddle.stack(list[Tensor([779],"float32"),Tensor([779],"float32"),Tensor([779],"float32"),Tensor([779],"float32"),], -1, )
paddle.stack(list[Tensor([77],"float32"),Tensor([77],"float32"),Tensor([77],"float32"),Tensor([77],"float32"),], -1, )
paddle.stack(list[Tensor([77],"float32"),Tensor([77],"float32"),], axis=-1, )
paddle.stack(list[Tensor([780],"float32"),Tensor([780],"float32"),Tensor([780],"float32"),Tensor([780],"float32"),], -1, )
paddle.stack(list[Tensor([781],"float32"),Tensor([781],"float32"),Tensor([781],"float32"),Tensor([781],"float32"),], -1, )
paddle.stack(list[Tensor([782],"float32"),Tensor([782],"float32"),Tensor([782],"float32"),Tensor([782],"float32"),], -1, )
paddle.stack(list[Tensor([783],"float32"),Tensor([783],"float32"),Tensor([783],"float32"),Tensor([783],"float32"),], -1, )
paddle.stack(list[Tensor([784],"float32"),Tensor([784],"float32"),Tensor([784],"float32"),Tensor([784],"float32"),], -1, )
paddle.stack(list[Tensor([784],"float32"),Tensor([784],"float32"),], axis=-1, )
paddle.stack(list[Tensor([786],"float32"),Tensor([786],"float32"),Tensor([786],"float32"),Tensor([786],"float32"),], -1, )
paddle.stack(list[Tensor([787],"float32"),Tensor([787],"float32"),Tensor([787],"float32"),Tensor([787],"float32"),], -1, )
paddle.stack(list[Tensor([788],"float32"),Tensor([788],"float32"),Tensor([788],"float32"),Tensor([788],"float32"),], -1, )
paddle.stack(list[Tensor([789],"float32"),Tensor([789],"float32"),Tensor([789],"float32"),Tensor([789],"float32"),], -1, )
paddle.stack(list[Tensor([78],"float32"),Tensor([78],"float32"),Tensor([78],"float32"),Tensor([78],"float32"),], -1, )
paddle.stack(list[Tensor([78],"float32"),Tensor([78],"float32"),], axis=-1, )
paddle.stack(list[Tensor([790],"float32"),Tensor([790],"float32"),Tensor([790],"float32"),Tensor([790],"float32"),], -1, )
paddle.stack(list[Tensor([792],"float32"),Tensor([792],"float32"),Tensor([792],"float32"),Tensor([792],"float32"),], -1, )
paddle.stack(list[Tensor([793],"float32"),Tensor([793],"float32"),Tensor([793],"float32"),Tensor([793],"float32"),], -1, )
paddle.stack(list[Tensor([794],"float32"),Tensor([794],"float32"),Tensor([794],"float32"),Tensor([794],"float32"),], -1, )
paddle.stack(list[Tensor([795],"float32"),Tensor([795],"float32"),Tensor([795],"float32"),Tensor([795],"float32"),], -1, )
paddle.stack(list[Tensor([796],"float32"),Tensor([796],"float32"),Tensor([796],"float32"),Tensor([796],"float32"),], -1, )
paddle.stack(list[Tensor([797],"float32"),Tensor([797],"float32"),Tensor([797],"float32"),Tensor([797],"float32"),], -1, )
paddle.stack(list[Tensor([799],"float32"),Tensor([799],"float32"),Tensor([799],"float32"),Tensor([799],"float32"),], -1, )
paddle.stack(list[Tensor([79],"float32"),Tensor([79],"float32"),Tensor([79],"float32"),Tensor([79],"float32"),], -1, )
paddle.stack(list[Tensor([79],"float32"),Tensor([79],"float32"),], axis=-1, )
paddle.stack(list[Tensor([7],"float32"),Tensor([7],"float32"),Tensor([7],"float32"),Tensor([7],"float32"),], -1, )
paddle.stack(list[Tensor([7],"float32"),Tensor([7],"float32"),], axis=-1, )
paddle.stack(list[Tensor([7],"int64"),Tensor([7],"int64"),], axis=-1, )
paddle.stack(list[Tensor([8, 300],"int64"),Tensor([8, 300],"int64"),], axis=-1, )
paddle.stack(list[Tensor([8, 32, 11, 4],"float32"),Tensor([8, 32, 11, 4],"float32"),Tensor([8, 32, 11, 4],"float32"),Tensor([8, 32, 11, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 1100, 4],"float32"),Tensor([8, 32, 1100, 4],"float32"),Tensor([8, 32, 1100, 4],"float32"),Tensor([8, 32, 1100, 4],"float32"),Tensor([8, 32, 1100, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 18, 4],"float32"),Tensor([8, 32, 18, 4],"float32"),Tensor([8, 32, 18, 4],"float32"),Tensor([8, 32, 18, 4],"float32"),Tensor([8, 32, 18, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 21, 4],"float32"),Tensor([8, 32, 21, 4],"float32"),Tensor([8, 32, 21, 4],"float32"),Tensor([8, 32, 21, 4],"float32"),Tensor([8, 32, 21, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 22, 4],"float32"),Tensor([8, 32, 22, 4],"float32"),Tensor([8, 32, 22, 4],"float32"),Tensor([8, 32, 22, 4],"float32"),Tensor([8, 32, 22, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 300, 4],"float32"),Tensor([8, 32, 300, 4],"float32"),Tensor([8, 32, 300, 4],"float32"),Tensor([8, 32, 300, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 36828, 4],"float32"),Tensor([8, 32, 36828, 4],"float32"),Tensor([8, 32, 36828, 4],"float32"),Tensor([8, 32, 36828, 4],"float32"),Tensor([8, 32, 36828, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 38367, 4],"float32"),Tensor([8, 32, 38367, 4],"float32"),Tensor([8, 32, 38367, 4],"float32"),Tensor([8, 32, 38367, 4],"float32"),Tensor([8, 32, 38367, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 400, 4],"float32"),Tensor([8, 32, 400, 4],"float32"),Tensor([8, 32, 400, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 492, 4],"float32"),Tensor([8, 32, 492, 4],"float32"),Tensor([8, 32, 492, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 496, 4],"float32"),Tensor([8, 32, 496, 4],"float32"),Tensor([8, 32, 496, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 500, 4],"float32"),Tensor([8, 32, 500, 4],"float32"),Tensor([8, 32, 500, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 6380, 4],"float32"),Tensor([8, 32, 6380, 4],"float32"),Tensor([8, 32, 6380, 4],"float32"),Tensor([8, 32, 6380, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 8550, 4],"float32"),Tensor([8, 32, 8550, 4],"float32"),Tensor([8, 32, 8550, 4],"float32"),Tensor([8, 32, 8550, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 9, 4],"float32"),Tensor([8, 32, 9, 4],"float32"),Tensor([8, 32, 9, 4],"float32"),Tensor([8, 32, 9, 4],"float32"),Tensor([8, 32, 9, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 32, 9, 4],"float32"),Tensor([8, 32, 9, 4],"float32"),Tensor([8, 32, 9, 4],"float32"),Tensor([8, 32, 9, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),], axis=0, )
paddle.stack(list[Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),], axis=0, )
paddle.stack(list[Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),], axis=2, )
paddle.stack(list[Tensor([8, 500, 4],"float32"),Tensor([8, 500, 4],"float32"),Tensor([8, 500, 4],"float32"),Tensor([8, 500, 4],"float32"),Tensor([8, 500, 4],"float32"),Tensor([8, 500, 4],"float32"),], )
paddle.stack(list[Tensor([8, 7, 7],"int64"),Tensor([8, 7, 7],"int64"),Tensor([8, 7, 7],"int64"),], )
paddle.stack(list[Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),], )
paddle.stack(list[Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),], )
paddle.stack(list[Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),], axis=-1, )
paddle.stack(list[Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),], axis=-1, )
paddle.stack(list[Tensor([80, 80],"float32"),Tensor([80, 80],"float32"),Tensor([80, 80],"float32"),Tensor([80, 80],"float32"),], axis=-1, )
paddle.stack(list[Tensor([80, 80],"float32"),Tensor([80, 80],"float32"),], -1, )
paddle.stack(list[Tensor([80, 80],"float32"),Tensor([80, 80],"float32"),], axis=-1, )
paddle.stack(list[Tensor([800],"float32"),Tensor([800],"float32"),Tensor([800],"float32"),Tensor([800],"float32"),], -1, )
paddle.stack(list[Tensor([800],"float32"),Tensor([800],"float32"),], axis=-1, )
paddle.stack(list[Tensor([801],"float32"),Tensor([801],"float32"),Tensor([801],"float32"),Tensor([801],"float32"),], -1, )
paddle.stack(list[Tensor([802],"float32"),Tensor([802],"float32"),Tensor([802],"float32"),Tensor([802],"float32"),], -1, )
paddle.stack(list[Tensor([802],"float32"),Tensor([802],"float32"),], axis=-1, )
paddle.stack(list[Tensor([803],"float32"),Tensor([803],"float32"),Tensor([803],"float32"),Tensor([803],"float32"),], -1, )
paddle.stack(list[Tensor([804],"float32"),Tensor([804],"float32"),Tensor([804],"float32"),Tensor([804],"float32"),], -1, )
paddle.stack(list[Tensor([805],"float32"),Tensor([805],"float32"),Tensor([805],"float32"),Tensor([805],"float32"),], -1, )
paddle.stack(list[Tensor([806],"float32"),Tensor([806],"float32"),Tensor([806],"float32"),Tensor([806],"float32"),], -1, )
paddle.stack(list[Tensor([807],"float32"),Tensor([807],"float32"),Tensor([807],"float32"),Tensor([807],"float32"),], -1, )
paddle.stack(list[Tensor([808],"float32"),Tensor([808],"float32"),Tensor([808],"float32"),Tensor([808],"float32"),], -1, )
paddle.stack(list[Tensor([80],"float32"),Tensor([80],"float32"),Tensor([80],"float32"),Tensor([80],"float32"),], -1, )
paddle.stack(list[Tensor([80],"float32"),Tensor([80],"float32"),], axis=-1, )
paddle.stack(list[Tensor([81000],"float32"),Tensor([81000],"float32"),Tensor([81000],"float32"),Tensor([81000],"float32"),], -1, )
paddle.stack(list[Tensor([8112],"float32"),Tensor([8112],"float32"),Tensor([8112],"float32"),Tensor([8112],"float32"),], -1, )
paddle.stack(list[Tensor([813],"float32"),Tensor([813],"float32"),Tensor([813],"float32"),Tensor([813],"float32"),], -1, )
paddle.stack(list[Tensor([815],"float32"),Tensor([815],"float32"),Tensor([815],"float32"),Tensor([815],"float32"),], -1, )
paddle.stack(list[Tensor([818],"float32"),Tensor([818],"float32"),Tensor([818],"float32"),Tensor([818],"float32"),], -1, )
paddle.stack(list[Tensor([8192, 2],"float32"),Tensor([8192, 2],"float32"),], axis=-1, )
paddle.stack(list[Tensor([819],"float32"),Tensor([819],"float32"),Tensor([819],"float32"),Tensor([819],"float32"),], -1, )
paddle.stack(list[Tensor([81],"float32"),Tensor([81],"float32"),Tensor([81],"float32"),Tensor([81],"float32"),], -1, )
paddle.stack(list[Tensor([81],"float32"),Tensor([81],"float32"),], axis=-1, )
paddle.stack(list[Tensor([828],"float32"),Tensor([828],"float32"),Tensor([828],"float32"),Tensor([828],"float32"),], -1, )
paddle.stack(list[Tensor([82944],"float32"),Tensor([82944],"float32"),Tensor([82944],"float32"),Tensor([82944],"float32"),], -1, )
paddle.stack(list[Tensor([829],"float32"),Tensor([829],"float32"),Tensor([829],"float32"),Tensor([829],"float32"),], -1, )
paddle.stack(list[Tensor([82],"float32"),Tensor([82],"float32"),Tensor([82],"float32"),Tensor([82],"float32"),], -1, )
paddle.stack(list[Tensor([82],"float32"),Tensor([82],"float32"),], axis=-1, )
paddle.stack(list[Tensor([8320],"float32"),Tensor([8320],"float32"),Tensor([8320],"float32"),Tensor([8320],"float32"),], -1, )
paddle.stack(list[Tensor([832],"float32"),Tensor([832],"float32"),], axis=-1, )
paddle.stack(list[Tensor([832],"int32"),Tensor([832],"int32"),Tensor([832],"int32"),], )
paddle.stack(list[Tensor([833],"float32"),Tensor([833],"float32"),Tensor([833],"float32"),Tensor([833],"float32"),], -1, )
paddle.stack(list[Tensor([836],"float32"),Tensor([836],"float32"),Tensor([836],"float32"),Tensor([836],"float32"),], -1, )
paddle.stack(list[Tensor([83],"float32"),Tensor([83],"float32"),Tensor([83],"float32"),Tensor([83],"float32"),], -1, )
paddle.stack(list[Tensor([83],"float32"),Tensor([83],"float32"),], axis=-1, )
paddle.stack(list[Tensor([84, 84],"float32"),Tensor([84, 84],"float32"),Tensor([84, 84],"float32"),Tensor([84, 84],"float32"),], axis=-1, )
paddle.stack(list[Tensor([84, 84],"float32"),Tensor([84, 84],"float32"),], axis=-1, )
paddle.stack(list[Tensor([8400],"float32"),Tensor([8400],"float32"),], axis=-1, )
paddle.stack(list[Tensor([840],"float32"),Tensor([840],"float32"),Tensor([840],"float32"),Tensor([840],"float32"),], -1, )
paddle.stack(list[Tensor([841],"float32"),Tensor([841],"float32"),Tensor([841],"float32"),Tensor([841],"float32"),], -1, )
paddle.stack(list[Tensor([842],"float32"),Tensor([842],"float32"),Tensor([842],"float32"),Tensor([842],"float32"),], -1, )
paddle.stack(list[Tensor([843],"float32"),Tensor([843],"float32"),Tensor([843],"float32"),Tensor([843],"float32"),], -1, )
paddle.stack(list[Tensor([844],"float32"),Tensor([844],"float32"),Tensor([844],"float32"),Tensor([844],"float32"),], -1, )
paddle.stack(list[Tensor([844],"float32"),Tensor([844],"float32"),], axis=-1, )
paddle.stack(list[Tensor([845],"float32"),Tensor([845],"float32"),Tensor([845],"float32"),Tensor([845],"float32"),], -1, )
paddle.stack(list[Tensor([847],"float32"),Tensor([847],"float32"),Tensor([847],"float32"),Tensor([847],"float32"),], -1, )
paddle.stack(list[Tensor([848],"float32"),Tensor([848],"float32"),Tensor([848],"float32"),Tensor([848],"float32"),], -1, )
paddle.stack(list[Tensor([849],"float32"),Tensor([849],"float32"),Tensor([849],"float32"),Tensor([849],"float32"),], -1, )
paddle.stack(list[Tensor([84],"float32"),Tensor([84],"float32"),Tensor([84],"float32"),Tensor([84],"float32"),], -1, )
paddle.stack(list[Tensor([84],"float32"),Tensor([84],"float32"),], axis=-1, )
paddle.stack(list[Tensor([8500, 1],"float32"),Tensor([8500, 1],"float32"),Tensor([8500, 1],"float32"),Tensor([8500, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([8500, 2],"float32"),Tensor([8500, 2],"float32"),Tensor([8500, 2],"float32"),Tensor([8500, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([8500, 3],"float32"),Tensor([8500, 3],"float32"),Tensor([8500, 3],"float32"),Tensor([8500, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([8500],"float32"),Tensor([8500],"float32"),], axis=-1, )
paddle.stack(list[Tensor([857],"float32"),Tensor([857],"float32"),Tensor([857],"float32"),Tensor([857],"float32"),], -1, )
paddle.stack(list[Tensor([8580, 4],"float32"),], 0, )
paddle.stack(list[Tensor([8580],"float32"),Tensor([8580],"float32"),], axis=-1, )
paddle.stack(list[Tensor([8580],"float32"),], 0, )
paddle.stack(list[Tensor([8580],"int32"),], 0, )
paddle.stack(list[Tensor([858],"float32"),Tensor([858],"float32"),Tensor([858],"float32"),Tensor([858],"float32"),], -1, )
paddle.stack(list[Tensor([85],"float32"),Tensor([85],"float32"),Tensor([85],"float32"),Tensor([85],"float32"),], -1, )
paddle.stack(list[Tensor([85],"float32"),Tensor([85],"float32"),], axis=-1, )
paddle.stack(list[Tensor([860],"float32"),Tensor([860],"float32"),Tensor([860],"float32"),Tensor([860],"float32"),], -1, )
paddle.stack(list[Tensor([862],"float32"),Tensor([862],"float32"),Tensor([862],"float32"),Tensor([862],"float32"),], -1, )
paddle.stack(list[Tensor([863],"float32"),Tensor([863],"float32"),Tensor([863],"float32"),Tensor([863],"float32"),], -1, )
paddle.stack(list[Tensor([864],"float32"),Tensor([864],"float32"),Tensor([864],"float32"),Tensor([864],"float32"),], -1, )
paddle.stack(list[Tensor([864],"float32"),Tensor([864],"float32"),], axis=-1, )
paddle.stack(list[Tensor([86528],"float32"),Tensor([86528],"float32"),Tensor([86528],"float32"),Tensor([86528],"float32"),], -1, )
paddle.stack(list[Tensor([866],"float32"),Tensor([866],"float32"),Tensor([866],"float32"),Tensor([866],"float32"),], -1, )
paddle.stack(list[Tensor([869],"float32"),Tensor([869],"float32"),Tensor([869],"float32"),Tensor([869],"float32"),], -1, )
paddle.stack(list[Tensor([86],"float32"),Tensor([86],"float32"),Tensor([86],"float32"),Tensor([86],"float32"),], -1, )
paddle.stack(list[Tensor([86],"float32"),Tensor([86],"float32"),], axis=-1, )
paddle.stack(list[Tensor([876],"float32"),Tensor([876],"float32"),Tensor([876],"float32"),Tensor([876],"float32"),], -1, )
paddle.stack(list[Tensor([877],"float32"),Tensor([877],"float32"),Tensor([877],"float32"),Tensor([877],"float32"),], -1, )
paddle.stack(list[Tensor([879],"float32"),Tensor([879],"float32"),Tensor([879],"float32"),Tensor([879],"float32"),], -1, )
paddle.stack(list[Tensor([87],"float32"),Tensor([87],"float32"),Tensor([87],"float32"),Tensor([87],"float32"),], -1, )
paddle.stack(list[Tensor([87],"float32"),Tensor([87],"float32"),], axis=-1, )
paddle.stack(list[Tensor([88, 88],"float32"),Tensor([88, 88],"float32"),Tensor([88, 88],"float32"),Tensor([88, 88],"float32"),], axis=-1, )
paddle.stack(list[Tensor([88, 88],"float32"),Tensor([88, 88],"float32"),], -1, )
paddle.stack(list[Tensor([88, 88],"float32"),Tensor([88, 88],"float32"),], axis=-1, )
paddle.stack(list[Tensor([880],"float32"),Tensor([880],"float32"),], axis=-1, )
paddle.stack(list[Tensor([882],"float32"),Tensor([882],"float32"),Tensor([882],"float32"),Tensor([882],"float32"),], -1, )
paddle.stack(list[Tensor([88],"float32"),Tensor([88],"float32"),Tensor([88],"float32"),Tensor([88],"float32"),], -1, )
paddle.stack(list[Tensor([88],"float32"),Tensor([88],"float32"),], axis=-1, )
paddle.stack(list[Tensor([890],"float32"),Tensor([890],"float32"),Tensor([890],"float32"),Tensor([890],"float32"),], -1, )
paddle.stack(list[Tensor([891],"float32"),Tensor([891],"float32"),Tensor([891],"float32"),Tensor([891],"float32"),], -1, )
paddle.stack(list[Tensor([896],"float32"),Tensor([896],"float32"),], axis=-1, )
paddle.stack(list[Tensor([897],"float32"),Tensor([897],"float32"),Tensor([897],"float32"),Tensor([897],"float32"),], -1, )
paddle.stack(list[Tensor([89],"float32"),Tensor([89],"float32"),Tensor([89],"float32"),Tensor([89],"float32"),], -1, )
paddle.stack(list[Tensor([89],"float32"),Tensor([89],"float32"),], axis=-1, )
paddle.stack(list[Tensor([8],"float32"),Tensor([8],"float32"),Tensor([8],"float32"),Tensor([8],"float32"),Tensor([8],"float32"),Tensor([8],"float32"),], axis=1, )
paddle.stack(list[Tensor([8],"float32"),Tensor([8],"float32"),Tensor([8],"float32"),Tensor([8],"float32"),], -1, )
paddle.stack(list[Tensor([8],"float32"),Tensor([8],"float32"),], -1, )
paddle.stack(list[Tensor([8],"float32"),Tensor([8],"float32"),], axis=-1, )
paddle.stack(list[Tensor([9, 1],"float32"),Tensor([9, 1],"float32"),Tensor([9, 1],"float32"),Tensor([9, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([9, 9],"float32"),Tensor([9, 9],"float32"),Tensor([9, 9],"float32"),Tensor([9, 9],"float32"),], axis=-1, )
paddle.stack(list[Tensor([9, 9],"float32"),Tensor([9, 9],"float32"),], axis=-1, )
paddle.stack(list[Tensor([900],"float32"),Tensor([900],"float32"),Tensor([900],"float32"),Tensor([900],"float32"),], -1, )
paddle.stack(list[Tensor([900],"float32"),Tensor([900],"float32"),], axis=-1, )
paddle.stack(list[Tensor([909],"float32"),Tensor([909],"float32"),Tensor([909],"float32"),Tensor([909],"float32"),], -1, )
paddle.stack(list[Tensor([90],"float32"),Tensor([90],"float32"),Tensor([90],"float32"),Tensor([90],"float32"),], -1, )
paddle.stack(list[Tensor([90],"float32"),Tensor([90],"float32"),], axis=-1, )
paddle.stack(list[Tensor([910],"float32"),Tensor([910],"float32"),Tensor([910],"float32"),Tensor([910],"float32"),], -1, )
paddle.stack(list[Tensor([912],"float32"),Tensor([912],"float32"),Tensor([912],"float32"),Tensor([912],"float32"),], -1, )
paddle.stack(list[Tensor([914],"float32"),Tensor([914],"float32"),Tensor([914],"float32"),Tensor([914],"float32"),], -1, )
paddle.stack(list[Tensor([915],"float32"),Tensor([915],"float32"),Tensor([915],"float32"),Tensor([915],"float32"),], -1, )
paddle.stack(list[Tensor([917],"float32"),Tensor([917],"float32"),Tensor([917],"float32"),Tensor([917],"float32"),], -1, )
paddle.stack(list[Tensor([9180, 10],"float32"),Tensor([9180, 10],"float32"),Tensor([9180, 10],"float32"),Tensor([9180, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([9180, 11],"float32"),Tensor([9180, 11],"float32"),Tensor([9180, 11],"float32"),Tensor([9180, 11],"float32"),], axis=1, )
paddle.stack(list[Tensor([9180, 13],"float32"),Tensor([9180, 13],"float32"),Tensor([9180, 13],"float32"),Tensor([9180, 13],"float32"),], axis=1, )
paddle.stack(list[Tensor([9180, 19],"float32"),Tensor([9180, 19],"float32"),Tensor([9180, 19],"float32"),Tensor([9180, 19],"float32"),], axis=1, )
paddle.stack(list[Tensor([9180, 1],"float32"),Tensor([9180, 1],"float32"),Tensor([9180, 1],"float32"),Tensor([9180, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([9180, 2],"float32"),Tensor([9180, 2],"float32"),Tensor([9180, 2],"float32"),Tensor([9180, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([9180, 30],"float32"),Tensor([9180, 30],"float32"),Tensor([9180, 30],"float32"),Tensor([9180, 30],"float32"),], axis=1, )
paddle.stack(list[Tensor([9180, 3],"float32"),Tensor([9180, 3],"float32"),Tensor([9180, 3],"float32"),Tensor([9180, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([9180, 4],"float32"),Tensor([9180, 4],"float32"),Tensor([9180, 4],"float32"),Tensor([9180, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([9180, 5],"float32"),Tensor([9180, 5],"float32"),Tensor([9180, 5],"float32"),Tensor([9180, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([9180, 6],"float32"),Tensor([9180, 6],"float32"),Tensor([9180, 6],"float32"),Tensor([9180, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([9180, 9],"float32"),Tensor([9180, 9],"float32"),Tensor([9180, 9],"float32"),Tensor([9180, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([91],"float32"),Tensor([91],"float32"),Tensor([91],"float32"),Tensor([91],"float32"),], -1, )
paddle.stack(list[Tensor([91],"float32"),Tensor([91],"float32"),], axis=-1, )
paddle.stack(list[Tensor([92, 92],"float32"),Tensor([92, 92],"float32"),Tensor([92, 92],"float32"),Tensor([92, 92],"float32"),], axis=-1, )
paddle.stack(list[Tensor([92, 92],"float32"),Tensor([92, 92],"float32"),], -1, )
paddle.stack(list[Tensor([92, 92],"float32"),Tensor([92, 92],"float32"),], axis=-1, )
paddle.stack(list[Tensor([920],"float32"),Tensor([920],"float32"),Tensor([920],"float32"),Tensor([920],"float32"),], -1, )
paddle.stack(list[Tensor([9216],"float32"),Tensor([9216],"float32"),Tensor([9216],"float32"),Tensor([9216],"float32"),], -1, )
paddle.stack(list[Tensor([921],"float32"),Tensor([921],"float32"),Tensor([921],"float32"),Tensor([921],"float32"),], -1, )
paddle.stack(list[Tensor([9261, 1],"float32"),Tensor([9261, 1],"float32"),Tensor([9261, 1],"float32"),Tensor([9261, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([9261, 2],"float32"),Tensor([9261, 2],"float32"),Tensor([9261, 2],"float32"),Tensor([9261, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([9261, 3],"float32"),Tensor([9261, 3],"float32"),Tensor([9261, 3],"float32"),Tensor([9261, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([9261, 4],"float32"),Tensor([9261, 4],"float32"),Tensor([9261, 4],"float32"),Tensor([9261, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([9261, 5],"float32"),Tensor([9261, 5],"float32"),Tensor([9261, 5],"float32"),Tensor([9261, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([9261, 6],"float32"),Tensor([9261, 6],"float32"),Tensor([9261, 6],"float32"),Tensor([9261, 6],"float32"),], axis=1, )
paddle.stack(list[Tensor([9261, 7],"float32"),Tensor([9261, 7],"float32"),Tensor([9261, 7],"float32"),Tensor([9261, 7],"float32"),], axis=1, )
paddle.stack(list[Tensor([9261, 8],"float32"),Tensor([9261, 8],"float32"),Tensor([9261, 8],"float32"),Tensor([9261, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([9261, 9],"float32"),Tensor([9261, 9],"float32"),Tensor([9261, 9],"float32"),Tensor([9261, 9],"float32"),], axis=1, )
paddle.stack(list[Tensor([9261],"float32"),Tensor([9261],"float32"),], axis=-1, )
paddle.stack(list[Tensor([92928],"float32"),Tensor([92928],"float32"),Tensor([92928],"float32"),Tensor([92928],"float32"),], -1, )
paddle.stack(list[Tensor([92],"float32"),Tensor([92],"float32"),Tensor([92],"float32"),Tensor([92],"float32"),], -1, )
paddle.stack(list[Tensor([92],"float32"),Tensor([92],"float32"),], axis=-1, )
paddle.stack(list[Tensor([931],"float32"),Tensor([931],"float32"),Tensor([931],"float32"),Tensor([931],"float32"),], -1, )
paddle.stack(list[Tensor([932],"float32"),Tensor([932],"float32"),Tensor([932],"float32"),Tensor([932],"float32"),], -1, )
paddle.stack(list[Tensor([936],"float32"),Tensor([936],"float32"),Tensor([936],"float32"),Tensor([936],"float32"),], -1, )
paddle.stack(list[Tensor([936],"float32"),Tensor([936],"float32"),], axis=-1, )
paddle.stack(list[Tensor([9382, 1],"float32"),Tensor([9382, 1],"float32"),Tensor([9382, 1],"float32"),Tensor([9382, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([9382, 2],"float32"),Tensor([9382, 2],"float32"),Tensor([9382, 2],"float32"),Tensor([9382, 2],"float32"),], axis=1, )
paddle.stack(list[Tensor([9382, 3],"float32"),Tensor([9382, 3],"float32"),Tensor([9382, 3],"float32"),Tensor([9382, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([9382, 4],"float32"),Tensor([9382, 4],"float32"),Tensor([9382, 4],"float32"),Tensor([9382, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([9382, 5],"float32"),Tensor([9382, 5],"float32"),Tensor([9382, 5],"float32"),Tensor([9382, 5],"float32"),], axis=1, )
paddle.stack(list[Tensor([9382, 8],"float32"),Tensor([9382, 8],"float32"),Tensor([9382, 8],"float32"),Tensor([9382, 8],"float32"),], axis=1, )
paddle.stack(list[Tensor([9382],"float32"),Tensor([9382],"float32"),], axis=-1, )
paddle.stack(list[Tensor([938],"float32"),Tensor([938],"float32"),Tensor([938],"float32"),Tensor([938],"float32"),], -1, )
paddle.stack(list[Tensor([939],"float32"),Tensor([939],"float32"),Tensor([939],"float32"),Tensor([939],"float32"),], -1, )
paddle.stack(list[Tensor([93],"float32"),Tensor([93],"float32"),Tensor([93],"float32"),Tensor([93],"float32"),], -1, )
paddle.stack(list[Tensor([93],"float32"),Tensor([93],"float32"),], axis=-1, )
paddle.stack(list[Tensor([9408],"float32"),Tensor([9408],"float32"),Tensor([9408],"float32"),Tensor([9408],"float32"),], -1, )
paddle.stack(list[Tensor([94],"float32"),Tensor([94],"float32"),Tensor([94],"float32"),Tensor([94],"float32"),], -1, )
paddle.stack(list[Tensor([94],"float32"),Tensor([94],"float32"),], axis=-1, )
paddle.stack(list[Tensor([950],"float32"),Tensor([950],"float32"),Tensor([950],"float32"),Tensor([950],"float32"),], -1, )
paddle.stack(list[Tensor([95],"float32"),Tensor([95],"float32"),Tensor([95],"float32"),Tensor([95],"float32"),], -1, )
paddle.stack(list[Tensor([95],"float32"),Tensor([95],"float32"),], axis=-1, )
paddle.stack(list[Tensor([96, 96],"float32"),Tensor([96, 96],"float32"),Tensor([96, 96],"float32"),Tensor([96, 96],"float32"),], axis=-1, )
paddle.stack(list[Tensor([96, 96],"float32"),Tensor([96, 96],"float32"),], -1, )
paddle.stack(list[Tensor([96, 96],"float32"),Tensor([96, 96],"float32"),], axis=-1, )
paddle.stack(list[Tensor([960],"float32"),Tensor([960],"float32"),], axis=-1, )
paddle.stack(list[Tensor([964],"float32"),Tensor([964],"float32"),Tensor([964],"float32"),Tensor([964],"float32"),], -1, )
paddle.stack(list[Tensor([966],"float32"),Tensor([966],"float32"),Tensor([966],"float32"),Tensor([966],"float32"),], -1, )
paddle.stack(list[Tensor([968],"float32"),Tensor([968],"float32"),Tensor([968],"float32"),Tensor([968],"float32"),], -1, )
paddle.stack(list[Tensor([96],"float32"),Tensor([96],"float32"),Tensor([96],"float32"),Tensor([96],"float32"),], -1, )
paddle.stack(list[Tensor([96],"float32"),Tensor([96],"float32"),], axis=-1, )
paddle.stack(list[Tensor([970],"float32"),Tensor([970],"float32"),Tensor([970],"float32"),Tensor([970],"float32"),], -1, )
paddle.stack(list[Tensor([971],"float32"),Tensor([971],"float32"),Tensor([971],"float32"),Tensor([971],"float32"),], -1, )
paddle.stack(list[Tensor([973],"float32"),Tensor([973],"float32"),Tensor([973],"float32"),Tensor([973],"float32"),], -1, )
paddle.stack(list[Tensor([97],"float32"),Tensor([97],"float32"),Tensor([97],"float32"),Tensor([97],"float32"),], -1, )
paddle.stack(list[Tensor([97],"float32"),Tensor([97],"float32"),], axis=-1, )
paddle.stack(list[Tensor([988],"float32"),Tensor([988],"float32"),Tensor([988],"float32"),Tensor([988],"float32"),], -1, )
paddle.stack(list[Tensor([98],"float32"),Tensor([98],"float32"),Tensor([98],"float32"),Tensor([98],"float32"),], -1, )
paddle.stack(list[Tensor([98],"float32"),Tensor([98],"float32"),], axis=-1, )
paddle.stack(list[Tensor([990],"float32"),Tensor([990],"float32"),Tensor([990],"float32"),Tensor([990],"float32"),], -1, )
paddle.stack(list[Tensor([99],"float32"),Tensor([99],"float32"),Tensor([99],"float32"),Tensor([99],"float32"),], -1, )
paddle.stack(list[Tensor([99],"float32"),Tensor([99],"float32"),], axis=-1, )
paddle.stack(list[Tensor([9],"float32"),Tensor([9],"float32"),Tensor([9],"float32"),Tensor([9],"float32"),Tensor([9],"float32"),Tensor([9],"float32"),Tensor([9],"float32"),Tensor([9],"float32"),Tensor([9],"float32"),Tensor([9],"float32"),Tensor([9],"float32"),Tensor([9],"float32"),], )
paddle.stack(list[Tensor([9],"float32"),Tensor([9],"float32"),Tensor([9],"float32"),Tensor([9],"float32"),], -1, )
paddle.stack(list[Tensor([9],"float32"),Tensor([9],"float32"),], axis=-1, )
paddle.stack(list[Tensor([9],"float32"),Tensor([9],"float32"),], axis=1, )
paddle.stack(list[Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),], )
paddle.stack(list[Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),], )
paddle.stack(list[Tensor([],"float16"),Tensor([],"float16"),Tensor([],"float16"),], )
paddle.stack(list[Tensor([],"float16"),Tensor([],"float16"),], )
paddle.stack(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),], )
paddle.stack(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),], )
paddle.stack(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),], )
paddle.stack(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),], )
paddle.stack(list[Tensor([],"float32"),Tensor([],"float32"),], )
paddle.stack(list[Tensor([],"float32"),Tensor([],"float32"),], -1, )
paddle.stack(list[Tensor([],"float32"),Tensor([],"float32"),], 0, )
paddle.stack(list[Tensor([],"float32"),Tensor([],"float32"),], axis=0, )
paddle.stack(list[Tensor([],"float32"),], )
paddle.stack(list[Tensor([],"float32"),], axis=0, )
paddle.stack(list[Tensor([],"int64"),Tensor([],"int64"),], )
paddle.stack(list[Tensor([],"int64"),], )
paddle.stack(tuple(Tensor([1, 1, 4, 2],"float32"),Tensor([1, 1, 4, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 10, 8, 64],"float32"),Tensor([1, 10, 8, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 108],"float32"),Tensor([1, 108],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 11, 4, 64],"float32"),Tensor([1, 11, 4, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 1100, 64],"float32"),Tensor([1, 1100, 64],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([1, 117],"float32"),Tensor([1, 117],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 12, 9, 64],"float32"),Tensor([1, 12, 9, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 1200],"float32"),Tensor([1, 1200],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 144, 200, 64],"float32"),Tensor([1, 144, 200, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 1620],"float32"),Tensor([1, 1620],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 1728],"float32"),Tensor([1, 1728],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 18, 25, 64],"float32"),Tensor([1, 18, 25, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 18, 4, 64],"float32"),Tensor([1, 18, 4, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 18, 64],"float32"),Tensor([1, 18, 64],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([1, 1800],"float32"),Tensor([1, 1800],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 192, 144, 64],"float32"),Tensor([1, 192, 144, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 20, 15, 64],"float32"),Tensor([1, 20, 15, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 21, 4, 64],"float32"),Tensor([1, 21, 4, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 21, 64],"float32"),Tensor([1, 21, 64],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([1, 22, 4, 64],"float32"),Tensor([1, 22, 4, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 22, 64],"float32"),Tensor([1, 22, 64],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([1, 23, 18, 64],"float32"),Tensor([1, 23, 18, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 24, 18, 64],"float32"),Tensor([1, 24, 18, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 27648],"float32"),Tensor([1, 27648],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 28800],"float32"),Tensor([1, 28800],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 300, 4, 64],"float32"),Tensor([1, 300, 4, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 36, 50, 64],"float32"),Tensor([1, 36, 50, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 40, 30, 64],"float32"),Tensor([1, 40, 30, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 414],"float32"),Tensor([1, 414],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 432],"float32"),Tensor([1, 432],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 45, 36, 64],"float32"),Tensor([1, 45, 36, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 450],"float32"),Tensor([1, 450],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 48, 36, 64],"float32"),Tensor([1, 48, 36, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 4800],"float32"),Tensor([1, 4800],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 6408],"float32"),Tensor([1, 6408],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 6912],"float32"),Tensor([1, 6912],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 72, 100, 64],"float32"),Tensor([1, 72, 100, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 7200],"float32"),Tensor([1, 7200],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 80, 60, 64],"float32"),Tensor([1, 80, 60, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 80],"float32"),Tensor([1, 80],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([1, 89, 72, 64],"float32"),Tensor([1, 89, 72, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 9, 13, 64],"float32"),Tensor([1, 9, 13, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 9, 4, 64],"float32"),Tensor([1, 9, 4, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([1, 9, 64],"float32"),Tensor([1, 9, 64],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([1, 96, 72, 64],"float32"),Tensor([1, 96, 72, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([10, 10],"int64"),Tensor([10, 10],"int64"),), 2, )
paddle.stack(tuple(Tensor([1000],"float32"),Tensor([1000],"float32"),Tensor([1000],"float32"),Tensor([1000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1008],"float32"),Tensor([1008],"float32"),Tensor([1008],"float32"),Tensor([1008],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1020],"float32"),Tensor([1020],"float32"),Tensor([1020],"float32"),Tensor([1020],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([102144],"float32"),Tensor([102144],"float32"),Tensor([102144],"float32"),Tensor([102144],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1023],"float32"),Tensor([1023],"float32"),Tensor([1023],"float32"),Tensor([1023],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),Tensor([1024],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1025],"float32"),Tensor([1025],"float32"),Tensor([1025],"float32"),Tensor([1025],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1026],"float32"),Tensor([1026],"float32"),Tensor([1026],"float32"),Tensor([1026],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([103320],"float32"),Tensor([103320],"float32"),Tensor([103320],"float32"),Tensor([103320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1036],"float32"),Tensor([1036],"float32"),Tensor([1036],"float32"),Tensor([1036],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([10416],"float32"),Tensor([10416],"float32"),Tensor([10416],"float32"),Tensor([10416],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1044],"float32"),Tensor([1044],"float32"),Tensor([1044],"float32"),Tensor([1044],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1050],"float32"),Tensor([1050],"float32"),Tensor([1050],"float32"),Tensor([1050],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1053],"float32"),Tensor([1053],"float32"),Tensor([1053],"float32"),Tensor([1053],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1054],"float32"),Tensor([1054],"float32"),Tensor([1054],"float32"),Tensor([1054],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([10560],"float32"),Tensor([10560],"float32"),Tensor([10560],"float32"),Tensor([10560],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1056],"float32"),Tensor([1056],"float32"),Tensor([1056],"float32"),Tensor([1056],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([105840],"float32"),Tensor([105840],"float32"),Tensor([105840],"float32"),Tensor([105840],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1064],"float32"),Tensor([1064],"float32"),Tensor([1064],"float32"),Tensor([1064],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1066],"float32"),Tensor([1066],"float32"),Tensor([1066],"float32"),Tensor([1066],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([107520],"float32"),Tensor([107520],"float32"),Tensor([107520],"float32"),Tensor([107520],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([10752],"float32"),Tensor([10752],"float32"),Tensor([10752],"float32"),Tensor([10752],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1080],"float32"),Tensor([1080],"float32"),Tensor([1080],"float32"),Tensor([1080],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1085],"float32"),Tensor([1085],"float32"),Tensor([1085],"float32"),Tensor([1085],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1088],"float32"),Tensor([1088],"float32"),Tensor([1088],"float32"),Tensor([1088],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1089],"float32"),Tensor([1089],"float32"),Tensor([1089],"float32"),Tensor([1089],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([108],"float32"),Tensor([108],"float32"),Tensor([108],"float32"),Tensor([108],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1092],"float32"),Tensor([1092],"float32"),Tensor([1092],"float32"),Tensor([1092],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([11, 11],"int64"),Tensor([11, 11],"int64"),), 2, )
paddle.stack(tuple(Tensor([110208],"float32"),Tensor([110208],"float32"),Tensor([110208],"float32"),Tensor([110208],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([11040],"float32"),Tensor([11040],"float32"),Tensor([11040],"float32"),Tensor([11040],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1107],"float32"),Tensor([1107],"float32"),Tensor([1107],"float32"),Tensor([1107],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([11088],"float32"),Tensor([11088],"float32"),Tensor([11088],"float32"),Tensor([11088],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1110],"float32"),Tensor([1110],"float32"),Tensor([1110],"float32"),Tensor([1110],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1116],"float32"),Tensor([1116],"float32"),Tensor([1116],"float32"),Tensor([1116],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1120],"float32"),Tensor([1120],"float32"),Tensor([1120],"float32"),Tensor([1120],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1122],"float32"),Tensor([1122],"float32"),Tensor([1122],"float32"),Tensor([1122],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([11264],"float32"),Tensor([11264],"float32"),Tensor([11264],"float32"),Tensor([11264],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([112896],"float32"),Tensor([112896],"float32"),Tensor([112896],"float32"),Tensor([112896],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1134],"float32"),Tensor([1134],"float32"),Tensor([1134],"float32"),Tensor([1134],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([11408],"float32"),Tensor([11408],"float32"),Tensor([11408],"float32"),Tensor([11408],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1140],"float32"),Tensor([1140],"float32"),Tensor([1140],"float32"),Tensor([1140],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1147],"float32"),Tensor([1147],"float32"),Tensor([1147],"float32"),Tensor([1147],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1148],"float32"),Tensor([1148],"float32"),Tensor([1148],"float32"),Tensor([1148],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([11520],"float32"),Tensor([11520],"float32"),Tensor([11520],"float32"),Tensor([11520],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1152],"float32"),Tensor([1152],"float32"),Tensor([1152],"float32"),Tensor([1152],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1155],"float32"),Tensor([1155],"float32"),Tensor([1155],"float32"),Tensor([1155],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1156],"float32"),Tensor([1156],"float32"),Tensor([1156],"float32"),Tensor([1156],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1160],"float32"),Tensor([1160],"float32"),Tensor([1160],"float32"),Tensor([1160],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([11616],"float32"),Tensor([11616],"float32"),Tensor([11616],"float32"),Tensor([11616],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1170],"float32"),Tensor([1170],"float32"),Tensor([1170],"float32"),Tensor([1170],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1176],"float32"),Tensor([1176],"float32"),Tensor([1176],"float32"),Tensor([1176],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([11776],"float32"),Tensor([11776],"float32"),Tensor([11776],"float32"),Tensor([11776],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1178],"float32"),Tensor([1178],"float32"),Tensor([1178],"float32"),Tensor([1178],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([117],"float32"),Tensor([117],"float32"),Tensor([117],"float32"),Tensor([117],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1184],"float32"),Tensor([1184],"float32"),Tensor([1184],"float32"),Tensor([1184],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1188],"float32"),Tensor([1188],"float32"),Tensor([1188],"float32"),Tensor([1188],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([11904],"float32"),Tensor([11904],"float32"),Tensor([11904],"float32"),Tensor([11904],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1190],"float32"),Tensor([1190],"float32"),Tensor([1190],"float32"),Tensor([1190],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([11968],"float32"),Tensor([11968],"float32"),Tensor([11968],"float32"),Tensor([11968],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([12, 12],"int64"),Tensor([12, 12],"int64"),), 2, )
paddle.stack(tuple(Tensor([12000],"float32"),Tensor([12000],"float32"),Tensor([12000],"float32"),Tensor([12000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1200],"float32"),Tensor([1200],"float32"),Tensor([1200],"float32"),Tensor([1200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([12096],"float32"),Tensor([12096],"float32"),Tensor([12096],"float32"),Tensor([12096],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1209],"float32"),Tensor([1209],"float32"),Tensor([1209],"float32"),Tensor([1209],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([12144],"float32"),Tensor([12144],"float32"),Tensor([12144],"float32"),Tensor([12144],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1216],"float32"),Tensor([1216],"float32"),Tensor([1216],"float32"),Tensor([1216],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1218],"float32"),Tensor([1218],"float32"),Tensor([1218],"float32"),Tensor([1218],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1221],"float32"),Tensor([1221],"float32"),Tensor([1221],"float32"),Tensor([1221],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1224],"float32"),Tensor([1224],"float32"),Tensor([1224],"float32"),Tensor([1224],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1225],"float32"),Tensor([1225],"float32"),Tensor([1225],"float32"),Tensor([1225],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([12288],"float32"),Tensor([12288],"float32"),Tensor([12288],"float32"),Tensor([12288],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1230],"float32"),Tensor([1230],"float32"),Tensor([1230],"float32"),Tensor([1230],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([12320],"float32"),Tensor([12320],"float32"),Tensor([12320],"float32"),Tensor([12320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([12400],"float32"),Tensor([12400],"float32"),Tensor([12400],"float32"),Tensor([12400],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),Tensor([1240],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([12480],"float32"),Tensor([12480],"float32"),Tensor([12480],"float32"),Tensor([12480],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1248],"float32"),Tensor([1248],"float32"),Tensor([1248],"float32"),Tensor([1248],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([12512],"float32"),Tensor([12512],"float32"),Tensor([12512],"float32"),Tensor([12512],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1254],"float32"),Tensor([1254],"float32"),Tensor([1254],"float32"),Tensor([1254],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1258],"float32"),Tensor([1258],"float32"),Tensor([1258],"float32"),Tensor([1258],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1260],"float32"),Tensor([1260],"float32"),Tensor([1260],"float32"),Tensor([1260],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([12672],"float32"),Tensor([12672],"float32"),Tensor([12672],"float32"),Tensor([12672],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1271],"float32"),Tensor([1271],"float32"),Tensor([1271],"float32"),Tensor([1271],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([12800],"float32"),Tensor([12800],"float32"),Tensor([12800],"float32"),Tensor([12800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1280],"float32"),Tensor([1280],"float32"),Tensor([1280],"float32"),Tensor([1280],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1287],"float32"),Tensor([1287],"float32"),Tensor([1287],"float32"),Tensor([1287],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([12880],"float32"),Tensor([12880],"float32"),Tensor([12880],"float32"),Tensor([12880],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),), axis=0, )
paddle.stack(tuple(Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),Tensor([128],"int64"),), axis=0, )
paddle.stack(tuple(Tensor([1292],"float32"),Tensor([1292],"float32"),Tensor([1292],"float32"),Tensor([1292],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1295],"float32"),Tensor([1295],"float32"),Tensor([1295],"float32"),Tensor([1295],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1296],"float32"),Tensor([1296],"float32"),Tensor([1296],"float32"),Tensor([1296],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([13, 13],"int64"),Tensor([13, 13],"int64"),), 2, )
paddle.stack(tuple(Tensor([13024],"float32"),Tensor([13024],"float32"),Tensor([13024],"float32"),Tensor([13024],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1302],"float32"),Tensor([1302],"float32"),Tensor([1302],"float32"),Tensor([1302],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([13056],"float32"),Tensor([13056],"float32"),Tensor([13056],"float32"),Tensor([13056],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1312],"float32"),Tensor([1312],"float32"),Tensor([1312],"float32"),Tensor([1312],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([13200],"float32"),Tensor([13200],"float32"),Tensor([13200],"float32"),Tensor([13200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1320],"float32"),Tensor([1320],"float32"),Tensor([1320],"float32"),Tensor([1320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1326],"float32"),Tensor([1326],"float32"),Tensor([1326],"float32"),Tensor([1326],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1330],"float32"),Tensor([1330],"float32"),Tensor([1330],"float32"),Tensor([1330],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([13312],"float32"),Tensor([13312],"float32"),Tensor([13312],"float32"),Tensor([13312],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1332],"float32"),Tensor([1332],"float32"),Tensor([1332],"float32"),Tensor([1332],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([13392],"float32"),Tensor([13392],"float32"),Tensor([13392],"float32"),Tensor([13392],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([13440],"float32"),Tensor([13440],"float32"),Tensor([13440],"float32"),Tensor([13440],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1344],"float32"),Tensor([1344],"float32"),Tensor([1344],"float32"),Tensor([1344],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1353],"float32"),Tensor([1353],"float32"),Tensor([1353],"float32"),Tensor([1353],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([13600],"float32"),Tensor([13600],"float32"),Tensor([13600],"float32"),Tensor([13600],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1360],"float32"),Tensor([1360],"float32"),Tensor([1360],"float32"),Tensor([1360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([13616],"float32"),Tensor([13616],"float32"),Tensor([13616],"float32"),Tensor([13616],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1365],"float32"),Tensor([1365],"float32"),Tensor([1365],"float32"),Tensor([1365],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1368],"float32"),Tensor([1368],"float32"),Tensor([1368],"float32"),Tensor([1368],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1369],"float32"),Tensor([1369],"float32"),Tensor([1369],"float32"),Tensor([1369],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([13728],"float32"),Tensor([13728],"float32"),Tensor([13728],"float32"),Tensor([13728],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([138120],"float32"),Tensor([138120],"float32"),Tensor([138120],"float32"),Tensor([138120],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([13824],"float32"),Tensor([13824],"float32"),Tensor([13824],"float32"),Tensor([13824],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1386],"float32"),Tensor([1386],"float32"),Tensor([1386],"float32"),Tensor([1386],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([13888],"float32"),Tensor([13888],"float32"),Tensor([13888],"float32"),Tensor([13888],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1394],"float32"),Tensor([1394],"float32"),Tensor([1394],"float32"),Tensor([1394],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([13984],"float32"),Tensor([13984],"float32"),Tensor([13984],"float32"),Tensor([13984],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14, 1, 4, 2],"float32"),Tensor([14, 1, 4, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([14, 10, 4, 2],"float32"),Tensor([14, 10, 4, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([14, 14],"int64"),Tensor([14, 14],"int64"),), 2, )
paddle.stack(tuple(Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),Tensor([14, 3, 14],"float32"),), axis=0, )
paddle.stack(tuple(Tensor([14, 3, 4, 2],"float32"),Tensor([14, 3, 4, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([14, 7, 4, 2],"float32"),Tensor([14, 7, 4, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([14, 8, 4, 2],"float32"),Tensor([14, 8, 4, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([140, 188, 1],"float32"),Tensor([140, 188, 1],"float32"),Tensor([140, 188, 1],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([14000],"float32"),Tensor([14000],"float32"),Tensor([14000],"float32"),Tensor([14000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1404],"float32"),Tensor([1404],"float32"),Tensor([1404],"float32"),Tensor([1404],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1406],"float32"),Tensor([1406],"float32"),Tensor([1406],"float32"),Tensor([1406],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([140],"float32"),Tensor([140],"float32"),Tensor([140],"float32"),Tensor([140],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14208],"float32"),Tensor([14208],"float32"),Tensor([14208],"float32"),Tensor([14208],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14256],"float32"),Tensor([14256],"float32"),Tensor([14256],"float32"),Tensor([14256],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1428],"float32"),Tensor([1428],"float32"),Tensor([1428],"float32"),Tensor([1428],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14336],"float32"),Tensor([14336],"float32"),Tensor([14336],"float32"),Tensor([14336],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14352],"float32"),Tensor([14352],"float32"),Tensor([14352],"float32"),Tensor([14352],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1435],"float32"),Tensor([1435],"float32"),Tensor([1435],"float32"),Tensor([1435],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14384],"float32"),Tensor([14384],"float32"),Tensor([14384],"float32"),Tensor([14384],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14400],"float32"),Tensor([14400],"float32"),Tensor([14400],"float32"),Tensor([14400],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1440],"float32"),Tensor([1440],"float32"),Tensor([1440],"float32"),Tensor([1440],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1443],"float32"),Tensor([1443],"float32"),Tensor([1443],"float32"),Tensor([1443],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1444],"float32"),Tensor([1444],"float32"),Tensor([1444],"float32"),Tensor([1444],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14592],"float32"),Tensor([14592],"float32"),Tensor([14592],"float32"),Tensor([14592],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14688],"float32"),Tensor([14688],"float32"),Tensor([14688],"float32"),Tensor([14688],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1470],"float32"),Tensor([1470],"float32"),Tensor([1470],"float32"),Tensor([1470],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14720],"float32"),Tensor([14720],"float32"),Tensor([14720],"float32"),Tensor([14720],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1476],"float32"),Tensor([1476],"float32"),Tensor([1476],"float32"),Tensor([1476],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14784],"float32"),Tensor([14784],"float32"),Tensor([14784],"float32"),Tensor([14784],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14800],"float32"),Tensor([14800],"float32"),Tensor([14800],"float32"),Tensor([14800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1480],"float32"),Tensor([1480],"float32"),Tensor([1480],"float32"),Tensor([1480],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1482],"float32"),Tensor([1482],"float32"),Tensor([1482],"float32"),Tensor([1482],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14848],"float32"),Tensor([14848],"float32"),Tensor([14848],"float32"),Tensor([14848],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14880],"float32"),Tensor([14880],"float32"),Tensor([14880],"float32"),Tensor([14880],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([14976],"float32"),Tensor([14976],"float32"),Tensor([14976],"float32"),Tensor([14976],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15, 15],"int64"),Tensor([15, 15],"int64"),), 2, )
paddle.stack(tuple(Tensor([150402],"float32"),Tensor([150402],"float32"),Tensor([150402],"float32"),Tensor([150402],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15088],"float32"),Tensor([15088],"float32"),Tensor([15088],"float32"),Tensor([15088],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([150],"float32"),Tensor([150],"float32"),Tensor([150],"float32"),Tensor([150],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15120],"float32"),Tensor([15120],"float32"),Tensor([15120],"float32"),Tensor([15120],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1512],"float32"),Tensor([1512],"float32"),Tensor([1512],"float32"),Tensor([1512],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1517],"float32"),Tensor([1517],"float32"),Tensor([1517],"float32"),Tensor([1517],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15200],"float32"),Tensor([15200],"float32"),Tensor([15200],"float32"),Tensor([15200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1520],"float32"),Tensor([1520],"float32"),Tensor([1520],"float32"),Tensor([1520],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15232],"float32"),Tensor([15232],"float32"),Tensor([15232],"float32"),Tensor([15232],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15312],"float32"),Tensor([15312],"float32"),Tensor([15312],"float32"),Tensor([15312],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([153450],"float32"),Tensor([153450],"float32"),Tensor([153450],"float32"),Tensor([153450],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15360],"float32"),Tensor([15360],"float32"),Tensor([15360],"float32"),Tensor([15360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15376],"float32"),Tensor([15376],"float32"),Tensor([15376],"float32"),Tensor([15376],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15392],"float32"),Tensor([15392],"float32"),Tensor([15392],"float32"),Tensor([15392],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15456],"float32"),Tensor([15456],"float32"),Tensor([15456],"float32"),Tensor([15456],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([154],"float32"),Tensor([154],"float32"),Tensor([154],"float32"),Tensor([154],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1554],"float32"),Tensor([1554],"float32"),Tensor([1554],"float32"),Tensor([1554],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15552],"float32"),Tensor([15552],"float32"),Tensor([15552],"float32"),Tensor([15552],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1558],"float32"),Tensor([1558],"float32"),Tensor([1558],"float32"),Tensor([1558],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15600],"float32"),Tensor([15600],"float32"),Tensor([15600],"float32"),Tensor([15600],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15680],"float32"),Tensor([15680],"float32"),Tensor([15680],"float32"),Tensor([15680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15744],"float32"),Tensor([15744],"float32"),Tensor([15744],"float32"),Tensor([15744],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15776],"float32"),Tensor([15776],"float32"),Tensor([15776],"float32"),Tensor([15776],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15808],"float32"),Tensor([15808],"float32"),Tensor([15808],"float32"),Tensor([15808],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([158580],"float32"),Tensor([158580],"float32"),Tensor([158580],"float32"),Tensor([158580],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([15872],"float32"),Tensor([15872],"float32"),Tensor([15872],"float32"),Tensor([15872],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1596],"float32"),Tensor([1596],"float32"),Tensor([1596],"float32"),Tensor([1596],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16, 16],"int64"),Tensor([16, 16],"int64"),), 2, )
paddle.stack(tuple(Tensor([16, 16],"int64"),Tensor([16, 16],"int64"),), axis=2, )
paddle.stack(tuple(Tensor([16000],"float32"),Tensor([16000],"float32"),Tensor([16000],"float32"),Tensor([16000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([160],"float32"),Tensor([160],"float32"),Tensor([160],"float32"),Tensor([160],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16128],"float32"),Tensor([16128],"float32"),Tensor([16128],"float32"),Tensor([16128],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1620],"float32"),Tensor([1620],"float32"),Tensor([1620],"float32"),Tensor([1620],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16320],"float32"),Tensor([16320],"float32"),Tensor([16320],"float32"),Tensor([16320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16368],"float32"),Tensor([16368],"float32"),Tensor([16368],"float32"),Tensor([16368],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16384],"float32"),Tensor([16384],"float32"),Tensor([16384],"float32"),Tensor([16384],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16400],"float32"),Tensor([16400],"float32"),Tensor([16400],"float32"),Tensor([16400],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16416],"float32"),Tensor([16416],"float32"),Tensor([16416],"float32"),Tensor([16416],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16576],"float32"),Tensor([16576],"float32"),Tensor([16576],"float32"),Tensor([16576],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([165],"float32"),Tensor([165],"float32"),Tensor([165],"float32"),Tensor([165],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([166533],"float32"),Tensor([166533],"float32"),Tensor([166533],"float32"),Tensor([166533],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16704],"float32"),Tensor([16704],"float32"),Tensor([16704],"float32"),Tensor([16704],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16800],"float32"),Tensor([16800],"float32"),Tensor([16800],"float32"),Tensor([16800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1680],"float32"),Tensor([1680],"float32"),Tensor([1680],"float32"),Tensor([1680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16848],"float32"),Tensor([16848],"float32"),Tensor([16848],"float32"),Tensor([16848],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16864],"float32"),Tensor([16864],"float32"),Tensor([16864],"float32"),Tensor([16864],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([168795],"float32"),Tensor([168795],"float32"),Tensor([168795],"float32"),Tensor([168795],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([16896],"float32"),Tensor([16896],"float32"),Tensor([16896],"float32"),Tensor([16896],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([17, 17],"int64"),Tensor([17, 17],"int64"),), 2, )
paddle.stack(tuple(Tensor([17024],"float32"),Tensor([17024],"float32"),Tensor([17024],"float32"),Tensor([17024],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([17056],"float32"),Tensor([17056],"float32"),Tensor([17056],"float32"),Tensor([17056],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([171888],"float32"),Tensor([171888],"float32"),Tensor([171888],"float32"),Tensor([171888],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1722],"float32"),Tensor([1722],"float32"),Tensor([1722],"float32"),Tensor([1722],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([17280],"float32"),Tensor([17280],"float32"),Tensor([17280],"float32"),Tensor([17280],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1728],"float32"),Tensor([1728],"float32"),Tensor([1728],"float32"),Tensor([1728],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([17360],"float32"),Tensor([17360],"float32"),Tensor([17360],"float32"),Tensor([17360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([17408],"float32"),Tensor([17408],"float32"),Tensor([17408],"float32"),Tensor([17408],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([17424],"float32"),Tensor([17424],"float32"),Tensor([17424],"float32"),Tensor([17424],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([17472],"float32"),Tensor([17472],"float32"),Tensor([17472],"float32"),Tensor([17472],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([176490],"float32"),Tensor([176490],"float32"),Tensor([176490],"float32"),Tensor([176490],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1764],"float32"),Tensor([1764],"float32"),Tensor([1764],"float32"),Tensor([1764],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([176],"float32"),Tensor([176],"float32"),Tensor([176],"float32"),Tensor([176],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([17712],"float32"),Tensor([17712],"float32"),Tensor([17712],"float32"),Tensor([17712],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([177276],"float32"),Tensor([177276],"float32"),Tensor([177276],"float32"),Tensor([177276],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([17760],"float32"),Tensor([17760],"float32"),Tensor([17760],"float32"),Tensor([17760],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([17856],"float32"),Tensor([17856],"float32"),Tensor([17856],"float32"),Tensor([17856],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([17920],"float32"),Tensor([17920],"float32"),Tensor([17920],"float32"),Tensor([17920],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([17952],"float32"),Tensor([17952],"float32"),Tensor([17952],"float32"),Tensor([17952],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([18, 18],"int64"),Tensor([18, 18],"int64"),), 2, )
paddle.stack(tuple(Tensor([180048],"float32"),Tensor([180048],"float32"),Tensor([180048],"float32"),Tensor([180048],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1800],"float32"),Tensor([1800],"float32"),Tensor([1800],"float32"),Tensor([1800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([180],"float32"),Tensor([180],"float32"),Tensor([180],"float32"),Tensor([180],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([18144],"float32"),Tensor([18144],"float32"),Tensor([18144],"float32"),Tensor([18144],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([182391],"float32"),Tensor([182391],"float32"),Tensor([182391],"float32"),Tensor([182391],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([18240],"float32"),Tensor([18240],"float32"),Tensor([18240],"float32"),Tensor([18240],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([18352],"float32"),Tensor([18352],"float32"),Tensor([18352],"float32"),Tensor([18352],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([18368],"float32"),Tensor([18368],"float32"),Tensor([18368],"float32"),Tensor([18368],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([184140],"float32"),Tensor([184140],"float32"),Tensor([184140],"float32"),Tensor([184140],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([18432],"float32"),Tensor([18432],"float32"),Tensor([18432],"float32"),Tensor([18432],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([18480],"float32"),Tensor([18480],"float32"),Tensor([18480],"float32"),Tensor([18480],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([18496],"float32"),Tensor([18496],"float32"),Tensor([18496],"float32"),Tensor([18496],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([18560],"float32"),Tensor([18560],"float32"),Tensor([18560],"float32"),Tensor([18560],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([185691],"float32"),Tensor([185691],"float32"),Tensor([185691],"float32"),Tensor([185691],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([18720],"float32"),Tensor([18720],"float32"),Tensor([18720],"float32"),Tensor([18720],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([187],"float32"),Tensor([187],"float32"),Tensor([187],"float32"),Tensor([187],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([18816],"float32"),Tensor([18816],"float32"),Tensor([18816],"float32"),Tensor([18816],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([188256],"float32"),Tensor([188256],"float32"),Tensor([188256],"float32"),Tensor([188256],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([18848],"float32"),Tensor([18848],"float32"),Tensor([18848],"float32"),Tensor([18848],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([18944],"float32"),Tensor([18944],"float32"),Tensor([18944],"float32"),Tensor([18944],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([19, 19],"int64"),Tensor([19, 19],"int64"),), 2, )
paddle.stack(tuple(Tensor([19008],"float32"),Tensor([19008],"float32"),Tensor([19008],"float32"),Tensor([19008],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([190296],"float32"),Tensor([190296],"float32"),Tensor([190296],"float32"),Tensor([190296],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([19040],"float32"),Tensor([19040],"float32"),Tensor([19040],"float32"),Tensor([19040],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([191301],"float32"),Tensor([191301],"float32"),Tensor([191301],"float32"),Tensor([191301],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1914],"float32"),Tensor([1914],"float32"),Tensor([1914],"float32"),Tensor([1914],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1917],"float32"),Tensor([1917],"float32"),Tensor([1917],"float32"),Tensor([1917],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([191835],"float32"),Tensor([191835],"float32"),Tensor([191835],"float32"),Tensor([191835],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([19200],"float32"),Tensor([19200],"float32"),Tensor([19200],"float32"),Tensor([19200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1921],"float32"),Tensor([1921],"float32"),Tensor([1921],"float32"),Tensor([1921],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1929],"float32"),Tensor([1929],"float32"),Tensor([1929],"float32"),Tensor([1929],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([192],"float32"),Tensor([192],"float32"),Tensor([192],"float32"),Tensor([192],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([193368],"float32"),Tensor([193368],"float32"),Tensor([193368],"float32"),Tensor([193368],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([19344],"float32"),Tensor([19344],"float32"),Tensor([19344],"float32"),Tensor([19344],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1934],"float32"),Tensor([1934],"float32"),Tensor([1934],"float32"),Tensor([1934],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([194157],"float32"),Tensor([194157],"float32"),Tensor([194157],"float32"),Tensor([194157],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([19456],"float32"),Tensor([19456],"float32"),Tensor([19456],"float32"),Tensor([19456],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1947],"float32"),Tensor([1947],"float32"),Tensor([1947],"float32"),Tensor([1947],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([19488],"float32"),Tensor([19488],"float32"),Tensor([19488],"float32"),Tensor([19488],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([1950],"float32"),Tensor([1950],"float32"),Tensor([1950],"float32"),Tensor([1950],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([19536],"float32"),Tensor([19536],"float32"),Tensor([19536],"float32"),Tensor([19536],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([19584],"float32"),Tensor([19584],"float32"),Tensor([19584],"float32"),Tensor([19584],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([195],"float32"),Tensor([195],"float32"),Tensor([195],"float32"),Tensor([195],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([19600],"float32"),Tensor([19600],"float32"),Tensor([19600],"float32"),Tensor([19600],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([196416],"float32"),Tensor([196416],"float32"),Tensor([196416],"float32"),Tensor([196416],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([19680],"float32"),Tensor([19680],"float32"),Tensor([19680],"float32"),Tensor([19680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([196944],"float32"),Tensor([196944],"float32"),Tensor([196944],"float32"),Tensor([196944],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([196],"float32"),Tensor([196],"float32"),Tensor([196],"float32"),Tensor([196],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([198249],"float32"),Tensor([198249],"float32"),Tensor([198249],"float32"),Tensor([198249],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([19840],"float32"),Tensor([19840],"float32"),Tensor([19840],"float32"),Tensor([19840],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([198],"float32"),Tensor([198],"float32"),Tensor([198],"float32"),Tensor([198],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([199485],"float32"),Tensor([199485],"float32"),Tensor([199485],"float32"),Tensor([199485],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([19968],"float32"),Tensor([19968],"float32"),Tensor([19968],"float32"),Tensor([19968],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2, 1, 4, 2],"float32"),Tensor([2, 1, 4, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([2, 10, 15, 64],"float32"),Tensor([2, 10, 15, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([2, 10],"int64"),Tensor([2, 10],"int64"),), axis=1, )
paddle.stack(tuple(Tensor([2, 1100, 64],"float32"),Tensor([2, 1100, 64],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([2, 150],"float32"),Tensor([2, 150],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([2, 19, 29, 64],"float32"),Tensor([2, 19, 29, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([2, 2204],"float32"),Tensor([2, 2204],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([2, 2],"int64"),Tensor([2, 2],"int64"),), axis=2, )
paddle.stack(tuple(Tensor([2, 3, 4, 2],"float32"),Tensor([2, 3, 4, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([2, 38, 58, 64],"float32"),Tensor([2, 38, 58, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([2, 551],"float32"),Tensor([2, 551],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([2, 76, 115, 64],"float32"),Tensor([2, 76, 115, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([2, 8740],"float32"),Tensor([2, 8740],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([20, 20],"int64"),Tensor([20, 20],"int64"),), 2, )
paddle.stack(tuple(Tensor([200022],"float32"),Tensor([200022],"float32"),Tensor([200022],"float32"),Tensor([200022],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2003],"float32"),Tensor([2003],"float32"),Tensor([2003],"float32"),Tensor([2003],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([20064],"float32"),Tensor([20064],"float32"),Tensor([20064],"float32"),Tensor([20064],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([20128],"float32"),Tensor([20128],"float32"),Tensor([20128],"float32"),Tensor([20128],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2012],"float32"),Tensor([2012],"float32"),Tensor([2012],"float32"),Tensor([2012],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([20160],"float32"),Tensor([20160],"float32"),Tensor([20160],"float32"),Tensor([20160],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2016],"float32"),Tensor([2016],"float32"),Tensor([2016],"float32"),Tensor([2016],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2022],"float32"),Tensor([2022],"float32"),Tensor([2022],"float32"),Tensor([2022],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2023],"float32"),Tensor([2023],"float32"),Tensor([2023],"float32"),Tensor([2023],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([202572],"float32"),Tensor([202572],"float32"),Tensor([202572],"float32"),Tensor([202572],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2025],"float32"),Tensor([2025],"float32"),Tensor([2025],"float32"),Tensor([2025],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([20336],"float32"),Tensor([20336],"float32"),Tensor([20336],"float32"),Tensor([20336],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2036],"float32"),Tensor([2036],"float32"),Tensor([2036],"float32"),Tensor([2036],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2037],"float32"),Tensor([2037],"float32"),Tensor([2037],"float32"),Tensor([2037],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2038],"float32"),Tensor([2038],"float32"),Tensor([2038],"float32"),Tensor([2038],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2041],"float32"),Tensor([2041],"float32"),Tensor([2041],"float32"),Tensor([2041],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2044],"float32"),Tensor([2044],"float32"),Tensor([2044],"float32"),Tensor([2044],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2045],"float32"),Tensor([2045],"float32"),Tensor([2045],"float32"),Tensor([2045],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([204624],"float32"),Tensor([204624],"float32"),Tensor([204624],"float32"),Tensor([204624],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2047],"float32"),Tensor([2047],"float32"),Tensor([2047],"float32"),Tensor([2047],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([20480],"float32"),Tensor([20480],"float32"),Tensor([20480],"float32"),Tensor([20480],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),Tensor([2048],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([204],"float32"),Tensor([204],"float32"),Tensor([204],"float32"),Tensor([204],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([205923],"float32"),Tensor([205923],"float32"),Tensor([205923],"float32"),Tensor([205923],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([20592],"float32"),Tensor([20592],"float32"),Tensor([20592],"float32"),Tensor([20592],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([20672],"float32"),Tensor([20672],"float32"),Tensor([20672],"float32"),Tensor([20672],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([20720],"float32"),Tensor([20720],"float32"),Tensor([20720],"float32"),Tensor([20720],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([20736],"float32"),Tensor([20736],"float32"),Tensor([20736],"float32"),Tensor([20736],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([208197],"float32"),Tensor([208197],"float32"),Tensor([208197],"float32"),Tensor([208197],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([20832],"float32"),Tensor([20832],"float32"),Tensor([20832],"float32"),Tensor([20832],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([208692],"float32"),Tensor([208692],"float32"),Tensor([208692],"float32"),Tensor([208692],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([208],"float32"),Tensor([208],"float32"),Tensor([208],"float32"),Tensor([208],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([20992],"float32"),Tensor([20992],"float32"),Tensor([20992],"float32"),Tensor([20992],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([209],"float32"),Tensor([209],"float32"),Tensor([209],"float32"),Tensor([209],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),Tensor([20],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([210],"float32"),Tensor([210],"float32"),Tensor([210],"float32"),Tensor([210],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([211038],"float32"),Tensor([211038],"float32"),Tensor([211038],"float32"),Tensor([211038],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([21120],"float32"),Tensor([21120],"float32"),Tensor([21120],"float32"),Tensor([21120],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([21216],"float32"),Tensor([21216],"float32"),Tensor([21216],"float32"),Tensor([21216],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([212784],"float32"),Tensor([212784],"float32"),Tensor([212784],"float32"),Tensor([212784],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([21280],"float32"),Tensor([21280],"float32"),Tensor([21280],"float32"),Tensor([21280],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([21312],"float32"),Tensor([21312],"float32"),Tensor([21312],"float32"),Tensor([21312],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([214107],"float32"),Tensor([214107],"float32"),Tensor([214107],"float32"),Tensor([214107],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([214830],"float32"),Tensor([214830],"float32"),Tensor([214830],"float32"),Tensor([214830],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([214848],"float32"),Tensor([214848],"float32"),Tensor([214848],"float32"),Tensor([214848],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([21504],"float32"),Tensor([21504],"float32"),Tensor([21504],"float32"),Tensor([21504],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2160],"float32"),Tensor([2160],"float32"),Tensor([2160],"float32"),Tensor([2160],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([21648],"float32"),Tensor([21648],"float32"),Tensor([21648],"float32"),Tensor([21648],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([216],"float32"),Tensor([216],"float32"),Tensor([216],"float32"),Tensor([216],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([217413],"float32"),Tensor([217413],"float32"),Tensor([217413],"float32"),Tensor([217413],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([21760],"float32"),Tensor([21760],"float32"),Tensor([21760],"float32"),Tensor([21760],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([217689],"float32"),Tensor([217689],"float32"),Tensor([217689],"float32"),Tensor([217689],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([21840],"float32"),Tensor([21840],"float32"),Tensor([21840],"float32"),Tensor([21840],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([21888],"float32"),Tensor([21888],"float32"),Tensor([21888],"float32"),Tensor([21888],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([21904],"float32"),Tensor([21904],"float32"),Tensor([21904],"float32"),Tensor([21904],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([219453],"float32"),Tensor([219453],"float32"),Tensor([219453],"float32"),Tensor([219453],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([22, 22],"int64"),Tensor([22, 22],"int64"),), 2, )
paddle.stack(tuple(Tensor([220968],"float32"),Tensor([220968],"float32"),Tensor([220968],"float32"),Tensor([220968],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([220992],"float32"),Tensor([220992],"float32"),Tensor([220992],"float32"),Tensor([220992],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([22176],"float32"),Tensor([22176],"float32"),Tensor([22176],"float32"),Tensor([22176],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([221],"float32"),Tensor([221],"float32"),Tensor([221],"float32"),Tensor([221],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([222012],"float32"),Tensor([222012],"float32"),Tensor([222012],"float32"),Tensor([222012],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([22304],"float32"),Tensor([22304],"float32"),Tensor([22304],"float32"),Tensor([22304],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([223554],"float32"),Tensor([223554],"float32"),Tensor([223554],"float32"),Tensor([223554],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([223827],"float32"),Tensor([223827],"float32"),Tensor([223827],"float32"),Tensor([223827],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([22464],"float32"),Tensor([22464],"float32"),Tensor([22464],"float32"),Tensor([22464],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([22496],"float32"),Tensor([22496],"float32"),Tensor([22496],"float32"),Tensor([22496],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([224],"float32"),Tensor([224],"float32"),Tensor([224],"float32"),Tensor([224],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([225],"float32"),Tensor([225],"float32"),Tensor([225],"float32"),Tensor([225],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([227124],"float32"),Tensor([227124],"float32"),Tensor([227124],"float32"),Tensor([227124],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([227919],"float32"),Tensor([227919],"float32"),Tensor([227919],"float32"),Tensor([227919],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([22848],"float32"),Tensor([22848],"float32"),Tensor([22848],"float32"),Tensor([22848],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([228],"float32"),Tensor([228],"float32"),Tensor([228],"float32"),Tensor([228],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([229152],"float32"),Tensor([229152],"float32"),Tensor([229152],"float32"),Tensor([229152],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([229455],"float32"),Tensor([229455],"float32"),Tensor([229455],"float32"),Tensor([229455],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([22960],"float32"),Tensor([22960],"float32"),Tensor([22960],"float32"),Tensor([22960],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([229965],"float32"),Tensor([229965],"float32"),Tensor([229965],"float32"),Tensor([229965],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([230175],"float32"),Tensor([230175],"float32"),Tensor([230175],"float32"),Tensor([230175],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([230202],"float32"),Tensor([230202],"float32"),Tensor([230202],"float32"),Tensor([230202],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([23040],"float32"),Tensor([23040],"float32"),Tensor([23040],"float32"),Tensor([23040],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([23088],"float32"),Tensor([23088],"float32"),Tensor([23088],"float32"),Tensor([23088],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([23104],"float32"),Tensor([23104],"float32"),Tensor([23104],"float32"),Tensor([23104],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([231],"float32"),Tensor([231],"float32"),Tensor([231],"float32"),Tensor([231],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([233244],"float32"),Tensor([233244],"float32"),Tensor([233244],"float32"),Tensor([233244],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([234804],"float32"),Tensor([234804],"float32"),Tensor([234804],"float32"),Tensor([234804],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([234],"float32"),Tensor([234],"float32"),Tensor([234],"float32"),Tensor([234],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([23520],"float32"),Tensor([23520],"float32"),Tensor([23520],"float32"),Tensor([23520],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2352],"float32"),Tensor([2352],"float32"),Tensor([2352],"float32"),Tensor([2352],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([235320],"float32"),Tensor([235320],"float32"),Tensor([235320],"float32"),Tensor([235320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([23616],"float32"),Tensor([23616],"float32"),Tensor([23616],"float32"),Tensor([23616],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([236313],"float32"),Tensor([236313],"float32"),Tensor([236313],"float32"),Tensor([236313],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([236334],"float32"),Tensor([236334],"float32"),Tensor([236334],"float32"),Tensor([236334],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([236616],"float32"),Tensor([236616],"float32"),Tensor([236616],"float32"),Tensor([236616],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([23680],"float32"),Tensor([23680],"float32"),Tensor([23680],"float32"),Tensor([23680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([23712],"float32"),Tensor([23712],"float32"),Tensor([23712],"float32"),Tensor([23712],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([237360],"float32"),Tensor([237360],"float32"),Tensor([237360],"float32"),Tensor([237360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([237870],"float32"),Tensor([237870],"float32"),Tensor([237870],"float32"),Tensor([237870],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([238],"float32"),Tensor([238],"float32"),Tensor([238],"float32"),Tensor([238],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([239382],"float32"),Tensor([239382],"float32"),Tensor([239382],"float32"),Tensor([239382],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([24, 24],"int64"),Tensor([24, 24],"int64"),), 2, )
paddle.stack(tuple(Tensor([2400],"float32"),Tensor([2400],"float32"),Tensor([2400],"float32"),Tensor([2400],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([240],"float32"),Tensor([240],"float32"),Tensor([240],"float32"),Tensor([240],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([241221],"float32"),Tensor([241221],"float32"),Tensor([241221],"float32"),Tensor([241221],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([241731],"float32"),Tensor([241731],"float32"),Tensor([241731],"float32"),Tensor([241731],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([24192],"float32"),Tensor([24192],"float32"),Tensor([24192],"float32"),Tensor([24192],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([24272],"float32"),Tensor([24272],"float32"),Tensor([24272],"float32"),Tensor([24272],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([242991],"float32"),Tensor([242991],"float32"),Tensor([242991],"float32"),Tensor([242991],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([24320],"float32"),Tensor([24320],"float32"),Tensor([24320],"float32"),Tensor([24320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([243474],"float32"),Tensor([243474],"float32"),Tensor([243474],"float32"),Tensor([243474],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([244800],"float32"),Tensor([244800],"float32"),Tensor([244800],"float32"),Tensor([244800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([245520],"float32"),Tensor([245520],"float32"),Tensor([245520],"float32"),Tensor([245520],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([245823],"float32"),Tensor([245823],"float32"),Tensor([245823],"float32"),Tensor([245823],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([246051],"float32"),Tensor([246051],"float32"),Tensor([246051],"float32"),Tensor([246051],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([247086],"float32"),Tensor([247086],"float32"),Tensor([247086],"float32"),Tensor([247086],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([247],"float32"),Tensor([247],"float32"),Tensor([247],"float32"),Tensor([247],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2480],"float32"),Tensor([2480],"float32"),Tensor([2480],"float32"),Tensor([2480],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([248616],"float32"),Tensor([248616],"float32"),Tensor([248616],"float32"),Tensor([248616],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([24864],"float32"),Tensor([24864],"float32"),Tensor([24864],"float32"),Tensor([24864],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([24928],"float32"),Tensor([24928],"float32"),Tensor([24928],"float32"),Tensor([24928],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([249405],"float32"),Tensor([249405],"float32"),Tensor([249405],"float32"),Tensor([249405],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([250656],"float32"),Tensor([250656],"float32"),Tensor([250656],"float32"),Tensor([250656],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([251676],"float32"),Tensor([251676],"float32"),Tensor([251676],"float32"),Tensor([251676],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2520],"float32"),Tensor([2520],"float32"),Tensor([2520],"float32"),Tensor([2520],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([252195],"float32"),Tensor([252195],"float32"),Tensor([252195],"float32"),Tensor([252195],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([252681],"float32"),Tensor([252681],"float32"),Tensor([252681],"float32"),Tensor([252681],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([252],"float32"),Tensor([252],"float32"),Tensor([252],"float32"),Tensor([252],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([253728],"float32"),Tensor([253728],"float32"),Tensor([253728],"float32"),Tensor([253728],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([25536],"float32"),Tensor([25536],"float32"),Tensor([25536],"float32"),Tensor([25536],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([255780],"float32"),Tensor([255780],"float32"),Tensor([255780],"float32"),Tensor([255780],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([255],"float32"),Tensor([255],"float32"),Tensor([255],"float32"),Tensor([255],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([256],"float32"),Tensor([256],"float32"),Tensor([256],"float32"),Tensor([256],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([257796],"float32"),Tensor([257796],"float32"),Tensor([257796],"float32"),Tensor([257796],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2596],"float32"),Tensor([2596],"float32"),Tensor([2596],"float32"),Tensor([2596],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([26, 26],"int64"),Tensor([26, 26],"int64"),), 2, )
paddle.stack(tuple(Tensor([2604],"float32"),Tensor([2604],"float32"),Tensor([2604],"float32"),Tensor([2604],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([260865],"float32"),Tensor([260865],"float32"),Tensor([260865],"float32"),Tensor([260865],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([260],"float32"),Tensor([260],"float32"),Tensor([260],"float32"),Tensor([260],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([261681],"float32"),Tensor([261681],"float32"),Tensor([261681],"float32"),Tensor([261681],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([261888],"float32"),Tensor([261888],"float32"),Tensor([261888],"float32"),Tensor([261888],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([262194],"float32"),Tensor([262194],"float32"),Tensor([262194],"float32"),Tensor([262194],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([262428],"float32"),Tensor([262428],"float32"),Tensor([262428],"float32"),Tensor([262428],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2640],"float32"),Tensor([2640],"float32"),Tensor([2640],"float32"),Tensor([2640],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2646],"float32"),Tensor([2646],"float32"),Tensor([2646],"float32"),Tensor([2646],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([264978],"float32"),Tensor([264978],"float32"),Tensor([264978],"float32"),Tensor([264978],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([266],"float32"),Tensor([266],"float32"),Tensor([266],"float32"),Tensor([266],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([267030],"float32"),Tensor([267030],"float32"),Tensor([267030],"float32"),Tensor([267030],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([268560],"float32"),Tensor([268560],"float32"),Tensor([268560],"float32"),Tensor([268560],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([268569],"float32"),Tensor([268569],"float32"),Tensor([268569],"float32"),Tensor([268569],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([26880],"float32"),Tensor([26880],"float32"),Tensor([26880],"float32"),Tensor([26880],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2688],"float32"),Tensor([2688],"float32"),Tensor([2688],"float32"),Tensor([2688],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([269355],"float32"),Tensor([269355],"float32"),Tensor([269355],"float32"),Tensor([269355],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([269586],"float32"),Tensor([269586],"float32"),Tensor([269586],"float32"),Tensor([269586],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([270096],"float32"),Tensor([270096],"float32"),Tensor([270096],"float32"),Tensor([270096],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([270],"float32"),Tensor([270],"float32"),Tensor([270],"float32"),Tensor([270],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([272118],"float32"),Tensor([272118],"float32"),Tensor([272118],"float32"),Tensor([272118],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([272649],"float32"),Tensor([272649],"float32"),Tensor([272649],"float32"),Tensor([272649],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([272],"float32"),Tensor([272],"float32"),Tensor([272],"float32"),Tensor([272],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([273],"float32"),Tensor([273],"float32"),Tensor([273],"float32"),Tensor([273],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([27552],"float32"),Tensor([27552],"float32"),Tensor([27552],"float32"),Tensor([27552],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2760],"float32"),Tensor([2760],"float32"),Tensor([2760],"float32"),Tensor([2760],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([276210],"float32"),Tensor([276210],"float32"),Tensor([276210],"float32"),Tensor([276210],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([27648],"float32"),Tensor([27648],"float32"),Tensor([27648],"float32"),Tensor([27648],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2772],"float32"),Tensor([2772],"float32"),Tensor([2772],"float32"),Tensor([2772],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([277539],"float32"),Tensor([277539],"float32"),Tensor([277539],"float32"),Tensor([277539],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([278256],"float32"),Tensor([278256],"float32"),Tensor([278256],"float32"),Tensor([278256],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([278562],"float32"),Tensor([278562],"float32"),Tensor([278562],"float32"),Tensor([278562],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([279279],"float32"),Tensor([279279],"float32"),Tensor([279279],"float32"),Tensor([279279],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([279300],"float32"),Tensor([279300],"float32"),Tensor([279300],"float32"),Tensor([279300],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([28, 28],"int64"),Tensor([28, 28],"int64"),), 2, )
paddle.stack(tuple(Tensor([280],"float32"),Tensor([280],"float32"),Tensor([280],"float32"),Tensor([280],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2816],"float32"),Tensor([2816],"float32"),Tensor([2816],"float32"),Tensor([2816],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([28224],"float32"),Tensor([28224],"float32"),Tensor([28224],"float32"),Tensor([28224],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([283167],"float32"),Tensor([283167],"float32"),Tensor([283167],"float32"),Tensor([283167],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([283905],"float32"),Tensor([283905],"float32"),Tensor([283905],"float32"),Tensor([283905],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2852],"float32"),Tensor([2852],"float32"),Tensor([2852],"float32"),Tensor([2852],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([285444],"float32"),Tensor([285444],"float32"),Tensor([285444],"float32"),Tensor([285444],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([285],"float32"),Tensor([285],"float32"),Tensor([285],"float32"),Tensor([285],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([286440],"float32"),Tensor([286440],"float32"),Tensor([286440],"float32"),Tensor([286440],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([286464],"float32"),Tensor([286464],"float32"),Tensor([286464],"float32"),Tensor([286464],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([286977],"float32"),Tensor([286977],"float32"),Tensor([286977],"float32"),Tensor([286977],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([28800],"float32"),Tensor([28800],"float32"),Tensor([28800],"float32"),Tensor([28800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2880],"float32"),Tensor([2880],"float32"),Tensor([2880],"float32"),Tensor([2880],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([288],"float32"),Tensor([288],"float32"),Tensor([288],"float32"),Tensor([288],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2898],"float32"),Tensor([2898],"float32"),Tensor([2898],"float32"),Tensor([2898],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([289],"float32"),Tensor([289],"float32"),Tensor([289],"float32"),Tensor([289],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([290052],"float32"),Tensor([290052],"float32"),Tensor([290052],"float32"),Tensor([290052],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2904],"float32"),Tensor([2904],"float32"),Tensor([2904],"float32"),Tensor([2904],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([291555],"float32"),Tensor([291555],"float32"),Tensor([291555],"float32"),Tensor([291555],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([293397],"float32"),Tensor([293397],"float32"),Tensor([293397],"float32"),Tensor([293397],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([293622],"float32"),Tensor([293622],"float32"),Tensor([293622],"float32"),Tensor([293622],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2944],"float32"),Tensor([2944],"float32"),Tensor([2944],"float32"),Tensor([2944],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([294624],"float32"),Tensor([294624],"float32"),Tensor([294624],"float32"),Tensor([294624],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2948],"float32"),Tensor([2948],"float32"),Tensor([2948],"float32"),Tensor([2948],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([294],"float32"),Tensor([294],"float32"),Tensor([294],"float32"),Tensor([294],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2950],"float32"),Tensor([2950],"float32"),Tensor([2950],"float32"),Tensor([2950],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([295443],"float32"),Tensor([295443],"float32"),Tensor([295443],"float32"),Tensor([295443],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([295647],"float32"),Tensor([295647],"float32"),Tensor([295647],"float32"),Tensor([295647],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([296700],"float32"),Tensor([296700],"float32"),Tensor([296700],"float32"),Tensor([296700],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2968],"float32"),Tensor([2968],"float32"),Tensor([2968],"float32"),Tensor([2968],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2976],"float32"),Tensor([2976],"float32"),Tensor([2976],"float32"),Tensor([2976],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([299250],"float32"),Tensor([299250],"float32"),Tensor([299250],"float32"),Tensor([299250],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2992],"float32"),Tensor([2992],"float32"),Tensor([2992],"float32"),Tensor([2992],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([2],"float32"),Tensor([2],"float32"),), axis=0, )
paddle.stack(tuple(Tensor([2],"float64"),Tensor([2],"float64"),), axis=0, )
paddle.stack(tuple(Tensor([2],"int32"),Tensor([2],"int32"),), axis=0, )
paddle.stack(tuple(Tensor([2],"int64"),Tensor([2],"int64"),), axis=0, )
paddle.stack(tuple(Tensor([3, 224, 224],"float32"),Tensor([3, 224, 224],"float32"),), axis=0, )
paddle.stack(tuple(Tensor([3, 8, 224, 224],"float32"),Tensor([3, 8, 224, 224],"float32"),Tensor([3, 8, 224, 224],"float32"),Tensor([3, 8, 224, 224],"float32"),Tensor([3, 8, 224, 224],"float32"),Tensor([3, 8, 224, 224],"float32"),Tensor([3, 8, 224, 224],"float32"),Tensor([3, 8, 224, 224],"float32"),Tensor([3, 8, 224, 224],"float32"),Tensor([3, 8, 224, 224],"float32"),Tensor([3, 8, 224, 224],"float32"),Tensor([3, 8, 224, 224],"float32"),Tensor([3, 8, 224, 224],"float32"),Tensor([3, 8, 224, 224],"float32"),), axis=0, )
paddle.stack(tuple(Tensor([30, 30],"int64"),Tensor([30, 30],"int64"),), 2, )
paddle.stack(tuple(Tensor([3000],"float32"),Tensor([3000],"float32"),Tensor([3000],"float32"),Tensor([3000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([300762],"float32"),Tensor([300762],"float32"),Tensor([300762],"float32"),Tensor([300762],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3009],"float32"),Tensor([3009],"float32"),Tensor([3009],"float32"),Tensor([3009],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([300],"float32"),Tensor([300],"float32"),Tensor([300],"float32"),Tensor([300],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([301302],"float32"),Tensor([301302],"float32"),Tensor([301302],"float32"),Tensor([301302],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3024],"float32"),Tensor([3024],"float32"),Tensor([3024],"float32"),Tensor([3024],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([302832],"float32"),Tensor([302832],"float32"),Tensor([302832],"float32"),Tensor([302832],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3036],"float32"),Tensor([3036],"float32"),Tensor([3036],"float32"),Tensor([3036],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([303858],"float32"),Tensor([303858],"float32"),Tensor([303858],"float32"),Tensor([303858],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([304368],"float32"),Tensor([304368],"float32"),Tensor([304368],"float32"),Tensor([304368],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([304],"float32"),Tensor([304],"float32"),Tensor([304],"float32"),Tensor([304],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3050],"float32"),Tensor([3050],"float32"),Tensor([3050],"float32"),Tensor([3050],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([306900],"float32"),Tensor([306900],"float32"),Tensor([306900],"float32"),Tensor([306900],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([306],"float32"),Tensor([306],"float32"),Tensor([306],"float32"),Tensor([306],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3072],"float32"),Tensor([3072],"float32"),Tensor([3072],"float32"),Tensor([3072],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3080],"float32"),Tensor([3080],"float32"),Tensor([3080],"float32"),Tensor([3080],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3082],"float32"),Tensor([3082],"float32"),Tensor([3082],"float32"),Tensor([3082],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3087],"float32"),Tensor([3087],"float32"),Tensor([3087],"float32"),Tensor([3087],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([309255],"float32"),Tensor([309255],"float32"),Tensor([309255],"float32"),Tensor([309255],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([30],"float32"),Tensor([30],"float32"),Tensor([30],"float32"),Tensor([30],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3100],"float32"),Tensor([3100],"float32"),Tensor([3100],"float32"),Tensor([3100],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([310992],"float32"),Tensor([310992],"float32"),Tensor([310992],"float32"),Tensor([310992],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([311535],"float32"),Tensor([311535],"float32"),Tensor([311535],"float32"),Tensor([311535],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3120],"float32"),Tensor([3120],"float32"),Tensor([3120],"float32"),Tensor([3120],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([312324],"float32"),Tensor([312324],"float32"),Tensor([312324],"float32"),Tensor([312324],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3128],"float32"),Tensor([3128],"float32"),Tensor([3128],"float32"),Tensor([3128],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([313038],"float32"),Tensor([313038],"float32"),Tensor([313038],"float32"),Tensor([313038],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([313347],"float32"),Tensor([313347],"float32"),Tensor([313347],"float32"),Tensor([313347],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([314595],"float32"),Tensor([314595],"float32"),Tensor([314595],"float32"),Tensor([314595],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([315],"float32"),Tensor([315],"float32"),Tensor([315],"float32"),Tensor([315],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3168],"float32"),Tensor([3168],"float32"),Tensor([3168],"float32"),Tensor([3168],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([317160],"float32"),Tensor([317160],"float32"),Tensor([317160],"float32"),Tensor([317160],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3174],"float32"),Tensor([3174],"float32"),Tensor([3174],"float32"),Tensor([3174],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([319200],"float32"),Tensor([319200],"float32"),Tensor([319200],"float32"),Tensor([319200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([32, 32],"int64"),Tensor([32, 32],"int64"),), 2, )
paddle.stack(tuple(Tensor([32, 32],"int64"),Tensor([32, 32],"int64"),), axis=2, )
paddle.stack(tuple(Tensor([3200],"float32"),Tensor([3200],"float32"),Tensor([3200],"float32"),Tensor([3200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([320739],"float32"),Tensor([320739],"float32"),Tensor([320739],"float32"),Tensor([320739],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([320],"float32"),Tensor([320],"float32"),Tensor([320],"float32"),Tensor([320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3216],"float32"),Tensor([3216],"float32"),Tensor([3216],"float32"),Tensor([3216],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([321759],"float32"),Tensor([321759],"float32"),Tensor([321759],"float32"),Tensor([321759],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3220],"float32"),Tensor([3220],"float32"),Tensor([3220],"float32"),Tensor([3220],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([322245],"float32"),Tensor([322245],"float32"),Tensor([322245],"float32"),Tensor([322245],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([322272],"float32"),Tensor([322272],"float32"),Tensor([322272],"float32"),Tensor([322272],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([323],"float32"),Tensor([323],"float32"),Tensor([323],"float32"),Tensor([323],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3240],"float32"),Tensor([3240],"float32"),Tensor([3240],"float32"),Tensor([3240],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([324],"float32"),Tensor([324],"float32"),Tensor([324],"float32"),Tensor([324],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([325113],"float32"),Tensor([325113],"float32"),Tensor([325113],"float32"),Tensor([325113],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3256],"float32"),Tensor([3256],"float32"),Tensor([3256],"float32"),Tensor([3256],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3264],"float32"),Tensor([3264],"float32"),Tensor([3264],"float32"),Tensor([3264],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([327360],"float32"),Tensor([327360],"float32"),Tensor([327360],"float32"),Tensor([327360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([329205],"float32"),Tensor([329205],"float32"),Tensor([329205],"float32"),Tensor([329205],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3294],"float32"),Tensor([3294],"float32"),Tensor([3294],"float32"),Tensor([3294],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3300],"float32"),Tensor([3300],"float32"),Tensor([3300],"float32"),Tensor([3300],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([330429],"float32"),Tensor([330429],"float32"),Tensor([330429],"float32"),Tensor([330429],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([331251],"float32"),Tensor([331251],"float32"),Tensor([331251],"float32"),Tensor([331251],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3312],"float32"),Tensor([3312],"float32"),Tensor([3312],"float32"),Tensor([3312],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([331452],"float32"),Tensor([331452],"float32"),Tensor([331452],"float32"),Tensor([331452],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([331722],"float32"),Tensor([331722],"float32"),Tensor([331722],"float32"),Tensor([331722],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3328],"float32"),Tensor([3328],"float32"),Tensor([3328],"float32"),Tensor([3328],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([333018],"float32"),Tensor([333018],"float32"),Tensor([333018],"float32"),Tensor([333018],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3348],"float32"),Tensor([3348],"float32"),Tensor([3348],"float32"),Tensor([3348],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3350],"float32"),Tensor([3350],"float32"),Tensor([3350],"float32"),Tensor([3350],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([335568],"float32"),Tensor([335568],"float32"),Tensor([335568],"float32"),Tensor([335568],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3360],"float32"),Tensor([3360],"float32"),Tensor([3360],"float32"),Tensor([3360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([336],"float32"),Tensor([336],"float32"),Tensor([336],"float32"),Tensor([336],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([337620],"float32"),Tensor([337620],"float32"),Tensor([337620],"float32"),Tensor([337620],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([339150],"float32"),Tensor([339150],"float32"),Tensor([339150],"float32"),Tensor([339150],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([34, 34],"int64"),Tensor([34, 34],"int64"),), 2, )
paddle.stack(tuple(Tensor([3400],"float32"),Tensor([3400],"float32"),Tensor([3400],"float32"),Tensor([3400],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([340176],"float32"),Tensor([340176],"float32"),Tensor([340176],"float32"),Tensor([340176],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3402],"float32"),Tensor([3402],"float32"),Tensor([3402],"float32"),Tensor([3402],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3404],"float32"),Tensor([3404],"float32"),Tensor([3404],"float32"),Tensor([3404],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([340686],"float32"),Tensor([340686],"float32"),Tensor([340686],"float32"),Tensor([340686],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([340],"float32"),Tensor([340],"float32"),Tensor([340],"float32"),Tensor([340],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3416],"float32"),Tensor([3416],"float32"),Tensor([3416],"float32"),Tensor([3416],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([342],"float32"),Tensor([342],"float32"),Tensor([342],"float32"),Tensor([342],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3432],"float32"),Tensor([3432],"float32"),Tensor([3432],"float32"),Tensor([3432],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([343728],"float32"),Tensor([343728],"float32"),Tensor([343728],"float32"),Tensor([343728],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3450],"float32"),Tensor([3450],"float32"),Tensor([3450],"float32"),Tensor([3450],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([34560],"float32"),Tensor([34560],"float32"),Tensor([34560],"float32"),Tensor([34560],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([345618],"float32"),Tensor([345618],"float32"),Tensor([345618],"float32"),Tensor([345618],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3456],"float32"),Tensor([3456],"float32"),Tensor([3456],"float32"),Tensor([3456],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([346086],"float32"),Tensor([346086],"float32"),Tensor([346086],"float32"),Tensor([346086],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3472],"float32"),Tensor([3472],"float32"),Tensor([3472],"float32"),Tensor([3472],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([347820],"float32"),Tensor([347820],"float32"),Tensor([347820],"float32"),Tensor([347820],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([349155],"float32"),Tensor([349155],"float32"),Tensor([349155],"float32"),Tensor([349155],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3496],"float32"),Tensor([3496],"float32"),Tensor([3496],"float32"),Tensor([3496],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([349866],"float32"),Tensor([349866],"float32"),Tensor([349866],"float32"),Tensor([349866],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3500],"float32"),Tensor([3500],"float32"),Tensor([3500],"float32"),Tensor([3500],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([350178],"float32"),Tensor([350178],"float32"),Tensor([350178],"float32"),Tensor([350178],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3504],"float32"),Tensor([3504],"float32"),Tensor([3504],"float32"),Tensor([3504],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([35280],"float32"),Tensor([35280],"float32"),Tensor([35280],"float32"),Tensor([35280],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3528],"float32"),Tensor([3528],"float32"),Tensor([3528],"float32"),Tensor([3528],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3540],"float32"),Tensor([3540],"float32"),Tensor([3540],"float32"),Tensor([3540],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([354501],"float32"),Tensor([354501],"float32"),Tensor([354501],"float32"),Tensor([354501],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3550],"float32"),Tensor([3550],"float32"),Tensor([3550],"float32"),Tensor([3550],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3552],"float32"),Tensor([3552],"float32"),Tensor([3552],"float32"),Tensor([3552],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3564],"float32"),Tensor([3564],"float32"),Tensor([3564],"float32"),Tensor([3564],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([356541],"float32"),Tensor([356541],"float32"),Tensor([356541],"float32"),Tensor([356541],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([357],"float32"),Tensor([357],"float32"),Tensor([357],"float32"),Tensor([357],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3584],"float32"),Tensor([3584],"float32"),Tensor([3584],"float32"),Tensor([3584],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3588],"float32"),Tensor([3588],"float32"),Tensor([3588],"float32"),Tensor([3588],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([359100],"float32"),Tensor([359100],"float32"),Tensor([359100],"float32"),Tensor([359100],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([359613],"float32"),Tensor([359613],"float32"),Tensor([359613],"float32"),Tensor([359613],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3596],"float32"),Tensor([3596],"float32"),Tensor([3596],"float32"),Tensor([3596],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([35],"float32"),Tensor([35],"float32"),Tensor([35],"float32"),Tensor([35],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([36, 36],"int64"),Tensor([36, 36],"int64"),), 2, )
paddle.stack(tuple(Tensor([36000],"float32"),Tensor([36000],"float32"),Tensor([36000],"float32"),Tensor([36000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3600],"float32"),Tensor([3600],"float32"),Tensor([3600],"float32"),Tensor([3600],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([360],"float32"),Tensor([360],"float32"),Tensor([360],"float32"),Tensor([360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3618],"float32"),Tensor([3618],"float32"),Tensor([3618],"float32"),Tensor([3618],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([361],"float32"),Tensor([361],"float32"),Tensor([361],"float32"),Tensor([361],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3640],"float32"),Tensor([3640],"float32"),Tensor([3640],"float32"),Tensor([3640],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3648],"float32"),Tensor([3648],"float32"),Tensor([3648],"float32"),Tensor([3648],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3650],"float32"),Tensor([3650],"float32"),Tensor([3650],"float32"),Tensor([3650],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([365211],"float32"),Tensor([365211],"float32"),Tensor([365211],"float32"),Tensor([365211],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3658],"float32"),Tensor([3658],"float32"),Tensor([3658],"float32"),Tensor([3658],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([367059],"float32"),Tensor([367059],"float32"),Tensor([367059],"float32"),Tensor([367059],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3672],"float32"),Tensor([3672],"float32"),Tensor([3672],"float32"),Tensor([3672],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3680],"float32"),Tensor([3680],"float32"),Tensor([3680],"float32"),Tensor([3680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([368280],"float32"),Tensor([368280],"float32"),Tensor([368280],"float32"),Tensor([368280],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([369105],"float32"),Tensor([369105],"float32"),Tensor([369105],"float32"),Tensor([369105],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([369303],"float32"),Tensor([369303],"float32"),Tensor([369303],"float32"),Tensor([369303],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3696],"float32"),Tensor([3696],"float32"),Tensor([3696],"float32"),Tensor([3696],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3700],"float32"),Tensor([3700],"float32"),Tensor([3700],"float32"),Tensor([3700],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3712],"float32"),Tensor([3712],"float32"),Tensor([3712],"float32"),Tensor([3712],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3717],"float32"),Tensor([3717],"float32"),Tensor([3717],"float32"),Tensor([3717],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3720],"float32"),Tensor([3720],"float32"),Tensor([3720],"float32"),Tensor([3720],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3723],"float32"),Tensor([3723],"float32"),Tensor([3723],"float32"),Tensor([3723],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3726],"float32"),Tensor([3726],"float32"),Tensor([3726],"float32"),Tensor([3726],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3744],"float32"),Tensor([3744],"float32"),Tensor([3744],"float32"),Tensor([3744],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3750],"float32"),Tensor([3750],"float32"),Tensor([3750],"float32"),Tensor([3750],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3752],"float32"),Tensor([3752],"float32"),Tensor([3752],"float32"),Tensor([3752],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([375984],"float32"),Tensor([375984],"float32"),Tensor([375984],"float32"),Tensor([375984],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3762],"float32"),Tensor([3762],"float32"),Tensor([3762],"float32"),Tensor([3762],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([37632],"float32"),Tensor([37632],"float32"),Tensor([37632],"float32"),Tensor([37632],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3772],"float32"),Tensor([3772],"float32"),Tensor([3772],"float32"),Tensor([3772],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([377514],"float32"),Tensor([377514],"float32"),Tensor([377514],"float32"),Tensor([377514],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3776],"float32"),Tensor([3776],"float32"),Tensor([3776],"float32"),Tensor([3776],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([37800],"float32"),Tensor([37800],"float32"),Tensor([37800],"float32"),Tensor([37800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3780],"float32"),Tensor([3780],"float32"),Tensor([3780],"float32"),Tensor([3780],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3782],"float32"),Tensor([3782],"float32"),Tensor([3782],"float32"),Tensor([3782],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([378540],"float32"),Tensor([378540],"float32"),Tensor([378540],"float32"),Tensor([378540],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([378],"float32"),Tensor([378],"float32"),Tensor([378],"float32"),Tensor([378],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([379050],"float32"),Tensor([379050],"float32"),Tensor([379050],"float32"),Tensor([379050],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([38, 38],"int64"),Tensor([38, 38],"int64"),), 2, )
paddle.stack(tuple(Tensor([3800],"float32"),Tensor([3800],"float32"),Tensor([3800],"float32"),Tensor([3800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3808],"float32"),Tensor([3808],"float32"),Tensor([3808],"float32"),Tensor([3808],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([380],"float32"),Tensor([380],"float32"),Tensor([380],"float32"),Tensor([380],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3816],"float32"),Tensor([3816],"float32"),Tensor([3816],"float32"),Tensor([3816],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3819],"float32"),Tensor([3819],"float32"),Tensor([3819],"float32"),Tensor([3819],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3828],"float32"),Tensor([3828],"float32"),Tensor([3828],"float32"),Tensor([3828],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3835],"float32"),Tensor([3835],"float32"),Tensor([3835],"float32"),Tensor([3835],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([38400],"float32"),Tensor([38400],"float32"),Tensor([38400],"float32"),Tensor([38400],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3840],"float32"),Tensor([3840],"float32"),Tensor([3840],"float32"),Tensor([3840],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3844],"float32"),Tensor([3844],"float32"),Tensor([3844],"float32"),Tensor([3844],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3848],"float32"),Tensor([3848],"float32"),Tensor([3848],"float32"),Tensor([3848],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3850],"float32"),Tensor([3850],"float32"),Tensor([3850],"float32"),Tensor([3850],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3864],"float32"),Tensor([3864],"float32"),Tensor([3864],"float32"),Tensor([3864],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([386694],"float32"),Tensor([386694],"float32"),Tensor([386694],"float32"),Tensor([386694],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([388032],"float32"),Tensor([388032],"float32"),Tensor([388032],"float32"),Tensor([388032],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([388740],"float32"),Tensor([388740],"float32"),Tensor([388740],"float32"),Tensor([388740],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3888],"float32"),Tensor([3888],"float32"),Tensor([3888],"float32"),Tensor([3888],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([38940],"float32"),Tensor([38940],"float32"),Tensor([38940],"float32"),Tensor([38940],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3900],"float32"),Tensor([3900],"float32"),Tensor([3900],"float32"),Tensor([3900],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3920],"float32"),Tensor([3920],"float32"),Tensor([3920],"float32"),Tensor([3920],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3936],"float32"),Tensor([3936],"float32"),Tensor([3936],"float32"),Tensor([3936],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3944],"float32"),Tensor([3944],"float32"),Tensor([3944],"float32"),Tensor([3944],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3948],"float32"),Tensor([3948],"float32"),Tensor([3948],"float32"),Tensor([3948],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3950],"float32"),Tensor([3950],"float32"),Tensor([3950],"float32"),Tensor([3950],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3952],"float32"),Tensor([3952],"float32"),Tensor([3952],"float32"),Tensor([3952],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3953],"float32"),Tensor([3953],"float32"),Tensor([3953],"float32"),Tensor([3953],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([39680],"float32"),Tensor([39680],"float32"),Tensor([39680],"float32"),Tensor([39680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([3968],"float32"),Tensor([3968],"float32"),Tensor([3968],"float32"),Tensor([3968],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([39690],"float32"),Tensor([39690],"float32"),Tensor([39690],"float32"),Tensor([39690],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([397467],"float32"),Tensor([397467],"float32"),Tensor([397467],"float32"),Tensor([397467],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([398487],"float32"),Tensor([398487],"float32"),Tensor([398487],"float32"),Tensor([398487],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([399],"float32"),Tensor([399],"float32"),Tensor([399],"float32"),Tensor([399],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4, 1, 4, 2],"float32"),Tensor([4, 1, 4, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([4, 25, 29, 64],"float32"),Tensor([4, 25, 29, 64],"float32"),), axis=4, )
paddle.stack(tuple(Tensor([4, 3, 4, 2],"float32"),Tensor([4, 3, 4, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),), axis=2, )
paddle.stack(tuple(Tensor([4, 64, 64],"float32"),Tensor([4, 64, 64],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([40, 40],"int64"),Tensor([40, 40],"int64"),), 2, )
paddle.stack(tuple(Tensor([4000],"float32"),Tensor([4000],"float32"),Tensor([4000],"float32"),Tensor([4000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4020],"float32"),Tensor([4020],"float32"),Tensor([4020],"float32"),Tensor([4020],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4026],"float32"),Tensor([4026],"float32"),Tensor([4026],"float32"),Tensor([4026],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4030],"float32"),Tensor([4030],"float32"),Tensor([4030],"float32"),Tensor([4030],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([40320],"float32"),Tensor([40320],"float32"),Tensor([40320],"float32"),Tensor([40320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4032],"float32"),Tensor([4032],"float32"),Tensor([4032],"float32"),Tensor([4032],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4050],"float32"),Tensor([4050],"float32"),Tensor([4050],"float32"),Tensor([4050],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4071],"float32"),Tensor([4071],"float32"),Tensor([4071],"float32"),Tensor([4071],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4080],"float32"),Tensor([4080],"float32"),Tensor([4080],"float32"),Tensor([4080],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([408177],"float32"),Tensor([408177],"float32"),Tensor([408177],"float32"),Tensor([408177],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4087],"float32"),Tensor([4087],"float32"),Tensor([4087],"float32"),Tensor([4087],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4092],"float32"),Tensor([4092],"float32"),Tensor([4092],"float32"),Tensor([4092],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4096],"float32"),Tensor([4096],"float32"),Tensor([4096],"float32"),Tensor([4096],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4100],"float32"),Tensor([4100],"float32"),Tensor([4100],"float32"),Tensor([4100],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4104],"float32"),Tensor([4104],"float32"),Tensor([4104],"float32"),Tensor([4104],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4144],"float32"),Tensor([4144],"float32"),Tensor([4144],"float32"),Tensor([4144],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([414],"float32"),Tensor([414],"float32"),Tensor([414],"float32"),Tensor([414],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4154],"float32"),Tensor([4154],"float32"),Tensor([4154],"float32"),Tensor([4154],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4160],"float32"),Tensor([4160],"float32"),Tensor([4160],"float32"),Tensor([4160],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([41664],"float32"),Tensor([41664],"float32"),Tensor([41664],"float32"),Tensor([41664],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4176],"float32"),Tensor([4176],"float32"),Tensor([4176],"float32"),Tensor([4176],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4180],"float32"),Tensor([4180],"float32"),Tensor([4180],"float32"),Tensor([4180],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4182],"float32"),Tensor([4182],"float32"),Tensor([4182],"float32"),Tensor([4182],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4200],"float32"),Tensor([4200],"float32"),Tensor([4200],"float32"),Tensor([4200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4209],"float32"),Tensor([4209],"float32"),Tensor([4209],"float32"),Tensor([4209],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([420],"float32"),Tensor([420],"float32"),Tensor([420],"float32"),Tensor([420],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4212],"float32"),Tensor([4212],"float32"),Tensor([4212],"float32"),Tensor([4212],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4216],"float32"),Tensor([4216],"float32"),Tensor([4216],"float32"),Tensor([4216],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4221],"float32"),Tensor([4221],"float32"),Tensor([4221],"float32"),Tensor([4221],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([42240],"float32"),Tensor([42240],"float32"),Tensor([42240],"float32"),Tensor([42240],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4224],"float32"),Tensor([4224],"float32"),Tensor([4224],"float32"),Tensor([4224],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4248],"float32"),Tensor([4248],"float32"),Tensor([4248],"float32"),Tensor([4248],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4256],"float32"),Tensor([4256],"float32"),Tensor([4256],"float32"),Tensor([4256],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4264],"float32"),Tensor([4264],"float32"),Tensor([4264],"float32"),Tensor([4264],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([42780],"float32"),Tensor([42780],"float32"),Tensor([42780],"float32"),Tensor([42780],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4278],"float32"),Tensor([4278],"float32"),Tensor([4278],"float32"),Tensor([4278],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4288],"float32"),Tensor([4288],"float32"),Tensor([4288],"float32"),Tensor([4288],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4290],"float32"),Tensor([4290],"float32"),Tensor([4290],"float32"),Tensor([4290],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([429660],"float32"),Tensor([429660],"float32"),Tensor([429660],"float32"),Tensor([429660],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([43008],"float32"),Tensor([43008],"float32"),Tensor([43008],"float32"),Tensor([43008],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4307],"float32"),Tensor([4307],"float32"),Tensor([4307],"float32"),Tensor([4307],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4312],"float32"),Tensor([4312],"float32"),Tensor([4312],"float32"),Tensor([4312],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4320],"float32"),Tensor([4320],"float32"),Tensor([4320],"float32"),Tensor([4320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([432],"float32"),Tensor([432],"float32"),Tensor([432],"float32"),Tensor([432],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4340],"float32"),Tensor([4340],"float32"),Tensor([4340],"float32"),Tensor([4340],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([43470],"float32"),Tensor([43470],"float32"),Tensor([43470],"float32"),Tensor([43470],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4352],"float32"),Tensor([4352],"float32"),Tensor([4352],"float32"),Tensor([4352],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([43560],"float32"),Tensor([43560],"float32"),Tensor([43560],"float32"),Tensor([43560],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4356],"float32"),Tensor([4356],"float32"),Tensor([4356],"float32"),Tensor([4356],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4368],"float32"),Tensor([4368],"float32"),Tensor([4368],"float32"),Tensor([4368],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([44, 44],"int64"),Tensor([44, 44],"int64"),), 2, )
paddle.stack(tuple(Tensor([440433],"float32"),Tensor([440433],"float32"),Tensor([440433],"float32"),Tensor([440433],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4410],"float32"),Tensor([4410],"float32"),Tensor([4410],"float32"),Tensor([4410],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([44160],"float32"),Tensor([44160],"float32"),Tensor([44160],"float32"),Tensor([44160],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4416],"float32"),Tensor([4416],"float32"),Tensor([4416],"float32"),Tensor([4416],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([441],"float32"),Tensor([441],"float32"),Tensor([441],"float32"),Tensor([441],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([44220],"float32"),Tensor([44220],"float32"),Tensor([44220],"float32"),Tensor([44220],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4422],"float32"),Tensor([4422],"float32"),Tensor([4422],"float32"),Tensor([4422],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4424],"float32"),Tensor([4424],"float32"),Tensor([4424],"float32"),Tensor([4424],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([44250],"float32"),Tensor([44250],"float32"),Tensor([44250],"float32"),Tensor([44250],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4428],"float32"),Tensor([4428],"float32"),Tensor([4428],"float32"),Tensor([4428],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([44352],"float32"),Tensor([44352],"float32"),Tensor([44352],"float32"),Tensor([44352],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4440],"float32"),Tensor([4440],"float32"),Tensor([4440],"float32"),Tensor([4440],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([44520],"float32"),Tensor([44520],"float32"),Tensor([44520],"float32"),Tensor([44520],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([44640],"float32"),Tensor([44640],"float32"),Tensor([44640],"float32"),Tensor([44640],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4464],"float32"),Tensor([4464],"float32"),Tensor([4464],"float32"),Tensor([4464],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4480],"float32"),Tensor([4480],"float32"),Tensor([4480],"float32"),Tensor([4480],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4484],"float32"),Tensor([4484],"float32"),Tensor([4484],"float32"),Tensor([4484],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4488],"float32"),Tensor([4488],"float32"),Tensor([4488],"float32"),Tensor([4488],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4489],"float32"),Tensor([4489],"float32"),Tensor([4489],"float32"),Tensor([4489],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4500],"float32"),Tensor([4500],"float32"),Tensor([4500],"float32"),Tensor([4500],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([45056],"float32"),Tensor([45056],"float32"),Tensor([45056],"float32"),Tensor([45056],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([450],"float32"),Tensor([450],"float32"),Tensor([450],"float32"),Tensor([450],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([451143],"float32"),Tensor([451143],"float32"),Tensor([451143],"float32"),Tensor([451143],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([45135],"float32"),Tensor([45135],"float32"),Tensor([45135],"float32"),Tensor([45135],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4526],"float32"),Tensor([4526],"float32"),Tensor([4526],"float32"),Tensor([4526],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4536],"float32"),Tensor([4536],"float32"),Tensor([4536],"float32"),Tensor([4536],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4544],"float32"),Tensor([4544],"float32"),Tensor([4544],"float32"),Tensor([4544],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([45540],"float32"),Tensor([45540],"float32"),Tensor([45540],"float32"),Tensor([45540],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4554],"float32"),Tensor([4554],"float32"),Tensor([4554],"float32"),Tensor([4554],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4556],"float32"),Tensor([4556],"float32"),Tensor([4556],"float32"),Tensor([4556],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4560],"float32"),Tensor([4560],"float32"),Tensor([4560],"float32"),Tensor([4560],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([45632],"float32"),Tensor([45632],"float32"),Tensor([45632],"float32"),Tensor([45632],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([45750],"float32"),Tensor([45750],"float32"),Tensor([45750],"float32"),Tensor([45750],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4575],"float32"),Tensor([4575],"float32"),Tensor([4575],"float32"),Tensor([4575],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4588],"float32"),Tensor([4588],"float32"),Tensor([4588],"float32"),Tensor([4588],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4592],"float32"),Tensor([4592],"float32"),Tensor([4592],"float32"),Tensor([4592],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4599],"float32"),Tensor([4599],"float32"),Tensor([4599],"float32"),Tensor([4599],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4602],"float32"),Tensor([4602],"float32"),Tensor([4602],"float32"),Tensor([4602],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([46080],"float32"),Tensor([46080],"float32"),Tensor([46080],"float32"),Tensor([46080],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4608],"float32"),Tensor([4608],"float32"),Tensor([4608],"float32"),Tensor([4608],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4620],"float32"),Tensor([4620],"float32"),Tensor([4620],"float32"),Tensor([4620],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([46230],"float32"),Tensor([46230],"float32"),Tensor([46230],"float32"),Tensor([46230],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4623],"float32"),Tensor([4623],"float32"),Tensor([4623],"float32"),Tensor([4623],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4624],"float32"),Tensor([4624],"float32"),Tensor([4624],"float32"),Tensor([4624],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([46305],"float32"),Tensor([46305],"float32"),Tensor([46305],"float32"),Tensor([46305],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4640],"float32"),Tensor([4640],"float32"),Tensor([4640],"float32"),Tensor([4640],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([46464],"float32"),Tensor([46464],"float32"),Tensor([46464],"float32"),Tensor([46464],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4650],"float32"),Tensor([4650],"float32"),Tensor([4650],"float32"),Tensor([4650],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4662],"float32"),Tensor([4662],"float32"),Tensor([4662],"float32"),Tensor([4662],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4672],"float32"),Tensor([4672],"float32"),Tensor([4672],"float32"),Tensor([4672],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([46800],"float32"),Tensor([46800],"float32"),Tensor([46800],"float32"),Tensor([46800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4680],"float32"),Tensor([4680],"float32"),Tensor([4680],"float32"),Tensor([4680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4686],"float32"),Tensor([4686],"float32"),Tensor([4686],"float32"),Tensor([4686],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4690],"float32"),Tensor([4690],"float32"),Tensor([4690],"float32"),Tensor([4690],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([46920],"float32"),Tensor([46920],"float32"),Tensor([46920],"float32"),Tensor([46920],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4704],"float32"),Tensor([4704],"float32"),Tensor([4704],"float32"),Tensor([4704],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([47104],"float32"),Tensor([47104],"float32"),Tensor([47104],"float32"),Tensor([47104],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4712],"float32"),Tensor([4712],"float32"),Tensor([4712],"float32"),Tensor([4712],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4725],"float32"),Tensor([4725],"float32"),Tensor([4725],"float32"),Tensor([4725],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4736],"float32"),Tensor([4736],"float32"),Tensor([4736],"float32"),Tensor([4736],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4740],"float32"),Tensor([4740],"float32"),Tensor([4740],"float32"),Tensor([4740],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([47520],"float32"),Tensor([47520],"float32"),Tensor([47520],"float32"),Tensor([47520],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4752],"float32"),Tensor([4752],"float32"),Tensor([4752],"float32"),Tensor([4752],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4760],"float32"),Tensor([4760],"float32"),Tensor([4760],"float32"),Tensor([4760],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([47610],"float32"),Tensor([47610],"float32"),Tensor([47610],"float32"),Tensor([47610],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([47616],"float32"),Tensor([47616],"float32"),Tensor([47616],"float32"),Tensor([47616],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4761],"float32"),Tensor([4761],"float32"),Tensor([4761],"float32"),Tensor([4761],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4774],"float32"),Tensor([4774],"float32"),Tensor([4774],"float32"),Tensor([4774],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4779],"float32"),Tensor([4779],"float32"),Tensor([4779],"float32"),Tensor([4779],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([47872],"float32"),Tensor([47872],"float32"),Tensor([47872],"float32"),Tensor([47872],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4788],"float32"),Tensor([4788],"float32"),Tensor([4788],"float32"),Tensor([4788],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([48, 48],"int64"),Tensor([48, 48],"int64"),), 2, )
paddle.stack(tuple(Tensor([48000],"float32"),Tensor([48000],"float32"),Tensor([48000],"float32"),Tensor([48000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4800],"float32"),Tensor([4800],"float32"),Tensor([4800],"float32"),Tensor([4800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4818],"float32"),Tensor([4818],"float32"),Tensor([4818],"float32"),Tensor([4818],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([48240],"float32"),Tensor([48240],"float32"),Tensor([48240],"float32"),Tensor([48240],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4824],"float32"),Tensor([4824],"float32"),Tensor([4824],"float32"),Tensor([4824],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([48300],"float32"),Tensor([48300],"float32"),Tensor([48300],"float32"),Tensor([48300],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4836],"float32"),Tensor([4836],"float32"),Tensor([4836],"float32"),Tensor([4836],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([48384],"float32"),Tensor([48384],"float32"),Tensor([48384],"float32"),Tensor([48384],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([48576],"float32"),Tensor([48576],"float32"),Tensor([48576],"float32"),Tensor([48576],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([48600],"float32"),Tensor([48600],"float32"),Tensor([48600],"float32"),Tensor([48600],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4864],"float32"),Tensor([4864],"float32"),Tensor([4864],"float32"),Tensor([4864],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4872],"float32"),Tensor([4872],"float32"),Tensor([4872],"float32"),Tensor([4872],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4875],"float32"),Tensor([4875],"float32"),Tensor([4875],"float32"),Tensor([4875],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4884],"float32"),Tensor([4884],"float32"),Tensor([4884],"float32"),Tensor([4884],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4891],"float32"),Tensor([4891],"float32"),Tensor([4891],"float32"),Tensor([4891],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4896],"float32"),Tensor([4896],"float32"),Tensor([4896],"float32"),Tensor([4896],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4900],"float32"),Tensor([4900],"float32"),Tensor([4900],"float32"),Tensor([4900],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([49152],"float32"),Tensor([49152],"float32"),Tensor([49152],"float32"),Tensor([49152],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4920],"float32"),Tensor([4920],"float32"),Tensor([4920],"float32"),Tensor([4920],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([49280],"float32"),Tensor([49280],"float32"),Tensor([49280],"float32"),Tensor([49280],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4928],"float32"),Tensor([4928],"float32"),Tensor([4928],"float32"),Tensor([4928],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4940],"float32"),Tensor([4940],"float32"),Tensor([4940],"float32"),Tensor([4940],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([49410],"float32"),Tensor([49410],"float32"),Tensor([49410],"float32"),Tensor([49410],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4950],"float32"),Tensor([4950],"float32"),Tensor([4950],"float32"),Tensor([4950],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4956],"float32"),Tensor([4956],"float32"),Tensor([4956],"float32"),Tensor([4956],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4958],"float32"),Tensor([4958],"float32"),Tensor([4958],"float32"),Tensor([4958],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([49600],"float32"),Tensor([49600],"float32"),Tensor([49600],"float32"),Tensor([49600],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4960],"float32"),Tensor([4960],"float32"),Tensor([4960],"float32"),Tensor([4960],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([49680],"float32"),Tensor([49680],"float32"),Tensor([49680],"float32"),Tensor([49680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4968],"float32"),Tensor([4968],"float32"),Tensor([4968],"float32"),Tensor([4968],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4970],"float32"),Tensor([4970],"float32"),Tensor([4970],"float32"),Tensor([4970],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([49920],"float32"),Tensor([49920],"float32"),Tensor([49920],"float32"),Tensor([49920],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([4992],"float32"),Tensor([4992],"float32"),Tensor([4992],"float32"),Tensor([4992],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5002],"float32"),Tensor([5002],"float32"),Tensor([5002],"float32"),Tensor([5002],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([50048],"float32"),Tensor([50048],"float32"),Tensor([50048],"float32"),Tensor([50048],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5005],"float32"),Tensor([5005],"float32"),Tensor([5005],"float32"),Tensor([5005],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5016],"float32"),Tensor([5016],"float32"),Tensor([5016],"float32"),Tensor([5016],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([50220],"float32"),Tensor([50220],"float32"),Tensor([50220],"float32"),Tensor([50220],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5022],"float32"),Tensor([5022],"float32"),Tensor([5022],"float32"),Tensor([5022],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([50250],"float32"),Tensor([50250],"float32"),Tensor([50250],"float32"),Tensor([50250],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5025],"float32"),Tensor([5025],"float32"),Tensor([5025],"float32"),Tensor([5025],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5032],"float32"),Tensor([5032],"float32"),Tensor([5032],"float32"),Tensor([5032],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5037],"float32"),Tensor([5037],"float32"),Tensor([5037],"float32"),Tensor([5037],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([50400],"float32"),Tensor([50400],"float32"),Tensor([50400],"float32"),Tensor([50400],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5040],"float32"),Tensor([5040],"float32"),Tensor([5040],"float32"),Tensor([5040],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5041],"float32"),Tensor([5041],"float32"),Tensor([5041],"float32"),Tensor([5041],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5056],"float32"),Tensor([5056],"float32"),Tensor([5056],"float32"),Tensor([5056],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([50688],"float32"),Tensor([50688],"float32"),Tensor([50688],"float32"),Tensor([50688],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5084],"float32"),Tensor([5084],"float32"),Tensor([5084],"float32"),Tensor([5084],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5092],"float32"),Tensor([5092],"float32"),Tensor([5092],"float32"),Tensor([5092],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([51030],"float32"),Tensor([51030],"float32"),Tensor([51030],"float32"),Tensor([51030],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5106],"float32"),Tensor([5106],"float32"),Tensor([5106],"float32"),Tensor([5106],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([51200],"float32"),Tensor([51200],"float32"),Tensor([51200],"float32"),Tensor([51200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5120],"float32"),Tensor([5120],"float32"),Tensor([5120],"float32"),Tensor([5120],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([51240],"float32"),Tensor([51240],"float32"),Tensor([51240],"float32"),Tensor([51240],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5124],"float32"),Tensor([5124],"float32"),Tensor([5124],"float32"),Tensor([5124],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5135],"float32"),Tensor([5135],"float32"),Tensor([5135],"float32"),Tensor([5135],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5148],"float32"),Tensor([5148],"float32"),Tensor([5148],"float32"),Tensor([5148],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([51520],"float32"),Tensor([51520],"float32"),Tensor([51520],"float32"),Tensor([51520],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5166],"float32"),Tensor([5166],"float32"),Tensor([5166],"float32"),Tensor([5166],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5168],"float32"),Tensor([5168],"float32"),Tensor([5168],"float32"),Tensor([5168],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([51750],"float32"),Tensor([51750],"float32"),Tensor([51750],"float32"),Tensor([51750],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5175],"float32"),Tensor([5175],"float32"),Tensor([5175],"float32"),Tensor([5175],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5180],"float32"),Tensor([5180],"float32"),Tensor([5180],"float32"),Tensor([5180],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([51840],"float32"),Tensor([51840],"float32"),Tensor([51840],"float32"),Tensor([51840],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5184],"float32"),Tensor([5184],"float32"),Tensor([5184],"float32"),Tensor([5184],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([52, 52],"int64"),Tensor([52, 52],"int64"),), 2, )
paddle.stack(tuple(Tensor([52080],"float32"),Tensor([52080],"float32"),Tensor([52080],"float32"),Tensor([52080],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5208],"float32"),Tensor([5208],"float32"),Tensor([5208],"float32"),Tensor([5208],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([52096],"float32"),Tensor([52096],"float32"),Tensor([52096],"float32"),Tensor([52096],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([52224],"float32"),Tensor([52224],"float32"),Tensor([52224],"float32"),Tensor([52224],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5244],"float32"),Tensor([5244],"float32"),Tensor([5244],"float32"),Tensor([5244],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5248],"float32"),Tensor([5248],"float32"),Tensor([5248],"float32"),Tensor([5248],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([52500],"float32"),Tensor([52500],"float32"),Tensor([52500],"float32"),Tensor([52500],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5250],"float32"),Tensor([5250],"float32"),Tensor([5250],"float32"),Tensor([5250],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([52560],"float32"),Tensor([52560],"float32"),Tensor([52560],"float32"),Tensor([52560],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5256],"float32"),Tensor([5256],"float32"),Tensor([5256],"float32"),Tensor([5256],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([52800],"float32"),Tensor([52800],"float32"),Tensor([52800],"float32"),Tensor([52800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5280],"float32"),Tensor([5280],"float32"),Tensor([5280],"float32"),Tensor([5280],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([52920],"float32"),Tensor([52920],"float32"),Tensor([52920],"float32"),Tensor([52920],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5292],"float32"),Tensor([5292],"float32"),Tensor([5292],"float32"),Tensor([5292],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5293],"float32"),Tensor([5293],"float32"),Tensor([5293],"float32"),Tensor([5293],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5304],"float32"),Tensor([5304],"float32"),Tensor([5304],"float32"),Tensor([5304],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([53100],"float32"),Tensor([53100],"float32"),Tensor([53100],"float32"),Tensor([53100],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5312],"float32"),Tensor([5312],"float32"),Tensor([5312],"float32"),Tensor([5312],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5313],"float32"),Tensor([5313],"float32"),Tensor([5313],"float32"),Tensor([5313],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5320],"float32"),Tensor([5320],"float32"),Tensor([5320],"float32"),Tensor([5320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([53248],"float32"),Tensor([53248],"float32"),Tensor([53248],"float32"),Tensor([53248],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([53250],"float32"),Tensor([53250],"float32"),Tensor([53250],"float32"),Tensor([53250],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5328],"float32"),Tensor([5328],"float32"),Tensor([5328],"float32"),Tensor([5328],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5329],"float32"),Tensor([5329],"float32"),Tensor([5329],"float32"),Tensor([5329],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([53460],"float32"),Tensor([53460],"float32"),Tensor([53460],"float32"),Tensor([53460],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([53568],"float32"),Tensor([53568],"float32"),Tensor([53568],"float32"),Tensor([53568],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5360],"float32"),Tensor([5360],"float32"),Tensor([5360],"float32"),Tensor([5360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([53760],"float32"),Tensor([53760],"float32"),Tensor([53760],"float32"),Tensor([53760],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5376],"float32"),Tensor([5376],"float32"),Tensor([5376],"float32"),Tensor([5376],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([54000],"float32"),Tensor([54000],"float32"),Tensor([54000],"float32"),Tensor([54000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5400],"float32"),Tensor([5400],"float32"),Tensor([5400],"float32"),Tensor([5400],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([540],"float32"),Tensor([540],"float32"),Tensor([540],"float32"),Tensor([540],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5412],"float32"),Tensor([5412],"float32"),Tensor([5412],"float32"),Tensor([5412],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([54270],"float32"),Tensor([54270],"float32"),Tensor([54270],"float32"),Tensor([54270],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([54400],"float32"),Tensor([54400],"float32"),Tensor([54400],"float32"),Tensor([54400],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5440],"float32"),Tensor([5440],"float32"),Tensor([5440],"float32"),Tensor([5440],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([54464],"float32"),Tensor([54464],"float32"),Tensor([54464],"float32"),Tensor([54464],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([54600],"float32"),Tensor([54600],"float32"),Tensor([54600],"float32"),Tensor([54600],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5460],"float32"),Tensor([5460],"float32"),Tensor([5460],"float32"),Tensor([5460],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5472],"float32"),Tensor([5472],"float32"),Tensor([5472],"float32"),Tensor([5472],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([54750],"float32"),Tensor([54750],"float32"),Tensor([54750],"float32"),Tensor([54750],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5475],"float32"),Tensor([5475],"float32"),Tensor([5475],"float32"),Tensor([5475],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5476],"float32"),Tensor([5476],"float32"),Tensor([5476],"float32"),Tensor([5476],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([54870],"float32"),Tensor([54870],"float32"),Tensor([54870],"float32"),Tensor([54870],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([54912],"float32"),Tensor([54912],"float32"),Tensor([54912],"float32"),Tensor([54912],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([55200],"float32"),Tensor([55200],"float32"),Tensor([55200],"float32"),Tensor([55200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([55296],"float32"),Tensor([55296],"float32"),Tensor([55296],"float32"),Tensor([55296],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5538],"float32"),Tensor([5538],"float32"),Tensor([5538],"float32"),Tensor([5538],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([55440],"float32"),Tensor([55440],"float32"),Tensor([55440],"float32"),Tensor([55440],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5544],"float32"),Tensor([5544],"float32"),Tensor([5544],"float32"),Tensor([5544],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5548],"float32"),Tensor([5548],"float32"),Tensor([5548],"float32"),Tensor([5548],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([55552],"float32"),Tensor([55552],"float32"),Tensor([55552],"float32"),Tensor([55552],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5561],"float32"),Tensor([5561],"float32"),Tensor([5561],"float32"),Tensor([5561],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([55680],"float32"),Tensor([55680],"float32"),Tensor([55680],"float32"),Tensor([55680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([55755],"float32"),Tensor([55755],"float32"),Tensor([55755],"float32"),Tensor([55755],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5576],"float32"),Tensor([5576],"float32"),Tensor([5576],"float32"),Tensor([5576],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([55845],"float32"),Tensor([55845],"float32"),Tensor([55845],"float32"),Tensor([55845],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([55890],"float32"),Tensor([55890],"float32"),Tensor([55890],"float32"),Tensor([55890],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([55936],"float32"),Tensor([55936],"float32"),Tensor([55936],"float32"),Tensor([55936],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([56, 16, 16],"float32"),Tensor([56, 16, 16],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([56, 2, 2],"float32"),Tensor([56, 2, 2],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([56, 32, 32],"float32"),Tensor([56, 32, 32],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([56, 4, 4],"float32"),Tensor([56, 4, 4],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([56, 56],"int64"),Tensor([56, 56],"int64"),), 2, )
paddle.stack(tuple(Tensor([56, 64, 64],"float32"),Tensor([56, 64, 64],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([56, 8, 8],"float32"),Tensor([56, 8, 8],"float32"),), axis=3, )
paddle.stack(tuple(Tensor([56000],"float32"),Tensor([56000],"float32"),Tensor([56000],"float32"),Tensor([56000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5616],"float32"),Tensor([5616],"float32"),Tensor([5616],"float32"),Tensor([5616],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5624],"float32"),Tensor([5624],"float32"),Tensor([5624],"float32"),Tensor([5624],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([56250],"float32"),Tensor([56250],"float32"),Tensor([56250],"float32"),Tensor([56250],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5625],"float32"),Tensor([5625],"float32"),Tensor([5625],"float32"),Tensor([5625],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([56280],"float32"),Tensor([56280],"float32"),Tensor([56280],"float32"),Tensor([56280],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5628],"float32"),Tensor([5628],"float32"),Tensor([5628],"float32"),Tensor([5628],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([56430],"float32"),Tensor([56430],"float32"),Tensor([56430],"float32"),Tensor([56430],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([56640],"float32"),Tensor([56640],"float32"),Tensor([56640],"float32"),Tensor([56640],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([56700],"float32"),Tensor([56700],"float32"),Tensor([56700],"float32"),Tensor([56700],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([56730],"float32"),Tensor([56730],"float32"),Tensor([56730],"float32"),Tensor([56730],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([56832],"float32"),Tensor([56832],"float32"),Tensor([56832],"float32"),Tensor([56832],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5688],"float32"),Tensor([5688],"float32"),Tensor([5688],"float32"),Tensor([5688],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([57000],"float32"),Tensor([57000],"float32"),Tensor([57000],"float32"),Tensor([57000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([57024],"float32"),Tensor([57024],"float32"),Tensor([57024],"float32"),Tensor([57024],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5712],"float32"),Tensor([5712],"float32"),Tensor([5712],"float32"),Tensor([5712],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([57240],"float32"),Tensor([57240],"float32"),Tensor([57240],"float32"),Tensor([57240],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([57285],"float32"),Tensor([57285],"float32"),Tensor([57285],"float32"),Tensor([57285],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([57344],"float32"),Tensor([57344],"float32"),Tensor([57344],"float32"),Tensor([57344],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([57408],"float32"),Tensor([57408],"float32"),Tensor([57408],"float32"),Tensor([57408],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5740],"float32"),Tensor([5740],"float32"),Tensor([5740],"float32"),Tensor([5740],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([57525],"float32"),Tensor([57525],"float32"),Tensor([57525],"float32"),Tensor([57525],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([57536],"float32"),Tensor([57536],"float32"),Tensor([57536],"float32"),Tensor([57536],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([57600],"float32"),Tensor([57600],"float32"),Tensor([57600],"float32"),Tensor([57600],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5760],"float32"),Tensor([5760],"float32"),Tensor([5760],"float32"),Tensor([5760],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5772],"float32"),Tensor([5772],"float32"),Tensor([5772],"float32"),Tensor([5772],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([57750],"float32"),Tensor([57750],"float32"),Tensor([57750],"float32"),Tensor([57750],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5776],"float32"),Tensor([5776],"float32"),Tensor([5776],"float32"),Tensor([5776],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([57960],"float32"),Tensor([57960],"float32"),Tensor([57960],"float32"),Tensor([57960],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5796],"float32"),Tensor([5796],"float32"),Tensor([5796],"float32"),Tensor([5796],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([58320],"float32"),Tensor([58320],"float32"),Tensor([58320],"float32"),Tensor([58320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([58368],"float32"),Tensor([58368],"float32"),Tensor([58368],"float32"),Tensor([58368],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5840],"float32"),Tensor([5840],"float32"),Tensor([5840],"float32"),Tensor([5840],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([58500],"float32"),Tensor([58500],"float32"),Tensor([58500],"float32"),Tensor([58500],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([58752],"float32"),Tensor([58752],"float32"),Tensor([58752],"float32"),Tensor([58752],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([58800],"float32"),Tensor([58800],"float32"),Tensor([58800],"float32"),Tensor([58800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5880],"float32"),Tensor([5880],"float32"),Tensor([5880],"float32"),Tensor([5880],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([58880],"float32"),Tensor([58880],"float32"),Tensor([58880],"float32"),Tensor([58880],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([588],"float32"),Tensor([588],"float32"),Tensor([588],"float32"),Tensor([588],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5904],"float32"),Tensor([5904],"float32"),Tensor([5904],"float32"),Tensor([5904],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([59136],"float32"),Tensor([59136],"float32"),Tensor([59136],"float32"),Tensor([59136],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([59200],"float32"),Tensor([59200],"float32"),Tensor([59200],"float32"),Tensor([59200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5920],"float32"),Tensor([5920],"float32"),Tensor([5920],"float32"),Tensor([5920],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([59220],"float32"),Tensor([59220],"float32"),Tensor([59220],"float32"),Tensor([59220],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([59250],"float32"),Tensor([59250],"float32"),Tensor([59250],"float32"),Tensor([59250],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([5928],"float32"),Tensor([5928],"float32"),Tensor([5928],"float32"),Tensor([5928],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([59295],"float32"),Tensor([59295],"float32"),Tensor([59295],"float32"),Tensor([59295],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([59392],"float32"),Tensor([59392],"float32"),Tensor([59392],"float32"),Tensor([59392],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([59520],"float32"),Tensor([59520],"float32"),Tensor([59520],"float32"),Tensor([59520],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([59904],"float32"),Tensor([59904],"float32"),Tensor([59904],"float32"),Tensor([59904],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([6, 1, 4, 2],"float32"),Tensor([6, 1, 4, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([6, 3, 4, 2],"float32"),Tensor([6, 3, 4, 2],"float32"),), axis=-1, )
paddle.stack(tuple(Tensor([60, 60],"int64"),Tensor([60, 60],"int64"),), 2, )
paddle.stack(tuple(Tensor([6004],"float32"),Tensor([6004],"float32"),Tensor([6004],"float32"),Tensor([6004],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([600],"float32"),Tensor([600],"float32"),Tensor([600],"float32"),Tensor([600],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([60300],"float32"),Tensor([60300],"float32"),Tensor([60300],"float32"),Tensor([60300],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([60352],"float32"),Tensor([60352],"float32"),Tensor([60352],"float32"),Tensor([60352],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([60390],"float32"),Tensor([60390],"float32"),Tensor([60390],"float32"),Tensor([60390],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([60450],"float32"),Tensor([60450],"float32"),Tensor([60450],"float32"),Tensor([60450],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([60480],"float32"),Tensor([60480],"float32"),Tensor([60480],"float32"),Tensor([60480],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([6048],"float32"),Tensor([6048],"float32"),Tensor([6048],"float32"),Tensor([6048],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([6068],"float32"),Tensor([6068],"float32"),Tensor([6068],"float32"),Tensor([6068],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([60750],"float32"),Tensor([60750],"float32"),Tensor([60750],"float32"),Tensor([60750],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([60800],"float32"),Tensor([60800],"float32"),Tensor([60800],"float32"),Tensor([60800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([6080],"float32"),Tensor([6080],"float32"),Tensor([6080],"float32"),Tensor([6080],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([60928],"float32"),Tensor([60928],"float32"),Tensor([60928],"float32"),Tensor([60928],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([61065],"float32"),Tensor([61065],"float32"),Tensor([61065],"float32"),Tensor([61065],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([61200],"float32"),Tensor([61200],"float32"),Tensor([61200],"float32"),Tensor([61200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([61248],"float32"),Tensor([61248],"float32"),Tensor([61248],"float32"),Tensor([61248],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([61305],"float32"),Tensor([61305],"float32"),Tensor([61305],"float32"),Tensor([61305],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([6132],"float32"),Tensor([6132],"float32"),Tensor([6132],"float32"),Tensor([6132],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([61380],"float32"),Tensor([61380],"float32"),Tensor([61380],"float32"),Tensor([61380],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([61440],"float32"),Tensor([61440],"float32"),Tensor([61440],"float32"),Tensor([61440],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([61500],"float32"),Tensor([61500],"float32"),Tensor([61500],"float32"),Tensor([61500],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([61504],"float32"),Tensor([61504],"float32"),Tensor([61504],"float32"),Tensor([61504],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([61568],"float32"),Tensor([61568],"float32"),Tensor([61568],"float32"),Tensor([61568],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([61824],"float32"),Tensor([61824],"float32"),Tensor([61824],"float32"),Tensor([61824],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([620],"float32"),Tensor([620],"float32"),Tensor([620],"float32"),Tensor([620],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([62160],"float32"),Tensor([62160],"float32"),Tensor([62160],"float32"),Tensor([62160],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([6216],"float32"),Tensor([6216],"float32"),Tensor([6216],"float32"),Tensor([6216],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([62208],"float32"),Tensor([62208],"float32"),Tensor([62208],"float32"),Tensor([62208],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([62310],"float32"),Tensor([62310],"float32"),Tensor([62310],"float32"),Tensor([62310],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([6232],"float32"),Tensor([6232],"float32"),Tensor([6232],"float32"),Tensor([6232],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([62400],"float32"),Tensor([62400],"float32"),Tensor([62400],"float32"),Tensor([62400],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([62700],"float32"),Tensor([62700],"float32"),Tensor([62700],"float32"),Tensor([62700],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([62720],"float32"),Tensor([62720],"float32"),Tensor([62720],"float32"),Tensor([62720],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([62730],"float32"),Tensor([62730],"float32"),Tensor([62730],"float32"),Tensor([62730],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([62976],"float32"),Tensor([62976],"float32"),Tensor([62976],"float32"),Tensor([62976],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([63000],"float32"),Tensor([63000],"float32"),Tensor([63000],"float32"),Tensor([63000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([6300],"float32"),Tensor([6300],"float32"),Tensor([6300],"float32"),Tensor([6300],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([6308],"float32"),Tensor([6308],"float32"),Tensor([6308],"float32"),Tensor([6308],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([63104],"float32"),Tensor([63104],"float32"),Tensor([63104],"float32"),Tensor([63104],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([63135],"float32"),Tensor([63135],"float32"),Tensor([63135],"float32"),Tensor([63135],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([63232],"float32"),Tensor([63232],"float32"),Tensor([63232],"float32"),Tensor([63232],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([63315],"float32"),Tensor([63315],"float32"),Tensor([63315],"float32"),Tensor([63315],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([63360],"float32"),Tensor([63360],"float32"),Tensor([63360],"float32"),Tensor([63360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([63488],"float32"),Tensor([63488],"float32"),Tensor([63488],"float32"),Tensor([63488],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([63720],"float32"),Tensor([63720],"float32"),Tensor([63720],"float32"),Tensor([63720],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([63840],"float32"),Tensor([63840],"float32"),Tensor([63840],"float32"),Tensor([63840],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([6384],"float32"),Tensor([6384],"float32"),Tensor([6384],"float32"),Tensor([6384],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([64, 64],"int64"),Tensor([64, 64],"int64"),), 2, )
paddle.stack(tuple(Tensor([64, 64],"int64"),Tensor([64, 64],"int64"),), axis=2, )
paddle.stack(tuple(Tensor([64000],"float32"),Tensor([64000],"float32"),Tensor([64000],"float32"),Tensor([64000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([6408],"float32"),Tensor([6408],"float32"),Tensor([6408],"float32"),Tensor([6408],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([64170],"float32"),Tensor([64170],"float32"),Tensor([64170],"float32"),Tensor([64170],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([64320],"float32"),Tensor([64320],"float32"),Tensor([64320],"float32"),Tensor([64320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([64350],"float32"),Tensor([64350],"float32"),Tensor([64350],"float32"),Tensor([64350],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([64512],"float32"),Tensor([64512],"float32"),Tensor([64512],"float32"),Tensor([64512],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([64605],"float32"),Tensor([64605],"float32"),Tensor([64605],"float32"),Tensor([64605],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([64680],"float32"),Tensor([64680],"float32"),Tensor([64680],"float32"),Tensor([64680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([651],"float32"),Tensor([651],"float32"),Tensor([651],"float32"),Tensor([651],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([65280],"float32"),Tensor([65280],"float32"),Tensor([65280],"float32"),Tensor([65280],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([65472],"float32"),Tensor([65472],"float32"),Tensor([65472],"float32"),Tensor([65472],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([65536],"float32"),Tensor([65536],"float32"),Tensor([65536],"float32"),Tensor([65536],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([65600],"float32"),Tensor([65600],"float32"),Tensor([65600],"float32"),Tensor([65600],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([65664],"float32"),Tensor([65664],"float32"),Tensor([65664],"float32"),Tensor([65664],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([660],"float32"),Tensor([660],"float32"),Tensor([660],"float32"),Tensor([660],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([66150],"float32"),Tensor([66150],"float32"),Tensor([66150],"float32"),Tensor([66150],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([66240],"float32"),Tensor([66240],"float32"),Tensor([66240],"float32"),Tensor([66240],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([66304],"float32"),Tensor([66304],"float32"),Tensor([66304],"float32"),Tensor([66304],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([66330],"float32"),Tensor([66330],"float32"),Tensor([66330],"float32"),Tensor([66330],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([66360],"float32"),Tensor([66360],"float32"),Tensor([66360],"float32"),Tensor([66360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([66816],"float32"),Tensor([66816],"float32"),Tensor([66816],"float32"),Tensor([66816],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([66960],"float32"),Tensor([66960],"float32"),Tensor([66960],"float32"),Tensor([66960],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([67200],"float32"),Tensor([67200],"float32"),Tensor([67200],"float32"),Tensor([67200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([6720],"float32"),Tensor([6720],"float32"),Tensor([6720],"float32"),Tensor([6720],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([67260],"float32"),Tensor([67260],"float32"),Tensor([67260],"float32"),Tensor([67260],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([672],"float32"),Tensor([672],"float32"),Tensor([672],"float32"),Tensor([672],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([67335],"float32"),Tensor([67335],"float32"),Tensor([67335],"float32"),Tensor([67335],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([67392],"float32"),Tensor([67392],"float32"),Tensor([67392],"float32"),Tensor([67392],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([67456],"float32"),Tensor([67456],"float32"),Tensor([67456],"float32"),Tensor([67456],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([67500],"float32"),Tensor([67500],"float32"),Tensor([67500],"float32"),Tensor([67500],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([67584],"float32"),Tensor([67584],"float32"),Tensor([67584],"float32"),Tensor([67584],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([67890],"float32"),Tensor([67890],"float32"),Tensor([67890],"float32"),Tensor([67890],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([68, 68],"int64"),Tensor([68, 68],"int64"),), 2, )
paddle.stack(tuple(Tensor([68040],"float32"),Tensor([68040],"float32"),Tensor([68040],"float32"),Tensor([68040],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([68096],"float32"),Tensor([68096],"float32"),Tensor([68096],"float32"),Tensor([68096],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([68160],"float32"),Tensor([68160],"float32"),Tensor([68160],"float32"),Tensor([68160],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([68224],"float32"),Tensor([68224],"float32"),Tensor([68224],"float32"),Tensor([68224],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([68310],"float32"),Tensor([68310],"float32"),Tensor([68310],"float32"),Tensor([68310],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([68340],"float32"),Tensor([68340],"float32"),Tensor([68340],"float32"),Tensor([68340],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([68400],"float32"),Tensor([68400],"float32"),Tensor([68400],"float32"),Tensor([68400],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([68625],"float32"),Tensor([68625],"float32"),Tensor([68625],"float32"),Tensor([68625],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([6888],"float32"),Tensor([6888],"float32"),Tensor([6888],"float32"),Tensor([6888],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([68985],"float32"),Tensor([68985],"float32"),Tensor([68985],"float32"),Tensor([68985],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([69030],"float32"),Tensor([69030],"float32"),Tensor([69030],"float32"),Tensor([69030],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([690],"float32"),Tensor([690],"float32"),Tensor([690],"float32"),Tensor([690],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([69120],"float32"),Tensor([69120],"float32"),Tensor([69120],"float32"),Tensor([69120],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([6912],"float32"),Tensor([6912],"float32"),Tensor([6912],"float32"),Tensor([6912],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([69300],"float32"),Tensor([69300],"float32"),Tensor([69300],"float32"),Tensor([69300],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([69345],"float32"),Tensor([69345],"float32"),Tensor([69345],"float32"),Tensor([69345],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([693],"float32"),Tensor([693],"float32"),Tensor([693],"float32"),Tensor([693],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([69440],"float32"),Tensor([69440],"float32"),Tensor([69440],"float32"),Tensor([69440],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([69632],"float32"),Tensor([69632],"float32"),Tensor([69632],"float32"),Tensor([69632],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([69696],"float32"),Tensor([69696],"float32"),Tensor([69696],"float32"),Tensor([69696],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([69750],"float32"),Tensor([69750],"float32"),Tensor([69750],"float32"),Tensor([69750],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([69888],"float32"),Tensor([69888],"float32"),Tensor([69888],"float32"),Tensor([69888],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([69930],"float32"),Tensor([69930],"float32"),Tensor([69930],"float32"),Tensor([69930],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([70080],"float32"),Tensor([70080],"float32"),Tensor([70080],"float32"),Tensor([70080],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([70290],"float32"),Tensor([70290],"float32"),Tensor([70290],"float32"),Tensor([70290],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([70350],"float32"),Tensor([70350],"float32"),Tensor([70350],"float32"),Tensor([70350],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([704],"float32"),Tensor([704],"float32"),Tensor([704],"float32"),Tensor([704],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([7056],"float32"),Tensor([7056],"float32"),Tensor([7056],"float32"),Tensor([7056],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([70680],"float32"),Tensor([70680],"float32"),Tensor([70680],"float32"),Tensor([70680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([70848],"float32"),Tensor([70848],"float32"),Tensor([70848],"float32"),Tensor([70848],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([70875],"float32"),Tensor([70875],"float32"),Tensor([70875],"float32"),Tensor([70875],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([71040],"float32"),Tensor([71040],"float32"),Tensor([71040],"float32"),Tensor([71040],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([71100],"float32"),Tensor([71100],"float32"),Tensor([71100],"float32"),Tensor([71100],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([713],"float32"),Tensor([713],"float32"),Tensor([713],"float32"),Tensor([713],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([71415],"float32"),Tensor([71415],"float32"),Tensor([71415],"float32"),Tensor([71415],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([71424],"float32"),Tensor([71424],"float32"),Tensor([71424],"float32"),Tensor([71424],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([71610],"float32"),Tensor([71610],"float32"),Tensor([71610],"float32"),Tensor([71610],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([71680],"float32"),Tensor([71680],"float32"),Tensor([71680],"float32"),Tensor([71680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([71685],"float32"),Tensor([71685],"float32"),Tensor([71685],"float32"),Tensor([71685],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([71808],"float32"),Tensor([71808],"float32"),Tensor([71808],"float32"),Tensor([71808],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([71820],"float32"),Tensor([71820],"float32"),Tensor([71820],"float32"),Tensor([71820],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([72, 72],"int64"),Tensor([72, 72],"int64"),), 2, )
paddle.stack(tuple(Tensor([72000],"float32"),Tensor([72000],"float32"),Tensor([72000],"float32"),Tensor([72000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([7200],"float32"),Tensor([7200],"float32"),Tensor([7200],"float32"),Tensor([7200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([720],"float32"),Tensor([720],"float32"),Tensor([720],"float32"),Tensor([720],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([72270],"float32"),Tensor([72270],"float32"),Tensor([72270],"float32"),Tensor([72270],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([72360],"float32"),Tensor([72360],"float32"),Tensor([72360],"float32"),Tensor([72360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([72576],"float32"),Tensor([72576],"float32"),Tensor([72576],"float32"),Tensor([72576],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([726],"float32"),Tensor([726],"float32"),Tensor([726],"float32"),Tensor([726],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([72960],"float32"),Tensor([72960],"float32"),Tensor([72960],"float32"),Tensor([72960],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([73125],"float32"),Tensor([73125],"float32"),Tensor([73125],"float32"),Tensor([73125],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([73365],"float32"),Tensor([73365],"float32"),Tensor([73365],"float32"),Tensor([73365],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([73408],"float32"),Tensor([73408],"float32"),Tensor([73408],"float32"),Tensor([73408],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([73472],"float32"),Tensor([73472],"float32"),Tensor([73472],"float32"),Tensor([73472],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([73500],"float32"),Tensor([73500],"float32"),Tensor([73500],"float32"),Tensor([73500],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([736],"float32"),Tensor([736],"float32"),Tensor([736],"float32"),Tensor([736],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([73728],"float32"),Tensor([73728],"float32"),Tensor([73728],"float32"),Tensor([73728],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([73920],"float32"),Tensor([73920],"float32"),Tensor([73920],"float32"),Tensor([73920],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([73984],"float32"),Tensor([73984],"float32"),Tensor([73984],"float32"),Tensor([73984],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([74100],"float32"),Tensor([74100],"float32"),Tensor([74100],"float32"),Tensor([74100],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([74240],"float32"),Tensor([74240],"float32"),Tensor([74240],"float32"),Tensor([74240],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([74250],"float32"),Tensor([74250],"float32"),Tensor([74250],"float32"),Tensor([74250],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([74340],"float32"),Tensor([74340],"float32"),Tensor([74340],"float32"),Tensor([74340],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([74370],"float32"),Tensor([74370],"float32"),Tensor([74370],"float32"),Tensor([74370],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([744],"float32"),Tensor([744],"float32"),Tensor([744],"float32"),Tensor([744],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([74520],"float32"),Tensor([74520],"float32"),Tensor([74520],"float32"),Tensor([74520],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([74550],"float32"),Tensor([74550],"float32"),Tensor([74550],"float32"),Tensor([74550],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([74880],"float32"),Tensor([74880],"float32"),Tensor([74880],"float32"),Tensor([74880],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([748],"float32"),Tensor([748],"float32"),Tensor([748],"float32"),Tensor([748],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75030],"float32"),Tensor([75030],"float32"),Tensor([75030],"float32"),Tensor([75030],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75075],"float32"),Tensor([75075],"float32"),Tensor([75075],"float32"),Tensor([75075],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([750],"float32"),Tensor([750],"float32"),Tensor([750],"float32"),Tensor([750],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75240],"float32"),Tensor([75240],"float32"),Tensor([75240],"float32"),Tensor([75240],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75264],"float32"),Tensor([75264],"float32"),Tensor([75264],"float32"),Tensor([75264],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75330],"float32"),Tensor([75330],"float32"),Tensor([75330],"float32"),Tensor([75330],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75375],"float32"),Tensor([75375],"float32"),Tensor([75375],"float32"),Tensor([75375],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75392],"float32"),Tensor([75392],"float32"),Tensor([75392],"float32"),Tensor([75392],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75555],"float32"),Tensor([75555],"float32"),Tensor([75555],"float32"),Tensor([75555],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75615],"float32"),Tensor([75615],"float32"),Tensor([75615],"float32"),Tensor([75615],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([756],"float32"),Tensor([756],"float32"),Tensor([756],"float32"),Tensor([756],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75776],"float32"),Tensor([75776],"float32"),Tensor([75776],"float32"),Tensor([75776],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([75840],"float32"),Tensor([75840],"float32"),Tensor([75840],"float32"),Tensor([75840],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([759],"float32"),Tensor([759],"float32"),Tensor([759],"float32"),Tensor([759],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([76, 76],"int64"),Tensor([76, 76],"int64"),), 2, )
paddle.stack(tuple(Tensor([76032],"float32"),Tensor([76032],"float32"),Tensor([76032],"float32"),Tensor([76032],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([76160],"float32"),Tensor([76160],"float32"),Tensor([76160],"float32"),Tensor([76160],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([76260],"float32"),Tensor([76260],"float32"),Tensor([76260],"float32"),Tensor([76260],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([76380],"float32"),Tensor([76380],"float32"),Tensor([76380],"float32"),Tensor([76380],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([76590],"float32"),Tensor([76590],"float32"),Tensor([76590],"float32"),Tensor([76590],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([76800],"float32"),Tensor([76800],"float32"),Tensor([76800],"float32"),Tensor([76800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([76860],"float32"),Tensor([76860],"float32"),Tensor([76860],"float32"),Tensor([76860],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),Tensor([768],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([77025],"float32"),Tensor([77025],"float32"),Tensor([77025],"float32"),Tensor([77025],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([770],"float32"),Tensor([770],"float32"),Tensor([770],"float32"),Tensor([770],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([77220],"float32"),Tensor([77220],"float32"),Tensor([77220],"float32"),Tensor([77220],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([77376],"float32"),Tensor([77376],"float32"),Tensor([77376],"float32"),Tensor([77376],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([77490],"float32"),Tensor([77490],"float32"),Tensor([77490],"float32"),Tensor([77490],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([775],"float32"),Tensor([775],"float32"),Tensor([775],"float32"),Tensor([775],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([77625],"float32"),Tensor([77625],"float32"),Tensor([77625],"float32"),Tensor([77625],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([77760],"float32"),Tensor([77760],"float32"),Tensor([77760],"float32"),Tensor([77760],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([77824],"float32"),Tensor([77824],"float32"),Tensor([77824],"float32"),Tensor([77824],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([77952],"float32"),Tensor([77952],"float32"),Tensor([77952],"float32"),Tensor([77952],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([780],"float32"),Tensor([780],"float32"),Tensor([780],"float32"),Tensor([780],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([78120],"float32"),Tensor([78120],"float32"),Tensor([78120],"float32"),Tensor([78120],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([78144],"float32"),Tensor([78144],"float32"),Tensor([78144],"float32"),Tensor([78144],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([782],"float32"),Tensor([782],"float32"),Tensor([782],"float32"),Tensor([782],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([78336],"float32"),Tensor([78336],"float32"),Tensor([78336],"float32"),Tensor([78336],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([78400],"float32"),Tensor([78400],"float32"),Tensor([78400],"float32"),Tensor([78400],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([78660],"float32"),Tensor([78660],"float32"),Tensor([78660],"float32"),Tensor([78660],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([78720],"float32"),Tensor([78720],"float32"),Tensor([78720],"float32"),Tensor([78720],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([78750],"float32"),Tensor([78750],"float32"),Tensor([78750],"float32"),Tensor([78750],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([78840],"float32"),Tensor([78840],"float32"),Tensor([78840],"float32"),Tensor([78840],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([792],"float32"),Tensor([792],"float32"),Tensor([792],"float32"),Tensor([792],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([79360],"float32"),Tensor([79360],"float32"),Tensor([79360],"float32"),Tensor([79360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([79380],"float32"),Tensor([79380],"float32"),Tensor([79380],"float32"),Tensor([79380],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([79395],"float32"),Tensor([79395],"float32"),Tensor([79395],"float32"),Tensor([79395],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([79680],"float32"),Tensor([79680],"float32"),Tensor([79680],"float32"),Tensor([79680],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([79695],"float32"),Tensor([79695],"float32"),Tensor([79695],"float32"),Tensor([79695],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([79872],"float32"),Tensor([79872],"float32"),Tensor([79872],"float32"),Tensor([79872],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([79935],"float32"),Tensor([79935],"float32"),Tensor([79935],"float32"),Tensor([79935],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([8, 8],"int64"),Tensor([8, 8],"int64"),), axis=2, )
paddle.stack(tuple(Tensor([800],"float32"),Tensor([800],"float32"),Tensor([800],"float32"),Tensor([800],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([80256],"float32"),Tensor([80256],"float32"),Tensor([80256],"float32"),Tensor([80256],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([80400],"float32"),Tensor([80400],"float32"),Tensor([80400],"float32"),Tensor([80400],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([80512],"float32"),Tensor([80512],"float32"),Tensor([80512],"float32"),Tensor([80512],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([805],"float32"),Tensor([805],"float32"),Tensor([805],"float32"),Tensor([805],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([80640],"float32"),Tensor([80640],"float32"),Tensor([80640],"float32"),Tensor([80640],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([80],"float32"),Tensor([80],"float32"),Tensor([80],"float32"),Tensor([80],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([81000],"float32"),Tensor([81000],"float32"),Tensor([81000],"float32"),Tensor([81000],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([81180],"float32"),Tensor([81180],"float32"),Tensor([81180],"float32"),Tensor([81180],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([81344],"float32"),Tensor([81344],"float32"),Tensor([81344],"float32"),Tensor([81344],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([814],"float32"),Tensor([814],"float32"),Tensor([814],"float32"),Tensor([814],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([816],"float32"),Tensor([816],"float32"),Tensor([816],"float32"),Tensor([816],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([81900],"float32"),Tensor([81900],"float32"),Tensor([81900],"float32"),Tensor([81900],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([81920],"float32"),Tensor([81920],"float32"),Tensor([81920],"float32"),Tensor([81920],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([82080],"float32"),Tensor([82080],"float32"),Tensor([82080],"float32"),Tensor([82080],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([82125],"float32"),Tensor([82125],"float32"),Tensor([82125],"float32"),Tensor([82125],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([82368],"float32"),Tensor([82368],"float32"),Tensor([82368],"float32"),Tensor([82368],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([825],"float32"),Tensor([825],"float32"),Tensor([825],"float32"),Tensor([825],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([82688],"float32"),Tensor([82688],"float32"),Tensor([82688],"float32"),Tensor([82688],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([82880],"float32"),Tensor([82880],"float32"),Tensor([82880],"float32"),Tensor([82880],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([82944],"float32"),Tensor([82944],"float32"),Tensor([82944],"float32"),Tensor([82944],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([83070],"float32"),Tensor([83070],"float32"),Tensor([83070],"float32"),Tensor([83070],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([83220],"float32"),Tensor([83220],"float32"),Tensor([83220],"float32"),Tensor([83220],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([832],"float32"),Tensor([832],"float32"),Tensor([832],"float32"),Tensor([832],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([83328],"float32"),Tensor([83328],"float32"),Tensor([83328],"float32"),Tensor([83328],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([83415],"float32"),Tensor([83415],"float32"),Tensor([83415],"float32"),Tensor([83415],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([837],"float32"),Tensor([837],"float32"),Tensor([837],"float32"),Tensor([837],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([83968],"float32"),Tensor([83968],"float32"),Tensor([83968],"float32"),Tensor([83968],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([840],"float32"),Tensor([840],"float32"),Tensor([840],"float32"),Tensor([840],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([84375],"float32"),Tensor([84375],"float32"),Tensor([84375],"float32"),Tensor([84375],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([84420],"float32"),Tensor([84420],"float32"),Tensor([84420],"float32"),Tensor([84420],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([84480],"float32"),Tensor([84480],"float32"),Tensor([84480],"float32"),Tensor([84480],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([84864],"float32"),Tensor([84864],"float32"),Tensor([84864],"float32"),Tensor([84864],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([850],"float32"),Tensor([850],"float32"),Tensor([850],"float32"),Tensor([850],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([85120],"float32"),Tensor([85120],"float32"),Tensor([85120],"float32"),Tensor([85120],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([851],"float32"),Tensor([851],"float32"),Tensor([851],"float32"),Tensor([851],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([85248],"float32"),Tensor([85248],"float32"),Tensor([85248],"float32"),Tensor([85248],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([85320],"float32"),Tensor([85320],"float32"),Tensor([85320],"float32"),Tensor([85320],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([858],"float32"),Tensor([858],"float32"),Tensor([858],"float32"),Tensor([858],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([86016],"float32"),Tensor([86016],"float32"),Tensor([86016],"float32"),Tensor([86016],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([8640],"float32"),Tensor([8640],"float32"),Tensor([8640],"float32"),Tensor([8640],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([864],"float32"),Tensor([864],"float32"),Tensor([864],"float32"),Tensor([864],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([86592],"float32"),Tensor([86592],"float32"),Tensor([86592],"float32"),Tensor([86592],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([86640],"float32"),Tensor([86640],"float32"),Tensor([86640],"float32"),Tensor([86640],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([868],"float32"),Tensor([868],"float32"),Tensor([868],"float32"),Tensor([868],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([86940],"float32"),Tensor([86940],"float32"),Tensor([86940],"float32"),Tensor([86940],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([87040],"float32"),Tensor([87040],"float32"),Tensor([87040],"float32"),Tensor([87040],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([87360],"float32"),Tensor([87360],"float32"),Tensor([87360],"float32"),Tensor([87360],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([874],"float32"),Tensor([874],"float32"),Tensor([874],"float32"),Tensor([874],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([87552],"float32"),Tensor([87552],"float32"),Tensor([87552],"float32"),Tensor([87552],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([875],"float32"),Tensor([875],"float32"),Tensor([875],"float32"),Tensor([875],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([87600],"float32"),Tensor([87600],"float32"),Tensor([87600],"float32"),Tensor([87600],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([87616],"float32"),Tensor([87616],"float32"),Tensor([87616],"float32"),Tensor([87616],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([88200],"float32"),Tensor([88200],"float32"),Tensor([88200],"float32"),Tensor([88200],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([88560],"float32"),Tensor([88560],"float32"),Tensor([88560],"float32"),Tensor([88560],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([88704],"float32"),Tensor([88704],"float32"),Tensor([88704],"float32"),Tensor([88704],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([888],"float32"),Tensor([888],"float32"),Tensor([888],"float32"),Tensor([888],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([891],"float32"),Tensor([891],"float32"),Tensor([891],"float32"),Tensor([891],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([89216],"float32"),Tensor([89216],"float32"),Tensor([89216],"float32"),Tensor([89216],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([89600],"float32"),Tensor([89600],"float32"),Tensor([89600],"float32"),Tensor([89600],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([896],"float32"),Tensor([896],"float32"),Tensor([896],"float32"),Tensor([896],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([897],"float32"),Tensor([897],"float32"),Tensor([897],"float32"),Tensor([897],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([89856],"float32"),Tensor([89856],"float32"),Tensor([89856],"float32"),Tensor([89856],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([89984],"float32"),Tensor([89984],"float32"),Tensor([89984],"float32"),Tensor([89984],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([899],"float32"),Tensor([899],"float32"),Tensor([899],"float32"),Tensor([899],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([90060],"float32"),Tensor([90060],"float32"),Tensor([90060],"float32"),Tensor([90060],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([900],"float32"),Tensor([900],"float32"),Tensor([900],"float32"),Tensor([900],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([90720],"float32"),Tensor([90720],"float32"),Tensor([90720],"float32"),Tensor([90720],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([912],"float32"),Tensor([912],"float32"),Tensor([912],"float32"),Tensor([912],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([91392],"float32"),Tensor([91392],"float32"),Tensor([91392],"float32"),Tensor([91392],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([91840],"float32"),Tensor([91840],"float32"),Tensor([91840],"float32"),Tensor([91840],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([918],"float32"),Tensor([918],"float32"),Tensor([918],"float32"),Tensor([918],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([91980],"float32"),Tensor([91980],"float32"),Tensor([91980],"float32"),Tensor([91980],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([920],"float32"),Tensor([920],"float32"),Tensor([920],"float32"),Tensor([920],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([92160],"float32"),Tensor([92160],"float32"),Tensor([92160],"float32"),Tensor([92160],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([92352],"float32"),Tensor([92352],"float32"),Tensor([92352],"float32"),Tensor([92352],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([92416],"float32"),Tensor([92416],"float32"),Tensor([92416],"float32"),Tensor([92416],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([924],"float32"),Tensor([924],"float32"),Tensor([924],"float32"),Tensor([924],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([925],"float32"),Tensor([925],"float32"),Tensor([925],"float32"),Tensor([925],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([928],"float32"),Tensor([928],"float32"),Tensor([928],"float32"),Tensor([928],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([930],"float32"),Tensor([930],"float32"),Tensor([930],"float32"),Tensor([930],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([936],"float32"),Tensor([936],"float32"),Tensor([936],"float32"),Tensor([936],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([94080],"float32"),Tensor([94080],"float32"),Tensor([94080],"float32"),Tensor([94080],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([9408],"float32"),Tensor([9408],"float32"),Tensor([9408],"float32"),Tensor([9408],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([943],"float32"),Tensor([943],"float32"),Tensor([943],"float32"),Tensor([943],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([94464],"float32"),Tensor([94464],"float32"),Tensor([94464],"float32"),Tensor([94464],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([94500],"float32"),Tensor([94500],"float32"),Tensor([94500],"float32"),Tensor([94500],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([945],"float32"),Tensor([945],"float32"),Tensor([945],"float32"),Tensor([945],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([94620],"float32"),Tensor([94620],"float32"),Tensor([94620],"float32"),Tensor([94620],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([94720],"float32"),Tensor([94720],"float32"),Tensor([94720],"float32"),Tensor([94720],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([94848],"float32"),Tensor([94848],"float32"),Tensor([94848],"float32"),Tensor([94848],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([950],"float32"),Tensor([950],"float32"),Tensor([950],"float32"),Tensor([950],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([952],"float32"),Tensor([952],"float32"),Tensor([952],"float32"),Tensor([952],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([95760],"float32"),Tensor([95760],"float32"),Tensor([95760],"float32"),Tensor([95760],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([957],"float32"),Tensor([957],"float32"),Tensor([957],"float32"),Tensor([957],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([9600],"float32"),Tensor([9600],"float32"),Tensor([9600],"float32"),Tensor([9600],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([960],"float32"),Tensor([960],"float32"),Tensor([960],"float32"),Tensor([960],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([961],"float32"),Tensor([961],"float32"),Tensor([961],"float32"),Tensor([961],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([962],"float32"),Tensor([962],"float32"),Tensor([962],"float32"),Tensor([962],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([966],"float32"),Tensor([966],"float32"),Tensor([966],"float32"),Tensor([966],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([96768],"float32"),Tensor([96768],"float32"),Tensor([96768],"float32"),Tensor([96768],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([97088],"float32"),Tensor([97088],"float32"),Tensor([97088],"float32"),Tensor([97088],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([97280],"float32"),Tensor([97280],"float32"),Tensor([97280],"float32"),Tensor([97280],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([972],"float32"),Tensor([972],"float32"),Tensor([972],"float32"),Tensor([972],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([975],"float32"),Tensor([975],"float32"),Tensor([975],"float32"),Tensor([975],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([980],"float32"),Tensor([980],"float32"),Tensor([980],"float32"),Tensor([980],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([984],"float32"),Tensor([984],"float32"),Tensor([984],"float32"),Tensor([984],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([986],"float32"),Tensor([986],"float32"),Tensor([986],"float32"),Tensor([986],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([988],"float32"),Tensor([988],"float32"),Tensor([988],"float32"),Tensor([988],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([9920],"float32"),Tensor([9920],"float32"),Tensor([9920],"float32"),Tensor([9920],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([992],"float32"),Tensor([992],"float32"),Tensor([992],"float32"),Tensor([992],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([99456],"float32"),Tensor([99456],"float32"),Tensor([99456],"float32"),Tensor([99456],"float32"),), axis=1, )
paddle.stack(tuple(Tensor([99712],"float32"),Tensor([99712],"float32"),Tensor([99712],"float32"),Tensor([99712],"float32"),), axis=1, )
paddle.stack(x=list[Tensor([58, 140, 140],"float32"),Tensor([58, 140, 140],"float32"),], axis=1, )
paddle.stack(x=tuple(Tensor([1, 16, 256, 32],"float32"),Tensor([1, 16, 256, 32],"float32"),), axis=-1, )
paddle.stack(x=tuple(Tensor([128, 3, 576, 32],"float32"),Tensor([128, 3, 576, 32],"float32"),), axis=-1, )
paddle.stack(x=tuple(Tensor([2, 3, 256, 32],"float16"),Tensor([2, 3, 256, 32],"float16"),), axis=-1, )
paddle.stack(x=tuple(Tensor([2, 3, 256, 32],"float32"),Tensor([2, 3, 256, 32],"float32"),), axis=-1, )
paddle.stack(x=tuple(Tensor([80, 3, 576, 32],"float32"),Tensor([80, 3, 576, 32],"float32"),), axis=-1, )
paddle.std(Tensor([1, 3, 4, 10],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 4, 10],"float64"), 2, True, False, )
paddle.std(Tensor([1, 3, 4, 10],"float64"), list[1,2,], True, False, )
paddle.std(Tensor([1, 3, 4, 10],"float64"), list[1,3,], False, False, )
paddle.std(Tensor([1, 3, 4, 10],"float64"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 4, 10],"float64"), tuple(1,3,), True, False, )
paddle.std(Tensor([2],"float32"), )
paddle.std(Tensor([3, 5],"float32"), )
paddle.std(Tensor([32, 32],"float32"), )
paddle.std(Tensor([6, 9],"float32"), axis=1, )
paddle.std(Tensor([],"float32"), )
paddle.std(Tensor([],"float32"), list[], )
paddle.std(x=Tensor([2, 3],"float32"), )
paddle.std(x=Tensor([2, 3],"float64"), )
paddle.std(x=Tensor([3, 3, 3],"float64"), )
paddle.std(x=Tensor([3, 3, 3],"float64"), axis=0, )
paddle.std(x=Tensor([3, 3, 3],"float64"), axis=0, unbiased=False, )
paddle.std(x=Tensor([3, 3, 3],"float64"), axis=list[0,1,], )
paddle.std(x=Tensor([3, 3, 3],"float64"), axis=tuple(0,1,), )
paddle.std(x=Tensor([3, 3, 3],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.t(Tensor([1, 5],"float64"), )
paddle.t(Tensor([10, 20],"float32"), )
paddle.t(Tensor([10, 5],"float64"), )
paddle.t(Tensor([10],"float64"), )
paddle.t(Tensor([20, 10],"float32"), )
paddle.t(Tensor([512, 512],"int64"), )
paddle.t(Tensor([],"float32"), )
paddle.tan(Tensor([10, 20, 1],"float32"), )
paddle.tan(Tensor([100, 1, 2, 2],"float32"), )
paddle.tan(Tensor([100, 1, 2],"float32"), )
paddle.tan(Tensor([100, 1],"float32"), )
paddle.tan(Tensor([100, 1],"float64"), )
paddle.tan(Tensor([100, 2, 1],"float32"), )
paddle.tan(Tensor([100, 2, 3, 1],"float32"), )
paddle.tan(Tensor([100, 2, 3],"float32"), )
paddle.tan(Tensor([100, 2],"float32"), )
paddle.tan(Tensor([100],"float32"), )
paddle.tan(Tensor([8, 16, 32],"complex128"), )
paddle.tan(Tensor([8, 16, 32],"complex64"), )
paddle.tan(Tensor([8, 16, 32],"float16"), )
paddle.tan(Tensor([8, 16, 32],"float32"), )
paddle.tan(Tensor([8, 16, 32],"float64"), )
paddle.tan(Tensor([],"float32"), )
paddle.tan(x=Tensor([3, 3, 3],"float32"), )
paddle.tan(x=Tensor([3, 3, 3],"float64"), )
paddle.tensor_split(Tensor([4, 4, 4, 7],"int64"), 2, axis=3, )
paddle.tensor_split(Tensor([4, 4, 4, 7],"int64"), 3, axis=3, )
paddle.tensor_split(Tensor([4, 4, 4, 7],"int64"), list[2,3,], axis=3, )
paddle.tensor_split(Tensor([4, 4, 4, 7],"int64"), list[2,4,6,], axis=3, )
paddle.tensor_split(Tensor([4, 4, 4, 7],"int64"), tuple(2,6,), axis=3, )
paddle.tensor_split(Tensor([4, 4, 6],"bool"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"float16"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"float32"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"float64"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"int32"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"int64"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"uint8"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 7, 4],"int64"), 2, axis=-2, )
paddle.tensor_split(Tensor([4, 4, 7, 4],"int64"), 3, axis=-2, )
paddle.tensor_split(Tensor([4, 4, 7, 4],"int64"), list[2,3,], axis=-2, )
paddle.tensor_split(Tensor([4, 4, 7, 4],"int64"), list[2,4,6,], axis=-2, )
paddle.tensor_split(Tensor([4, 4, 7, 4],"int64"), tuple(2,6,), axis=-2, )
paddle.tensor_split(Tensor([4, 4, 7],"int64"), 2, axis=2, )
paddle.tensor_split(Tensor([4, 4, 7],"int64"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 7],"int64"), list[2,3,], axis=2, )
paddle.tensor_split(Tensor([4, 4, 7],"int64"), list[2,4,6,], axis=2, )
paddle.tensor_split(Tensor([4, 4, 7],"int64"), tuple(2,6,), axis=2, )
paddle.tensor_split(Tensor([4, 6],"bool"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"float16"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"float32"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"float64"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"int32"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"int64"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"uint8"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 7],"int64"), 2, axis=1, )
paddle.tensor_split(Tensor([4, 7],"int64"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 7],"int64"), list[2,3,], axis=1, )
paddle.tensor_split(Tensor([4, 7],"int64"), list[2,4,6,], axis=1, )
paddle.tensor_split(Tensor([4, 7],"int64"), tuple(2,6,), axis=1, )
paddle.tensor_split(Tensor([6],"bool"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"float16"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"float32"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"float64"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"int32"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"int64"), 2, )
paddle.tensor_split(Tensor([6],"int64"), 3, )
paddle.tensor_split(Tensor([6],"int64"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"int64"), list[2,3,], )
paddle.tensor_split(Tensor([6],"int64"), list[2,4,5,], )
paddle.tensor_split(Tensor([6],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([6],"int64"), tuple(2,5,), )
paddle.tensor_split(Tensor([6],"uint8"), 3, axis=0, )
paddle.tensor_split(Tensor([7, 4, 3],"int64"), 2, )
paddle.tensor_split(Tensor([7, 4, 3],"int64"), 3, )
paddle.tensor_split(Tensor([7, 4, 3],"int64"), list[2,3,], )
paddle.tensor_split(Tensor([7, 4, 3],"int64"), list[2,4,6,], )
paddle.tensor_split(Tensor([7, 4, 3],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([7, 4, 3],"int64"), tuple(2,6,), )
paddle.tensor_split(Tensor([7, 4],"int64"), 2, )
paddle.tensor_split(Tensor([7, 4],"int64"), 3, )
paddle.tensor_split(Tensor([7, 4],"int64"), list[2,3,], )
paddle.tensor_split(Tensor([7, 4],"int64"), list[2,4,6,], )
paddle.tensor_split(Tensor([7, 4],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([7, 4],"int64"), tuple(2,6,), )
paddle.tensor_split(Tensor([7],"int64"), 2, )
paddle.tensor_split(Tensor([7],"int64"), 2, axis=0, )
paddle.tensor_split(Tensor([7],"int64"), 3, )
paddle.tensor_split(Tensor([7],"int64"), 3, axis=0, )
paddle.tensor_split(Tensor([7],"int64"), list[2,1,3,], axis=0, )
paddle.tensor_split(Tensor([7],"int64"), list[2,3,16,], axis=0, )
paddle.tensor_split(Tensor([7],"int64"), list[2,3,], )
paddle.tensor_split(Tensor([7],"int64"), list[2,3,], axis=0, )
paddle.tensor_split(Tensor([7],"int64"), list[2,4,6,], )
paddle.tensor_split(Tensor([7],"int64"), list[2,4,6,], axis=0, )
paddle.tensor_split(Tensor([7],"int64"), list[2,4,], )
paddle.tensor_split(Tensor([7],"int64"), list[3,-1,16,], axis=0, )
paddle.tensor_split(Tensor([7],"int64"), list[3,-1,5,2,16,], axis=0, )
paddle.tensor_split(Tensor([7],"int64"), tuple(2,6,), )
paddle.tensor_split(Tensor([7],"int64"), tuple(2,6,), axis=0, )
paddle.trace(Tensor([2, 2],"float32"), )
paddle.trace(Tensor([5, 0, 0, 0],"float32"), offset=-1, axis1=2, axis2=0, )
paddle.trace(Tensor([5, 0, 0, 0],"float32"), offset=-5, axis1=2, axis2=0, )
paddle.trace(Tensor([5, 0, 0, 0],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.trace(Tensor([5, 0, 0, 0],"float32"), offset=0, axis1=1, axis2=2, )
paddle.trace(Tensor([5, 0, 0, 0],"float32"), offset=1, axis1=0, axis2=1, )
paddle.trace(Tensor([5, 0, 0, 0],"float32"), offset=2, axis1=1, axis2=2, )
paddle.trace(Tensor([5, 0, 0, 0],"float32"), offset=5, axis1=1, axis2=2, )
paddle.trace(x=Tensor([2, 3, 2],"float64"), offset=-1, axis1=2, axis2=-2, )
paddle.trace(x=Tensor([2, 3, 2],"float64"), offset=0, axis1=-3, axis2=-2, )
paddle.trace(x=Tensor([2, 3, 2],"float64"), offset=1, axis1=0, axis2=2, )
paddle.trace(x=Tensor([3, 4],"float64"), offset=-1, axis1=0, axis2=1, )
paddle.trace(x=Tensor([3, 4],"float64"), offset=0, axis1=0, axis2=1, )
paddle.trace(x=Tensor([3, 4],"float64"), offset=1, axis1=0, axis2=1, )
paddle.transpose(Tensor([1, 1, 1, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1, 2],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([1, 1, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1, 8, 96],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 10, 32],"float64"), list[1,0,2,], )
paddle.transpose(Tensor([1, 10, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 10, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 10, 8, 96],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 100, 12],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 100, 2],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 100, 40],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 100, 4],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 100, 6],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 100, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 100, 8],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 101, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 102, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1024, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1, 1024, 8, 16],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 103, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 10],"float64"), list[1,0,], )
paddle.transpose(Tensor([1, 11, 16, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 11, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 11, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 11, 8, 96],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 12, 1, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 12, 10, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 10, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 10, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 100, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 100, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 11, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 11, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 11, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 11, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 12, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 12, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 124, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 128, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 12],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 12, 13, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 13, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 136, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 140, 92],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 148, 96],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 1500, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 12, 152, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 16, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 16, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 160, 216],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 160, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 160, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 168, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 168, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 17, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 176, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 176, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 176, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 18, 12],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 184, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 184, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 19, 12],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 19, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 192, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 20, 27],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 20, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 20, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 200, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 200, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 21, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 21, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 22, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 22, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 22, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 23, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 23, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 24, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 248, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 25, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 25, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 256, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 272, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 280, 184],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 296, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 304, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 31, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 32, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 34, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 35, 23],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 37, 24],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 38, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 40, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 40, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 40, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 42, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 42, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 44, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 44, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 44, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 46, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 46, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 48, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 50, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 50, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 62, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 64, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 68, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 70, 46],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 74, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 76, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 12, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 12, 8, 96],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 12, 80, 108],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 80, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 80, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 84, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 84, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 88, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 88, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 88, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 92, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 92, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 12, 96, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 128, 32, 128],"float16"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 128, 32, 128],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 128, 32, 128],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 128, 32, 128],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 128, 32, 32],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 128, 32, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 128, 8, 16],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1280, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1, 13, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 13, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 13, 8, 96],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 14, 32],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([1, 14, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 14, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 14, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 14, 8, 96],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 15, 40, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 15, 42, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 15, 44, 59],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 15, 44, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 15, 44, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 15, 46, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 15, 48, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 15, 50, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 15, 67, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 15, 70, 46],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 15, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 15, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 1500, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1500, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1500, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1500, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1500, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1500, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1500, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1500, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 1500, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 1500, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 16, 1, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 16, 1500, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 16, 32, 16],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 16, 32, 16],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 16, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 17, 2],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 17, 4],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 17, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 17, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 18, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 18, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 19, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 19, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 2, 12, 10, 10],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 12, 12],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 128, 128],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 2, 16, 16],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 2, 1, 32],"float32"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([1, 2, 2, 2, 8],"float32"), perm=list[2,1,0,3,4,], )
paddle.transpose(Tensor([1, 2, 2048, 128],"bfloat16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 2, 2048, 128],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 2, 24, 24],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 24, 5, 5],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 2, 256, 256],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([1, 2, 2],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 2, 36, 36],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 2, 40, 40],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([1, 2, 48, 3, 3],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([1, 20, 1, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 20, 1, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 20, 1500, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 20, 2, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 20, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([1, 20, 4, 24],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 20, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 20, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 21, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 21, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 22, 1, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 22, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([1, 22, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 22, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 23, 1, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 23, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 23, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 24, 1, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 24, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 24, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 25, 1, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 25, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 25, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 256, 144],"float32"), list[0,2,1,], )
paddle.transpose(Tensor([1, 256, 256],"float32"), list[0,2,1,], )
paddle.transpose(Tensor([1, 26, 1, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 26, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 26, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 27, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 27, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 28, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 28, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 29, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 29, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 3, 10, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 10, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 10, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 100, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 100, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 11, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 11, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 11, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 11, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 12, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 12, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 124, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 128, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 13, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 13, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 136, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 140, 92],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 148, 96],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 152, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 16, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 16, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 160, 216],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 160, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 160, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 168, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 168, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 17, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 176, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 176, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 176, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 18, 12],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 184, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 184, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 19, 12],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 19, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 192, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 2, 2],"bool"), list[1,0,2,3,], )
paddle.transpose(Tensor([1, 3, 2, 5, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 2, 5, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 20, 27],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 20, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 20, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 200, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 200, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 21, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 21, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 22, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 22, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 22, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 23, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 23, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 24, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 248, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 25, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 25, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 256, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 272, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 280, 184],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 296, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 304, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 31, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 32, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 34, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 35, 23],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 37, 24],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 38, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 4, 2, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 3, 40, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 40, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 40, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 42, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 42, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 44, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 44, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 44, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 46, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 46, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 48, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 5, 2, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 5, 2, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([1, 3, 50, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 50, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 62, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 64, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 68, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 70, 46],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 74, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 76, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 80, 108],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 80, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 80, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 84, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 84, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 88, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 88, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 88, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 92, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 92, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 3, 96, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 30, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 30, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 31, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 31, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 32, 128, 128],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 32, 128, 128],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 32, 128, 32],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 32, 16, 16],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 32, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 32, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 33, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 33, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 34, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 34, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 35, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 35, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 36, 10, 8],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 12, 9],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 144, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 18, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 192, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 20, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 23, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 24, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 36, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 40, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 45, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 48, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 5, 4],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 5, 7],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 6, 5],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 72, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 36, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 36, 80, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 89, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 9, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 36, 96, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 37, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 38, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 384, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1, 39, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 100],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 4, 1024, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 1156, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 1296, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 1444, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 1600, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 1764, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 17],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 4, 1936, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 20, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 2116, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 2304, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 2500, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 2704, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 2916, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 2],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 4, 3136, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 3364, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 3600, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4, 4],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 4, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 40, 100],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 40, 12],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 40, 6],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 40, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 40, 8],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 4096, 32, 128],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 41, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 42, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 43, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 44, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 45, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 46, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 47, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 48, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 49, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 4],"float64"), list[1,0,], )
paddle.transpose(Tensor([1, 5, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 5, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 5, 8, 96],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 50, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 5000, 384],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([1, 50],"complex128"), list[1,0,], )
paddle.transpose(Tensor([1, 50],"float64"), list[1,0,], )
paddle.transpose(Tensor([1, 51, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 512, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1, 52, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 53, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 54, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 55, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 56, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 57, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 58, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 58, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 59, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 6, 1, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 6, 1500, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 6, 6],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 6, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 6, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 6, 8, 96],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 60, 40, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 60, 42, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 60, 44, 59],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 60, 44, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 60, 44, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 60, 46, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 60, 48, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 60, 50, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 60, 67, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 60, 70, 46],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 60, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 61, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 62, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 63, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 64, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 65, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 66, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 67, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 68, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 69, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 7, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 7, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 7, 8, 96],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 70, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 71, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 72, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 73, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 74, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 75, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 76, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 768, 1500],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([1, 77, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 78, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 79, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 1, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 8, 11, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 1100, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 128, 16],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 8, 128, 16],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 14, 12],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([1, 8, 1500, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([1, 8, 18, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 2, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([1, 8, 21, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 2116, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 22, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 2304, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 300, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 32, 8],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([1, 8, 32, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 324, 64],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 4, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([1, 8, 400, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 400, 64],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 484, 64],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 492, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 496, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 4],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([1, 8, 500, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 529, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 529, 48],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 8, 16],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 8, 96],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 8, 8],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([1, 8, 9, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([1, 80, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 81, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 82, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 83, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 84, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 85, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 86, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 87, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 88, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 89, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 9, 10, 8],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 12, 9],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 144, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 18, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 192, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 20, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 23, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 24, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 36, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 40, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 45, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 48, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 5, 4],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 5, 7],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 6, 5],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 72, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 9, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 9, 8, 96],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 9, 80, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 89, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 9, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 9, 96, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([1, 90, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 91, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 92, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 93, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 94, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 95, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 96, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 97, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 98, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([1, 99, 8, 8],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([10, 15, 10],"bool"), list[1,0,2,], )
paddle.transpose(Tensor([10, 15, 10],"float16"), list[1,0,2,], )
paddle.transpose(Tensor([10, 15, 10],"int64"), list[1,0,2,], )
paddle.transpose(Tensor([10, 20, 1],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([10, 4],"float64"), list[1,0,], )
paddle.transpose(Tensor([10, 4],"int64"), list[1,0,], )
paddle.transpose(Tensor([10, 7],"int32"), perm=list[1,0,], )
paddle.transpose(Tensor([100, 1000],"float32"), list[1,0,], )
paddle.transpose(Tensor([100, 12],"float64"), list[1,0,], )
paddle.transpose(Tensor([100, 2],"float64"), list[1,0,], )
paddle.transpose(Tensor([100, 300],"float32"), list[1,0,], )
paddle.transpose(Tensor([100, 40],"float64"), list[1,0,], )
paddle.transpose(Tensor([100, 4],"float64"), list[1,0,], )
paddle.transpose(Tensor([100, 6],"float64"), list[1,0,], )
paddle.transpose(Tensor([100, 8],"float64"), list[1,0,], )
paddle.transpose(Tensor([1000, 10],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([1000, 10],"float64"), perm=list[1,0,], )
paddle.transpose(Tensor([100],"float32"), list[0,], )
paddle.transpose(Tensor([1024, 512],"float16"), perm=list[1,0,], )
paddle.transpose(Tensor([11, 4, 4],"int64"), list[1,0,2,], )
paddle.transpose(Tensor([11, 4, 8],"int64"), list[1,0,2,], )
paddle.transpose(Tensor([11, 7],"int32"), perm=list[1,0,], )
paddle.transpose(Tensor([114, 4, 1, 64],"float16"), list[1,0,2,3,], )
paddle.transpose(Tensor([12, 12],"float64"), list[1,0,], )
paddle.transpose(Tensor([12, 24, 4, 4],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([12, 8, 8],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([128],"int64"), list[0,], )
paddle.transpose(Tensor([13, 21, 4, 8],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([13, 4, 21, 8],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([13, 4, 7, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([13, 4, 7, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([13, 4, 7, 8],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([13, 7, 2],"float16"), perm=list[2,0,1,], )
paddle.transpose(Tensor([13, 7, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([13, 7, 4, 24],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([13, 7, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([13, 7, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([13, 7, 4, 8],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([13, 7, 8, 4],"float32"), tuple(0,3,1,2,), )
paddle.transpose(Tensor([13, 8, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([14, 1, 1, 7],"int64"), perm=list[0,1,3,2,], )
paddle.transpose(Tensor([14, 7, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([14, 7, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([14, 7],"int32"), perm=list[1,0,], )
paddle.transpose(Tensor([14, 8],"int32"), perm=list[1,0,], )
paddle.transpose(Tensor([15, 10, 10],"bool"), list[1,0,2,], )
paddle.transpose(Tensor([15, 10, 10],"float16"), list[1,0,2,], )
paddle.transpose(Tensor([15, 10, 10],"int64"), list[1,0,2,], )
paddle.transpose(Tensor([16, 1024, 1024],"float16"), perm=list[1,0,2,], )
paddle.transpose(Tensor([16, 128, 32, 128],"float32"), list[0,1,3,2,], )
paddle.transpose(Tensor([16, 128, 32, 128],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([16, 16],"float64"), list[1,0,], )
paddle.transpose(Tensor([16, 2, 96],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([16, 32, 128, 128],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([16, 32, 64, 128],"float32"), list[2,0,1,3,], )
paddle.transpose(Tensor([16, 32, 64],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([16, 8, 400, 32],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([16, 8, 400, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([16, 8, 476, 32],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([16, 8, 476, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([16, 96, 2],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([17, 16],"float64"), list[1,0,], )
paddle.transpose(Tensor([17, 17],"float64"), list[1,0,], )
paddle.transpose(Tensor([17, 2],"float64"), list[1,0,], )
paddle.transpose(Tensor([17, 4],"float64"), list[1,0,], )
paddle.transpose(Tensor([18, 18],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([192, 64],"float16"), perm=list[1,0,], )
paddle.transpose(Tensor([2, 1, 16, 256],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 1, 3, 4, 2, 1, 2],"bool"), list[6,0,1,4,3,5,2,], )
paddle.transpose(Tensor([2, 1, 32],"float64"), list[1,0,2,], )
paddle.transpose(Tensor([2, 1, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 1, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 1, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 10, 16, 256],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 10, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 100, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 101, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 102, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 1024, 1024],"float16"), perm=list[1,0,2,], )
paddle.transpose(Tensor([2, 103, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 104, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 105, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 106, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 107, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 108, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 109, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 10],"complex128"), list[1,0,], )
paddle.transpose(Tensor([2, 10],"float64"), list[1,0,], )
paddle.transpose(Tensor([2, 110, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 111, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 112, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 113, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 114, 1, 64],"bfloat16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 114, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 115, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 116, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 117, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 118, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 119, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 12, 108, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 112, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 120, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 124, 92],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 128, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 128, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 128, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 128, 96],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 136, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 14, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 14, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 15, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 152, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 16, 12],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 16, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 16, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 16, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 17, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 19, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 216, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 224, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 240, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 248, 184],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 256, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 256, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 256, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 256, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 27, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 272, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 28, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 30, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 304, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 31, 23],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 32, 24],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 32, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 32, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 32, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 34, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 38, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 54, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 56, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 60, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 62, 46],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 64, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 64, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 64, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 64, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 68, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 12, 76, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 120, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 121, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 122, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 123, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 124, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 125, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 126, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 127, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 128, 4, 8, 96],"float16"), perm=list[2,0,1,3,4,], )
paddle.transpose(Tensor([2, 128, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 128],"int64"), list[1,0,], )
paddle.transpose(Tensor([2, 129, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 13, 4, 7, 14],"float32"), tuple(1,0,2,3,4,), )
paddle.transpose(Tensor([2, 13, 4, 7, 8],"float32"), tuple(1,0,3,2,4,), )
paddle.transpose(Tensor([2, 13, 7, 8, 4],"float32"), tuple(0,1,4,2,3,), )
paddle.transpose(Tensor([2, 130, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 131, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 132, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 133, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 134, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 135, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 136, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 137, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 138, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 139, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 140, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 141, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 142, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 143, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 144, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 145, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 146, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 147, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 148, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 149, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 15, 54, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 54, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 56, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 59, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 59, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 59, 65],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 59, 81],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 60, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 62, 46],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 62, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 63, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 64, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 64, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 66, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 67, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 67, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 15, 75, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 150, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 151, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 152, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 153, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 154, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 155, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 156, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 157, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 158, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 159, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 16, 2, 8],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(Tensor([2, 1],"int64"), list[1,0,], )
paddle.transpose(Tensor([2, 2, 1, 1, 32],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 2, 1, 2, 8],"float32"), perm=list[2,1,3,0,4,], )
paddle.transpose(Tensor([2, 2, 1024, 1024],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([2, 2, 1024, 128],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 2, 1024, 64],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 2, 112, 28, 28],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 116, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 12, 28, 28],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 16, 28, 28],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 176, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 232, 7, 7],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 24, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 24, 28, 28],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 244, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 32, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 352, 7, 7],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 48, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 48, 7, 7],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 488, 7, 7],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 512, 1024],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([2, 2, 512, 512],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([2, 2, 58, 28, 28],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 64, 7, 7],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 88, 28, 28],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 96, 7, 7],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(Tensor([2, 2, 96],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([2, 202, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 203, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 204, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 205, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 206, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 207, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 208, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 209, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 210, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 211, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 212, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 213, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 214, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 215, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 216, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 217, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 218, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 219, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 220, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 221, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 222, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 223, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 224, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 225, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 226, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 227, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 228, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 229, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 230, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 231, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 232, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 233, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 234, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 235, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 236, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 237, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 238, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 239, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 240, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 241, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 242, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 243, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 244, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 245, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 246, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 247, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 248, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 249, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 250, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 251, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 252, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 253, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 254, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 255, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 256, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 256],"int64"), list[1,0,], )
paddle.transpose(Tensor([2, 257, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 258, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 259, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 260, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 261, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 262, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 263, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 264, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 265, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 266, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 267, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 268, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 269, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 270, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 271, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 272, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 273, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 274, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 275, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 276, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 277, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 278, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 279, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 280, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 281, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 282, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 283, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 284, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 285, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 286, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 287, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 288, 1, 64],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 2],"float32"), list[1,0,], )
paddle.transpose(Tensor([2, 2],"float64"), list[1,0,], )
paddle.transpose(Tensor([2, 3, 100, 12],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 100, 2],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 100, 40],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 100, 4],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 100, 6],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 100, 8],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 108, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 112, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 12, 12],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 120, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 124, 92],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 128, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 128, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 128, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 128, 96],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 136, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 14, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 14, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 15, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 152, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 16, 12],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 16, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 16, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 16, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 17, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 17, 2],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 17, 4],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 19, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 2, 2],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 2, 5, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([2, 3, 2, 5, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([2, 3, 216, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 224, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 240, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 248, 184],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 256, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 256, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 256, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 256, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 27, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 272, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 28, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 3, 3],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([2, 3, 30, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 304, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 31, 23],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 32, 128],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 3, 32, 24],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 32, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 32, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 32, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 34, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 38, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 4, 100],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 4, 17],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 4, 2, 3, 4, 2, 3, 4],"float32"), list[2,3,4,5,6,7,8,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 2],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 4, 4],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 4, 5, 6, 1],"float32"), list[4,2,3,1,0,5,], )
paddle.transpose(Tensor([2, 3, 4, 5, 6],"float32"), list[4,2,3,1,0,], )
paddle.transpose(Tensor([2, 3, 4, 5],"complex128"), perm=list[3,2,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 5],"complex64"), perm=list[3,2,0,1,], )
paddle.transpose(Tensor([2, 3, 4, 5],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 3, 40, 100],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 40, 12],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 40, 6],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 40, 8],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 4],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([2, 3, 4],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([2, 3, 4],"float32"), perm=tuple(2,1,0,), )
paddle.transpose(Tensor([2, 3, 5, 2, 4],"float16"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([2, 3, 5, 2, 4],"float32"), perm=list[0,1,3,2,4,], )
paddle.transpose(Tensor([2, 3, 54, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 56, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 6, 6],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 3, 60, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 62, 46],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 64, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 64, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 64, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 64, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 68, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 76, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 3, 8, 8],"float64"), list[0,1,3,2,], )
paddle.transpose(Tensor([2, 302, 1, 64],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 302, 8, 96],"bfloat16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 304, 1, 64],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 346, 1, 64],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 100, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 100, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 121, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 121, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 144, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 144, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 169, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 169, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 196, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 196, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 225, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 225, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 256, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 256, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 289, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 289, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 324, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 324, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 361, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 361, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 400, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 400, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 441, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 441, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 484, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 484, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 529, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 529, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 576, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 576, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 4, 6, 6, 6],"float64"), list[0,2,3,4,1,], )
paddle.transpose(Tensor([2, 4, 6, 6],"float64"), list[0,2,3,1,], )
paddle.transpose(Tensor([2, 4, 6],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([2, 448],"int64"), list[1,0,], )
paddle.transpose(Tensor([2, 480],"int64"), list[1,0,], )
paddle.transpose(Tensor([2, 4],"int64"), list[1,0,], )
paddle.transpose(Tensor([2, 5, 16, 256],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 5, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 5, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 5],"float32"), list[0,1,], )
paddle.transpose(Tensor([2, 5],"float32"), list[1,0,], )
paddle.transpose(Tensor([2, 6, 16, 256],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 6, 4],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([2, 6, 6, 4],"float64"), list[0,3,1,2,], )
paddle.transpose(Tensor([2, 6, 6, 6, 4],"float64"), list[0,4,1,2,3,], )
paddle.transpose(Tensor([2, 6, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 60, 54, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 54, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 56, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 59, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 59, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 59, 65],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 59, 81],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 60, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 62, 46],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 62, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 63, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 64, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 64, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 66, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 67, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 67, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 60, 75, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([2, 7, 13, 32],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([2, 7, 16, 256],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 7, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([2, 7, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 74, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 75, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 76, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 77, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 78, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 79, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 8, 1, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([2, 8, 1100, 32],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 8, 1100, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 8, 2, 16],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([2, 8, 225, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 8, 289, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 8, 300, 32],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 8, 300, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 8, 4, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([2, 8, 400, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 8, 400, 48],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 8, 400, 64],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 8, 492, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 8, 498, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 8, 500, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([2, 80, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 81, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 82, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 83, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 84, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 85, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 86, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 87, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 88, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 89, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 90, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 91, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 92, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 93, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 94, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 95, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 96, 2],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([2, 96, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 97, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 98, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([2, 99, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([20, 10, 1],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([20, 128, 152, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([20, 128, 152, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([20, 2, 152, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([20, 2, 152, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([20, 2],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([20, 4, 152, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([20, 4, 152, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([20, 40],"float32"), list[1,0,], )
paddle.transpose(Tensor([20, 40],"float64"), list[0,1,], )
paddle.transpose(Tensor([20, 4],"int64"), list[1,0,], )
paddle.transpose(Tensor([21, 21],"float64"), list[1,0,], )
paddle.transpose(Tensor([21, 8, 4],"int64"), list[1,0,2,], )
paddle.transpose(Tensor([216, 248, 1, 1, 2, 7],"float32"), list[2,1,0,3,4,5,], )
paddle.transpose(Tensor([220500, 1],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([2304, 768],"float16"), perm=list[1,0,], )
paddle.transpose(Tensor([24, 256, 1],"float32"), list[0,2,1,], )
paddle.transpose(Tensor([256, 3, 224, 224],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([3, 100, 120],"float64"), list[1,2,0,], )
paddle.transpose(Tensor([3, 100, 12],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 100, 2],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 100, 40],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 100, 4],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 100, 6],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 100, 8],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 12, 12],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 17, 2],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 17, 4],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 2, 2],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 2, 3, 3],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([3, 2, 4],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([3, 2],"float32"), list[1,0,], )
paddle.transpose(Tensor([3, 3, 40, 40],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([3, 3, 5, 3],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([3, 4, 100],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 4, 10],"float32"), list[0,2,1,], )
paddle.transpose(Tensor([3, 4, 17],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 4, 2],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 4, 4],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 40, 100],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 40, 12],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 40, 6],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 40, 8],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 5, 3, 3],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([3, 6, 6],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 8, 8],"float64"), list[0,2,1,], )
paddle.transpose(Tensor([3, 832],"int32"), list[1,0,], )
paddle.transpose(Tensor([30, 4],"float64"), list[1,0,], )
paddle.transpose(Tensor([30, 4],"int64"), list[1,0,], )
paddle.transpose(Tensor([300, 100],"float32"), list[1,0,], )
paddle.transpose(Tensor([3000, 80],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([32, 20],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([32, 256, 1],"float32"), list[0,2,1,], )
paddle.transpose(Tensor([32, 512, 2],"float16"), perm=list[2,0,1,], )
paddle.transpose(Tensor([32, 512, 2],"float32"), perm=list[2,0,1,], )
paddle.transpose(Tensor([32, 8, 4, 64],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([37574, 1],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([4, 1, 10, 7],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 10, 9],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 144, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 144, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 144, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 144, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 16, 256],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 1, 160, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 160, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 18, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 18, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 18, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 18, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 20, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 20, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 36, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 36, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 36, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 36, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 1, 40, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 40, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 72, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 72, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 72, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 72, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 1, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 1, 80, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 80, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 9, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 9, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 9, 7],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1, 9, 9],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 10, 60],"int32"), list[1,0,2,], )
paddle.transpose(Tensor([4, 10, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 100],"float64"), list[1,0,], )
paddle.transpose(Tensor([4, 11, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 114, 64],"float16"), list[1,0,2,], )
paddle.transpose(Tensor([4, 115, 1, 64],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 12, 100, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 100, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 104, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 104, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 104, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 104, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 104, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 104, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 104, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 104, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 104, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 108, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 11, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 11, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 11, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 11, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 11, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 11, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 11, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 11, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 11, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 112, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 116, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 116, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 116, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 116, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 116, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 116, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 116, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 116, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 12, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 12, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 12, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 12, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 12, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 12, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 12, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 12, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 12, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 12, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 12, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 12, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 12, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 104],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 104],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 120, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 108],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 92],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 96],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 124, 96],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 108],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 128, 96],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 13, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 13, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 13, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 13, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 13, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 13, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 13, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 13, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 13, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 13, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 13, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 13, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 13, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 13, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 104],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 108],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 108],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 96],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 132, 96],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 108],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 108],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 116],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 116],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 136, 96],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 14],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 14, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 96],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 140, 96],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 108],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 108],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 116],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 144, 96],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 148, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 13],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 15, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 100],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 152, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 156, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 156, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 156, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 156, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 156, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 156, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 156, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 12],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 12],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 14],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 160, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 160, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 160, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 160, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 160, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 160, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 164, 100],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 164, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 164, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 164, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 164, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 164, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 164, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 168, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 16],"float64"), list[1,0,2,], )
paddle.transpose(Tensor([4, 12, 17, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 12],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 12],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 13],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 14],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 17, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 176, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 176, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 176, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 176, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 176, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 176, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 176, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 176, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 176, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 176, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 12],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 12],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 14],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 18, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 184, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 13],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 14],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 19, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 192, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 20, 14],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 20, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 20, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 20, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 20, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 20, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 20, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 20, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 20, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 200, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 208, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 208, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 208, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 208, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 208, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 208, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 208, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 208, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 208, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 21, 13],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 21, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 21, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 21, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 21, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 21, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 21, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 21, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 21, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 21, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 21, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 21, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 21, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 216, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 22, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 22, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 22, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 22, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 22, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 22, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 22, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 22, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 22, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 22, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 224, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 23, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 232, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 232, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 232, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 232, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 232, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 232, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 232, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 232, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 24, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 208],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 208],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 240, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 184],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 192],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 216],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 248, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 25, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 216],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 256, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 26, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 26, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 26, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 26, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 26, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 26, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 26, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 26, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 26, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 192],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 208],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 216],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 216],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 264, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 27, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 192],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 216],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 216],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 232],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 232],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 272, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 28, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 192],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 280, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 216],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 216],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 232],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 288, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 29, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 29, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 29, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 29, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 29, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 29, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 29, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 29, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 296, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 26],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 26],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 30, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 200],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 304, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 23],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 24],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 24],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 27],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 31, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 312, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 312, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 312, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 312, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 312, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 312, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 312, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 24],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 27],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 32, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 320, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 320, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 320, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 320, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 320, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 320, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 328, 200],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 328, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 328, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 328, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 328, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 328, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 328, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 24],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 24],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 26],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 27],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 27],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 33, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 336, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 336, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 336, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 336, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 336, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 336, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 336, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 336, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 336, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 336, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 336, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 336, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 336, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 336, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 24],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 27],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 27],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 29],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 29],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 34, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 24],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 24],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 35, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 24],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 27],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 27],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 29],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 36, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 37, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 25],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 38, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 39, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 39, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 39, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 39, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 39, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 39, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 39, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 40, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 40, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 40, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 40, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 40, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 40, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 40, 40],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 41, 25],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 41, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 41, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 41, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 41, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 41, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 41, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 42, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 44, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 44, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 44, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 44, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 44, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 44, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 44, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 44, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 44, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 44, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 46, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 48, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 50, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 52, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 52, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 52, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 52, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 52, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 52, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 52, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 52, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 52, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 54, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 56, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 58, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 58, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 58, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 58, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 58, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 58, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 58, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 58, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 52],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 52],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 60, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 46],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 62, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 64, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 52],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 66, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 58],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 58],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 68, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 70, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 58],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 72, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 74, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 50],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 76, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 78, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 78, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 78, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 78, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 78, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 78, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 78, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 12, 80, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 80, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 80, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 80, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 80, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 80, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 82, 50],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 82, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 82, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 82, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 82, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 82, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 82, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 84, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 88, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 88, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 88, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 88, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 88, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 88, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 88, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 88, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 88, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 88, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 8],"float64"), list[1,0,2,], )
paddle.transpose(Tensor([4, 12, 92, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 92, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 12, 96, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 127, 1, 64],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 12],"float64"), list[1,0,], )
paddle.transpose(Tensor([4, 13, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 14, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 147, 1, 64],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 15, 42, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 42, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 42, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 42, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 44, 59],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 44, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 44, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 44, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 44, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 46, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 47, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 47, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 65],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 48, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 49, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 59],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 61],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 71],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 71],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 79],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 79],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 81],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 81],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 50, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 51, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 51, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 51, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 52, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 52, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 53, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 53, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 53, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 54, 61],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 54, 61],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 54, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 54, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 54, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 54, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 54, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 54, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 54, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 54, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 55, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 55, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 55, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 65],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 79],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 79],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 81],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 56, 81],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 57, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 57, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 57, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 58, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 58, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 59, 51],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 59, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 59, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 59, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 59, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 59, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 59, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 59, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 59, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 59, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 59, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 59, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 59, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 60, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 60, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 60, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 60, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 60, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 60, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 60, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 60, 77],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 60, 77],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 60, 79],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 60, 79],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 61, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 61, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 61, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 61, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 61, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 61, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 61, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 61, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 61, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 61, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 61, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 81],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 62, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 63, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 63, 59],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 63, 59],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 63, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 63, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 63, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 63, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 63, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 63, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 63, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 63, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 63, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 63, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 59],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 59],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 77],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 79],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 79],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 83],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 83],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 64, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 77],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 77],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 79],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 79],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 65, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 65],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 65],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 66, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 57],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 61],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 83],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 67, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 68, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 68, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 68, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 68, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 59],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 69, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 70, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 70, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 70, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 70, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 70, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 70, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 70, 71],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 71, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 71, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 71, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 71, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 71, 71],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 71, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 59],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 59],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 72, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 73, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 73, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 73, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 73, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 73, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 73, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 73, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 73, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 73, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 73, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 73, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 73, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 74, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 74, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 74, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 50],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 61],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 61],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 75, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 50],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 79],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 83],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 83],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 76, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 77, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 77, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 77, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 77, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 79, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 79, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 15, 80, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 80, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 82, 61],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 82, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 82, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 84, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 84, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 84, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 84, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 84, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 15, 84, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 150, 512, 512],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 152, 1, 64],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 17],"float64"), list[1,0,], )
paddle.transpose(Tensor([4, 19, 1024, 1024],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 19, 512, 1024],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 1960],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([4, 2, 128, 128],"float16"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([4, 2, 128, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 2, 128, 128],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([4, 2, 256, 256],"float16"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([4, 2, 256, 256],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([4, 2, 512, 512],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 2, 60],"int32"), list[1,0,2,], )
paddle.transpose(Tensor([4, 20, 60],"int32"), list[1,0,2,], )
paddle.transpose(Tensor([4, 23, 16],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([4, 24, 40, 40],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 256, 1296],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([4, 256, 1296],"float32"), list[0,2,1,], )
paddle.transpose(Tensor([4, 256, 144],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([4, 256, 144],"float32"), list[0,2,1,], )
paddle.transpose(Tensor([4, 256, 1600],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([4, 256, 1600],"float32"), list[0,2,1,], )
paddle.transpose(Tensor([4, 256, 1],"float32"), list[0,2,1,], )
paddle.transpose(Tensor([4, 256, 256],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([4, 256, 256],"float32"), list[0,2,1,], )
paddle.transpose(Tensor([4, 256, 576],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([4, 256, 576],"float32"), list[0,2,1,], )
paddle.transpose(Tensor([4, 256, 7332],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([4, 256, 81],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([4, 2],"float64"), list[1,0,], )
paddle.transpose(Tensor([4, 3, 100, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 100, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 104, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 104, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 104, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 104, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 104, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 104, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 104, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 104, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 104, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 108, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 11, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 11, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 11, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 11, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 11, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 11, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 11, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 11, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 11, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 112, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 116, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 116, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 116, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 116, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 116, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 116, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 116, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 116, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 12, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 12, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 12, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 12, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 12, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 12, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 12, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 12, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 12, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 12, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 12, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 12, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 12, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 104],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 104],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 120, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 108],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 92],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 96],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 124, 96],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 108],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 128, 96],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 13, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 13, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 13, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 13, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 13, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 13, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 13, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 13, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 13, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 13, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 13, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 13, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 13, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 13, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 104],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 108],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 108],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 96],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 132, 96],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 108],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 108],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 116],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 116],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 136, 96],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 14],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 14, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 96],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 140, 96],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 108],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 108],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 116],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 144, 96],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 148, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 13],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 15, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 100],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 100],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 152, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 156, 112],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 156, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 156, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 156, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 156, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 156, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 156, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 12],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 12],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 14],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 16, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 160, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 160, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 160, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 160, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 160, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 160, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 164, 100],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 164, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 164, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 164, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 164, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 164, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 164, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 168, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 12],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 12],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 13],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 14],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 17, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 176, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 176, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 176, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 176, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 176, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 176, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 176, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 176, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 176, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 176, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 12],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 12],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 14],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 18, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 184, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 13],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 13],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 14],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 19, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 192, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 20, 14],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 20, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 20, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 20, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 20, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 20, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 20, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 20, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 20, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 200, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 208, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 208, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 208, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 208, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 208, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 208, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 208, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 208, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 208, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 21, 13],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 21, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 21, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 21, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 21, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 21, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 21, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 21, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 21, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 21, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 21, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 21, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 21, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 216, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 22, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 22, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 22, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 22, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 22, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 22, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 22, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 22, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 22, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 22, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 224, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 23, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 232, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 232, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 232, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 232, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 232, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 232, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 232, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 232, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 24, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 208],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 208],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 240, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 184],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 192],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 216],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 248, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 25, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 216],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 256, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 26, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 26, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 26, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 26, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 26, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 26, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 26, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 26, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 26, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 192],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 208],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 216],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 216],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 264, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 27, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 192],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 216],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 216],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 232],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 232],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 272, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 28, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 192],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 280, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 192],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 216],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 216],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 232],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 288, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 29, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 29, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 29, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 29, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 29, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 29, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 29, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 29, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 296, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 26],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 26],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 30, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 200],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 200],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 304, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 23],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 24],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 24],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 27],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 31, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 312, 224],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 312, 224],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 312, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 312, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 312, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 312, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 312, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 24],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 27],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 32, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 320, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 320, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 320, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 320, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 320, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 320, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 328, 200],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 328, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 328, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 328, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 328, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 328, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 328, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 24],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 24],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 26],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 27],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 27],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 33, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 336, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 336, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 336, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 336, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 336, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 336, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 336, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 336, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 336, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 336, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 336, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 336, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 336, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 336, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 24],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 27],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 27],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 29],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 29],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 34, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 24],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 24],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 35, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 24],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 27],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 27],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 29],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 36, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 37, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 25],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 25],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 38, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 39, 28],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 39, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 39, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 39, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 39, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 39, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 39, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 3, 40, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 40, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 40, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 40, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 40, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 40, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 41, 25],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 41, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 41, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 41, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 41, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 41, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 41, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 42, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 44, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 44, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 44, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 44, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 44, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 44, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 44, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 44, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 44, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 44, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 46, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 48, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 50, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 52, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 52, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 52, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 52, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 52, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 52, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 52, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 52, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 52, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 54, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 56, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 58, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 58, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 58, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 58, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 58, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 58, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 58, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 58, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 52],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 52],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 60, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 46],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 62, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 64, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 52],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 66, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 58],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 58],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 68, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 70, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 58],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 72, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 74, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 50],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 76, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 78, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 78, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 78, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 78, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 78, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 78, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 78, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 80, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 80, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 80, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 80, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 80, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 80, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 82, 50],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 82, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 82, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 82, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 82, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 82, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 82, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 84, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 88, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 88, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 88, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 88, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 88, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 88, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 88, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 88, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 88, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 88, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 92, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 3, 96, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 30, 60],"int32"), list[1,0,2,], )
paddle.transpose(Tensor([4, 304, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 346, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 377, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 396, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 4, 10, 7],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 10, 9],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 144, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 144, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 144, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 144, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 160, 112],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 160, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 18, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 18, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 18, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 18, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 20, 14],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 20, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 36, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 36, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 36, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 36, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 4, 40, 28],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 40, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 60],"int32"), list[1,0,2,], )
paddle.transpose(Tensor([4, 4, 72, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 72, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 72, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 72, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 80, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 80, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 80, 80],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 9, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 9, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 9, 7],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4, 9, 9],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 4],"float32"), list[1,0,], )
paddle.transpose(Tensor([4, 4],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([4, 4],"float64"), list[1,0,], )
paddle.transpose(Tensor([4, 4],"int64"), list[1,0,], )
paddle.transpose(Tensor([4, 5, 16, 256],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 5, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 5, 4],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([4, 5, 6, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([4, 5, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 5, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 512, 7332],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([4, 6, 16, 256],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 6, 60],"int32"), list[1,0,2,], )
paddle.transpose(Tensor([4, 6, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 6, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 60, 42, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 42, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 42, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 42, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 44, 59],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 44, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 44, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 44, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 44, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 46, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 47, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 47, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 65],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 48, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 49, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 59],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 61],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 71],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 71],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 79],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 79],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 81],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 81],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 50, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 51, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 51, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 51, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 52, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 52, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 53, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 53, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 53, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 54, 61],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 54, 61],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 54, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 54, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 54, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 54, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 54, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 54, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 54, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 54, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 55, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 55, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 55, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 65],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 79],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 79],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 81],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 56, 81],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 57, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 57, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 57, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 58, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 58, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 59, 51],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 59, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 59, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 59, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 59, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 59, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 59, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 59, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 59, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 59, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 59, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 59, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 59, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 60, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 60, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 60, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 60, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 60, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 60, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 60, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 60, 77],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 60, 77],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 60, 79],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 60, 79],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 61, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 61, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 61, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 61, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 61, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 61, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 61, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 61, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 61, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 61, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 61, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 69],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 81],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 62, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 63, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 63, 59],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 63, 59],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 63, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 63, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 63, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 63, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 63, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 63, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 63, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 63, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 63, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 63, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 59],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 59],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 77],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 79],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 79],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 83],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 83],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 64, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 65, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 65, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 65, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 65, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 65, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 65, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 65, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 65, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 65, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 65, 77],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 65, 77],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 65, 79],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 65, 79],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 65, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 65],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 65],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 66, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 57],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 61],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 83],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 67, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 68, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 68, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 68, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 68, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 48],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 48],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 59],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 69, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 70, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 70, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 70, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 70, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 70, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 70, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 70, 71],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 71, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 71, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 71, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 71, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 71, 71],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 71, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 54],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 54],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 56],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 59],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 59],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 72, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 73, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 73, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 73, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 73, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 73, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 73, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 73, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 73, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 73, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 73, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 73, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 73, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 74, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 74, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 74, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 50],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 50],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 61],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 61],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 73],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 73],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 75],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 75],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 75, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 76, 50],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 76, 63],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 76, 63],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 76, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 76, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 76, 67],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 76, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 76, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 76, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 76, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 76, 79],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 76, 83],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 76, 83],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 76, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 77, 56],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 77, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 77, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 77, 69],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 79, 67],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 79, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 80, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 80, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 82, 61],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 82, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 82, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 84, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 84, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 84, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 84, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 84, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 60, 84, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([4, 7, 16, 256],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 7, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 7, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 7332, 256],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([4, 7],"int32"), perm=list[1,0,], )
paddle.transpose(Tensor([4, 8, 100, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([4, 8, 256, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([4, 8, 300, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([4, 8, 400, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([4, 8, 400, 64],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([4, 8, 500, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([4, 8, 725, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([4, 8, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([4, 8, 80, 80],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 8, 8],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([4, 80, 12, 12],"float16"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 80, 12, 12],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 80, 16, 16],"float16"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 80, 16, 16],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 80, 24, 24],"float16"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 80, 24, 24],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 80, 36, 36],"float16"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 80, 36, 36],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 80, 40, 40],"float16"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 80, 40, 40],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([4, 81, 512],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([4, 9, 8, 96],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([40, 100],"float64"), list[1,0,], )
paddle.transpose(Tensor([40, 12],"float64"), list[1,0,], )
paddle.transpose(Tensor([40, 20],"float32"), list[1,0,], )
paddle.transpose(Tensor([40, 21],"float64"), list[1,0,], )
paddle.transpose(Tensor([40, 24, 49],"float32"), list[0,2,1,], )
paddle.transpose(Tensor([40, 6],"float64"), list[1,0,], )
paddle.transpose(Tensor([40, 8],"float64"), list[1,0,], )
paddle.transpose(Tensor([41177, 1],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([43331, 1],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([43666, 1],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([46292, 1],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([46348, 1],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([49112, 1],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([4],"int64"), list[0,], )
paddle.transpose(Tensor([5, 1, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 1, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 1, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 1, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 1, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 10, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 10, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 10, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 10, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 10, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 10, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 10, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 10, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 10, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 10, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 10, 8, 96],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([5, 11, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 11, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 11, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 11, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 11, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 11, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 11, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 11, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 11, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 11, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 12, 1, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 12, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 12, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 12, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 12, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 12, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 12, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 12, 3, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 12, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 12, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 12, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 12, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 13, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 13, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 13, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 13, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 13, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 13, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 13, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 13, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 13, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 13, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 14, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 14, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 14, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 14, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 14, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 14, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 14, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 14, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 14, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 14, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 15, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 15, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 15, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 15, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 15, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 15, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 15, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 15, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 15, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 15, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 1500, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 1500, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 1500, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 1500, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 1500, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 1500, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 1500, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 1500, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 1500, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 1500, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 16, 1, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 16, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 16, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 16, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 16, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 16, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 16, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 16, 3, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 16, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 16, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 16, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 16, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 17, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 17, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 17, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 17, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 17, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 17, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 17, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 17, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 17, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 17, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 18, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 18, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 18, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 18, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 18, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 18, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 18, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 18, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 18, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 18, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 19, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 19, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 19, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 19, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 19, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 19, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 19, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 19, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 19, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 19, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 20, 1, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 20, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 20, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 20, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 20, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 20, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 20, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 20, 3, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 20, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 20, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 20, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 20, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 21, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 21, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 21, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 21, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 21, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 21, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 21, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 21, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 21, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 21, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 22, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 22, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 22, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 22, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 22, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 22, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 22, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 22, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 22, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 22, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 23, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 23, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 23, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 23, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 23, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 23, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 23, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 23, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 23, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 23, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 24, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 24, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 24, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 24, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 24, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 24, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 25, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 25, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 3, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 3, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 3, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 3, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 3, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 3, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 3, 3, 3],"float32"), list[1,0,2,3,], )
paddle.transpose(Tensor([5, 3, 3, 3],"float32"), list[2,1,0,3,], )
paddle.transpose(Tensor([5, 3, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 3, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 3, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 3, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 4, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 4, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 4, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 4, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 4, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 4, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 4, 4],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([5, 4, 6, 6, 6],"float32"), list[1,0,2,3,4,], )
paddle.transpose(Tensor([5, 4, 6, 6, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([5, 4, 6, 6, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([5, 4, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 4, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 4, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 4, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 4],"float64"), list[1,0,], )
paddle.transpose(Tensor([5, 5, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 5, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 5, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 5, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 5, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 5, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 5, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 5, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 5, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 5, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 5],"float64"), list[1,0,], )
paddle.transpose(Tensor([5, 6, 1, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 6, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 6, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 6, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 6, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 6, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 6, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 6, 3, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 6, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 6, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 6, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 6, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 7, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 7, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 7, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 7, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 7, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 7, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 7, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 7, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 7, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 7, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 8, 1, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 8, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 8, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 8, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 8, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 8, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 8, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 8, 3, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 8, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 8, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 8, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 8, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 9, 12, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 9, 12, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 9, 16, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 9, 16, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 9, 20, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 9, 20, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 9, 6, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 9, 6, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([5, 9, 8, 64],"float32"), tuple(0,2,1,3,), )
paddle.transpose(Tensor([5, 9, 8, 64],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([51865, 1024],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([51865, 1280],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([51865, 384],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([51865, 512],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([51865, 768],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([52, 4, 7, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([52, 4, 7, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([52, 7, 4, 24],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([52, 7, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([52, 7, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([52, 7, 8],"float32"), tuple(0,2,1,), )
paddle.transpose(Tensor([56, 7],"int32"), perm=list[1,0,], )
paddle.transpose(Tensor([58, 2, 140, 1],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([6, 1, 16, 256],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([6, 1, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([6, 1, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([6, 2, 3],"float32"), list[0,1,2,], )
paddle.transpose(Tensor([6, 2, 3],"float32"), list[0,2,1,], )
paddle.transpose(Tensor([6, 2, 3],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([6, 2, 3],"float32"), list[1,2,0,], )
paddle.transpose(Tensor([6, 2, 3],"float32"), list[2,0,1,], )
paddle.transpose(Tensor([6, 2, 3],"float32"), list[2,1,0,], )
paddle.transpose(Tensor([6, 22, 100, 100],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([6, 22, 25, 25],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([6, 22, 50, 50],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([6, 25, 100, 100],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([6, 25, 25, 25],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([6, 25, 50, 50],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([6, 3, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([6, 4, 100, 100],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([6, 4, 25, 25],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([6, 4, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([6, 4, 4],"int64"), list[1,0,2,], )
paddle.transpose(Tensor([6, 4, 5, 6, 6],"float32"), list[2,1,0,3,4,], )
paddle.transpose(Tensor([6, 4, 50, 50],"float32"), tuple(0,2,3,1,), )
paddle.transpose(Tensor([6, 4, 6, 5, 6],"float32"), list[3,1,2,0,4,], )
paddle.transpose(Tensor([6, 4],"float64"), list[1,0,], )
paddle.transpose(Tensor([6, 4],"int64"), list[1,0,], )
paddle.transpose(Tensor([6, 5, 16, 256],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([6, 5, 4, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([6, 5, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([6, 6, 16, 256],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([6, 6, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([6, 6],"float64"), list[1,0,], )
paddle.transpose(Tensor([6, 7, 16, 256],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([6, 7, 8, 8],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([62558, 1],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([64, 16, 32, 128],"float32"), list[0,2,3,1,], )
paddle.transpose(Tensor([64, 16, 32, 128],"float32"), list[3,1,0,2,], )
paddle.transpose(Tensor([64, 256, 1],"float16"), list[0,2,1,], )
paddle.transpose(Tensor([64, 26, 1, 40, 1],"float16"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 26, 1, 40, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([64, 26, 512, 1, 40],"float16"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 26, 512, 1, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([64, 512, 40],"float16"), perm=list[0,2,1,], )
paddle.transpose(Tensor([64, 512, 40],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([7, 10, 32],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([7, 11, 32],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([7, 14, 32],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([7, 4, 32],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([7, 56, 32],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([7, 7, 14, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([7, 7, 32],"float32"), perm=list[1,0,2,], )
paddle.transpose(Tensor([7, 7, 56, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([7, 7],"int32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 1, 10, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 10, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 10, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 10, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 10, 9],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 10, 9],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 11, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 11, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 11, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 11, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 11, 9],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 11, 9],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 112, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 112, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 112, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 112, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 128, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 128, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 128, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 128, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 14, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 14, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 14, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 14, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 144, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 144, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 144, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 144, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 144, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 16, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 16, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 16, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 16, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 160, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 160, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 160, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 160, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 160, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 160, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 176, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 176, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 176, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 176, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 176, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 176, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 18, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 18, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 18, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 18, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 18, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 2, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 1, 20, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 20, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 20, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 20, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 20, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 20, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 22, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 22, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 22, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 22, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 22, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 22, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 28, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 28, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 28, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 28, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 32, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 32, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 32, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 32, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 36, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 36, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 36, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 36, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 36, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 4, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 1, 40, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 40, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 40, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 40, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 40, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 40, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 44, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 44, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 44, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 44, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 44, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 44, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 4],"float32"), list[1,0,2,], )
paddle.transpose(Tensor([8, 1, 56, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 56, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 56, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 56, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 64, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 64, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 64, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 64, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 7, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 7, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 7, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 7, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 72, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 72, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 72, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 72, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 72, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 8, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 8, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 8, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 8, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 80, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 80, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 80, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 80, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 80, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 80, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 88, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 88, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 88, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 88, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 88, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 88, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 9, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 9, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 9, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 9, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1, 9, 9],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 1024, 49],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([8, 12, 100, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 100, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 100, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 100, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 100, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 100, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 100, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 100, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 100, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 100, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 100, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 100, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 100, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 100, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 100, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 104, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 104, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 104, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 104, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 108, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 108, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 108, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 108, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 108, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 108, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 108, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 108, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 112, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 112, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 112, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 112, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 112, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 112, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 112, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 112, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 112, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 112, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 112, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 112, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 116, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 116, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 12, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 12, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 12, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 12, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 12, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 12, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 120, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 124, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 128, 64],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([8, 12, 13, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 13, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 13, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 13, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 13, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 13, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 13, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 13, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 13, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 132, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 132, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 132, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 132, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 132, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 132, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 132, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 132, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 132, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 132, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 132, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 132, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 136, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 14, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 14, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 14, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 14, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 14, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 14, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 14, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 14, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 14, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 14, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 14, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 140, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 144, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 148, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 15, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 15, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 15, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 15, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 15, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 15, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 15, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 15, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 15, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 15, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 15, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 15, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 152, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 156, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 156, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 156, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 156, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 156, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 16, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 16, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 16, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 16, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 16, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 16, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 16, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 16, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 16, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 16, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 16, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 16, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 160, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 160, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 160, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 160, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 164, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 164, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 164, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 164, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 168, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 168, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 168, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 168, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 168, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 168, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 168, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 168, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 168, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 168, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 168, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 17, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 17, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 17, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 17, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 17, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 17, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 17, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 17, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 17, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 17, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 17, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 17, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 17, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 17, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 18, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 18, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 18, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 18, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 18, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 18, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 18, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 18, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 18, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 18, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 18, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 18, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 184, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 184, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 184, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 19, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 19, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 19, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 19, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 19, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 19, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 19, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 19, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 19, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 19, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 19, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 19, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 19, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 192, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 192, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 192, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 192, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 192, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 20, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 20, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 20, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 20, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 20, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 200, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 208, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 208, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 208, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 208, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 21, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 21, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 21, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 21, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 21, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 21, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 21, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 21, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 21, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 21, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 216, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 216, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 216, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 216, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 216, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 216, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 216, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 216, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 224, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 224, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 224, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 224, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 224, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 224, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 224, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 224, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 224, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 224, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 224, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 224, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 23, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 23, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 23, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 232, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 232, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 24, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 24, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 24, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 24, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 24, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 240, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 248, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 25, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 256, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 26, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 26, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 26, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 26, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 264, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 264, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 264, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 264, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 264, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 264, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 264, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 264, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 264, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 264, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 264, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 264, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 27, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 27, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 27, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 27, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 27, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 27, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 27, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 27, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 272, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 28, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 28, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 28, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 28, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 28, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 28, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 28, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 28, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 28, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 28, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 28, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 28, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 280, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 288, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 29, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 29, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 296, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 30, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 304, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 31, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 312, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 312, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 312, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 312, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 312, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 32, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 320, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 320, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 320, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 320, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 328, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 328, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 328, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 328, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 33, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 33, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 33, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 33, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 33, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 33, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 33, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 33, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 33, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 33, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 33, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 33, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 336, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 336, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 336, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 336, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 336, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 336, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 336, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 336, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 336, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 336, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 336, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 34, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 35, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 36, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 37, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 38, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 39, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 39, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 39, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 39, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 39, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 40, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 40, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 40, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 40, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 41, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 41, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 41, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 41, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 42, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 42, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 42, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 42, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 42, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 42, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 42, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 42, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 42, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 42, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 42, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 46, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 46, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 46, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 48, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 48, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 48, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 48, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 48, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 50, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 52, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 52, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 52, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 52, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 54, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 54, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 54, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 54, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 54, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 54, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 54, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 54, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 56, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 56, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 56, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 56, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 56, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 56, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 56, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 56, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 56, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 56, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 56, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 56, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 58, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 58, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 60, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 62, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 64, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 66, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 66, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 66, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 66, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 66, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 66, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 66, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 66, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 66, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 66, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 66, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 66, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 68, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 70, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 72, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 74, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 76, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 78, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 78, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 78, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 78, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 78, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 80, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 80, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 80, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 80, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 82, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 82, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 82, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 82, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 84, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 84, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 84, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 84, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 84, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 84, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 84, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 84, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 84, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 84, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 84, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 92, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 92, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 92, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 96, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 96, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 96, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 96, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12, 96, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 12],"int64"), list[1,0,], )
paddle.transpose(Tensor([8, 2, 1, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 2, 2, 16],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 2, 4, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 256, 1],"float32"), list[0,2,1,], )
paddle.transpose(Tensor([8, 26, 1, 40, 1],"float32"), perm=list[0,1,4,2,3,], )
paddle.transpose(Tensor([8, 26, 512, 1, 40],"float32"), perm=list[0,1,3,4,2,], )
paddle.transpose(Tensor([8, 3, 100, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 100, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 104, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 104, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 104, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 104, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 108, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 108, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 108, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 108, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 108, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 108, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 108, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 108, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 112, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 112, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 112, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 112, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 112, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 112, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 112, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 112, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 112, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 112, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 112, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 112, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 116, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 116, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 12, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 12, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 12, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 12, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 12, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 12, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 120, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 124, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 128, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 13, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 13, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 13, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 13, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 13, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 13, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 13, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 13, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 13, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 132, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 132, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 132, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 132, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 132, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 132, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 132, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 132, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 132, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 132, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 132, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 132, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 120],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 136, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 14, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 14, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 14, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 14, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 14, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 14, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 14, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 14, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 14, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 14, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 14, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 140, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 144, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 156],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 148, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 15, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 15, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 15, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 15, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 15, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 15, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 15, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 15, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 15, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 15, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 15, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 15, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 120],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 124],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 124],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 140],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 156],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 164],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 164],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 152, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 156, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 156, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 156, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 156, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 156, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 16, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 16, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 16, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 16, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 16, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 16, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 16, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 16, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 16, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 16, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 16, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 16, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 160, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 160, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 160, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 160, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 164, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 164, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 164, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 164, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 168, 128],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 168, 128],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 168, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 168, 132],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 168, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 168, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 168, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 168, 152],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 168, 152],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 168, 168],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 168, 168],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 17, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 17, 15],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 17, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 17, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 17, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 17, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 17, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 17, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 17, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 17, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 17, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 17, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 17, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 17, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 18, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 18, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 18, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 18, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 18, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 18, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 18, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 18, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 18, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 18, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 18, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 18, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 184, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 184, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 184, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 19, 15],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 19, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 19, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 19, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 19, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 19, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 19, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 19, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 19, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 19, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 19, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 19, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 19, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 192, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 192, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 192, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 192, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 192, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 20, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 20, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 20, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 20, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 20, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 200, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 208, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 208, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 208, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 208, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 21, 16],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 21, 16],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 21, 17],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 21, 17],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 21, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 21, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 21, 19],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 21, 19],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 21, 21],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 21, 21],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 216, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 216, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 216, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 216, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 216, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 216, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 216, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 216, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 224, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 224, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 224, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 224, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 224, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 224, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 224, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 224, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 224, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 224, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 224, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 224, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 23, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 23, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 23, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 232, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 232, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 24, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 24, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 24, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 24, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 24, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 240, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 248, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 25, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 256, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 26, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 26, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 26, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 26, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 264, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 264, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 264, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 264, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 264, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 264, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 264, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 264, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 264, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 264, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 264, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 264, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 27, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 27, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 27, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 27, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 27, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 27, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 27, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 27, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 240],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 272, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 28, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 28, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 28, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 28, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 28, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 28, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 28, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 28, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 28, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 28, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 28, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 28, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 280, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 288, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 29, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 29, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 312],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 320],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 320],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 296, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 30, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 240],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 248],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 248],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 272],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 280],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 312],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 328],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 328],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 304, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 31, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 312, 280],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 312, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 312, 296],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 312, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 312, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 32, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 320, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 320, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 320, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 320, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 328, 272],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 328, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 328, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 328, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 33, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 33, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 33, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 33, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 33, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 33, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 33, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 33, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 33, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 33, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 33, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 33, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 336, 256],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 336, 256],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 336, 264],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 336, 264],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 336, 288],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 336, 288],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 336, 296],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 336, 304],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 336, 304],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 336, 336],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 336, 336],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 30],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 34, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 35, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 36, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 39],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 37, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 30],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 31],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 31],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 34],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 35],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 39],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 41],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 41],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 38, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 39, 35],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 39, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 39, 37],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 39, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 39, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 4, 4, 5, 3],"float32"), list[5,3,4,1,0,2,], )
paddle.transpose(Tensor([8, 3, 40, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 40, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 40, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 40, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 41, 34],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 41, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 41, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 41, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 42, 32],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 42, 32],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 42, 33],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 42, 33],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 42, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 42, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 42, 37],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 42, 38],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 42, 38],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 42, 42],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 42, 42],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 46, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 46, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 46, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 48, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 48, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 48, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 48, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 48, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 50, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 52, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 52, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 52, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 52, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 54, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 54, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 54, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 54, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 54, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 54, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 54, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 54, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 56, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 56, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 56, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 56, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 56, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 56, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 56, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 56, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 56, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 56, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 56, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 56, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 58, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 58, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 60, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 62, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 64, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 66, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 66, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 66, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 66, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 66, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 66, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 66, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 66, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 66, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 66, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 66, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 66, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 60],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 68, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 70, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 72, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 78],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 74, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 60],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 62],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 62],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 68],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 70],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 78],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 82],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 82],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 76, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 78, 70],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 78, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 78, 74],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 78, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 78, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 80, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 80, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 80, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 80, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 82, 68],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 82, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 82, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 82, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 84, 64],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 84, 64],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 84, 66],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 84, 66],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 84, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 84, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 84, 74],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 84, 76],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 84, 76],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 84, 84],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 84, 84],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 92, 132],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 92, 136],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 92, 136],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 96, 140],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 96, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 96, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 96, 148],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 3, 96, 148],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 10, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 10, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 10, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 10, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 10, 9],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 10, 9],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 11, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 11, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 11, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 11, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 11, 9],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 11, 9],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 112, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 112, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 112, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 112, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 128, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 128, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 128, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 128, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 14, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 14, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 14, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 14, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 144, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 144, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 144, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 144, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 144, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 16, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 16, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 16, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 16, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 160, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 160, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 160, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 160, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 160, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 160, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 176, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 176, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 176, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 176, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 176, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 176, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 18, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 18, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 18, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 18, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 18, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 20, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 20, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 20, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 20, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 20, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 20, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 22, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 22, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 22, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 22, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 22, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 22, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 28, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 28, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 28, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 28, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 32, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 32, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 32, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 32, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 36, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 36, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 36, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 36, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 36, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 40, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 40, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 40, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 40, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 40, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 40, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 44, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 44, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 44, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 44, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 44, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 44, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 56, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 56, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 56, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 56, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 64, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 64, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 64, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 64, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 7, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 7, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 7, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 7, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 72, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 72, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 72, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 72, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 72, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 8, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 8, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 8, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 8, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 80, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 80, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 80, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 80, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 80, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 80, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 88, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 88, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 88, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 88, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 88, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 88, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 9, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 9, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 9, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 9, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4, 9, 9],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 4],"float32"), list[1,0,], )
paddle.transpose(Tensor([8, 4],"int64"), list[1,0,], )
paddle.transpose(Tensor([8, 512, 32, 128],"float16"), list[0,2,1,3,], )
paddle.transpose(Tensor([8, 512, 32, 128],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([8, 512, 40],"float32"), perm=list[0,2,1,], )
paddle.transpose(Tensor([8, 63, 8, 96],"float32"), list[0,2,1,3,], )
paddle.transpose(Tensor([8, 7, 14, 4],"float32"), perm=list[2,3,0,1,], )
paddle.transpose(Tensor([8, 8, 289, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([8, 8, 500, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(Tensor([8, 80, 10, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 10, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 10, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 10, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 10, 9],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 10, 9],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 11, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 11, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 11, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 11, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 11, 9],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 11, 9],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 112, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 112, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 112, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 112, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 128, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 128, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 128, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 128, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 14, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 14, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 14, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 14, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 144, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 144, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 144, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 144, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 144, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 16, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 16, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 16, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 16, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 160, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 160, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 160, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 160, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 160, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 160, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 176, 144],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 176, 144],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 176, 160],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 176, 160],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 176, 176],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 176, 176],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 18, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 18, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 18, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 18, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 18, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 20, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 20, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 20, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 20, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 20, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 20, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 22, 18],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 22, 18],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 22, 20],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 22, 20],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 22, 22],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 22, 22],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 28, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 28, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 28, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 28, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 32, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 32, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 32, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 32, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 36, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 36, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 36, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 36, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 36, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 40, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 40, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 40, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 40, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 40, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 40, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 44, 36],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 44, 36],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 44, 40],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 44, 40],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 44, 44],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 44, 44],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 56, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 56, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 56, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 56, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 64, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 64, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 64, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 64, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 7, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 7, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 7, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 7, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 72, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 72, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 72, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 72, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 72, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 8, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 8, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 8, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 8, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 80, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 80, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 80, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 80, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 80, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 80, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 88, 72],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 88, 72],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 88, 80],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 88, 80],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 88, 88],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 88, 88],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 9, 10],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 9, 10],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 9, 11],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 9, 11],"float32"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 80, 9, 9],"float16"), perm=list[0,2,3,1,], )
paddle.transpose(Tensor([8, 8],"float64"), list[1,0,], )
paddle.transpose(Tensor([80, 499],"float32"), tuple(1,0,), )
paddle.transpose(Tensor([8000, 1],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8],"int64"), list[0,], )
paddle.transpose(Tensor([],"float32"), list[], )
paddle.transpose(x=Tensor([1, 1, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 11, 16, 32],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 2, 2, 3],"float32"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 2, 3],"float64"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 2, 3],"int32"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 2, 3],"int64"), perm=list[0,3,1,2,], )
paddle.transpose(x=Tensor([1, 2, 8, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 20, 4, 4],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 2048, 2, 128],"bfloat16"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 2048, 2, 128],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 4, 8, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 8, 1, 16],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 8, 1, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 8, 2, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1, 8, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([12, 17, 4, 4],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([13, 14, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([13, 21, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([13, 7, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([14, 1, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([14, 10, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([14, 3, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([14, 7, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([14, 8, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([1536, 2, 116, 14, 14],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 116, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 232, 7, 7],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 232, 7, 7],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 58, 28, 28],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([1536, 2, 58, 28, 28],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([16, 2, 16, 32, 24],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([16, 2, 16, 64, 48],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([16, 2, 160, 4, 3],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([16, 2, 160, 8, 6],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([16, 2, 20, 32, 24],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([16, 2, 20, 64, 48],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([16, 2, 40, 16, 12],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([16, 2, 40, 32, 24],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([16, 2, 80, 16, 12],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([16, 2, 80, 8, 6],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([2, 1, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([2, 1, 8, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([2, 10, 6, 6],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([2, 1024, 2, 128],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([2, 1024, 2, 64],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([2, 2, 8, 16],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([2, 3, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([2, 3, 6, 6],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([2, 4, 8, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([2, 7, 6, 6],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([2, 8, 1, 16],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([2, 8, 1, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([2, 8, 2, 16],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([2, 8, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([3, 1, 2, 2],"float64"), perm=list[1,0,2,3,], )
paddle.transpose(x=Tensor([3, 4, 10],"float32"), perm=list[1,0,2,], )
paddle.transpose(x=Tensor([32, 4, 8, 64],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([4, 1, 10],"float32"), perm=list[1,0,2,], )
paddle.transpose(x=Tensor([4, 1, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([4, 3, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([5, 1, 2, 4],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([5, 15, 2, 4],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([5, 17, 2, 4],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([512, 2, 116, 14, 14],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 116, 14, 14],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 16, 32, 24],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 16, 32, 24],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 160, 4, 3],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 160, 4, 3],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 20, 32, 24],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 20, 32, 24],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 232, 7, 7],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 232, 7, 7],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 40, 16, 12],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 40, 16, 12],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 60, 28, 28],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 60, 28, 28],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 80, 8, 6],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([512, 2, 80, 8, 6],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([58, 140, 2, 1],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([6, 1, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([6, 15, 2, 4],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([6, 17, 2, 4],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([6, 3, 4, 8],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([6, 7, 6, 6],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([64, 1, 2, 128],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([64, 1, 2, 128],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([64, 1, 2, 256],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([64, 1, 2, 256],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([64, 1, 2, 512],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([64, 1, 2, 512],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([64, 1, 2, 64],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([64, 1, 2, 64],"float32"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([64, 2, 192, 10, 10],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 192, 10, 10],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 192, 11, 11],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 192, 11, 11],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 192, 12, 12],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 192, 12, 12],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 192, 8, 8],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 192, 8, 8],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 192, 9, 9],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 192, 9, 9],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 48, 32, 32],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 48, 32, 32],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 48, 36, 36],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 48, 36, 36],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 48, 40, 40],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 48, 40, 40],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 48, 44, 44],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 48, 44, 44],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 48, 48, 48],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 48, 48, 48],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 96, 16, 16],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 96, 16, 16],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 96, 18, 18],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 96, 18, 18],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 96, 20, 20],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 96, 20, 20],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 96, 22, 22],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 96, 22, 22],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 96, 24, 24],"float16"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([64, 2, 96, 24, 24],"float32"), perm=list[0,2,1,3,4,], )
paddle.transpose(x=Tensor([8, 128, 12, 64],"float16"), perm=list[0,2,1,3,], )
paddle.transpose(x=Tensor([8, 2304, 1, 1, 1],"float32"), perm=tuple(0,2,3,4,1,), )
paddle.trapezoid(Tensor([5],"float32"), dx=2.0, )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=Tensor([],"float32"), axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=Tensor([],"float32"), axis=0, )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float64"), x=None, dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([3, 3, 4],"float32"), x=None, dx=Tensor([],"float32"), axis=1, )
paddle.trapezoid(y=Tensor([3, 3, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
paddle.trapezoid(y=Tensor([4, 4],"float16"), x=Tensor([4, 4],"float16"), )
paddle.tril(Tensor([1, 1, 1, 1],"float32"), )
paddle.tril(Tensor([1, 1, 1024, 1024],"int64"), )
paddle.tril(Tensor([1, 1, 20, 20],"float32"), )
paddle.tril(Tensor([1, 1, 2048, 2048],"bool"), )
paddle.tril(Tensor([1, 1, 2048, 2048],"float32"), )
paddle.tril(Tensor([1, 1, 512, 512],"int64"), )
paddle.tril(Tensor([1, 1, 58, 58],"bool"), )
paddle.tril(Tensor([1, 1, 58, 58],"float32"), )
paddle.tril(Tensor([1, 1],"float32"), diagonal=0, )
paddle.tril(Tensor([1, 20, 20],"float32"), )
paddle.tril(Tensor([10, 10],"bool"), )
paddle.tril(Tensor([10, 10],"float32"), diagonal=0, )
paddle.tril(Tensor([10, 20, 1],"float32"), 0, )
paddle.tril(Tensor([1007, 1007],"bool"), )
paddle.tril(Tensor([107, 107],"bool"), )
paddle.tril(Tensor([107, 107],"float16"), )
paddle.tril(Tensor([109, 109],"bool"), )
paddle.tril(Tensor([109, 109],"float16"), )
paddle.tril(Tensor([11, 11],"float16"), )
paddle.tril(Tensor([110, 110],"bool"), )
paddle.tril(Tensor([110, 110],"float16"), )
paddle.tril(Tensor([111, 111],"bool"), )
paddle.tril(Tensor([111, 111],"float16"), )
paddle.tril(Tensor([112, 112],"bool"), )
paddle.tril(Tensor([112, 112],"float16"), )
paddle.tril(Tensor([114, 114],"bool"), )
paddle.tril(Tensor([115, 115],"bool"), )
paddle.tril(Tensor([127, 127],"bool"), )
paddle.tril(Tensor([13, 9],"float32"), )
paddle.tril(Tensor([147, 147],"bool"), )
paddle.tril(Tensor([148, 148],"bool"), )
paddle.tril(Tensor([152, 152],"bool"), )
paddle.tril(Tensor([164, 164],"bool"), )
paddle.tril(Tensor([172, 172],"bool"), )
paddle.tril(Tensor([198, 198],"bool"), )
paddle.tril(Tensor([2, 1, 1, 1],"bool"), )
paddle.tril(Tensor([2, 1, 1, 1],"float16"), )
paddle.tril(Tensor([2, 1, 1, 1],"float32"), )
paddle.tril(Tensor([2, 1, 10, 10],"float32"), )
paddle.tril(Tensor([2, 1, 35, 35],"bool"), )
paddle.tril(Tensor([2, 1, 37, 37],"bool"), )
paddle.tril(Tensor([2, 1, 38, 38],"bool"), )
paddle.tril(Tensor([2, 1, 38, 38],"float16"), )
paddle.tril(Tensor([2, 1, 39, 39],"bool"), )
paddle.tril(Tensor([2, 1, 39, 39],"float16"), )
paddle.tril(Tensor([2, 1, 40, 40],"float16"), )
paddle.tril(Tensor([2, 1, 41, 41],"float16"), )
paddle.tril(Tensor([2, 1, 45, 45],"bool"), )
paddle.tril(Tensor([2, 1, 47, 47],"float16"), )
paddle.tril(Tensor([2, 1, 5, 5],"float32"), )
paddle.tril(Tensor([2, 1, 50, 50],"bool"), )
paddle.tril(Tensor([2, 1, 51, 51],"bool"), )
paddle.tril(Tensor([2, 1, 51, 51],"float16"), )
paddle.tril(Tensor([2, 1, 52, 52],"bool"), )
paddle.tril(Tensor([2, 1, 53, 53],"float16"), )
paddle.tril(Tensor([2, 1, 54, 54],"float16"), )
paddle.tril(Tensor([2, 1, 57, 57],"bool"), )
paddle.tril(Tensor([2, 1, 57, 57],"float16"), )
paddle.tril(Tensor([2, 10, 10],"int32"), )
paddle.tril(Tensor([2, 20, 20],"int32"), )
paddle.tril(Tensor([2048, 2048],"bool"), )
paddle.tril(Tensor([21, 21],"float16"), )
paddle.tril(Tensor([23, 23],"float16"), )
paddle.tril(Tensor([232, 232],"float16"), )
paddle.tril(Tensor([26, 26],"float16"), )
paddle.tril(Tensor([28, 28],"float16"), )
paddle.tril(Tensor([288, 288],"bool"), )
paddle.tril(Tensor([29, 29],"float16"), )
paddle.tril(Tensor([3, 3],"bool"), )
paddle.tril(Tensor([30, 30],"float16"), )
paddle.tril(Tensor([302, 302],"bool"), )
paddle.tril(Tensor([304, 304],"bool"), )
paddle.tril(Tensor([31, 31],"float16"), )
paddle.tril(Tensor([32, 32],"float16"), )
paddle.tril(Tensor([346, 346],"bool"), )
paddle.tril(Tensor([35, 35],"float16"), )
paddle.tril(Tensor([36, 36],"float16"), )
paddle.tril(Tensor([37, 37],"float16"), )
paddle.tril(Tensor([377, 377],"bool"), )
paddle.tril(Tensor([38, 38],"float16"), )
paddle.tril(Tensor([39, 39],"float16"), )
paddle.tril(Tensor([396, 396],"bool"), )
paddle.tril(Tensor([4, 1, 1, 1],"float32"), )
paddle.tril(Tensor([4, 1, 132, 132],"bool"), )
paddle.tril(Tensor([4, 1, 134, 134],"float32"), )
paddle.tril(Tensor([4, 1, 145, 145],"float32"), )
paddle.tril(Tensor([4, 1, 148, 148],"bool"), )
paddle.tril(Tensor([4, 1, 156, 156],"bool"), )
paddle.tril(Tensor([4, 1, 158, 158],"float32"), )
paddle.tril(Tensor([4, 1, 168, 168],"float32"), )
paddle.tril(Tensor([4, 1, 182, 182],"bool"), )
paddle.tril(Tensor([4, 1, 5, 5],"float32"), )
paddle.tril(Tensor([4, 4],"bool"), )
paddle.tril(Tensor([40, 40],"float16"), )
paddle.tril(Tensor([41, 41],"float16"), )
paddle.tril(Tensor([43, 43],"float16"), )
paddle.tril(Tensor([45, 45],"float16"), )
paddle.tril(Tensor([46, 46],"float16"), )
paddle.tril(Tensor([47, 47],"float16"), )
paddle.tril(Tensor([49, 49],"float16"), )
paddle.tril(Tensor([499, 499],"float32"), )
paddle.tril(Tensor([5, 5],"bool"), )
paddle.tril(Tensor([5, 5],"float32"), diagonal=0, )
paddle.tril(Tensor([50, 50],"bool"), )
paddle.tril(Tensor([50, 50],"float16"), )
paddle.tril(Tensor([51, 51],"float16"), )
paddle.tril(Tensor([512, 512],"bool"), )
paddle.tril(Tensor([512, 512],"float32"), )
paddle.tril(Tensor([52, 52],"float16"), )
paddle.tril(Tensor([53, 53],"float16"), )
paddle.tril(Tensor([54, 54],"float16"), )
paddle.tril(Tensor([57, 57],"float16"), )
paddle.tril(Tensor([58, 58],"bool"), )
paddle.tril(Tensor([59, 59],"float16"), )
paddle.tril(Tensor([6, 1, 1, 1],"float32"), )
paddle.tril(Tensor([6, 1, 5, 5],"float32"), )
paddle.tril(Tensor([6, 6],"float32"), diagonal=0, )
paddle.tril(Tensor([60, 60],"float16"), )
paddle.tril(Tensor([63, 63],"float16"), )
paddle.tril(Tensor([64, 64],"float16"), )
paddle.tril(Tensor([64, 64],"float32"), )
paddle.tril(Tensor([7, 7],"bool"), )
paddle.tril(Tensor([74, 74],"bool"), )
paddle.tril(Tensor([74, 74],"float16"), )
paddle.tril(Tensor([79, 79],"bool"), )
paddle.tril(Tensor([79, 79],"float16"), )
paddle.tril(Tensor([8, 8],"float16"), )
paddle.tril(Tensor([80, 80],"bool"), )
paddle.tril(Tensor([80, 80],"float16"), )
paddle.tril(Tensor([82, 82],"bool"), )
paddle.tril(Tensor([82, 82],"float16"), )
paddle.tril(Tensor([9, 9],"float16"), )
paddle.tril(Tensor([90, 90],"float16"), )
paddle.tril(Tensor([91, 91],"bool"), )
paddle.tril(Tensor([91, 91],"float16"), )
paddle.tril(Tensor([92, 92],"float16"), )
paddle.tril(x=Tensor([3, 2, 2],"float32"), diagonal=0, )
paddle.tril(x=Tensor([3, 2, 2],"float64"), diagonal=-1, )
paddle.tril(x=Tensor([3, 2, 2],"float64"), diagonal=-5, )
paddle.tril(x=Tensor([3, 2, 2],"float64"), diagonal=0, )
paddle.tril(x=Tensor([3, 2, 2],"float64"), diagonal=1, )
paddle.tril(x=Tensor([3, 2, 2],"float64"), diagonal=5, )
paddle.tril(x=Tensor([3, 2, 2],"int32"), diagonal=0, )
paddle.tril(x=Tensor([3, 2, 2],"int64"), diagonal=0, )
paddle.tril_indices(4, 4, -1, )
paddle.tril_indices(4, 4, 2, )
paddle.tril_indices(4, None, 2, )
paddle.tril_indices(row=10, col=10, offset=-2, )
paddle.tril_indices(row=10, col=10, offset=0, )
paddle.tril_indices(row=10, col=10, offset=2, )
paddle.tril_indices(row=10, col=3, offset=-2, )
paddle.tril_indices(row=10, col=3, offset=0, )
paddle.tril_indices(row=10, col=3, offset=2, )
paddle.tril_indices(row=3, col=10, offset=-2, )
paddle.tril_indices(row=3, col=10, offset=0, )
paddle.tril_indices(row=3, col=10, offset=2, )
paddle.triu(Tensor([1, 1, 1, 10],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 10],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 11],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 11],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 12],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 12],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 13],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 13],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 14],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 14],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 15],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 18],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 19],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 1],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 20],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 21],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 22],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 23],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 24],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 25],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 26],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 27],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 28],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 29],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 2],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 30],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 31],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 32],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 33],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 34],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 35],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 36],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 3],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 6],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 6],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 7],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 7],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 8],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 8],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 9],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 9],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 10, 16],"float32"), )
paddle.triu(Tensor([1, 1, 10, 16],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1024, 1024],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 11, 11],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 17, 17],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 20, 20],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 20, 22],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 2048, 2048],"float16"), )
paddle.triu(Tensor([1, 1, 4096, 4096],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 5, 5],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 5, 5],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 512, 512],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 58, 58],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 8, 8],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 128, 32, 32],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 2, 10, 16],"bool"), )
paddle.triu(Tensor([10, 20, 1],"float32"), 0, )
paddle.triu(Tensor([11, 16],"float32"), diagonal=1, )
paddle.triu(Tensor([11, 7],"float32"), diagonal=1, )
paddle.triu(Tensor([12, 1, 24, 24],"float32"), diagonal=1, )
paddle.triu(Tensor([12, 7, 7],"float32"), diagonal=1, )
paddle.triu(Tensor([128, 128],"float32"), 1, )
paddle.triu(Tensor([128, 128],"float32"), diagonal=0, )
paddle.triu(Tensor([128, 128],"float32"), diagonal=1, )
paddle.triu(Tensor([13, 1, 7, 7],"float32"), diagonal=1, )
paddle.triu(Tensor([13, 13],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 1, 100],"float16"), )
paddle.triu(Tensor([2, 1, 1, 101],"float16"), )
paddle.triu(Tensor([2, 1, 1, 102],"float16"), )
paddle.triu(Tensor([2, 1, 1, 103],"float16"), )
paddle.triu(Tensor([2, 1, 1, 104],"float16"), )
paddle.triu(Tensor([2, 1, 1, 105],"float16"), )
paddle.triu(Tensor([2, 1, 1, 106],"float16"), )
paddle.triu(Tensor([2, 1, 1, 107],"float16"), )
paddle.triu(Tensor([2, 1, 1, 108],"float16"), )
paddle.triu(Tensor([2, 1, 1, 109],"float16"), )
paddle.triu(Tensor([2, 1, 1, 110],"float16"), )
paddle.triu(Tensor([2, 1, 1, 111],"float16"), )
paddle.triu(Tensor([2, 1, 1, 112],"float16"), )
paddle.triu(Tensor([2, 1, 1, 113],"float16"), )
paddle.triu(Tensor([2, 1, 1, 114],"float16"), )
paddle.triu(Tensor([2, 1, 1, 115],"float16"), )
paddle.triu(Tensor([2, 1, 1, 116],"float16"), )
paddle.triu(Tensor([2, 1, 1, 117],"float16"), )
paddle.triu(Tensor([2, 1, 1, 118],"float16"), )
paddle.triu(Tensor([2, 1, 1, 119],"float16"), )
paddle.triu(Tensor([2, 1, 1, 120],"float16"), )
paddle.triu(Tensor([2, 1, 1, 121],"float16"), )
paddle.triu(Tensor([2, 1, 1, 122],"float16"), )
paddle.triu(Tensor([2, 1, 1, 123],"float16"), )
paddle.triu(Tensor([2, 1, 1, 124],"float16"), )
paddle.triu(Tensor([2, 1, 1, 125],"float16"), )
paddle.triu(Tensor([2, 1, 1, 126],"float16"), )
paddle.triu(Tensor([2, 1, 1, 127],"float16"), )
paddle.triu(Tensor([2, 1, 1, 128],"float16"), )
paddle.triu(Tensor([2, 1, 1, 129],"float16"), )
paddle.triu(Tensor([2, 1, 1, 130],"float16"), )
paddle.triu(Tensor([2, 1, 1, 131],"float16"), )
paddle.triu(Tensor([2, 1, 1, 132],"float16"), )
paddle.triu(Tensor([2, 1, 1, 133],"float16"), )
paddle.triu(Tensor([2, 1, 1, 134],"float16"), )
paddle.triu(Tensor([2, 1, 1, 135],"float16"), )
paddle.triu(Tensor([2, 1, 1, 136],"float16"), )
paddle.triu(Tensor([2, 1, 1, 137],"float16"), )
paddle.triu(Tensor([2, 1, 1, 138],"float16"), )
paddle.triu(Tensor([2, 1, 1, 139],"float16"), )
paddle.triu(Tensor([2, 1, 1, 140],"float16"), )
paddle.triu(Tensor([2, 1, 1, 141],"float16"), )
paddle.triu(Tensor([2, 1, 1, 142],"float16"), )
paddle.triu(Tensor([2, 1, 1, 143],"float16"), )
paddle.triu(Tensor([2, 1, 1, 144],"float16"), )
paddle.triu(Tensor([2, 1, 1, 145],"float16"), )
paddle.triu(Tensor([2, 1, 1, 146],"float16"), )
paddle.triu(Tensor([2, 1, 1, 147],"float16"), )
paddle.triu(Tensor([2, 1, 1, 148],"float16"), )
paddle.triu(Tensor([2, 1, 1, 149],"float16"), )
paddle.triu(Tensor([2, 1, 1, 150],"float16"), )
paddle.triu(Tensor([2, 1, 1, 151],"float16"), )
paddle.triu(Tensor([2, 1, 1, 152],"float16"), )
paddle.triu(Tensor([2, 1, 1, 153],"float16"), )
paddle.triu(Tensor([2, 1, 1, 154],"float16"), )
paddle.triu(Tensor([2, 1, 1, 155],"float16"), )
paddle.triu(Tensor([2, 1, 1, 156],"float16"), )
paddle.triu(Tensor([2, 1, 1, 157],"float16"), )
paddle.triu(Tensor([2, 1, 1, 158],"float16"), )
paddle.triu(Tensor([2, 1, 1, 159],"float16"), )
paddle.triu(Tensor([2, 1, 1, 4],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 1, 5],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 1, 6],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 1, 75],"float16"), )
paddle.triu(Tensor([2, 1, 1, 76],"float16"), )
paddle.triu(Tensor([2, 1, 1, 77],"float16"), )
paddle.triu(Tensor([2, 1, 1, 78],"float16"), )
paddle.triu(Tensor([2, 1, 1, 79],"float16"), )
paddle.triu(Tensor([2, 1, 1, 7],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 1, 80],"float16"), )
paddle.triu(Tensor([2, 1, 1, 81],"float16"), )
paddle.triu(Tensor([2, 1, 1, 82],"float16"), )
paddle.triu(Tensor([2, 1, 1, 83],"float16"), )
paddle.triu(Tensor([2, 1, 1, 84],"float16"), )
paddle.triu(Tensor([2, 1, 1, 85],"float16"), )
paddle.triu(Tensor([2, 1, 1, 86],"float16"), )
paddle.triu(Tensor([2, 1, 1, 87],"float16"), )
paddle.triu(Tensor([2, 1, 1, 88],"float16"), )
paddle.triu(Tensor([2, 1, 1, 89],"float16"), )
paddle.triu(Tensor([2, 1, 1, 90],"float16"), )
paddle.triu(Tensor([2, 1, 1, 91],"float16"), )
paddle.triu(Tensor([2, 1, 1, 92],"float16"), )
paddle.triu(Tensor([2, 1, 1, 93],"float16"), )
paddle.triu(Tensor([2, 1, 1, 94],"float16"), )
paddle.triu(Tensor([2, 1, 1, 95],"float16"), )
paddle.triu(Tensor([2, 1, 1, 96],"float16"), )
paddle.triu(Tensor([2, 1, 1, 97],"float16"), )
paddle.triu(Tensor([2, 1, 1, 98],"float16"), )
paddle.triu(Tensor([2, 1, 1, 99],"float16"), )
paddle.triu(Tensor([2, 1, 10, 10],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 107, 107],"float16"), )
paddle.triu(Tensor([2, 1, 109, 109],"float16"), )
paddle.triu(Tensor([2, 1, 110, 110],"float16"), )
paddle.triu(Tensor([2, 1, 111, 111],"float16"), )
paddle.triu(Tensor([2, 1, 112, 112],"float16"), )
paddle.triu(Tensor([2, 1, 3, 3],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 5, 5],"float32"), diagonal=1, )
paddle.triu(Tensor([2, 1, 74, 74],"float16"), )
paddle.triu(Tensor([2, 1, 79, 79],"float16"), )
paddle.triu(Tensor([2, 1, 80, 80],"float16"), )
paddle.triu(Tensor([2, 1, 82, 82],"float16"), )
paddle.triu(Tensor([2, 1, 91, 91],"float16"), )
paddle.triu(Tensor([22, 22],"float32"), diagonal=1, )
paddle.triu(Tensor([23, 23],"float32"), diagonal=1, )
paddle.triu(Tensor([4, 1, 1, 10],"float16"), diagonal=1, )
paddle.triu(Tensor([4, 1, 1, 11],"float16"), diagonal=1, )
paddle.triu(Tensor([4, 1, 1, 12],"float16"), diagonal=1, )
paddle.triu(Tensor([4, 1, 1, 13],"float16"), diagonal=1, )
paddle.triu(Tensor([4, 1, 1, 14],"float16"), diagonal=1, )
paddle.triu(Tensor([4, 1, 1, 15],"float16"), diagonal=1, )
paddle.triu(Tensor([4, 1, 1, 4],"float32"), diagonal=1, )
paddle.triu(Tensor([4, 1, 1, 5],"float32"), diagonal=1, )
paddle.triu(Tensor([4, 1, 1, 6],"float16"), diagonal=1, )
paddle.triu(Tensor([4, 1, 1, 6],"float32"), diagonal=1, )
paddle.triu(Tensor([4, 1, 1, 7],"float16"), diagonal=1, )
paddle.triu(Tensor([4, 1, 1, 7],"float32"), diagonal=1, )
paddle.triu(Tensor([4, 1, 1, 8],"float16"), diagonal=1, )
paddle.triu(Tensor([4, 1, 1, 9],"float16"), diagonal=1, )
paddle.triu(Tensor([4, 1, 115, 115],"float16"), )
paddle.triu(Tensor([4, 1, 127, 127],"float16"), )
paddle.triu(Tensor([4, 1, 147, 147],"float16"), )
paddle.triu(Tensor([4, 1, 148, 148],"float16"), )
paddle.triu(Tensor([4, 1, 152, 152],"float16"), )
paddle.triu(Tensor([4, 1, 164, 164],"float16"), )
paddle.triu(Tensor([4, 1, 172, 172],"float16"), )
paddle.triu(Tensor([4, 1, 198, 198],"float16"), )
paddle.triu(Tensor([4, 1, 3, 3],"float32"), diagonal=1, )
paddle.triu(Tensor([4, 1, 304, 304],"float16"), )
paddle.triu(Tensor([4, 1, 346, 346],"float16"), )
paddle.triu(Tensor([4, 1, 377, 377],"float16"), )
paddle.triu(Tensor([4, 1, 396, 396],"float16"), )
paddle.triu(Tensor([4, 1, 5, 5],"float16"), diagonal=1, )
paddle.triu(Tensor([4, 1, 5, 5],"float32"), diagonal=1, )
paddle.triu(Tensor([4, 5],"float32"), diagonal=1, )
paddle.triu(Tensor([448, 1024],"float32"), diagonal=1, )
paddle.triu(Tensor([448, 1280],"float32"), diagonal=1, )
paddle.triu(Tensor([448, 384],"float32"), diagonal=1, )
paddle.triu(Tensor([448, 512],"float32"), diagonal=1, )
paddle.triu(Tensor([448, 768],"float32"), diagonal=1, )
paddle.triu(Tensor([5, 1, 10, 10],"float32"), diagonal=1, )
paddle.triu(Tensor([5, 5],"float32"), diagonal=1, )
paddle.triu(Tensor([6, 1, 1, 4],"float32"), diagonal=1, )
paddle.triu(Tensor([6, 1, 1, 5],"float32"), diagonal=1, )
paddle.triu(Tensor([6, 1, 1, 6],"float32"), diagonal=1, )
paddle.triu(Tensor([6, 1, 1, 7],"float32"), diagonal=1, )
paddle.triu(Tensor([6, 1, 3, 3],"float32"), diagonal=1, )
paddle.triu(Tensor([6, 1, 5, 5],"float32"), diagonal=1, )
paddle.triu(Tensor([6, 4],"float32"), diagonal=1, )
paddle.triu(Tensor([7, 7],"float32"), 1, )
paddle.triu(Tensor([77, 77],"float32"), 1, )
paddle.triu(Tensor([8, 1, 63, 63],"float32"), diagonal=1, )
paddle.triu(x=Tensor([3, 2, 2],"float32"), diagonal=0, )
paddle.triu(x=Tensor([3, 2, 2],"float64"), diagonal=-1, )
paddle.triu(x=Tensor([3, 2, 2],"float64"), diagonal=-5, )
paddle.triu(x=Tensor([3, 2, 2],"float64"), diagonal=0, )
paddle.triu(x=Tensor([3, 2, 2],"float64"), diagonal=1, )
paddle.triu(x=Tensor([3, 2, 2],"float64"), diagonal=5, )
paddle.triu(x=Tensor([3, 2, 2],"int32"), diagonal=0, )
paddle.triu(x=Tensor([3, 2, 2],"int64"), diagonal=0, )
paddle.triu_indices(4, 4, -1, )
paddle.triu_indices(4, 4, 2, )
paddle.triu_indices(4, None, 2, )
paddle.triu_indices(row=10, col=10, offset=-2, )
paddle.triu_indices(row=10, col=10, offset=0, )
paddle.triu_indices(row=10, col=10, offset=2, )
paddle.triu_indices(row=10, col=3, offset=-2, )
paddle.triu_indices(row=10, col=3, offset=0, )
paddle.triu_indices(row=10, col=3, offset=2, )
paddle.triu_indices(row=3, col=10, offset=-2, )
paddle.triu_indices(row=3, col=10, offset=0, )
paddle.triu_indices(row=3, col=10, offset=2, )
paddle.trunc(Tensor([10, 20, 1],"float32"), )
paddle.trunc(Tensor([20, 20],"float32"), )
paddle.trunc(Tensor([],"float32"), )
paddle.trunc(input=Tensor([3, 6, 6, 6, 6],"float64"), )
paddle.trunc(input=Tensor([6, 6, 6, 6],"float64"), )
paddle.trunc(input=Tensor([6, 6, 6],"float64"), )
paddle.trunc(input=Tensor([6, 6],"int32"), )
paddle.trunc(input=Tensor([6, 6],"int64"), )
paddle.unbind(Tensor([1],"float32"), 0, )
paddle.unbind(Tensor([2, 2],"bool"), axis=0, )
paddle.unbind(Tensor([2, 3, 8, 8],"float32"), axis=0, )
paddle.unbind(Tensor([2, 3],"complex128"), 0, )
paddle.unbind(Tensor([2, 3],"complex64"), 0, )
paddle.unbind(Tensor([2, 3],"float32"), 0, )
paddle.unbind(Tensor([2],"float32"), 0, )
paddle.unbind(Tensor([3, 2, 2],"int32"), axis=0, )
paddle.unbind(Tensor([3, 9, 5],"float32"), axis=0, )
paddle.unbind(Tensor([4, 2, 3],"float32"), axis=-1, )
paddle.unbind(Tensor([4, 2, 3],"float32"), axis=2, )
paddle.unbind(Tensor([4, 3, 2, 2],"float64"), axis=1, )
paddle.unbind(Tensor([4, 5, 6],"float32"), )
paddle.unique(Tensor([10],"int64"), )
paddle.unique(Tensor([11],"int64"), )
paddle.unique(Tensor([120],"int64"), )
paddle.unique(Tensor([120],"int64"), return_index=True, return_inverse=True, return_counts=True, dtype="int32", )
paddle.unique(Tensor([12],"int64"), )
paddle.unique(Tensor([13],"int64"), )
paddle.unique(Tensor([14],"int64"), )
paddle.unique(Tensor([15],"int64"), )
paddle.unique(Tensor([16],"int64"), )
paddle.unique(Tensor([17],"int64"), )
paddle.unique(Tensor([1],"int64"), )
paddle.unique(Tensor([2, 3],"int64"), )
paddle.unique(Tensor([20],"int64"), )
paddle.unique(Tensor([24],"int64"), )
paddle.unique(Tensor([3, 1],"int64"), )
paddle.unique(Tensor([3, 5, 5],"float32"), return_index=True, return_inverse=True, return_counts=True, axis=0, )
paddle.unique(Tensor([42],"int64"), )
paddle.unique(Tensor([4],"int64"), )
paddle.unique(Tensor([6],"int64"), )
paddle.unique(Tensor([86],"int64"), )
paddle.unique(Tensor([89],"int64"), )
paddle.unique(Tensor([8],"int64"), )
paddle.unique(Tensor([],"float32"), return_index=True, return_inverse=True, return_counts=True, )
paddle.unique(x=Tensor([2, 2],"float32"), axis=1, )
paddle.unique(x=Tensor([2, 2],"float64"), axis=1, )
paddle.unique(x=Tensor([2, 2],"int32"), axis=0, )
paddle.unique(x=Tensor([2, 2],"int64"), axis=0, )
paddle.unique(x=Tensor([6],"float32"), )
paddle.unique(x=Tensor([6],"float64"), )
paddle.unique_consecutive(Tensor([100],"float64"), )
paddle.unique_consecutive(Tensor([100],"float64"), return_inverse=True, return_counts=True, )
paddle.unique_consecutive(Tensor([100],"float64"), return_inverse=True, return_counts=True, axis=-1, )
paddle.unique_consecutive(Tensor([],"float32"), return_inverse=True, return_counts=True, )
paddle.unique_consecutive(x=Tensor([2, 6],"float32"), )
paddle.unique_consecutive(x=Tensor([2, 6],"float64"), )
paddle.unique_consecutive(x=Tensor([2, 6],"int32"), )
paddle.unique_consecutive(x=Tensor([2, 6],"int64"), )
paddle.unique_consecutive(x=Tensor([3, 6],"float64"), axis=1, )
paddle.unique_consecutive(x=Tensor([4, 1],"float32"), return_inverse=True, )
paddle.unique_consecutive(x=Tensor([4, 1],"float64"), )
paddle.unique_consecutive(x=Tensor([4, 1],"float64"), dtype="int32", )
paddle.unique_consecutive(x=Tensor([6, 1],"float32"), return_inverse=True, return_counts=True, )
paddle.unique_consecutive(x=Tensor([6, 4],"float32"), return_inverse=True, return_counts=True, axis=0, )
paddle.vander(Tensor([5],"complex128"), 0, False, )
paddle.vander(Tensor([5],"complex128"), 0, True, )
paddle.vander(Tensor([5],"complex128"), 1, False, )
paddle.vander(Tensor([5],"complex128"), 1, True, )
paddle.vander(Tensor([5],"complex128"), 2, False, )
paddle.vander(Tensor([5],"complex128"), 2, True, )
paddle.vander(Tensor([5],"complex128"), 3, False, )
paddle.vander(Tensor([5],"complex128"), 3, True, )
paddle.vander(Tensor([5],"complex128"), 4, False, )
paddle.vander(Tensor([5],"complex128"), 4, True, )
paddle.vander(Tensor([5],"float32"), 0, False, )
paddle.vander(Tensor([5],"float32"), 0, True, )
paddle.vander(Tensor([5],"float32"), 1, False, )
paddle.vander(Tensor([5],"float32"), 1, True, )
paddle.vander(Tensor([5],"float32"), 2, False, )
paddle.vander(Tensor([5],"float32"), 2, True, )
paddle.vander(Tensor([5],"float32"), 3, False, )
paddle.vander(Tensor([5],"float32"), 3, True, )
paddle.vander(Tensor([5],"float32"), 4, False, )
paddle.vander(Tensor([5],"float32"), 4, True, )
paddle.vander(Tensor([5],"float32"), 5, False, )
paddle.vander(Tensor([5],"float32"), 5, True, )
paddle.vander(Tensor([5],"float32"), 6, False, )
paddle.vander(Tensor([5],"float32"), 6, True, )
paddle.vander(Tensor([5],"float32"), 7, False, )
paddle.vander(Tensor([5],"float32"), 7, True, )
paddle.vander(Tensor([5],"float32"), 8, False, )
paddle.vander(Tensor([5],"float32"), 8, True, )
paddle.vander(Tensor([5],"float32"), None, False, )
paddle.var(Tensor([1, 3, 4, 10],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 4, 10],"float64"), 2, True, False, )
paddle.var(Tensor([1, 3, 4, 10],"float64"), list[1,2,], True, False, )
paddle.var(Tensor([1, 3, 4, 10],"float64"), list[1,3,], False, False, )
paddle.var(Tensor([1, 3, 4, 10],"float64"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 4, 10],"float64"), tuple(1,3,), True, False, )
paddle.var(Tensor([16, 16, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 256],"float32"), axis=-1, keepdim=True, )
paddle.var(Tensor([16, 256],"float64"), axis=-1, keepdim=True, )
paddle.var(Tensor([16, 32, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 8, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([192, 48, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([192, 96, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 24, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 64, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([24, 96, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([2],"float32"), )
paddle.var(Tensor([32, 16, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([32, 8, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([384, 192, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([384, 96, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([48, 192, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([48, 48, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([48, 96, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([64, 16, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([64, 3, 7, 7],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([64, 32, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([8, 16, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([8, 32, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([8, 64, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([8, 8, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([8, 8, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([96, 192, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([96, 24, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([96, 384, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([96, 64, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([96, 96, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([],"float32"), )
paddle.var(Tensor([],"float32"), list[], )
paddle.var(x=Tensor([13, 96, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([16, 96, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([16, 96, 2],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([2, 3],"float32"), )
paddle.var(x=Tensor([2, 3],"float64"), )
paddle.var(x=Tensor([2, 96, 2],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([3, 3, 3],"float64"), )
paddle.var(x=Tensor([3, 3, 3],"float64"), axis=0, )
paddle.var(x=Tensor([3, 3, 3],"float64"), axis=0, unbiased=False, )
paddle.var(x=Tensor([3, 3, 3],"float64"), axis=list[0,1,], )
paddle.var(x=Tensor([3, 3, 3],"float64"), axis=tuple(0,1,), )
paddle.var(x=Tensor([3, 3, 3],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.var(x=Tensor([3, 96, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.vision.ops.box_coder(Tensor([30, 4],"float32"), list[0.12371375411748886,0.7415851950645447,0.40236398577690125,0.6756224632263184,], Tensor([30, 81, 4],"float32"), "decode_center_size", False, axis=1, )
paddle.vision.ops.box_coder(prior_box=Tensor([80, 4],"float32"), prior_box_var=Tensor([80, 4],"float32"), target_box=Tensor([20, 80, 4],"float32"), code_type="decode_center_size", box_normalized=False, )
paddle.vision.ops.box_coder(prior_box=Tensor([80, 4],"float32"), prior_box_var=tuple(1,2,3,4,), target_box=Tensor([20, 80, 4],"float32"), code_type="decode_center_size", box_normalized=False, )
paddle.vision.ops.distribute_fpn_proposals(Tensor([4096, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([8],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([410, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([411, 4],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.matrix_nms(Tensor([1, 64, 4],"float32"), Tensor([1, 4, 64],"float32"), 0.5, post_threshold=0.0, nms_top_k=400, keep_top_k=100, )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 4],"float32"), Tensor([7, 21, 1200],"float32"), 0.01, 0.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 4],"float32"), Tensor([7, 21, 1200],"float32"), 0.01, 0.0, 400, 200, True, 2.0, 0, True, True, True, )
paddle.vision.ops.matrix_nms(Tensor([7, 1200, 4],"float32"), Tensor([7, 21, 1200],"float32"), 0.01, 2.0, 400, 200, False, 2.0, 0, True, True, True, )
paddle.vision.ops.prior_box(Tensor([4, 48, 40, 40],"float32"), Tensor([4, 3, 640, 640],"float32"), list[32.0,48.0,64.0,80.0,96.0,128.0,], list[], list[1.0,], list[0.1,0.1,0.2,0.2,], False, False, list[16.0,16.0,], 0.5, False, None, )
paddle.vision.ops.prior_box(Tensor([4, 48, 80, 80],"float32"), Tensor([4, 3, 640, 640],"float32"), list[16.0,24.0,], list[], list[1.0,], list[0.1,0.1,0.2,0.2,], False, False, list[8.0,8.0,], 0.5, False, None, )
paddle.vision.ops.prior_box(Tensor([4, 96, 40, 40],"float32"), Tensor([4, 3, 640, 640],"float32"), list[32.0,48.0,64.0,80.0,96.0,128.0,], list[], list[1.0,], list[0.1,0.1,0.2,0.2,], False, False, list[16.0,16.0,], 0.5, False, None, )
paddle.vision.ops.prior_box(Tensor([4, 96, 80, 80],"float32"), Tensor([4, 3, 640, 640],"float32"), list[16.0,24.0,], list[], list[1.0,], list[0.1,0.1,0.2,0.2,], False, False, list[8.0,8.0,], 0.5, False, None, )
paddle.vision.ops.prior_box(input=Tensor([2, 10, 32, 32],"float32"), image=Tensor([2, 10, 40, 40],"float32"), min_sizes=list[2.0,4.0,], clip=True, flip=True, )
paddle.vision.ops.yolo_box(Tensor([2, 14, 8, 8],"float32"), img_size=Tensor([2, 2],"int32"), anchors=list[10,13,16,30,], class_num=2, conf_thresh=0.01, downsample_ratio=8, clip_bbox=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_box(Tensor([2, 16, 8, 8],"float32"), img_size=Tensor([2, 2],"int32"), anchors=list[10,13,16,30,], class_num=2, conf_thresh=0.01, downsample_ratio=8, clip_bbox=True, scale_x_y=1.0, iou_aware=True, iou_aware_factor=0.5, )
paddle.vision.ops.yolo_loss(Tensor([2, 14, 8, 8],"float32"), gt_box=Tensor([2, 10, 4],"float32"), gt_label=Tensor([2, 10],"int32"), anchors=list[10,13,16,30,], anchor_mask=list[0,1,], class_num=2, ignore_thresh=0.7, downsample_ratio=8, use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=None, use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=False, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.0, )
paddle.vision.ops.yolo_loss(Tensor([3, 30, 5, 5],"float64"), gt_box=Tensor([3, 5, 4],"float64"), gt_label=Tensor([3, 5],"int32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=5, ignore_thresh=0.7, downsample_ratio=32, gt_score=Tensor([3, 5],"float64"), use_label_smooth=True, scale_x_y=1.2, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 19, 19],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[6,7,8,], class_num=80, ignore_thresh=0.7, downsample_ratio=32, use_label_smooth=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 38, 38],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[3,4,5,], class_num=80, ignore_thresh=0.7, downsample_ratio=16, use_label_smooth=True, )
paddle.vision.ops.yolo_loss(x=Tensor([4, 255, 76, 76],"float32"), gt_box=Tensor([4, 1, 4],"float32"), gt_label=Tensor([4, 1],"int32"), gt_score=Tensor([4, 1],"float32"), anchors=list[10,13,16,30,33,23,30,61,62,45,59,119,116,90,156,198,373,326,], anchor_mask=list[0,1,2,], class_num=80, ignore_thresh=0.7, downsample_ratio=8, use_label_smooth=True, )
paddle.vsplit(Tensor([6, 4, 3],"int64"), 2, )
paddle.vsplit(Tensor([6, 4, 3],"int64"), 3, )
paddle.vsplit(Tensor([6, 4, 3],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([6, 4, 3],"int64"), list[-1,], )
paddle.vsplit(Tensor([6, 4, 3],"int64"), list[2,4,], )
paddle.vsplit(Tensor([6, 4, 3],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([6, 4],"bool"), 3, )
paddle.vsplit(Tensor([6, 4],"float16"), 3, )
paddle.vsplit(Tensor([6, 4],"float32"), 3, )
paddle.vsplit(Tensor([6, 4],"float64"), 3, )
paddle.vsplit(Tensor([6, 4],"int32"), 3, )
paddle.vsplit(Tensor([6, 4],"int64"), 2, )
paddle.vsplit(Tensor([6, 4],"int64"), 3, )
paddle.vsplit(Tensor([6, 4],"int64"), list[-1,1,3,], )
paddle.vsplit(Tensor([6, 4],"int64"), list[-1,], )
paddle.vsplit(Tensor([6, 4],"int64"), list[2,4,], )
paddle.vsplit(Tensor([6, 4],"int64"), tuple(2,1,3,), )
paddle.vsplit(Tensor([6, 4],"uint8"), 3, )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1],"float64"),Tensor([1],"float64"),Tensor([1],"float64"),], )
paddle.vstack(list[Tensor([1],"float64"),Tensor([1],"float64"),Tensor([1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1],"float64"),], )
paddle.vstack(list[Tensor([1],"float64"),], name=None, )
paddle.vstack(list[Tensor([2],"float64"),Tensor([1, 2],"float64"),], )
paddle.vstack(list[Tensor([2],"float64"),Tensor([1, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([5],"float64"),Tensor([5],"float64"),Tensor([5],"float64"),], )
paddle.vstack(list[Tensor([5],"float64"),Tensor([5],"float64"),Tensor([5],"float64"),], name=None, )
paddle.vstack(list[Tensor([],"float16"),], )
paddle.vstack(list[Tensor([],"float16"),], name=None, )
paddle.vstack(list[Tensor([],"float32"),], )
paddle.vstack(list[Tensor([],"float32"),], name=None, )
paddle.vstack(list[Tensor([],"float64"),Tensor([],"float64"),Tensor([],"float64"),], )
paddle.vstack(list[Tensor([],"float64"),Tensor([],"float64"),Tensor([],"float64"),], name=None, )
paddle.vstack(list[Tensor([],"float64"),], )
paddle.vstack(list[Tensor([],"float64"),], name=None, )
paddle.vstack(list[Tensor([],"int32"),], )
paddle.vstack(list[Tensor([],"int32"),], name=None, )
paddle.vstack(list[Tensor([],"int64"),], )
paddle.vstack(list[Tensor([],"int64"),], name=None, )
