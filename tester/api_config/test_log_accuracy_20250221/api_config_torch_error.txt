paddle.Tensor.__getitem__(Tensor([257],"float64"), slice(-2,None,-1), )
paddle.Tensor.__getitem__(Tensor([3, 3, 3],"float32"), slice(None,None,-1), )
paddle.Tensor.__getitem__(Tensor([3, 3, 3],"float32"), tuple(slice(1,-1,None),slice(0,2,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([3, 3, 3],"float32"), tuple(slice(1,2,None),slice(2,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([3, 3, 3],"float32"), tuple(slice(None,-1,None),slice(None,None,-1),slice(-1,None,None),), )
paddle.Tensor.__getitem__(Tensor([3, 3, 3],"float32"), tuple(slice(None,None,-1),slice(None,1,None),slice(None,-1,None),), )
paddle.Tensor.__getitem__(Tensor([3, 3, 3],"float32"), tuple(slice(None,None,-1),slice(None,None,-1),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([5, 1],"complex128"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([5, 1],"float32"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([5, 2],"complex128"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([5, 2],"float32"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([5, 3],"complex128"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([5, 3],"float32"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,0,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,0,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,0,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-1,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,0,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,0,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,0,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-2,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(-3,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(0,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,0,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,0,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,0,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(1,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,0,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,0,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,0,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(2,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,0,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,0,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,0,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(3,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-2,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-2,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-2,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-3,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-3,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,-3,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,0,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,0,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,0,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,1,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,1,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,1,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,-1),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,-2),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 3, 2],"int64"), tuple(slice(None,None,None),slice(None,None,None),slice(None,None,-3),slice(None,None,None),), )
paddle.Tensor.__getitem__(Tensor([5, 4, 4],"int64"), slice(None,None,-2), )
paddle.Tensor.__getitem__(Tensor([5, 4],"complex128"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([5, 4],"float32"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([5, 5],"float32"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([5, 6],"float32"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([5, 7],"float32"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([5, 8],"float32"), tuple(slice(None,None,None),slice(None,None,-1),), )
paddle.Tensor.__getitem__(Tensor([512, 1234],"float32"), slice(None,None,-1), )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"bool"), list[list[2,-3,-4,],list[-1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"bool"), list[list[2,3,4,],list[1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"complex128"), list[list[2,-3,-4,],list[-1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"complex128"), list[list[2,3,4,],list[1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"complex64"), list[list[2,-3,-4,],list[-1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"complex64"), list[list[2,3,4,],list[1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"float16"), list[list[2,-3,-4,],list[-1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"float16"), list[list[2,3,4,],list[1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"float32"), list[list[2,-3,-4,],list[-1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"float32"), list[list[2,3,4,],list[1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"float64"), list[list[2,-3,-4,],list[-1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"float64"), list[list[2,3,4,],list[1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"int16"), list[list[2,-3,-4,],list[-1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"int16"), list[list[2,3,4,],list[1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"int32"), list[list[2,-3,-4,],list[-1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"int32"), list[list[2,3,4,],list[1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"int64"), list[list[2,-3,-4,],list[-1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"int64"), list[list[2,3,4,],list[1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"int8"), list[list[2,-3,-4,],list[-1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"int8"), list[list[2,3,4,],list[1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"uint8"), list[list[2,-3,-4,],list[-1,2,5,],], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4, 3],"uint8"), list[list[2,3,4,],list[1,2,5,],], )
paddle.Tensor.__setitem__(Tensor([2, 3, 4],"float32"), Tensor([1],"int32"), 6, )
paddle.Tensor.__setitem__(Tensor([2, 6],"float32"), tuple(slice(None,None,None),slice(3,0,-1),), Tensor([3],"float32"), )
paddle.Tensor.__setitem__(Tensor([2, 6],"float32"), tuple(slice(None,None,None),slice(5,0,-2),), Tensor([3],"float32"), )
paddle.Tensor.__setitem__(Tensor([2, 6],"float64"), tuple(1,slice(4,None,-1),), 42, )
paddle.Tensor.__setitem__(Tensor([2, 6],"float64"), tuple(1,slice(4,None,-2),), 42, )
paddle.Tensor.__setitem__(Tensor([200, 4],"float32"), Tensor([100],"int64"), 1.0, )
paddle.Tensor.__setitem__(Tensor([200, 4],"float32"), Tensor([100],"int64"), Tensor([100, 4],"float32"), )
paddle.Tensor.__setitem__(Tensor([200],"bool"), Tensor([200],"int64"), Tensor([200],"bool"), )
paddle.Tensor.__setitem__(Tensor([200],"int64"), Tensor([100],"int64"), Tensor([100],"int64"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), Tensor([3],"int64"), Tensor([3, 3, 1],"bool"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), Tensor([3],"int64"), Tensor([3, 3, 1],"complex128"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), Tensor([3],"int64"), Tensor([3, 3, 1],"complex64"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), Tensor([3],"int64"), Tensor([3, 3, 1],"float16"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), Tensor([3],"int64"), Tensor([3, 3, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), Tensor([3],"int64"), Tensor([3, 3, 1],"float64"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), Tensor([3],"int64"), Tensor([3, 3, 1],"int16"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), Tensor([3],"int64"), Tensor([3, 3, 1],"int32"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), Tensor([3],"int64"), Tensor([3, 3, 1],"int64"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), Tensor([3],"int64"), Tensor([3, 3, 1],"int8"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), Tensor([3],"int64"), Tensor([3, 3, 1],"uint8"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), tuple(1,Tensor([3],"int64"),), Tensor([3, 1],"bool"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), tuple(1,Tensor([3],"int64"),), Tensor([3, 1],"complex128"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), tuple(1,Tensor([3],"int64"),), Tensor([3, 1],"complex64"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), tuple(1,Tensor([3],"int64"),), Tensor([3, 1],"float16"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), tuple(1,Tensor([3],"int64"),), Tensor([3, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), tuple(1,Tensor([3],"int64"),), Tensor([3, 1],"float64"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), tuple(1,Tensor([3],"int64"),), Tensor([3, 1],"int16"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), tuple(1,Tensor([3],"int64"),), Tensor([3, 1],"int32"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), tuple(1,Tensor([3],"int64"),), Tensor([3, 1],"int64"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), tuple(1,Tensor([3],"int64"),), Tensor([3, 1],"int8"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), tuple(1,Tensor([3],"int64"),), Tensor([3, 1],"uint8"), )
paddle.Tensor.__setitem__(Tensor([3, 4, 5],"float32"), tuple(slice(2,0,-1),slice(0,2,None),slice(10,-6,-1),), 6, )
paddle.Tensor.__setitem__(Tensor([3, 4, 5],"float32"), tuple(slice(2,0,-1),slice(0,2,None),slice(None,None,-1),), 6, )
paddle.Tensor.__setitem__(Tensor([300, 4],"float32"), Tensor([1],"int64"), 1.0, )
paddle.Tensor.__setitem__(Tensor([300, 4],"float32"), Tensor([1],"int64"), Tensor([1, 4],"float32"), )
paddle.Tensor.__setitem__(Tensor([300],"bool"), Tensor([300],"int64"), Tensor([300],"bool"), )
paddle.Tensor.__setitem__(Tensor([300],"int64"), Tensor([1],"int64"), Tensor([1],"int64"), )
paddle.Tensor.__setitem__(Tensor([36858],"float32"), Tensor([18],"int64"), 1.0, )
paddle.Tensor.__setitem__(Tensor([36858],"float32"), Tensor([36840],"int64"), 1.0, )
paddle.Tensor.__setitem__(Tensor([38402],"float32"), Tensor([38393],"int64"), 1.0, )
paddle.Tensor.__setitem__(Tensor([38402],"float32"), Tensor([9],"int64"), 1.0, )
paddle.Tensor.__setitem__(Tensor([6, 5, 4, 3],"bool"), list[list[2,3,4,],list[1,2,5,],], 100, )
paddle.Tensor.__setitem__(Tensor([6, 5, 4, 3],"complex128"), list[list[2,3,4,],list[1,2,5,],], 100, )
paddle.Tensor.__setitem__(Tensor([6, 5, 4, 3],"complex64"), list[list[2,3,4,],list[1,2,5,],], 100, )
paddle.Tensor.__setitem__(Tensor([6, 5, 4, 3],"float16"), list[list[2,3,4,],list[1,2,5,],], 100, )
paddle.Tensor.__setitem__(Tensor([6, 5, 4, 3],"float32"), list[list[2,3,4,],list[1,2,5,],], 100, )
paddle.Tensor.__setitem__(Tensor([6, 5, 4, 3],"float64"), list[list[2,3,4,],list[1,2,5,],], 100, )
paddle.Tensor.__setitem__(Tensor([6, 5, 4, 3],"int16"), list[list[2,3,4,],list[1,2,5,],], 100, )
paddle.Tensor.__setitem__(Tensor([6, 5, 4, 3],"int32"), list[list[2,3,4,],list[1,2,5,],], 100, )
paddle.Tensor.__setitem__(Tensor([6, 5, 4, 3],"int64"), list[list[2,3,4,],list[1,2,5,],], 100, )
paddle.Tensor.__setitem__(Tensor([6, 5, 4, 3],"int8"), list[list[2,3,4,],list[1,2,5,],], 100, )
paddle.Tensor.__setitem__(Tensor([6, 5, 4, 3],"uint8"), list[list[2,3,4,],list[1,2,5,],], 100, )
paddle.Tensor.__setitem__(Tensor([6380, 4],"float32"), Tensor([1],"int64"), 1.0, )
paddle.Tensor.__setitem__(Tensor([6380, 4],"float32"), Tensor([1],"int64"), Tensor([1, 4],"float32"), )
paddle.Tensor.__setitem__(Tensor([6380],"int64"), Tensor([1],"int64"), Tensor([1],"int64"), )
paddle.Tensor.__setitem__(Tensor([6400],"float32"), Tensor([6391],"int64"), 1.0, )
paddle.Tensor.__setitem__(Tensor([6400],"float32"), Tensor([9],"int64"), 1.0, )
paddle.Tensor.__setitem__(Tensor([8550, 4],"float32"), Tensor([1],"int64"), 1.0, )
paddle.Tensor.__setitem__(Tensor([8550, 4],"float32"), Tensor([1],"int64"), Tensor([1, 4],"float32"), )
paddle.Tensor.__setitem__(Tensor([8550],"int64"), Tensor([1],"int64"), Tensor([1],"int64"), )
paddle.Tensor.__setitem__(Tensor([900, 4],"float32"), Tensor([1],"int64"), 1.0, )
paddle.Tensor.__setitem__(Tensor([900, 4],"float32"), Tensor([1],"int64"), Tensor([1, 4],"float32"), )
paddle.Tensor.__setitem__(Tensor([900],"float32"), Tensor([1],"int64"), 0.69235862, )
paddle.Tensor.__setitem__(Tensor([900],"float32"), Tensor([1],"int64"), 0.80384695, )
paddle.Tensor.__setitem__(Tensor([900],"float32"), Tensor([1],"int64"), 0.84785398, )
paddle.Tensor.__setitem__(Tensor([900],"float32"), Tensor([1],"int64"), 0.87436636, )
paddle.Tensor.__setitem__(Tensor([900],"float32"), Tensor([1],"int64"), 0.89401316, )
paddle.Tensor.__setitem__(Tensor([900],"float32"), Tensor([1],"int64"), 0.89461746, )
paddle.Tensor.__setitem__(Tensor([900],"float32"), Tensor([1],"int64"), 0.89489303, )
paddle.Tensor.__setitem__(Tensor([900],"float32"), Tensor([1],"int64"), 0.90287573, )
paddle.Tensor.__setitem__(Tensor([900],"float32"), Tensor([1],"int64"), 0.91442656, )
paddle.Tensor.__setitem__(Tensor([900],"float32"), Tensor([1],"int64"), 0.91604155, )
paddle.Tensor.__setitem__(Tensor([900],"float32"), Tensor([1],"int64"), 0.91644, )
paddle.Tensor.__setitem__(Tensor([900],"float32"), Tensor([1],"int64"), 0.91644175, )
paddle.Tensor.__setitem__(Tensor([900],"float32"), Tensor([1],"int64"), 0.91919152, )
paddle.Tensor.__setitem__(Tensor([900],"float32"), Tensor([1],"int64"), 0.9192438, )
paddle.Tensor.__setitem__(Tensor([900],"int64"), Tensor([1],"int64"), Tensor([1],"int64"), )
paddle.Tensor.argmax(Tensor([4, 50],"float32"), axis=1, dtype="int32", )
paddle.Tensor.argmax(Tensor([8, 50],"float32"), axis=1, dtype="int32", )
paddle.Tensor.cumsum(Tensor([168],"int64"), )
paddle.Tensor.cumsum(Tensor([3, 3],"int64"), )
paddle.Tensor.cumsum(Tensor([3, 40],"int64"), )
paddle.Tensor.cumsum(Tensor([30, 3],"int64"), )
paddle.Tensor.cumsum(Tensor([300, 120],"int64"), )
paddle.Tensor.cumsum(Tensor([300, 40],"int64"), )
paddle.Tensor.cumsum(Tensor([50, 3],"int64"), )
paddle.Tensor.cumsum(Tensor([6, 8, 9, 18],"int64"), )
paddle.Tensor.diagonal(Tensor([2, 2],"float32"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([3, 3],"float64"), axis1=-2, axis2=-1, )
paddle.Tensor.diff(x=Tensor([10, 4],"float64"), axis=0, prepend=Tensor([4, 4],"float64"), append=Tensor([4, 4],"float64"), )
paddle.Tensor.diff(x=Tensor([10],"float64"), prepend=Tensor([4],"float64"), )
paddle.Tensor.diff(x=Tensor([10],"float64"), prepend=Tensor([4],"float64"), append=Tensor([4],"float64"), )
paddle.Tensor.diff(x=Tensor([4, 4, 4, 4],"float64"), axis=-2, )
paddle.Tensor.expand(Tensor([],"float32"), tuple(Tensor([],"int64"),), )
paddle.Tensor.fill_diagonal_(Tensor([2, 2, 2],"float32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([2, 2, 2],"float64"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([2, 2, 2],"int32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([2, 2, 2],"int64"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3, 3],"float32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3, 3],"float64"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3, 3],"int32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3, 3],"int64"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"bool"), 0, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float32"), 1, offset=2, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float32"), 4, 1, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float64"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float64"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float64"), 1, offset=2, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float64"), 4, 1, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int32"), 1, offset=2, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int32"), 4, 1, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int64"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int64"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int64"), 1, offset=2, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int64"), 4, 1, False, )
paddle.Tensor.fill_diagonal_(Tensor([5, 3],"float32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([5, 3],"float64"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([5, 3],"int32"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([5, 3],"int64"), 1, 0, False, )
paddle.Tensor.fill_diagonal_(Tensor([7, 3],"float32"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([7, 3],"float32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 3],"float32"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 3],"float64"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([7, 3],"float64"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 3],"float64"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 3],"int32"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([7, 3],"int32"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 3],"int32"), 4, 0, True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 3],"int64"), 1, offset=0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([7, 3],"int64"), 1, offset=0, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([7, 3],"int64"), 4, 0, True, )
paddle.Tensor.matmul(Tensor([2, 3, 4, 5],"complex128"), Tensor([2, 3, 5, 4],"float64"), )
paddle.Tensor.matmul(Tensor([2, 3, 4, 5],"complex64"), Tensor([2, 3, 5, 4],"float32"), )
paddle.Tensor.matmul(Tensor([2, 3, 4, 5],"float32"), Tensor([2, 3, 5, 4],"complex64"), )
paddle.Tensor.matmul(Tensor([2, 3, 4, 5],"float64"), Tensor([2, 3, 5, 4],"complex128"), )
paddle.Tensor.mean(Tensor([17185, 1],"int64"), )
paddle.Tensor.mean(Tensor([171888, 1],"int64"), )
paddle.Tensor.mean(Tensor([171888],"int32"), )
paddle.Tensor.mean(Tensor([17254, 1],"int64"), )
paddle.Tensor.mean(Tensor([1788],"int32"), )
paddle.Tensor.mean(Tensor([1788],"int64"), )
paddle.Tensor.mean(Tensor([1],"int32"), )
paddle.Tensor.mean(Tensor([2, 1],"int64"), )
paddle.Tensor.mean(Tensor([2, 28, 28],"int32"), )
paddle.Tensor.mean(Tensor([2002],"int32"), )
paddle.Tensor.mean(Tensor([2002],"int64"), )
paddle.Tensor.mean(Tensor([2],"int32"), )
paddle.Tensor.mean(Tensor([],"bool"), )
paddle.Tensor.mean(Tensor([],"int64"), )
paddle.Tensor.norm(Tensor([1, 2, 2],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([2, 2, 2],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.norm(Tensor([2, 2],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.normal_(Tensor([1000, 784],"complex64"), complex(-3.0,-3.0), 5, )
paddle.Tensor.normal_(Tensor([1000, 784],"complex64"), mean=complex(-2.0,-2.0), std=2, )
paddle.Tensor.outer(x=Tensor([1, 4],"float32"), y=Tensor([1, 4],"float32"), )
paddle.Tensor.outer(x=Tensor([1, 4],"float64"), y=Tensor([1, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 1],"float64"), y=Tensor([4, 1],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 3],"float64"), y=Tensor([4, 2, 3],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.Tensor.outer(x=Tensor([4, 2],"float64"), y=Tensor([2, 3, 4],"float64"), )
paddle.Tensor.quantile(Tensor([3, 6, 3, 4, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.Tensor.quantile(Tensor([3, 6, 3, 4, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.Tensor.reshape(Tensor([1, 1024, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 11, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 1100, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 1156, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 1296, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 1444, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 1600, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 1764, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 18, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 1936, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 21, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 2116, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 2116, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 22, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 2304, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 2304, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 2500, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 256, 1024],"float32"), list[0,0,32,32,], )
paddle.Tensor.reshape(Tensor([1, 256, 15872],"float32"), list[0,0,124,128,], )
paddle.Tensor.reshape(Tensor([1, 256, 16384],"float32"), list[0,0,128,128,], )
paddle.Tensor.reshape(Tensor([1, 256, 256],"float32"), list[0,0,16,16,], )
paddle.Tensor.reshape(Tensor([1, 256, 3968],"float32"), list[0,0,62,64,], )
paddle.Tensor.reshape(Tensor([1, 256, 4096],"float32"), list[0,0,64,64,], )
paddle.Tensor.reshape(Tensor([1, 256, 992],"float32"), list[0,0,31,32,], )
paddle.Tensor.reshape(Tensor([1, 2704, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 2916, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 300, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 3136, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 324, 512],"float32"), list[0,0,8,64,], )
paddle.Tensor.reshape(Tensor([1, 3364, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 3600, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([1, 400, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 400, 512],"float32"), list[0,0,8,64,], )
paddle.Tensor.reshape(Tensor([1, 484, 512],"float32"), list[0,0,8,64,], )
paddle.Tensor.reshape(Tensor([1, 492, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 496, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 500, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 529, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([1, 529, 384],"float32"), list[0,0,8,48,], )
paddle.Tensor.reshape(Tensor([1, 768, 1024],"float32"), list[0,0,32,32,], )
paddle.Tensor.reshape(Tensor([1, 768, 15872],"float32"), list[0,0,124,128,], )
paddle.Tensor.reshape(Tensor([1, 768, 16384],"float32"), list[0,0,128,128,], )
paddle.Tensor.reshape(Tensor([1, 768, 256],"float32"), list[0,0,16,16,], )
paddle.Tensor.reshape(Tensor([1, 768, 3968],"float32"), list[0,0,62,64,], )
paddle.Tensor.reshape(Tensor([1, 768, 4096],"float32"), list[0,0,64,64,], )
paddle.Tensor.reshape(Tensor([1, 768, 992],"float32"), list[0,0,31,32,], )
paddle.Tensor.reshape(Tensor([1, 9, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([2, 100, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 100, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 121, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 121, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 144, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 144, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 169, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 169, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 196, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 196, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 225, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 225, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([2, 225, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 256, 1024],"float32"), list[0,0,32,32,], )
paddle.Tensor.reshape(Tensor([2, 256, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 256, 16384],"float32"), list[0,0,128,128,], )
paddle.Tensor.reshape(Tensor([2, 256, 256],"float32"), list[0,0,16,16,], )
paddle.Tensor.reshape(Tensor([2, 256, 4096],"float32"), list[0,0,64,64,], )
paddle.Tensor.reshape(Tensor([2, 256, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 256, 65536],"float32"), list[0,0,256,256,], )
paddle.Tensor.reshape(Tensor([2, 289, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 289, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([2, 289, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 300, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([2, 324, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 324, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 361, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 361, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 400, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 400, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([2, 400, 384],"float32"), list[0,0,8,48,], )
paddle.Tensor.reshape(Tensor([2, 400, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 400, 512],"float32"), list[0,0,8,64,], )
paddle.Tensor.reshape(Tensor([2, 441, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 441, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 484, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 484, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 492, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([2, 498, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([2, 500, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([2, 529, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 529, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 576, 1024],"float32"), list[0,0,4,256,], )
paddle.Tensor.reshape(Tensor([2, 576, 512],"float32"), list[0,0,4,128,], )
paddle.Tensor.reshape(Tensor([2, 768, 1024],"float32"), list[0,0,32,32,], )
paddle.Tensor.reshape(Tensor([2, 768, 16384],"float32"), list[0,0,128,128,], )
paddle.Tensor.reshape(Tensor([2, 768, 256],"float32"), list[0,0,16,16,], )
paddle.Tensor.reshape(Tensor([2, 768, 4096],"float32"), list[0,0,64,64,], )
paddle.Tensor.reshape(Tensor([4, 100, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([4, 128, 1280],"float32"), list[0,128,16,80,], )
paddle.Tensor.reshape(Tensor([4, 13, 1152],"float32"), tuple(0,13,3,12,32,), )
paddle.Tensor.reshape(Tensor([4, 13, 12, 32],"float32"), tuple(0,13,384,), )
paddle.Tensor.reshape(Tensor([4, 13, 384],"float32"), list[0,13,12,32,], )
paddle.Tensor.reshape(Tensor([4, 256, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([4, 256, 640],"float32"), list[0,256,8,80,], )
paddle.Tensor.reshape(Tensor([4, 300, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([4, 320, 1152],"float32"), tuple(0,-1,3,12,32,), )
paddle.Tensor.reshape(Tensor([4, 320, 12, 32],"float32"), tuple(0,-1,384,), )
paddle.Tensor.reshape(Tensor([4, 384, 320],"float32"), list[0,384,4,80,], )
paddle.Tensor.reshape(Tensor([4, 40, 120],"float32"), list[0,1,40,120,], )
paddle.Tensor.reshape(Tensor([4, 40, 256],"float32"), list[0,1,40,256,], )
paddle.Tensor.reshape(Tensor([4, 40, 360],"float32"), tuple(0,-1,3,8,15,), )
paddle.Tensor.reshape(Tensor([4, 40, 768],"float32"), tuple(0,-1,3,8,32,), )
paddle.Tensor.reshape(Tensor([4, 40, 768],"float32"), tuple(0,40,2,12,32,), )
paddle.Tensor.reshape(Tensor([4, 40, 8, 15],"float32"), tuple(0,-1,120,), )
paddle.Tensor.reshape(Tensor([4, 40, 8, 32],"float32"), tuple(0,-1,256,), )
paddle.Tensor.reshape(Tensor([4, 400, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([4, 400, 512],"float32"), list[0,0,8,64,], )
paddle.Tensor.reshape(Tensor([4, 5, 1152],"float32"), tuple(0,5,3,12,32,), )
paddle.Tensor.reshape(Tensor([4, 5, 12, 32],"float32"), tuple(0,5,384,), )
paddle.Tensor.reshape(Tensor([4, 5, 384],"float32"), list[0,5,12,32,], )
paddle.Tensor.reshape(Tensor([4, 500, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([4, 640, 768],"float32"), tuple(0,-1,3,8,32,), )
paddle.Tensor.reshape(Tensor([4, 640, 8, 32],"float32"), tuple(0,-1,256,), )
paddle.Tensor.reshape(Tensor([4, 725, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([8, 289, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.reshape(Tensor([8, 40, 120],"float32"), list[0,1,40,120,], )
paddle.Tensor.reshape(Tensor([8, 40, 360],"float32"), tuple(0,-1,3,8,15,), )
paddle.Tensor.reshape(Tensor([8, 40, 8, 15],"float32"), tuple(0,-1,120,), )
paddle.Tensor.reshape(Tensor([8, 500, 256],"float32"), list[0,0,8,32,], )
paddle.Tensor.slice_scatter(Tensor([8, 6],"float64"), Tensor([8, 3],"float64"), list[1,], list[0,], list[6,], list[2,], )
paddle.Tensor.sort(Tensor([1638400],"float32"), descending=True, )
paddle.Tensor.sort(Tensor([3276800],"float32"), descending=True, )
paddle.Tensor.sort(Tensor([3686400],"float32"), descending=True, )
paddle.Tensor.unsqueeze(Tensor([1, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([10, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([10164, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([10164, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([10285, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([10],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([11, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([11109, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([11109, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([11],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([12, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([12096, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([12096, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([12],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([13, 13],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([13, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([13],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([14, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([14],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([15, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([15],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([16, 128],"float64"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([16, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([16, 512],"float64"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([16],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([17, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([17],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([18, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([18],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([19, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([19],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([1],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([1],"float64"), list[1,], )
paddle.Tensor.unsqueeze(Tensor([2, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([2, 8],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([20, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([20],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([21, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([2100, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([2100, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([2125, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([21504, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([21504, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([21],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([24, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([24276, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([24276, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([24],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([25, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([2541, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([2541, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([2577, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([25],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([26, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([26],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([27, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([27216, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([27216, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([27],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([2],"float32"), list[0,2,3,], )
paddle.Tensor.unsqueeze(Tensor([2],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([3, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([3024, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([3024, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([30324, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([30324, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([3060, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([33600, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([33600, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([3549, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([3549, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([3598, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([36858, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([37044, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([37044, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([38402, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([3],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([4, 4],"float32"), list[2,], )
paddle.Tensor.unsqueeze(Tensor([4, 8],"float32"), list[2,], )
paddle.Tensor.unsqueeze(Tensor([40656, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([40656, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([4116, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([4116, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([4165, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([44436, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([44436, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([4725, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([4725, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([4789, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([48384, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([48384, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([5, 5],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([52500, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([52500, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([5376, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([5376, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([5440, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([56784, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([56784, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([6069, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([6069, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([61236, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([61236, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([6150, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([6400, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([65856, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([65856, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([6804, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([6804, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([6885, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([7, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([70644, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([70644, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([75600, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([75600, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([7581, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([7581, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([7681, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([7],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([8, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([8, 4],"float64"), list[2,], )
paddle.Tensor.unsqueeze(Tensor([8400, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([8400, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([8500, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([8580, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([8],"float32"), list[0,2,3,], )
paddle.Tensor.unsqueeze(Tensor([8],"float32"), list[1,2,], )
paddle.Tensor.unsqueeze(Tensor([9, 2],"float32"), list[2,3,], )
paddle.Tensor.unsqueeze(Tensor([9261, 1],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([9261, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([9382, 2],"float32"), list[0,1,], )
paddle.Tensor.unsqueeze(Tensor([9],"float32"), list[1,2,], )
paddle.allclose(x=Tensor([2, 2, 2, 3],"float64"), y=Tensor([2, 2, 2, 3],"float64"), rtol=-3.0, atol=-2.0, )
paddle.argmax(x=Tensor([3, 1],"int64"), keepdim=None, )
paddle.argmin(x=Tensor([3, 1],"int64"), keepdim=None, )
paddle.atleast_1d(Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_1d(Tensor([1, 1, 1],"float64"), Tensor([2],"float64"), )
paddle.atleast_1d(Tensor([1, 1],"float64"), )
paddle.atleast_1d(Tensor([1, 2],"float64"), Tensor([3],"float64"), )
paddle.atleast_1d(Tensor([1],"float64"), )
paddle.atleast_1d(Tensor([2, 1],"float64"), Tensor([3],"float64"), )
paddle.atleast_1d(Tensor([2, 3, 1],"float64"), Tensor([1, 3],"float64"), )
paddle.atleast_1d(Tensor([2, 3, 1],"float64"), Tensor([3],"float64"), )
paddle.atleast_1d(Tensor([2],"float32"), Tensor([2],"float64"), )
paddle.atleast_1d(Tensor([3, 2],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_1d(Tensor([3, 4, 2],"float64"), )
paddle.atleast_1d(Tensor([],"float16"), )
paddle.atleast_1d(Tensor([],"float32"), )
paddle.atleast_1d(Tensor([],"float64"), )
paddle.atleast_1d(Tensor([],"float64"), Tensor([2],"float64"), )
paddle.atleast_1d(Tensor([],"int32"), )
paddle.atleast_1d(Tensor([],"int64"), )
paddle.atleast_2d(Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_2d(Tensor([1, 1, 1],"float64"), Tensor([2],"float64"), )
paddle.atleast_2d(Tensor([1, 1],"float64"), )
paddle.atleast_2d(Tensor([1, 2],"float64"), Tensor([3],"float64"), )
paddle.atleast_2d(Tensor([1],"float64"), )
paddle.atleast_2d(Tensor([2, 1],"float64"), Tensor([3],"float64"), )
paddle.atleast_2d(Tensor([2, 3, 1],"float64"), Tensor([1, 3],"float64"), )
paddle.atleast_2d(Tensor([2, 3, 1],"float64"), Tensor([3],"float64"), )
paddle.atleast_2d(Tensor([2],"float32"), Tensor([2],"float64"), )
paddle.atleast_2d(Tensor([2],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 2],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_2d(Tensor([3, 4, 2],"float64"), )
paddle.atleast_2d(Tensor([],"float16"), )
paddle.atleast_2d(Tensor([],"float32"), )
paddle.atleast_2d(Tensor([],"float64"), )
paddle.atleast_2d(Tensor([],"float64"), Tensor([2],"float64"), )
paddle.atleast_2d(Tensor([],"int32"), )
paddle.atleast_2d(Tensor([],"int64"), )
paddle.atleast_3d(Tensor([1, 1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_3d(Tensor([1, 1, 1],"float64"), Tensor([2],"float64"), )
paddle.atleast_3d(Tensor([1, 1],"float64"), )
paddle.atleast_3d(Tensor([1, 2],"float64"), Tensor([3],"float64"), )
paddle.atleast_3d(Tensor([1],"float64"), )
paddle.atleast_3d(Tensor([2, 1],"float64"), Tensor([3],"float64"), )
paddle.atleast_3d(Tensor([2, 3, 1],"float64"), Tensor([1, 3],"float64"), )
paddle.atleast_3d(Tensor([2, 3, 1],"float64"), Tensor([3],"float64"), )
paddle.atleast_3d(Tensor([2],"float32"), Tensor([2],"float64"), )
paddle.atleast_3d(Tensor([2],"float64"), Tensor([1, 2, 1],"float64"), )
paddle.atleast_3d(Tensor([2],"float64"), Tensor([1, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 2],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2, 5],"float64"), )
paddle.atleast_3d(Tensor([3, 4, 2],"float64"), )
paddle.atleast_3d(Tensor([],"float16"), )
paddle.atleast_3d(Tensor([],"float32"), )
paddle.atleast_3d(Tensor([],"float64"), )
paddle.atleast_3d(Tensor([],"float64"), Tensor([2],"float64"), )
paddle.atleast_3d(Tensor([],"int32"), )
paddle.atleast_3d(Tensor([],"int64"), )
paddle.clip(x=Tensor([3],"float64"), )
paddle.cumprod(Tensor([10, 20, 1],"float32"), -1, dtype="float32", )
paddle.cumsum(Tensor([10, 12],"float16"), dtype="float16", )
paddle.cumsum(Tensor([10, 12],"float32"), dtype="float32", )
paddle.cumsum(Tensor([10, 20, 1],"float32"), dtype="float32", )
paddle.cumsum(Tensor([200],"float32"), dtype="float32", )
paddle.cumsum(Tensor([2],"int32"), )
paddle.cumsum(Tensor([3, 4],"int64"), )
paddle.cumsum(Tensor([3, 4],"int64"), dtype="float64", )
paddle.cumsum(Tensor([3, 4],"int64"), dtype=type(numpy.int32), )
paddle.cumsum(Tensor([4],"int32"), )
paddle.cumsum(Tensor([5],"int32"), )
paddle.cumsum(Tensor([],"float32"), )
paddle.cumsum(x=Tensor([1, 2, 1, 3],"float64"), axis=Tensor([1],"float64"), )
paddle.cumsum(x=Tensor([6],"float32"), )
paddle.cumsum(x=Tensor([6],"float64"), )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=Tensor([],"float32"), axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=Tensor([],"float32"), axis=0, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float64"), x=None, dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([3, 3, 4],"float32"), x=None, dx=Tensor([],"int64"), axis=1, )
paddle.cumulative_trapezoid(y=Tensor([3, 3, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
paddle.dot(Tensor([0, 0],"float32"), Tensor([0, 0],"float32"), )
paddle.dot(Tensor([2, 2],"float32"), Tensor([2, 2],"float32"), )
paddle.dot(x=Tensor([2, 3],"float64"), y=Tensor([2, 3],"float64"), )
paddle.dot(x=Tensor([6],"int32"), y=Tensor([6],"int32"), )
paddle.dot(x=Tensor([6],"int64"), y=Tensor([6],"int64"), )
paddle.dsplit(Tensor([4, 2, 6],"bool"), 3, )
paddle.dsplit(Tensor([4, 2, 6],"float16"), 3, )
paddle.dsplit(Tensor([4, 2, 6],"float32"), 3, )
paddle.dsplit(Tensor([4, 2, 6],"float64"), 3, )
paddle.dsplit(Tensor([4, 2, 6],"int32"), 3, )
paddle.dsplit(Tensor([4, 2, 6],"int64"), 3, )
paddle.dsplit(Tensor([4, 2, 6],"uint8"), 3, )
paddle.dsplit(Tensor([4, 3, 6],"int64"), 2, )
paddle.dsplit(Tensor([4, 3, 6],"int64"), 3, )
paddle.empty_like(x=Tensor([2],"bool"), dtype="float16", )
paddle.empty_like(x=Tensor([2],"bool"), dtype="float32", )
paddle.empty_like(x=Tensor([2],"bool"), dtype="float64", )
paddle.empty_like(x=Tensor([2],"bool"), dtype="int32", )
paddle.empty_like(x=Tensor([2],"bool"), dtype="int64", )
paddle.empty_like(x=Tensor([2],"bool"), dtype=type(numpy.float16), )
paddle.empty_like(x=Tensor([2],"bool"), dtype=type(numpy.float32), )
paddle.empty_like(x=Tensor([2],"bool"), dtype=type(numpy.float64), )
paddle.empty_like(x=Tensor([2],"bool"), dtype=type(numpy.int32), )
paddle.empty_like(x=Tensor([2],"bool"), dtype=type(numpy.int64), )
paddle.empty_like(x=Tensor([2],"float16"), dtype="float16", )
paddle.empty_like(x=Tensor([2],"float16"), dtype="float32", )
paddle.empty_like(x=Tensor([2],"float16"), dtype="float64", )
paddle.empty_like(x=Tensor([2],"float16"), dtype="int32", )
paddle.empty_like(x=Tensor([2],"float16"), dtype="int64", )
paddle.empty_like(x=Tensor([2],"float16"), dtype=type(numpy.float16), )
paddle.empty_like(x=Tensor([2],"float16"), dtype=type(numpy.float32), )
paddle.empty_like(x=Tensor([2],"float16"), dtype=type(numpy.float64), )
paddle.empty_like(x=Tensor([2],"float16"), dtype=type(numpy.int32), )
paddle.empty_like(x=Tensor([2],"float16"), dtype=type(numpy.int64), )
paddle.empty_like(x=Tensor([2],"float32"), dtype="float16", )
paddle.empty_like(x=Tensor([2],"float32"), dtype="float32", )
paddle.empty_like(x=Tensor([2],"float32"), dtype="float64", )
paddle.empty_like(x=Tensor([2],"float32"), dtype="int32", )
paddle.empty_like(x=Tensor([2],"float32"), dtype="int64", )
paddle.empty_like(x=Tensor([2],"float32"), dtype=type(numpy.float16), )
paddle.empty_like(x=Tensor([2],"float32"), dtype=type(numpy.float32), )
paddle.empty_like(x=Tensor([2],"float32"), dtype=type(numpy.float64), )
paddle.empty_like(x=Tensor([2],"float32"), dtype=type(numpy.int32), )
paddle.empty_like(x=Tensor([2],"float32"), dtype=type(numpy.int64), )
paddle.empty_like(x=Tensor([2],"float64"), dtype="float16", )
paddle.empty_like(x=Tensor([2],"float64"), dtype="float32", )
paddle.empty_like(x=Tensor([2],"float64"), dtype="float64", )
paddle.empty_like(x=Tensor([2],"float64"), dtype="int32", )
paddle.empty_like(x=Tensor([2],"float64"), dtype="int64", )
paddle.empty_like(x=Tensor([2],"float64"), dtype=type(numpy.float16), )
paddle.empty_like(x=Tensor([2],"float64"), dtype=type(numpy.float32), )
paddle.empty_like(x=Tensor([2],"float64"), dtype=type(numpy.float64), )
paddle.empty_like(x=Tensor([2],"float64"), dtype=type(numpy.int32), )
paddle.empty_like(x=Tensor([2],"float64"), dtype=type(numpy.int64), )
paddle.empty_like(x=Tensor([2],"int32"), dtype="float16", )
paddle.empty_like(x=Tensor([2],"int32"), dtype="float32", )
paddle.empty_like(x=Tensor([2],"int32"), dtype="float64", )
paddle.empty_like(x=Tensor([2],"int32"), dtype="int32", )
paddle.empty_like(x=Tensor([2],"int32"), dtype="int64", )
paddle.empty_like(x=Tensor([2],"int32"), dtype=type(numpy.float16), )
paddle.empty_like(x=Tensor([2],"int32"), dtype=type(numpy.float32), )
paddle.empty_like(x=Tensor([2],"int32"), dtype=type(numpy.float64), )
paddle.empty_like(x=Tensor([2],"int32"), dtype=type(numpy.int32), )
paddle.empty_like(x=Tensor([2],"int32"), dtype=type(numpy.int64), )
paddle.empty_like(x=Tensor([2],"int64"), dtype="float16", )
paddle.empty_like(x=Tensor([2],"int64"), dtype="float32", )
paddle.empty_like(x=Tensor([2],"int64"), dtype="float64", )
paddle.empty_like(x=Tensor([2],"int64"), dtype="int32", )
paddle.empty_like(x=Tensor([2],"int64"), dtype="int64", )
paddle.empty_like(x=Tensor([2],"int64"), dtype=type(numpy.float16), )
paddle.empty_like(x=Tensor([2],"int64"), dtype=type(numpy.float32), )
paddle.empty_like(x=Tensor([2],"int64"), dtype=type(numpy.float64), )
paddle.empty_like(x=Tensor([2],"int64"), dtype=type(numpy.int32), )
paddle.empty_like(x=Tensor([2],"int64"), dtype=type(numpy.int64), )
paddle.eye(1, dtype="float32", )
paddle.eye(1, dtype="float64", )
paddle.eye(10, dtype="int64", )
paddle.eye(10, num_columns=7, dtype="float64", )
paddle.eye(2, dtype="float32", )
paddle.eye(2, dtype=Dtype(float32), )
paddle.eye(2, dtype=Dtype(float64), )
paddle.eye(num_rows=3, dtype="float16", )
paddle.eye(num_rows=5, dtype="int64", )
paddle.eye(num_rows=5, dtype=type(numpy.float16), )
paddle.eye(num_rows=5, num_columns=3, dtype="float32", )
paddle.eye(num_rows=5, num_columns=3, dtype="float64", )
paddle.fft.rfft2(x=Tensor([2, 2, 2],"float64"), s=list[1,2,], norm="ortho", axes=None, )
paddle.flip(Tensor([2, 3],"float32"), 1, )
paddle.flip(Tensor([20, 3, 112, 112],"float32"), axis=-1, )
paddle.flip(Tensor([32, 3, 112, 112],"float32"), axis=-1, )
paddle.flip(Tensor([52, 3, 112, 112],"float32"), axis=-1, )
paddle.flip(Tensor([64, 3, 112, 112],"float32"), axis=-1, )
paddle.full(list[0,], 0, "int64", )
paddle.full(list[1,1,], 1, dtype="int64", )
paddle.full(list[1,1,], 1, dtype=VarType(int64), )
paddle.full(list[1,1,], 2, dtype="int32", )
paddle.full(list[1,1,], 4, dtype="int32", )
paddle.full(list[1,1,], True, dtype="bool", )
paddle.full(list[1,100,], 2, dtype="int64", )
paddle.full(list[1,1001,], -1, dtype="int32", )
paddle.full(list[1,1002,], -1, dtype="int32", )
paddle.full(list[1,1003,], -1, dtype="int32", )
paddle.full(list[1,1004,], -1, dtype="int32", )
paddle.full(list[1,1005,], -1, dtype="int32", )
paddle.full(list[1,1024,1,], 32, dtype="float32", )
paddle.full(list[1,1071,], -1, dtype="int32", )
paddle.full(list[1,1283,], -1, dtype="int32", )
paddle.full(list[1,1333,], -1, dtype="int32", )
paddle.full(list[1,138120,], -1, dtype="int32", )
paddle.full(list[1,1406,], -1, dtype="int32", )
paddle.full(list[1,1408,], -1, dtype="int32", )
paddle.full(list[1,144,144,], -100.0, VarType(float32), )
paddle.full(list[1,144,144,], 0.0, VarType(float32), )
paddle.full(list[1,1473,], -1, dtype="int32", )
paddle.full(list[1,1484,], -1, dtype="int32", )
paddle.full(list[1,150402,], -1, dtype="int32", )
paddle.full(list[1,153450,], -1, dtype="int32", )
paddle.full(list[1,158580,], -1, dtype="int32", )
paddle.full(list[1,1601,], -1, dtype="int32", )
paddle.full(list[1,16384,1,], 8, dtype="float32", )
paddle.full(list[1,1652,], -1, dtype="int32", )
paddle.full(list[1,1665,], -1, dtype="int32", )
paddle.full(list[1,1669,], -1, dtype="int32", )
paddle.full(list[1,1677,], -1, dtype="int32", )
paddle.full(list[1,168795,], -1, dtype="int32", )
paddle.full(list[1,1709,], -1, dtype="int32", )
paddle.full(list[1,1711,], -1, dtype="int32", )
paddle.full(list[1,171888,], -1, dtype="int32", )
paddle.full(list[1,177276,], -1, dtype="int32", )
paddle.full(list[1,1775,], -1, dtype="int32", )
paddle.full(list[1,1816,], -1, dtype="int32", )
paddle.full(list[1,182391,], -1, dtype="int32", )
paddle.full(list[1,1856,], -1, dtype="int32", )
paddle.full(list[1,185691,], -1, dtype="int32", )
paddle.full(list[1,1900,], -1, dtype="int32", )
paddle.full(list[1,191301,], -1, dtype="int32", )
paddle.full(list[1,192,], 11, dtype="int64", )
paddle.full(list[1,1926,], -1, dtype="int32", )
paddle.full(list[1,196,], 11, dtype="int64", )
paddle.full(list[1,1962,], -1, dtype="int32", )
paddle.full(list[1,196416,], -1, dtype="int32", )
paddle.full(list[1,196944,], -1, dtype="int32", )
paddle.full(list[1,1978,], -1, dtype="int32", )
paddle.full(list[1,1984,], -1, dtype="int32", )
paddle.full(list[1,200,], 11, dtype="int64", )
paddle.full(list[1,200,], 4, dtype="int64", )
paddle.full(list[1,2001,], -1, dtype="int32", )
paddle.full(list[1,2002,], -1, dtype="int32", )
paddle.full(list[1,2003,], -1, dtype="int32", )
paddle.full(list[1,2004,], -1, dtype="int32", )
paddle.full(list[1,2005,], -1, dtype="int32", )
paddle.full(list[1,205923,], -1, dtype="int32", )
paddle.full(list[1,211038,], -1, dtype="int32", )
paddle.full(list[1,214107,], -1, dtype="int32", )
paddle.full(list[1,214830,], -1, dtype="int32", )
paddle.full(list[1,214848,], -1, dtype="int32", )
paddle.full(list[1,217413,], -1, dtype="int32", )
paddle.full(list[1,220968,], -1, dtype="int32", )
paddle.full(list[1,227124,], -1, dtype="int32", )
paddle.full(list[1,227919,], -1, dtype="int32", )
paddle.full(list[1,229152,], -1, dtype="int32", )
paddle.full(list[1,230202,], -1, dtype="int32", )
paddle.full(list[1,242991,], -1, dtype="int32", )
paddle.full(list[1,243474,], -1, dtype="int32", )
paddle.full(list[1,245520,], -1, dtype="int32", )
paddle.full(list[1,249405,], -1, dtype="int32", )
paddle.full(list[1,252195,], -1, dtype="int32", )
paddle.full(list[1,253728,], -1, dtype="int32", )
paddle.full(list[1,260865,], -1, dtype="int32", )
paddle.full(list[1,261888,], -1, dtype="int32", )
paddle.full(list[1,267030,], -1, dtype="int32", )
paddle.full(list[1,276210,], -1, dtype="int32", )
paddle.full(list[1,277539,], -1, dtype="int32", )
paddle.full(list[1,294624,], -1, dtype="int32", )
paddle.full(list[1,295443,], -1, dtype="int32", )
paddle.full(list[1,295647,], -1, dtype="int32", )
paddle.full(list[1,300,], 11, dtype="int64", )
paddle.full(list[1,300,], 2, dtype="int64", )
paddle.full(list[1,300,], 4, dtype="int64", )
paddle.full(list[1,301302,], -1, dtype="int32", )
paddle.full(list[1,313038,], -1, dtype="int32", )
paddle.full(list[1,314595,], -1, dtype="int32", )
paddle.full(list[1,319200,], -1, dtype="int32", )
paddle.full(list[1,331722,], -1, dtype="int32", )
paddle.full(list[1,333018,], -1, dtype="int32", )
paddle.full(list[1,335568,], -1, dtype="int32", )
paddle.full(list[1,345618,], -1, dtype="int32", )
paddle.full(list[1,35280,], -1, dtype="int32", )
paddle.full(list[1,356541,], -1, dtype="int32", )
paddle.full(list[1,36000,], -1, dtype="int32", )
paddle.full(list[1,365211,], -1, dtype="int32", )
paddle.full(list[1,37800,], -1, dtype="int32", )
paddle.full(list[1,38940,], -1, dtype="int32", )
paddle.full(list[1,39690,], -1, dtype="int32", )
paddle.full(list[1,4096,1,], 16, dtype="float32", )
paddle.full(list[1,42780,], -1, dtype="int32", )
paddle.full(list[1,43560,], -1, dtype="int32", )
paddle.full(list[1,44220,], -1, dtype="int32", )
paddle.full(list[1,45540,], -1, dtype="int32", )
paddle.full(list[1,46080,], -1, dtype="int32", )
paddle.full(list[1,47610,], -1, dtype="int32", )
paddle.full(list[1,48300,], -1, dtype="int32", )
paddle.full(list[1,48600,], -1, dtype="int32", )
paddle.full(list[1,49,49,], -100.0, VarType(float32), )
paddle.full(list[1,49,49,], 0.0, VarType(float32), )
paddle.full(list[1,5,], 11, dtype="int32", )
paddle.full(list[1,50220,], -1, dtype="int32", )
paddle.full(list[1,50250,], -1, dtype="int32", )
paddle.full(list[1,512,], -1, dtype="int32", )
paddle.full(list[1,51840,], -1, dtype="int32", )
paddle.full(list[1,55755,], -1, dtype="int32", )
paddle.full(list[1,56250,], -1, dtype="int32", )
paddle.full(list[1,57525,], -1, dtype="int32", )
paddle.full(list[1,57600,], -1, dtype="int32", )
paddle.full(list[1,59520,], -1, dtype="int32", )
paddle.full(list[1,60480,], -1, dtype="int32", )
paddle.full(list[1,7,], 11, dtype="int32", )
paddle.full(list[1,71685,], -1, dtype="int32", )
paddle.full(list[1,74370,], -1, dtype="int32", )
paddle.full(list[1,77220,], -1, dtype="int32", )
paddle.full(list[1,8,], 11, dtype="int32", )
paddle.full(list[1,906,], -1, dtype="int32", )
paddle.full(list[1,926,], -1, dtype="int32", )
paddle.full(list[1,], -1, "int32", )
paddle.full(list[1,], -3.4028234663852886e+38, "float64", )
paddle.full(list[1,], -65504, dtype="float64", )
paddle.full(list[1,], 0, "float32", )
paddle.full(list[1,], 0, "int64", )
paddle.full(list[1,], 0, dtype="float64", )
paddle.full(list[1,], 0, dtype="int32", )
paddle.full(list[1,], 0.0, "float64", )
paddle.full(list[1,], 1, "float32", )
paddle.full(list[1,], 1, "int32", )
paddle.full(list[1,], 1, "int64", )
paddle.full(list[1,], 1, dtype="int32", )
paddle.full(list[1,], 1, dtype="int64", )
paddle.full(list[1,], 1.0, "float64", )
paddle.full(list[1,], 1.0, dtype="float32", )
paddle.full(list[1,], 1.1447298858494002, dtype=Dtype(float32), )
paddle.full(list[1,], 1.1447298858494002, dtype=Dtype(float64), )
paddle.full(list[1,], 2, "int64", )
paddle.full(list[1,], 2, Dtype(float32), )
paddle.full(list[1,], 2, dtype="int32", )
paddle.full(list[1,], 2, dtype="int64", )
paddle.full(list[1,], 2.0, "float64", )
paddle.full(list[1,], 2.5310242469692907, dtype=Dtype(float32), )
paddle.full(list[1,], 3, dtype="int32", )
paddle.full(list[1,], 3, dtype="int64", )
paddle.full(list[1,], 3.4, dtype="float32", )
paddle.full(list[1,], 4096, dtype="float32", )
paddle.full(list[1,], 5, dtype="int32", )
paddle.full(list[1,], 6, dtype="int32", )
paddle.full(list[1,], 9.99999993922529e-09, "float32", )
paddle.full(list[1,], fill_value=16, dtype="int64", )
paddle.full(list[1,], fill_value=4, dtype="int64", )
paddle.full(list[10,1,], 1, dtype=VarType(int64), )
paddle.full(list[10,10,10,10,10,], True, dtype="bool", )
paddle.full(list[10,10,], -1.0, dtype="float32", )
paddle.full(list[10,], 1.0, "float32", )
paddle.full(list[10,], True, dtype="bool", )
paddle.full(list[100,1,], 32, dtype="float32", )
paddle.full(list[100,1,], 64, dtype="float32", )
paddle.full(list[10000,1,], 16, dtype="float32", )
paddle.full(list[10000,1,], 8, dtype="float32", )
paddle.full(list[1024,1,], 16, dtype="float32", )
paddle.full(list[1024,1,], 32, dtype="float32", )
paddle.full(list[10816,1,], 16, dtype="float32", )
paddle.full(list[1100,1100,], -math.inf, VarType(float32), )
paddle.full(list[1156,1,], 16, dtype="float32", )
paddle.full(list[1156,1,], 32, dtype="float32", )
paddle.full(list[11664,1,], 16, dtype="float32", )
paddle.full(list[121,1,], 32, dtype="float32", )
paddle.full(list[121,1,], 64, dtype="float32", )
paddle.full(list[12544,1,], 16, dtype="float32", )
paddle.full(list[1296,1,], 16, dtype="float32", )
paddle.full(list[1296,1,], 32, dtype="float32", )
paddle.full(list[13456,1,], 16, dtype="float32", )
paddle.full(list[138120,], -1, dtype="int32", )
paddle.full(list[144,1,], 32, dtype="float32", )
paddle.full(list[14400,1,], 16, dtype="float32", )
paddle.full(list[1444,1,], 16, dtype="float32", )
paddle.full(list[1444,1,], 32, dtype="float32", )
paddle.full(list[150402,], -1, dtype="int32", )
paddle.full(list[153450,], -1, dtype="int32", )
paddle.full(list[158580,], -1, dtype="int32", )
paddle.full(list[16,1024,1024,], 5.0, dtype="float32", )
paddle.full(list[16,144,144,], -100.0, VarType(float32), )
paddle.full(list[16,144,144,], 0.0, VarType(float32), )
paddle.full(list[16,49,49,], -100.0, VarType(float32), )
paddle.full(list[16,49,49,], 0.0, VarType(float32), )
paddle.full(list[16,513,513,19,], fill_value=2, dtype="float64", )
paddle.full(list[16,513,513,19,], fill_value=3, dtype="float64", )
paddle.full(list[1600,1,], 16, dtype="float32", )
paddle.full(list[1600,1,], 32, dtype="float32", )
paddle.full(list[1600,1,], 8, dtype="float32", )
paddle.full(list[16384,1,], 8, dtype="float32", )
paddle.full(list[16384,1024,], 30, dtype="int64", )
paddle.full(list[168795,], -1, dtype="int32", )
paddle.full(list[169,1,], 32, dtype="float32", )
paddle.full(list[171888,], -1, dtype="int32", )
paddle.full(list[1764,1,], 16, dtype="float32", )
paddle.full(list[1764,1,], 32, dtype="float32", )
paddle.full(list[177276,], -1, dtype="int32", )
paddle.full(list[182391,], -1, dtype="int32", )
paddle.full(list[18496,1,], 8, dtype="float32", )
paddle.full(list[185691,], -1, dtype="int32", )
paddle.full(list[191301,], -1, dtype="int32", )
paddle.full(list[1936,1,], 16, dtype="float32", )
paddle.full(list[1936,1,], 32, dtype="float32", )
paddle.full(list[1936,1,], 8, dtype="float32", )
paddle.full(list[196,1,], 32, dtype="float32", )
paddle.full(list[196416,], -1, dtype="int32", )
paddle.full(list[196944,], -1, dtype="int32", )
paddle.full(list[2,1,], 1, dtype=VarType(int64), )
paddle.full(list[2,1,], 2, dtype="int32", )
paddle.full(list[2,1,], 4, dtype="int32", )
paddle.full(list[2,100,], 2, dtype="int64", )
paddle.full(list[2,12,], 1, dtype="int32", )
paddle.full(list[2,192,], 1, dtype="int64", )
paddle.full(list[2,198,], 1, dtype="int64", )
paddle.full(list[2,2,2,], -0.5, dtype="float32", )
paddle.full(list[2,2,2,], 0.5, dtype="float32", )
paddle.full(list[2,2,2,], 1, dtype="float32", )
paddle.full(list[2,2,2,], 1, dtype="int64", )
paddle.full(list[2,2,2,], 1.5, dtype="float32", )
paddle.full(list[2,2,2,], 2, dtype="float32", )
paddle.full(list[2,2,2,], 2, dtype="int64", )
paddle.full(list[2,2,2,], 2.5, dtype="float32", )
paddle.full(list[2,2,2,], 3, dtype="float32", )
paddle.full(list[2,2,2,], 3, dtype="int64", )
paddle.full(list[2,2,2,], 8, dtype="float32", )
paddle.full(list[2,2,2,], 8, dtype="int64", )
paddle.full(list[2,2,2,], 9, dtype="float32", )
paddle.full(list[2,2,2,], 9, dtype="int64", )
paddle.full(list[2,2,], 0, dtype="float32", )
paddle.full(list[2,2,], 0, dtype="int32", )
paddle.full(list[2,2,], 1, dtype="float32", )
paddle.full(list[2,2,], 1.1447298858494002, dtype=Dtype(float32), )
paddle.full(list[2,2,], 2.5310242469692907, dtype=Dtype(float32), )
paddle.full(list[2,200,], 4, dtype="int64", )
paddle.full(list[2,3,], 0.0, "float32", )
paddle.full(list[2,3,], 0.0, "float64", )
paddle.full(list[2,3,], 0.0, Dtype(float32), )
paddle.full(list[2,3,], 0.0, Dtype(float64), )
paddle.full(list[2,3,], 1, dtype="int32", )
paddle.full(list[2,3,], 1.0, "float32", )
paddle.full(list[2,300,], 1, dtype="int64", )
paddle.full(list[2,300,], 2, dtype="int64", )
paddle.full(list[2,300,], 4, dtype="int64", )
paddle.full(list[2,], 0.0, "float64", )
paddle.full(list[2,], 1, "int64", )
paddle.full(list[2,], 1.0, dtype="float32", )
paddle.full(list[2,], 1.1447298858494002, dtype=Dtype(float32), )
paddle.full(list[2,], 2, "float32", )
paddle.full(list[2,], 2.5310242469692907, dtype=Dtype(float32), )
paddle.full(list[205923,], -1, dtype="int32", )
paddle.full(list[20736,1,], 8, dtype="float32", )
paddle.full(list[211038,], -1, dtype="int32", )
paddle.full(list[2116,1,], 16, dtype="float32", )
paddle.full(list[2116,1,], 32, dtype="float32", )
paddle.full(list[214107,], -1, dtype="int32", )
paddle.full(list[214830,], -1, dtype="int32", )
paddle.full(list[214848,], -1, dtype="int32", )
paddle.full(list[217413,], -1, dtype="int32", )
paddle.full(list[220968,], -1, dtype="int32", )
paddle.full(list[225,1,], 32, dtype="float32", )
paddle.full(list[227124,], -1, dtype="int32", )
paddle.full(list[227919,], -1, dtype="int32", )
paddle.full(list[229152,], -1, dtype="int32", )
paddle.full(list[230202,], -1, dtype="int32", )
paddle.full(list[2304,1,], 16, dtype="float32", )
paddle.full(list[2304,1,], 32, dtype="float32", )
paddle.full(list[2304,1,], 8, dtype="float32", )
paddle.full(list[23104,1,], 8, dtype="float32", )
paddle.full(list[242991,], -1, dtype="int32", )
paddle.full(list[243474,], -1, dtype="int32", )
paddle.full(list[245520,], -1, dtype="int32", )
paddle.full(list[249405,], -1, dtype="int32", )
paddle.full(list[25,1,], 64, dtype="float32", )
paddle.full(list[2500,1,], 16, dtype="float32", )
paddle.full(list[2500,1,], 32, dtype="float32", )
paddle.full(list[252195,], -1, dtype="int32", )
paddle.full(list[253728,], -1, dtype="int32", )
paddle.full(list[256,1,], 32, dtype="float32", )
paddle.full(list[25600,1,], 8, dtype="float32", )
paddle.full(list[260865,], -1, dtype="int32", )
paddle.full(list[261888,], -1, dtype="int32", )
paddle.full(list[267030,], -1, dtype="int32", )
paddle.full(list[2704,1,], 32, dtype="float32", )
paddle.full(list[2704,1,], 8, dtype="float32", )
paddle.full(list[276210,], -1, dtype="int32", )
paddle.full(list[277539,], -1, dtype="int32", )
paddle.full(list[28224,1,], 8, dtype="float32", )
paddle.full(list[289,1,], 32, dtype="float32", )
paddle.full(list[2916,1,], 32, dtype="float32", )
paddle.full(list[294624,], -1, dtype="int32", )
paddle.full(list[295443,], -1, dtype="int32", )
paddle.full(list[295647,], -1, dtype="int32", )
paddle.full(list[3,1,], 1, dtype=VarType(int64), )
paddle.full(list[3,3,], 0, dtype="float32", )
paddle.full(list[3,3,], 0.0, "float64", )
paddle.full(list[3,3,], 1, "float32", )
paddle.full(list[3,], 1, "int32", )
paddle.full(list[3,], 1.1447298858494002, dtype=Dtype(float32), )
paddle.full(list[3,], 2.5310242469692907, dtype=Dtype(float32), )
paddle.full(list[3,], 4, "float32", )
paddle.full(list[301302,], -1, dtype="int32", )
paddle.full(list[30976,1,], 8, dtype="float32", )
paddle.full(list[313038,], -1, dtype="int32", )
paddle.full(list[3136,1,], 32, dtype="float32", )
paddle.full(list[3136,1,], 8, dtype="float32", )
paddle.full(list[314595,], -1, dtype="int32", )
paddle.full(list[319200,], -1, dtype="int32", )
paddle.full(list[32,3,1024,768,], 10.0, dtype="float32", )
paddle.full(list[32,3,1024,768,], 100.0, dtype="float32", )
paddle.full(list[324,1,], 32, dtype="float32", )
paddle.full(list[331722,], -1, dtype="int32", )
paddle.full(list[333018,], -1, dtype="int32", )
paddle.full(list[335568,], -1, dtype="int32", )
paddle.full(list[3364,1,], 32, dtype="float32", )
paddle.full(list[33856,1,], 8, dtype="float32", )
paddle.full(list[345618,], -1, dtype="int32", )
paddle.full(list[35280,], -1, dtype="int32", )
paddle.full(list[356541,], -1, dtype="int32", )
paddle.full(list[36,1,], 64, dtype="float32", )
paddle.full(list[3600,1,], 32, dtype="float32", )
paddle.full(list[3600,1,], 8, dtype="float32", )
paddle.full(list[36000,], -1, dtype="int32", )
paddle.full(list[361,1,], 32, dtype="float32", )
paddle.full(list[365211,], -1, dtype="int32", )
paddle.full(list[36864,1,], 8, dtype="float32", )
paddle.full(list[37800,], -1, dtype="int32", )
paddle.full(list[38940,], -1, dtype="int32", )
paddle.full(list[39690,], -1, dtype="int32", )
paddle.full(list[4,1,], 1, dtype=VarType(int64), )
paddle.full(list[4,1,], 4, dtype="int32", )
paddle.full(list[4,100,], 4, dtype="int64", )
paddle.full(list[4,144,144,], -100.0, VarType(float32), )
paddle.full(list[4,144,144,], 0.0, VarType(float32), )
paddle.full(list[4,200,], 4, dtype="int64", )
paddle.full(list[4,22400,1,], 1, "int64", )
paddle.full(list[4,300,], 4, dtype="int64", )
paddle.full(list[4,49,49,], -100.0, VarType(float32), )
paddle.full(list[4,49,49,], 0.0, VarType(float32), )
paddle.full(list[4,8,], fill_value=1, dtype="float32", )
paddle.full(list[4,], 1, dtype="int32", )
paddle.full(list[400,1,], 16, dtype="float32", )
paddle.full(list[400,1,], 32, dtype="float32", )
paddle.full(list[400,400,], -math.inf, VarType(float32), )
paddle.full(list[40000,1,], 8, dtype="float32", )
paddle.full(list[4096,1,], 16, dtype="float32", )
paddle.full(list[4096,1,], 8, dtype="float32", )
paddle.full(list[42780,], -1, dtype="int32", )
paddle.full(list[43264,1,], 8, dtype="float32", )
paddle.full(list[43560,], -1, dtype="int32", )
paddle.full(list[441,1,], 32, dtype="float32", )
paddle.full(list[44220,], -1, dtype="int32", )
paddle.full(list[45540,], -1, dtype="int32", )
paddle.full(list[46080,], -1, dtype="int32", )
paddle.full(list[4624,1,], 16, dtype="float32", )
paddle.full(list[4624,1,], 8, dtype="float32", )
paddle.full(list[46656,1,], 8, dtype="float32", )
paddle.full(list[47610,], -1, dtype="int32", )
paddle.full(list[48300,], -1, dtype="int32", )
paddle.full(list[484,1,], 16, dtype="float32", )
paddle.full(list[484,1,], 32, dtype="float32", )
paddle.full(list[48600,], -1, dtype="int32", )
paddle.full(list[49,1,], 64, dtype="float32", )
paddle.full(list[492,492,], -math.inf, VarType(float32), )
paddle.full(list[496,496,], -math.inf, VarType(float32), )
paddle.full(list[498,498,], -math.inf, VarType(float32), )
paddle.full(list[5,1,], 1, dtype=VarType(int64), )
paddle.full(list[5,3,0,5,], 0, Dtype(float32), )
paddle.full(list[5,], 1.6094379124341003, dtype="float32", )
paddle.full(list[500,500,], -math.inf, VarType(float32), )
paddle.full(list[50176,1,], 8, dtype="float32", )
paddle.full(list[50220,], -1, dtype="int32", )
paddle.full(list[50250,], -1, dtype="int32", )
paddle.full(list[5184,1,], 16, dtype="float32", )
paddle.full(list[5184,1,], 8, dtype="float32", )
paddle.full(list[51840,], -1, dtype="int32", )
paddle.full(list[529,1,], 32, dtype="float32", )
paddle.full(list[53824,1,], 8, dtype="float32", )
paddle.full(list[55755,], -1, dtype="int32", )
paddle.full(list[56250,], -1, dtype="int32", )
paddle.full(list[57525,], -1, dtype="int32", )
paddle.full(list[576,1,], 16, dtype="float32", )
paddle.full(list[576,1,], 32, dtype="float32", )
paddle.full(list[57600,1,], 8, dtype="float32", )
paddle.full(list[57600,], -1, dtype="int32", )
paddle.full(list[5776,1,], 16, dtype="float32", )
paddle.full(list[5776,1,], 8, dtype="float32", )
paddle.full(list[59520,], -1, dtype="int32", )
paddle.full(list[6,1,], 1, dtype=VarType(int64), )
paddle.full(list[60480,], -1, dtype="int32", )
paddle.full(list[625,1,], 32, dtype="float32", )
paddle.full(list[64,1,], 64, dtype="float32", )
paddle.full(list[64,144,144,], -100.0, VarType(float32), )
paddle.full(list[64,144,144,], 0.0, VarType(float32), )
paddle.full(list[64,49,49,], -100.0, VarType(float32), )
paddle.full(list[64,49,49,], 0.0, VarType(float32), )
paddle.full(list[6400,1,], 16, dtype="float32", )
paddle.full(list[6400,1,], 8, dtype="float32", )
paddle.full(list[676,1,], 16, dtype="float32", )
paddle.full(list[7,1,], 1, dtype=VarType(int64), )
paddle.full(list[7056,1,], 16, dtype="float32", )
paddle.full(list[7056,1,], 8, dtype="float32", )
paddle.full(list[71685,], -1, dtype="int32", )
paddle.full(list[74370,], -1, dtype="int32", )
paddle.full(list[77220,], -1, dtype="int32", )
paddle.full(list[7744,1,], 16, dtype="float32", )
paddle.full(list[7744,1,], 8, dtype="float32", )
paddle.full(list[784,1,], 16, dtype="float32", )
paddle.full(list[8,1,], 1, dtype=VarType(int64), )
paddle.full(list[8,1,], 4, dtype="int32", )
paddle.full(list[8,200,], 4, dtype="int64", )
paddle.full(list[8,300,], 4, dtype="int64", )
paddle.full(list[81,1,], 64, dtype="float32", )
paddle.full(list[8464,1,], 16, dtype="float32", )
paddle.full(list[8464,1,], 8, dtype="float32", )
paddle.full(list[9,1,], 1, dtype=VarType(int64), )
paddle.full(list[900,1,], 16, dtype="float32", )
paddle.full(list[9216,1,], 16, dtype="float32", )
paddle.full(list[9216,1,], 8, dtype="float32", )
paddle.full(list[], -0.29328805208206177, Dtype(float32), )
paddle.full(list[], -0.40675103664398193, Dtype(float32), )
paddle.full(list[], -0.54931640625, Dtype(float16), )
paddle.full(list[], -1, "int32", )
paddle.full(list[], -1, dtype="int32", )
paddle.full(list[], -1.0, "float32", )
paddle.full(list[], -1.7802734375, Dtype(float16), )
paddle.full(list[], -100, Dtype(int64), )
paddle.full(list[], -100, VarType(int64), )
paddle.full(list[], -100.0, VarType(float32), )
paddle.full(list[], -3.4028234663852886e+38, Dtype(float32), )
paddle.full(list[], -3.4028234663852886e+38, VarType(float32), )
paddle.full(list[], 0, "float32", )
paddle.full(list[], 0, "int32", )
paddle.full(list[], 0, "int64", )
paddle.full(list[], 0, Dtype(float32), )
paddle.full(list[], 0, VarType(float32), )
paddle.full(list[], 0, dtype="int32", )
paddle.full(list[], 0, dtype="int64", )
paddle.full(list[], 0.0, "float32", )
paddle.full(list[], 0.0, Dtype(float32), )
paddle.full(list[], 0.0, Dtype(float64), )
paddle.full(list[], 0.0, VarType(float32), )
paddle.full(list[], 0.0, dtype="float32", )
paddle.full(list[], 0.25, dtype="float32", )
paddle.full(list[], 0.5797171592712402, Dtype(float32), )
paddle.full(list[], 0.7587890625, Dtype(float16), )
paddle.full(list[], 0.9238947033882141, Dtype(float32), )
paddle.full(list[], 1, "float32", )
paddle.full(list[], 1, "int32", )
paddle.full(list[], 1, "int64", )
paddle.full(list[], 1, dtype="int32", )
paddle.full(list[], 1.0, "float32", )
paddle.full(list[], 1.0, Dtype(float32), )
paddle.full(list[], 1.0, Dtype(float64), )
paddle.full(list[], 1.0, dtype="float32", )
paddle.full(list[], 1.1447298858494002, dtype=Dtype(float32), )
paddle.full(list[], 1.1447298858494002, dtype=Dtype(float64), )
paddle.full(list[], 1.3017578125, Dtype(float16), )
paddle.full(list[], 1000, "int64", )
paddle.full(list[], 11, "float32", )
paddle.full(list[], 11, dtype="float32", )
paddle.full(list[], 12, "int64", )
paddle.full(list[], 12, dtype="int32", )
paddle.full(list[], 16, "int64", )
paddle.full(list[], 2, "float32", )
paddle.full(list[], 2, "int32", )
paddle.full(list[], 2, "int64", )
paddle.full(list[], 2, dtype="float32", )
paddle.full(list[], 2, dtype="int32", )
paddle.full(list[], 2, dtype="int64", )
paddle.full(list[], 2.5310242469692907, dtype=Dtype(float32), )
paddle.full(list[], 2.5310242469692907, dtype=Dtype(float64), )
paddle.full(list[], 20, "int64", )
paddle.full(list[], 3, "int32", )
paddle.full(list[], 3, "int64", )
paddle.full(list[], 3, dtype="int64", )
paddle.full(list[], 4, "float32", )
paddle.full(list[], 4, "int32", )
paddle.full(list[], 4, "int64", )
paddle.full(list[], 5, "int32", )
paddle.full(list[], 5, "int64", )
paddle.full(list[], 6, "int64", )
paddle.full(list[], 7, "int64", )
paddle.full(list[], 8, "int64", )
paddle.full(list[], 9, "int64", )
paddle.full(list[], True, dtype="bool", )
paddle.full(list[], math.inf, VarType(float32), )
paddle.full(shape=10, dtype="complex128", fill_value=complex(1.1,1.1), )
paddle.full(shape=10, dtype="complex128", fill_value=complex(nan,-math.inf), )
paddle.full(shape=10, dtype="complex128", fill_value=complex(nan,math.inf), )
paddle.full(shape=10, dtype="complex128", fill_value=complex(nan,nan), )
paddle.full(shape=10, dtype="complex64", fill_value=complex(1.1,1.1), )
paddle.full(shape=10, dtype="complex64", fill_value=complex(nan,-math.inf), )
paddle.full(shape=10, dtype="complex64", fill_value=complex(nan,math.inf), )
paddle.full(shape=10, dtype="complex64", fill_value=complex(nan,nan), )
paddle.full(shape=10, dtype="float32", fill_value=1.1, )
paddle.full(shape=10, fill_value=True, )
paddle.full(shape=10, fill_value=complex(1.1,1.1), )
paddle.full(shape=Tensor([1],"int32"), dtype="float32", fill_value=1.1, )
paddle.full(shape=Tensor([2],"int32"), fill_value=Tensor([1],"float32"), )
paddle.full(shape=Tensor([2],"int64"), fill_value=Tensor([1],"float32"), dtype=type(numpy.float32), )
paddle.full(shape=Tensor([2],"int64"), fill_value=Tensor([1],"int32"), dtype=type(numpy.int32), )
paddle.full(shape=list[1,1,2,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[1,1,2,], fill_value=0, dtype=Dtype(float64), )
paddle.full(shape=list[1,1,3,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[1,1,3,], fill_value=0, dtype=Dtype(float64), )
paddle.full(shape=list[1,1,], dtype="float32", fill_value=1.0, )
paddle.full(shape=list[1,1,], fill_value=1, dtype="bool", )
paddle.full(shape=list[1,128,1,], fill_value=0, dtype="int64", )
paddle.full(shape=list[1,128,1,], fill_value=1, dtype="int64", )
paddle.full(shape=list[1,128,1,], fill_value=2, dtype="int64", )
paddle.full(shape=list[1,128,1,], fill_value=3, dtype="int64", )
paddle.full(shape=list[1,2,3,], dtype="complex128", fill_value=complex(1.1,1.1), )
paddle.full(shape=list[1,2,3,], dtype="complex128", fill_value=complex(nan,-math.inf), )
paddle.full(shape=list[1,2,3,], dtype="complex128", fill_value=complex(nan,math.inf), )
paddle.full(shape=list[1,2,3,], dtype="complex128", fill_value=complex(nan,nan), )
paddle.full(shape=list[1,2,3,], dtype="complex64", fill_value=complex(1.1,1.1), )
paddle.full(shape=list[1,2,3,], dtype="complex64", fill_value=complex(nan,-math.inf), )
paddle.full(shape=list[1,2,3,], dtype="complex64", fill_value=complex(nan,math.inf), )
paddle.full(shape=list[1,2,3,], dtype="complex64", fill_value=complex(nan,nan), )
paddle.full(shape=list[1,2,], dtype="float32", fill_value=1, )
paddle.full(shape=list[1,2,], dtype="float32", fill_value=1.1, )
paddle.full(shape=list[1,2,], dtype="float32", fill_value=1.2, )
paddle.full(shape=list[1,2,], dtype="float32", fill_value=3, )
paddle.full(shape=list[1,2,], dtype=type(numpy.float32), fill_value=1.1, )
paddle.full(shape=list[1,2,], dtype=type(numpy.float32), fill_value=Tensor([1],"float32"), )
paddle.full(shape=list[1,2,], fill_value=1, dtype="int32", )
paddle.full(shape=list[1,2,], fill_value=9, dtype="float32", )
paddle.full(shape=list[1,3,5,5,], fill_value=0.5, dtype="float32", )
paddle.full(shape=list[1,3,8,8,], fill_value=0.5, dtype="float32", )
paddle.full(shape=list[1,3,], fill_value=0.0, dtype="float32", )
paddle.full(shape=list[1,3,], fill_value=0.0, dtype="float64", )
paddle.full(shape=list[1,3,], fill_value=5, dtype="float32", )
paddle.full(shape=list[1,3,], fill_value=6, dtype="float32", )
paddle.full(shape=list[1,32,], fill_value=0.0, dtype="float64", )
paddle.full(shape=list[1,4,], fill_value=0.0, dtype="float32", )
paddle.full(shape=list[1,4,], fill_value=5, dtype="float32", )
paddle.full(shape=list[1,4,], fill_value=6, dtype="float32", )
paddle.full(shape=list[1,512,64,], fill_value=0.5, dtype="float32", )
paddle.full(shape=list[1,], dtype="int64", fill_value=0, )
paddle.full(shape=list[1,], dtype="int64", fill_value=1, )
paddle.full(shape=list[1,], dtype="int64", fill_value=10, )
paddle.full(shape=list[1,], dtype="int64", fill_value=100, )
paddle.full(shape=list[1,], dtype="int64", fill_value=16, )
paddle.full(shape=list[1,], dtype="int64", fill_value=2, )
paddle.full(shape=list[1,], dtype="int64", fill_value=32, )
paddle.full(shape=list[1,], dtype="int64", fill_value=4, )
paddle.full(shape=list[1,], dtype=Dtype(float32), fill_value=0.2, )
paddle.full(shape=list[1,], dtype=Dtype(int64), fill_value=0, )
paddle.full(shape=list[1,], dtype=VarType(float16), fill_value=1.0, )
paddle.full(shape=list[1,], dtype=VarType(float32), fill_value=0.2, )
paddle.full(shape=list[1,], dtype=VarType(float32), fill_value=1.0, )
paddle.full(shape=list[1,], dtype=VarType(float32), fill_value=5.0, )
paddle.full(shape=list[1,], dtype=VarType(float64), fill_value=0.2, )
paddle.full(shape=list[1,], fill_value=0, dtype="float32", )
paddle.full(shape=list[1,], fill_value=0, dtype="float64", )
paddle.full(shape=list[1,], fill_value=0, dtype="int32", )
paddle.full(shape=list[1,], fill_value=0, dtype="int64", )
paddle.full(shape=list[1,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[1,], fill_value=0.0, dtype="float32", )
paddle.full(shape=list[1,], fill_value=0.0, dtype="float64", )
paddle.full(shape=list[1,], fill_value=1, dtype="int32", )
paddle.full(shape=list[1,], fill_value=1, dtype="int64", )
paddle.full(shape=list[1,], fill_value=1.0, dtype="float32", )
paddle.full(shape=list[1,], fill_value=1.0, dtype="float64", )
paddle.full(shape=list[1,], fill_value=10, dtype="float32", )
paddle.full(shape=list[1,], fill_value=10, dtype="float64", )
paddle.full(shape=list[1,], fill_value=10, dtype="int32", )
paddle.full(shape=list[1,], fill_value=10, dtype="int64", )
paddle.full(shape=list[1,], fill_value=100, dtype="int32", )
paddle.full(shape=list[1,], fill_value=1000.0, dtype="float32", )
paddle.full(shape=list[1,], fill_value=1000.0, dtype="float64", )
paddle.full(shape=list[1,], fill_value=1e-06, dtype=Dtype(float32), )
paddle.full(shape=list[1,], fill_value=1e-10, dtype=Dtype(float32), )
paddle.full(shape=list[1,], fill_value=1e-12, dtype=Dtype(float32), )
paddle.full(shape=list[1,], fill_value=1e-12, dtype=Dtype(float64), )
paddle.full(shape=list[1,], fill_value=1e-12, dtype=VarType(float32), )
paddle.full(shape=list[1,], fill_value=2, dtype="float32", )
paddle.full(shape=list[1,], fill_value=2, dtype="int32", )
paddle.full(shape=list[1,], fill_value=2, dtype="int64", )
paddle.full(shape=list[1,], fill_value=20, dtype="int64", )
paddle.full(shape=list[1,], fill_value=3, dtype="int32", )
paddle.full(shape=list[1,], fill_value=5, dtype="int32", )
paddle.full(shape=list[1,], fill_value=False, dtype="bool", )
paddle.full(shape=list[10,1,], fill_value=1, dtype="bool", )
paddle.full(shape=list[10,20,], fill_value=0.0, dtype="float32", )
paddle.full(shape=list[10,], fill_value=0.25, dtype="float64", )
paddle.full(shape=list[11,16,], fill_value=-math.inf, dtype=Dtype(float32), )
paddle.full(shape=list[11,7,], fill_value=-math.inf, dtype=Dtype(float32), )
paddle.full(shape=list[128,256,], fill_value=3, dtype="float32", )
paddle.full(shape=list[13,13,], dtype="float32", fill_value=-math.inf, )
paddle.full(shape=list[16,4,16,], fill_value=0.0, dtype=Dtype(float32), )
paddle.full(shape=list[2,1,3,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[2,1,], fill_value=1, dtype="bool", )
paddle.full(shape=list[2,1,], fill_value=1, dtype="int64", )
paddle.full(shape=list[2,2,2,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[2,2,2,], fill_value=1, dtype=Dtype(float32), )
paddle.full(shape=list[2,2,], fill_value=0, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[2,2,], fill_value=1, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=1, dtype=Dtype(float32), )
paddle.full(shape=list[2,2,], fill_value=2, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=3, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=4, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=5, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=6, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=7, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=8, dtype="float32", )
paddle.full(shape=list[2,2,], fill_value=9, dtype="float32", )
paddle.full(shape=list[2,255,13,13,], fill_value=0.3, dtype="float32", )
paddle.full(shape=list[2,3,], dtype="int64", fill_value=1, )
paddle.full(shape=list[2,3,], dtype="int64", fill_value=2, )
paddle.full(shape=list[2,3,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[2,3,], fill_value=1, dtype=Dtype(float32), )
paddle.full(shape=list[2,4,32,], fill_value=0, dtype=Dtype(float64), )
paddle.full(shape=list[2,4,32,], fill_value=0, dtype=VarType(float64), )
paddle.full(shape=list[2,4,8,], fill_value=0, dtype=Dtype(float64), )
paddle.full(shape=list[2,4,8,], fill_value=0, dtype=VarType(float64), )
paddle.full(shape=list[2,4,], dtype="float32", fill_value=-2.0, )
paddle.full(shape=list[2,6,4,], fill_value=0.5, dtype="float32", )
paddle.full(shape=list[2,6,], fill_value=0.5, dtype="float32", )
paddle.full(shape=list[2,6,], fill_value=1.0, dtype="int32", )
paddle.full(shape=list[2,8,512,], fill_value=0, dtype=VarType(float32), )
paddle.full(shape=list[2,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[2,], fill_value=1, dtype=Dtype(float32), )
paddle.full(shape=list[2,], fill_value=2, dtype="float32", )
paddle.full(shape=list[3,1,3,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[3,1,], fill_value=1, dtype="bool", )
paddle.full(shape=list[3,2,], fill_value=1, dtype=type(numpy.int32), )
paddle.full(shape=list[3,2,], fill_value=1, dtype=type(numpy.int64), )
paddle.full(shape=list[3,2,], fill_value=1.1, dtype=type(numpy.float16), )
paddle.full(shape=list[3,2,], fill_value=1.1, dtype=type(numpy.float32), )
paddle.full(shape=list[3,2,], fill_value=Tensor([1],"float32"), dtype="float32", )
paddle.full(shape=list[3,2,], fill_value=Tensor([1],"float32"), dtype=type(numpy.float32), )
paddle.full(shape=list[3,2,], fill_value=Tensor([1],"int32"), dtype=type(numpy.int32), )
paddle.full(shape=list[3,3,], fill_value="0.5", dtype="float32", )
paddle.full(shape=list[3,3,], fill_value=5, dtype="float32", )
paddle.full(shape=list[3,], fill_value=1, dtype="int64", )
paddle.full(shape=list[4,1,3,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[4,1,], fill_value=1, dtype="bool", )
paddle.full(shape=list[4,16,], fill_value=0.0, dtype="float32", )
paddle.full(shape=list[4,2,2,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[4,2,2,], fill_value=0, dtype=VarType(float32), )
paddle.full(shape=list[4,32,], fill_value=0.0, dtype="float32", )
paddle.full(shape=list[4,32,], fill_value=0.0, dtype="float64", )
paddle.full(shape=list[4,4,16,22,], fill_value=0.0, dtype=Dtype(float32), )
paddle.full(shape=list[4,4,16,], fill_value=-2, dtype=Dtype(float32), )
paddle.full(shape=list[4,4,16,], fill_value=0.0, dtype="float32", )
paddle.full(shape=list[4,4,16,], fill_value=0.0, dtype=Dtype(float32), )
paddle.full(shape=list[4,4,16,], fill_value=0.0, dtype=Dtype(float64), )
paddle.full(shape=list[4,4,16,], fill_value=1, dtype=Dtype(float32), )
paddle.full(shape=list[4,4,16,], fill_value=1e+22, dtype=Dtype(float32), )
paddle.full(shape=list[4,4,32,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[4,4,32,], fill_value=0, dtype=Dtype(float64), )
paddle.full(shape=list[4,4,32,], fill_value=0, dtype=VarType(float64), )
paddle.full(shape=list[4,4,8,], fill_value=0, dtype=Dtype(float64), )
paddle.full(shape=list[4,4,8,], fill_value=0, dtype=VarType(float64), )
paddle.full(shape=list[4,4,], fill_value=0.0, dtype="float32", )
paddle.full(shape=list[4,5,], dtype="float32", fill_value=10.0, )
paddle.full(shape=list[4,5,], fill_value=-math.inf, dtype=Dtype(float32), )
paddle.full(shape=list[4,], fill_value=0, dtype=Dtype(float64), )
paddle.full(shape=list[4,], fill_value=1, dtype="int32", )
paddle.full(shape=list[4,], fill_value=9.869604401089358, dtype=Dtype(float64), )
paddle.full(shape=list[4096,4096,], fill_value=3, dtype="float32", )
paddle.full(shape=list[448,1024,], fill_value=-math.inf, dtype="float32", )
paddle.full(shape=list[448,1280,], fill_value=-math.inf, dtype="float32", )
paddle.full(shape=list[448,384,], fill_value=-math.inf, dtype="float32", )
paddle.full(shape=list[448,512,], fill_value=-math.inf, dtype="float32", )
paddle.full(shape=list[448,768,], fill_value=-math.inf, dtype="float32", )
paddle.full(shape=list[5,1,], fill_value=1, dtype="bool", )
paddle.full(shape=list[5,10,], fill_value=5.0, dtype="float32", )
paddle.full(shape=list[5,3,], fill_value=0, dtype=Dtype(float64), )
paddle.full(shape=list[5,3,], fill_value=9.869604401089358, dtype=Dtype(float64), )
paddle.full(shape=list[5,5,], dtype="float32", fill_value=-math.inf, )
paddle.full(shape=list[5,], fill_value=8, dtype="int32", )
paddle.full(shape=list[6,1,3,], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[6,1,], dtype="float32", fill_value=2, )
paddle.full(shape=list[6,1,], dtype="float32", fill_value=3, )
paddle.full(shape=list[6,1,], fill_value=1, dtype="bool", )
paddle.full(shape=list[6,4,16,], fill_value=0.0, dtype=Dtype(float32), )
paddle.full(shape=list[6,4,], fill_value=-math.inf, dtype=Dtype(float32), )
paddle.full(shape=list[64,64,], fill_value=0.5, dtype="float32", )
paddle.full(shape=list[64,], fill_value=1.0, dtype="float32", )
paddle.full(shape=list[7,1,], fill_value=1, dtype="bool", )
paddle.full(shape=list[8,1,], fill_value=1, dtype="bool", )
paddle.full(shape=list[9,1,], fill_value=1, dtype="bool", )
paddle.full(shape=list[96,32,64,128,], fill_value=0, dtype="bfloat16", )
paddle.full(shape=list[Tensor([1],"int32"),Tensor([1],"int32"),], fill_value=10000000000, )
paddle.full(shape=list[Tensor([1],"int32"),Tensor([1],"int32"),], fill_value=3.8, )
paddle.full(shape=list[Tensor([],"int64"),4,], fill_value=Tensor([1],"int64"), dtype=Dtype(int64), )
paddle.full(shape=list[Tensor([],"int64"),8,], fill_value=False, dtype="bool", )
paddle.full(shape=list[], dtype="bool", fill_value=0, )
paddle.full(shape=list[], dtype="bool", fill_value=False, )
paddle.full(shape=list[], dtype="bool", fill_value=True, )
paddle.full(shape=list[], dtype="float32", fill_value=-2.0, )
paddle.full(shape=list[], dtype="float32", fill_value=0.1, )
paddle.full(shape=list[], dtype="float32", fill_value=0.2, )
paddle.full(shape=list[], dtype="float32", fill_value=0.3, )
paddle.full(shape=list[], dtype="float32", fill_value=2.0, )
paddle.full(shape=list[], dtype="int32", fill_value=1, )
paddle.full(shape=list[], dtype="int32", fill_value=2, )
paddle.full(shape=list[], dtype="int32", fill_value=3, )
paddle.full(shape=list[], dtype="int32", fill_value=5, )
paddle.full(shape=list[], dtype="int64", fill_value=0, )
paddle.full(shape=list[], dtype="int64", fill_value=1, )
paddle.full(shape=list[], dtype="int64", fill_value=100, )
paddle.full(shape=list[], dtype="int64", fill_value=2, )
paddle.full(shape=list[], dtype="int64", fill_value=3, )
paddle.full(shape=list[], dtype="int64", fill_value=4, )
paddle.full(shape=list[], dtype="int64", fill_value=5, )
paddle.full(shape=list[], dtype="int64", fill_value=7, )
paddle.full(shape=list[], dtype=Dtype(bool), fill_value=False, )
paddle.full(shape=list[], dtype=Dtype(bool), fill_value=True, )
paddle.full(shape=list[], dtype=Dtype(float32), fill_value=0, )
paddle.full(shape=list[], dtype=Dtype(float32), fill_value=1.0, )
paddle.full(shape=list[], dtype=Dtype(int64), fill_value=0, )
paddle.full(shape=list[], dtype=Dtype(int64), fill_value=1, )
paddle.full(shape=list[], dtype=Dtype(int64), fill_value=3, )
paddle.full(shape=list[], fill_value=-1, dtype="int32", )
paddle.full(shape=list[], fill_value=0, dtype="float16", )
paddle.full(shape=list[], fill_value=0, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=0.0, dtype=Dtype(float64), )
paddle.full(shape=list[], fill_value=0.2, dtype=Dtype(float64), )
paddle.full(shape=list[], fill_value=0.3, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=0.36, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=0.5, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=0.5, dtype=Dtype(float64), )
paddle.full(shape=list[], fill_value=0.5, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.5217391304347826, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.5434782608695652, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.5652173913043479, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.5869565217391304, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.6086956521739131, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.6304347826086957, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.6521739130434783, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.6625000000000001, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.6739130434782609, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.675, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.6875, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.6956521739130435, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.699999988079071, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7000000000000001, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7111110985279083, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7125, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7130434782608696, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7173913043478262, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7222222089767456, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7250000000000001, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7260869565217392, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7333333194255829, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7375, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7391304347826086, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7444444298744202, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.75, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7521739130434782, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7555555403232574, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7608695652173914, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7625, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7652173913043478, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7666666507720947, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.775, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7777777761220932, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7782608695652173, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.782608695652174, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7875000000000001, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7888888865709305, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7913043478260869, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.7999999970197678, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8043478260869565, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.807407408952713, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.811111107468605, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8125, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8148148059844971, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.817391304347826, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8181818181818181, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8222222179174423, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8260869565217391, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8296296298503876, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8304347826086956, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8333333283662796, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8363636363636363, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8370370417833328, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8375, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8434782608695652, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8444444388151169, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8478260869565217, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8500000000000001, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8518518507480621, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8545454545454545, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8555555492639542, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8565217391304347, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8592592626810074, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8625, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8666666597127914, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8695652173913043, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8727272727272727, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8740740716457367, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.875, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8777777701616287, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8814814761281013, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8826086956521739, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8875, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8888888880610466, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8909090909090909, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8913043478260869, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8956521739130435, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8962962925434113, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.8999999985098839, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9027027027027027, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.903125, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9037037044763565, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9043478260869565, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9054054054054054, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9058823511004448, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.90625, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9081081081081082, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.908695652173913, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9090909090909091, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.909375, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9108108108108108, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9111111089587212, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9117647036910057, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9125, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9130434782608696, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9135135135135135, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.915625, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9162162162162162, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9173913043478261, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9176470562815666, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9185185208916664, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.91875, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9189189189189189, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9216216216216216, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9217391304347826, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.921875, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9222222194075584, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9235294088721275, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9243243243243243, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.925, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9259259253740311, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9260869565217391, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.927027027027027, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9272727272727272, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.928125, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9294117614626884, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9297297297297298, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9304347826086956, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.93125, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9324324324324325, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9333333298563957, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.934375, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9347826086956522, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9351351351351351, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9352941140532494, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9375, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9378378378378378, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9391304347826087, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9405405405405405, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.940625, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9407407380640507, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9411764703691006, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9432432432432433, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9434782608695652, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.94375, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9444444440305233, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9454545454545454, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9459459459459459, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.946875, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9470588229596615, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9478260869565217, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9481481462717056, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9486486486486486, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9499999992549419, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.95, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9521739130434783, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9529411755502224, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9540540540540541, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9541666656732559, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9555555544793606, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.95625, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9565217391304348, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9567567567567568, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9583333320915699, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9588235281407833, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.959375, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9594594594594594, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9608695652173913, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9621621621621621, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9624999985098839, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9625, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9629629626870155, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9636363636363636, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9647058807313442, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9648648648648649, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9652173913043478, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.965625, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9666666649281979, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9675675675675676, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.96875, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9695652173913043, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9702702702702702, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9703703690320253, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9705882351845503, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.970833333209157, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.971764705882353, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.971875, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.972972972972973, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9735294117647059, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9739130434782609, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.974999999627471, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.975, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9752941176470589, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9756756756756757, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9764705877751112, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9770588235294118, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9777777772396803, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.978125, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9782608695652174, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9783783783783784, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9788235294117648, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.979166666045785, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9800000004470348, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9805882352941176, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9809090904891491, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.981081081081081, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.98125, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9816666673868895, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9818181818181818, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9818181823939085, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9823529403656721, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9826086956521739, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9827272724360228, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9833333324640989, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9833333343267441, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9836363643407822, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9837837837837837, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9841176470588235, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.984375, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.984545455314219, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9850000003352761, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9851851845160127, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9854545453563333, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9858823529411764, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9863636363297701, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9864864864864865, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9866666672751307, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9869565217391304, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9872727273032069, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9874999998137355, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9875, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9876470588235294, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9881818182766438, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9882352938875556, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9883333332836628, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9888888886198401, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9890909092500806, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9891891891891892, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9894117647058823, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9900000002235174, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9906666669994593, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9909090911969543, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9910000003874302, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9911764705882353, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.991304347826087, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9913333337754011, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9916666662320495, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.991666667163372, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9918181821703911, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.992000000551343, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9925925922580063, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9926666668616235, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9927272726781666, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9930000002495944, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9933333336375654, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9936363636516035, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.99375, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9939999999478459, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9941176469437778, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9945454546250403, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9945945945945946, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9946666667237878, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9947058823529412, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9950000001117587, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9953333334997296, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9954545455984771, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9956521739130435, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9958333331160247, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9960000002756715, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9963636363390833, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9964705882352941, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9966666668187827, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.996999999973923, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9972727273125201, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9973333333618939, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9980000001378357, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9981818181695417, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9982352941176471, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9983333334093913, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.998666666680947, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9990000000689179, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9990909090847708, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=0.9993333333404735, dtype=VarType(float32), )
paddle.full(shape=list[], fill_value=1, dtype="int64", )
paddle.full(shape=list[], fill_value=1, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=1.0, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=1.0, dtype=Dtype(float64), )
paddle.full(shape=list[], fill_value=1.1, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=1.2, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=10, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=10, dtype=Dtype(float64), )
paddle.full(shape=list[], fill_value=100, dtype="int64", )
paddle.full(shape=list[], fill_value=2, dtype="int32", )
paddle.full(shape=list[], fill_value=2, dtype="int64", )
paddle.full(shape=list[], fill_value=2.1, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=3, dtype="float32", )
paddle.full(shape=list[], fill_value=3, dtype="float64", )
paddle.full(shape=list[], fill_value=3, dtype="int32", )
paddle.full(shape=list[], fill_value=3, dtype="int64", )
paddle.full(shape=list[], fill_value=4, dtype="int32", )
paddle.full(shape=list[], fill_value=5, dtype=Dtype(float64), )
paddle.full(shape=list[], fill_value=9, dtype=Dtype(float64), )
paddle.full(shape=list[], fill_value=9.869604401089358, dtype=Dtype(float32), )
paddle.full(shape=list[], fill_value=False, dtype="bool", )
paddle.full(shape=list[], fill_value=Tensor([1],"int64"), dtype="int64", )
paddle.full(shape=list[], fill_value=True, dtype="bool", )
paddle.full(shape=tuple(), fill_value=0.1, dtype="float32", )
paddle.full(shape=tuple(), fill_value=0.5, dtype=Dtype(float32), )
paddle.full(shape=tuple(), fill_value=0.7, dtype=Dtype(float32), )
paddle.full(shape=tuple(), fill_value=1.0, dtype="float32", )
paddle.full(shape=tuple(1,128,32,32,), fill_value=-math.inf, dtype=Dtype(float32), )
paddle.full(shape=tuple(1,3,), dtype="float32", fill_value=-2.0, )
paddle.full(shape=tuple(3,2,), fill_value=1, dtype=type(numpy.int32), )
paddle.full(shape=tuple(3,2,), fill_value=1, dtype=type(numpy.int64), )
paddle.full(shape=tuple(3,2,), fill_value=1.1, dtype=type(numpy.float16), )
paddle.full(shape=tuple(3,2,), fill_value=1.1, dtype=type(numpy.float32), )
paddle.full(shape=tuple(3,2,), fill_value=Tensor([1],"float32"), dtype="float32", )
paddle.full(shape=tuple(3,2,), fill_value=Tensor([1],"float32"), dtype=type(numpy.float32), )
paddle.full(shape=tuple(3,2,), fill_value=Tensor([1],"int32"), dtype=type(numpy.int32), )
paddle.full(shape=tuple(3,4,), dtype="float32", fill_value=-2.0, )
paddle.full(tuple(), -0.6, dtype=Dtype(float32), )
paddle.full(tuple(), -0.6, dtype=Dtype(float64), )
paddle.full(tuple(), -1.2, dtype="float64", )
paddle.full(tuple(), 0.0, dtype="float64", )
paddle.full(tuple(), 0.1, dtype="float64", )
paddle.full(tuple(), 0.3, dtype="float64", )
paddle.full(tuple(), 0.6, dtype=Dtype(float32), )
paddle.full(tuple(), 0.6, dtype=Dtype(float64), )
paddle.full(tuple(), 1.0, dtype="float64", )
paddle.full(tuple(), 1.2, dtype="float64", )
paddle.full(tuple(), 2.3, dtype="float64", )
paddle.full(tuple(), 5.7, dtype=Dtype(float32), )
paddle.full(tuple(), 5.7, dtype=Dtype(float64), )
paddle.full(tuple(0,0,), 1.0, dtype="float32", )
paddle.full(tuple(0,0,2,3,), 1.0, dtype="float32", )
paddle.full(tuple(0,6,), 1.0, dtype="float32", )
paddle.full(tuple(2,0,6,6,), 1.0, dtype="float32", )
paddle.full(tuple(2,3,0,0,), 1.0, dtype="float32", )
paddle.full(tuple(200,), 4, dtype=VarType(int64), )
paddle.full(tuple(300,), -1, dtype="int64", )
paddle.full(tuple(300,), 4, dtype=VarType(int64), )
paddle.full(tuple(32,32,), fill_value=-math.inf, dtype=Dtype(float32), )
paddle.full(tuple(36858,1,), 0, dtype=VarType(float32), )
paddle.full(tuple(36858,1,), 4, dtype=VarType(int32), )
paddle.full(tuple(36858,4,), 0, dtype=VarType(float32), )
paddle.full(tuple(38402,1,), 0, dtype=VarType(float32), )
paddle.full(tuple(38402,1,), 4, dtype=VarType(int32), )
paddle.full(tuple(38402,4,), 0, dtype=VarType(float32), )
paddle.full(tuple(4,), 0, dtype="int64", )
paddle.full(tuple(4,), 1, dtype="int64", )
paddle.full(tuple(4,), 2, dtype="int64", )
paddle.full(tuple(4,), 3, dtype="int64", )
paddle.full(tuple(6,0,), 1.0, dtype="float32", )
paddle.full(tuple(6380,), -1, dtype="int64", )
paddle.full(tuple(6380,), 4, dtype=VarType(int64), )
paddle.full(tuple(6400,1,), 0, dtype=VarType(float32), )
paddle.full(tuple(6400,1,), 4, dtype=VarType(int32), )
paddle.full(tuple(6400,4,), 0, dtype=VarType(float32), )
paddle.full(tuple(8550,), -1, dtype="int64", )
paddle.full(tuple(8550,), 4, dtype=VarType(int64), )
paddle.full(tuple(8580,1,), 0, dtype=VarType(float32), )
paddle.full(tuple(8580,1,), 4, dtype=VarType(int32), )
paddle.full(tuple(8580,4,), 0, dtype=VarType(float32), )
paddle.full(tuple(900,), -1, dtype="int64", )
paddle.full(tuple(900,), 4, dtype=VarType(int64), )
paddle.full_like(Tensor([1, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 1],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([1, 2],"float32"), dtype=type(numpy.float32), fill_value=1.1, )
paddle.full_like(Tensor([1, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1, 96, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([10, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([10, 1],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([10, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([10, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([10, 96, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1024],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([10],"float32"), -4.59511985013459, dtype=VarType(float32), )
paddle.full_like(Tensor([1152],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([11],"float32"), -4.59511985013459, dtype=VarType(float32), )
paddle.full_like(Tensor([128],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1500],"int64"), False, dtype="bool", )
paddle.full_like(Tensor([1536],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([15],"float32"), -4.59511985013459, dtype=VarType(float32), )
paddle.full_like(Tensor([160],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([1],"float32"), -4.59511985013459, dtype=VarType(float32), )
paddle.full_like(Tensor([1],"float32"), 0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 1],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([2, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2, 96, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([200],"int64"), False, dtype="bool", )
paddle.full_like(Tensor([219, 232],"float32"), 0.0, VarType(bfloat16), None, )
paddle.full_like(Tensor([219, 232],"int32"), 0.0, Dtype(int16), None, )
paddle.full_like(Tensor([219, 232],"int32"), 0.0, VarType(float32), None, )
paddle.full_like(Tensor([256, 128],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([256, 160],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([256, 192],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([256, 256],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([256, 320],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([256, 4],"float32"), 0, dtype=VarType(float32), )
paddle.full_like(Tensor([256, 4],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([256, 96],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([256],"float32"), 0, dtype=VarType(float32), )
paddle.full_like(Tensor([256],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2],"float32"), -2.0, dtype=VarType(float32), )
paddle.full_like(Tensor([2],"float32"), -4.59511985013459, dtype=VarType(float32), )
paddle.full_like(Tensor([2],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([3, 1],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([300],"int64"), False, dtype="bool", )
paddle.full_like(Tensor([3072],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([384],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 128, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 144, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 192, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 1],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([4, 240, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 256, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 288, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 320, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 480, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 576, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 64, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 96, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 96, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4, 960, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([40, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([40, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([40, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([40, 96, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([40],"float32"), 1.0, dtype=VarType(float32), )
paddle.full_like(Tensor([4],"float32"), -4.59511985013459, dtype=VarType(float32), )
paddle.full_like(Tensor([4],"float32"), 0, dtype=VarType(float32), )
paddle.full_like(Tensor([4],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([5, 128, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([5, 192, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([5, 1],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([5, 256, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([5, 320, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([5, 64, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([5, 96, 1, 1],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([512],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([6, 1],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([68, 144, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([68, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([68, 240, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([68, 288, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([68, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([68, 480, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([68, 576, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([68, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([68, 96, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([68, 960, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([68],"float32"), 1.0, dtype=VarType(float32), )
paddle.full_like(Tensor([7, 1],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([768],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([8, 1],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([88, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([88, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([88, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([88],"float32"), 1.0, dtype=VarType(float32), )
paddle.full_like(Tensor([9, 1],"int64"), True, dtype=VarType(bool), )
paddle.full_like(Tensor([91, 192, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([91, 384, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([91, 768, 3, 3],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(Tensor([96],"float32"), 0.0, dtype=VarType(float32), )
paddle.full_like(x=Tensor([2],"float64"), fill_value=1, dtype="int32", )
paddle.full_like(x=Tensor([2],"float64"), fill_value=1, dtype="int64", )
paddle.full_like(x=Tensor([2],"float64"), fill_value=1, dtype=type(numpy.int32), )
paddle.full_like(x=Tensor([2],"float64"), fill_value=1, dtype=type(numpy.int64), )
paddle.full_like(x=Tensor([2],"float64"), fill_value=1.0, dtype="float16", )
paddle.full_like(x=Tensor([2],"float64"), fill_value=1.0, dtype="float32", )
paddle.full_like(x=Tensor([2],"float64"), fill_value=1.0, dtype=type(numpy.float16), )
paddle.full_like(x=Tensor([2],"float64"), fill_value=1.0, dtype=type(numpy.float32), )
paddle.full_like(x=Tensor([2],"float64"), fill_value=False, dtype="bool", )
paddle.full_like(x=Tensor([2],"float64"), fill_value=True, dtype="bool", )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=5, weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=None, ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=None, ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=None, ranges=list[1.0,10.0,1.0,100.0,], density=False, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=None, ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=list[3,4,], weights=Tensor([4, 2],"float64"), ranges=list[1.0,10.0,1.0,100.0,], density=True, )
paddle.histogramdd(Tensor([4, 2, 2],"float64"), bins=tuple(Tensor([5],"float64"),Tensor([3],"float64"),), weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=False, )
paddle.histogramdd(Tensor([4, 2, 4],"float64"), bins=list[1,2,3,4,], weights=Tensor([4, 2],"float64"), ranges=None, density=True, )
paddle.histogramdd(Tensor([4, 2],"float32"), bins=list[2,2,], weights=None, ranges=list[0.0,1.0,0.0,1.0,], density=True, )
paddle.histogramdd(Tensor([4, 2],"float64"), bins=list[2,2,], weights=None, ranges=list[0.0,1.0,0.0,1.0,], density=True, )
paddle.histogramdd(Tensor([4, 2],"float64"), bins=list[3,3,], weights=Tensor([4],"float64"), ranges=None, density=False, )
paddle.hsplit(Tensor([4, 6, 3],"int64"), 2, )
paddle.hsplit(Tensor([4, 6, 3],"int64"), 3, )
paddle.hsplit(Tensor([4, 6],"int64"), 2, )
paddle.hsplit(Tensor([4, 6],"int64"), 3, )
paddle.hsplit(Tensor([6],"bool"), 3, )
paddle.hsplit(Tensor([6],"float16"), 3, )
paddle.hsplit(Tensor([6],"float32"), 3, )
paddle.hsplit(Tensor([6],"float64"), 3, )
paddle.hsplit(Tensor([6],"int32"), 3, )
paddle.hsplit(Tensor([6],"int64"), 2, )
paddle.hsplit(Tensor([6],"int64"), 3, )
paddle.hsplit(Tensor([6],"uint8"), 3, )
paddle.index_add(Tensor([10, 10],"float32"), Tensor([4],"int32"), -1, Tensor([10, 4],"float32"), )
paddle.index_add(Tensor([100, 100, 25],"float32"), Tensor([20],"int32"), 2, Tensor([100, 100, 20],"float32"), )
paddle.index_add(Tensor([100, 100, 5],"float32"), Tensor([20],"int32"), 1, Tensor([100, 20, 5],"float32"), )
paddle.index_add(Tensor([100, 5],"float32"), Tensor([20],"int32"), 0, Tensor([20, 5],"float32"), )
paddle.index_add(Tensor([100, 5],"float64"), Tensor([20],"int64"), 0, Tensor([20, 5],"float64"), )
paddle.index_fill(Tensor([10, 15, 10],"bool"), Tensor([5],"int32"), 1, True, )
paddle.index_fill(Tensor([10, 15, 10],"float16"), Tensor([5],"int64"), 1, 0.5, )
paddle.index_fill(Tensor([10, 15, 10],"int64"), Tensor([5],"int32"), 1, -1, )
paddle.index_fill(Tensor([128],"int64"), Tensor([28],"int64"), 0, 5, )
paddle.index_fill(Tensor([128],"int64"), Tensor([30],"int64"), 0, 7, )
paddle.index_fill(Tensor([128],"int64"), Tensor([38],"int64"), 0, 6, )
paddle.index_fill(Tensor([20, 40],"float32"), Tensor([2],"int64"), 1, -1, )
paddle.index_fill(Tensor([20, 40],"float64"), Tensor([5],"int64"), 0, -1, )
paddle.index_fill(Tensor([4],"int64"), Tensor([4],"int64"), 0, 2, )
paddle.index_fill(Tensor([8],"int64"), Tensor([5],"int64"), 0, 2, )
paddle.isin(Tensor([2, 5, 10],"bfloat16"), Tensor([100],"bfloat16"), True, False, )
paddle.isin(Tensor([2, 5, 10],"bfloat16"), Tensor([100],"bfloat16"), True, True, )
paddle.isin(Tensor([4, 8],"bfloat16"), Tensor([2, 3],"bfloat16"), False, False, )
paddle.isin(Tensor([4, 8],"bfloat16"), Tensor([2, 3],"bfloat16"), False, True, )
paddle.isin(Tensor([8, 64],"bfloat16"), Tensor([4, 256],"bfloat16"), False, False, )
paddle.isin(Tensor([8, 64],"bfloat16"), Tensor([4, 256],"bfloat16"), False, True, )
paddle.isin(Tensor([],"bfloat16"), Tensor([],"bfloat16"), False, False, )
paddle.isin(Tensor([],"bfloat16"), Tensor([],"bfloat16"), False, True, )
paddle.linalg.lstsq(Tensor([2, 3, 10],"float32"), Tensor([2, 3, 4],"float32"), rcond=1e-15, driver="gelss", )
paddle.linalg.lstsq(Tensor([200, 100],"float64"), Tensor([200, 50],"float64"), rcond=1e-15, driver="gelsd", )
paddle.linalg.lstsq(Tensor([3, 2],"float64"), Tensor([3, 3],"float64"), rcond=1e-07, driver="gelsd", )
paddle.linalg.lstsq(Tensor([5, 4],"float64"), Tensor([5, 3],"float64"), rcond=1e-15, driver="gelsd", )
paddle.linalg.lstsq(Tensor([5, 5],"float64"), Tensor([5, 1],"float64"), rcond=None, driver="gelss", )
paddle.linalg.lstsq(Tensor([50, 600],"float64"), Tensor([50, 300],"float64"), rcond=1e-15, driver="gelss", )
paddle.linalg.lstsq(Tensor([8, 2],"float32"), Tensor([8, 10],"float32"), rcond=1e-15, driver="gelsy", )
paddle.linalg.matrix_rank(Tensor([1, 10],"float32"), None, False, )
paddle.linalg.matrix_rank(Tensor([1, 10],"float32"), None, False, Tensor([],"float32"), Tensor([],"float32"), )
paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), None, True, )
paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), None, True, Tensor([200, 200],"float64"), Tensor([200, 200],"float64"), )
paddle.linalg.matrix_rank(Tensor([3, 3],"float32"), None, True, Tensor([],"float32"), Tensor([],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 3],"float64"), None, False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), None, False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), None, False, Tensor([3, 4],"float32"), Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=0.01, rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=0.01, )
paddle.linalg.matrix_rank(Tensor([5, 1],"float64"), None, False, Tensor([1, 4],"float64"), Tensor([1, 4],"float64"), )
paddle.linalg.matrix_rank(x=Tensor([2, 4, 4, 4],"float64"), tol=None, hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([4, 5],"float32"), tol=None, hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([4, 5],"float64"), tol=None, hermitian=False, )
paddle.linalg.norm(Tensor([24],"float32"), p="fro", axis=0, )
paddle.linalg.norm(x=Tensor([2, 3, 4],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 4],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 4],"float64"), p=-math.inf, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 4],"float64"), p=-math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 4],"float64"), p=0, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 4],"float64"), p=0, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([9],"float64"), axis=None, p="fro", )
paddle.linspace(-1, 1, 100, dtype="float32", )
paddle.linspace(-1, 1, 136, dtype="float32", )
paddle.linspace(-1, 1, 152, dtype="float32", )
paddle.linspace(-1, 1, 156, dtype="float32", )
paddle.linspace(-1, 1, 25, dtype="float32", )
paddle.linspace(-1, 1, 34, dtype="float32", )
paddle.linspace(-1, 1, 38, dtype="float32", )
paddle.linspace(-1, 1, 39, dtype="float32", )
paddle.linspace(-1, 1, 50, dtype="float32", )
paddle.linspace(-1, 1, 513, dtype="float64", )
paddle.linspace(-1, 1, 68, dtype="float32", )
paddle.linspace(-1, 1, 76, dtype="float32", )
paddle.linspace(-1, 1, 78, dtype="float32", )
paddle.linspace(-1.0, 1.0, 8000.0, dtype=Dtype(float32), )
paddle.linspace(-3.141592653589793, 3.141592653589793, 513, dtype="float32", )
paddle.linspace(-3.141592653589793, 3.141592653589793, 513, dtype="float64", )
paddle.linspace(0, 10, 0, dtype="float32", )
paddle.linspace(0, 10, 200, dtype="int32", )
paddle.linspace(0, 10, 5, dtype="float32", )
paddle.linspace(0, 10, 5, dtype="int32", )
paddle.linspace(0, 10, 5, dtype=VarType(float32), )
paddle.linspace(0, 10, 5, dtype=type(numpy.float32), )
paddle.linspace(0, 12207.0, 257, dtype="float32", )
paddle.linspace(0, 22050.0, 257, dtype="float32", )
paddle.linspace(0, Tensor([],"int64"), Tensor([],"int32"), dtype="float32", )
paddle.linspace(0.14285714285714285, 1, 6, dtype="float64", )
paddle.linspace(0.14285714285714285, 1, 6, dtype=Dtype(float64), )
paddle.linspace(0.3333333333333333, 1, 2, dtype="float64", )
paddle.linspace(0.3333333333333333, 1, 2, dtype=Dtype(float64), )
paddle.linspace(0.75, 51.391925438912004, 66, dtype="float32", )
paddle.linspace(0.75, 59.992474637533334, 66, dtype="float32", )
paddle.linspace(20, 10, 5, "float64", )
paddle.linspace(5, 28, 24, "int64", )
paddle.linspace(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"int32"), dtype="float32", )
paddle.linspace(Tensor([],"float32"), Tensor([],"float32"), 3, Dtype(float32), )
paddle.linspace(Tensor([],"float32"), Tensor([],"float32"), Tensor([],"int32"), )
paddle.linspace(Tensor([],"float64"), Tensor([],"float64"), 2, Dtype(float64), )
paddle.linspace(Tensor([],"float64"), Tensor([],"float64"), 3, Dtype(float64), )
paddle.linspace(Tensor([],"float64"), Tensor([],"float64"), 4, Dtype(float64), )
paddle.linspace(Tensor([],"float64"), Tensor([],"float64"), 5, Dtype(float64), )
paddle.linspace(Tensor([],"float64"), Tensor([],"float64"), 6, Dtype(float64), )
paddle.linspace(start=3, stop=9, num=5, dtype="float32", )
paddle.linspace(start=3, stop=9, num=5, dtype="float64", )
paddle.linspace(start=3, stop=9, num=5, dtype=type(numpy.float64), )
paddle.linspace(start=4.5, stop=8, num=Tensor([1],"int32"), )
paddle.linspace(start=Tensor([1],"float64"), stop=9.6, num=5, dtype="float64", )
paddle.linspace(start=Tensor([1],"float64"), stop=Tensor([1],"float64"), num=2, dtype="float64", )
paddle.linspace(start=Tensor([1],"int32"), stop=Tensor([1],"int32"), num=2, )
paddle.logcumsumexp(Tensor([10, 10, 10],"float32"), )
paddle.logcumsumexp(Tensor([24],"float32"), )
paddle.logcumsumexp(Tensor([3, 4],"float32"), )
paddle.logcumsumexp(Tensor([],"float32"), )
paddle.logspace(0, 10, 200, 2, dtype="int32", )
paddle.logspace(0, 10, 5, 2, dtype="float32", )
paddle.logspace(0, 10, 5, 2, dtype="float32", name="logspace_res", )
paddle.logspace(0, 10, 5, 2, dtype="int32", )
paddle.logspace(0, 10, 5, 2, dtype=type(numpy.float32), )
paddle.logspace(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"int32"), Tensor([1],"float32"), dtype="float32", )
paddle.logspace(Tensor([],"float32"), Tensor([],"float32"), Tensor([],"int32"), Tensor([],"float32"), )
paddle.logsumexp(Tensor([1000],"float32"), )
paddle.logsumexp(Tensor([2, 3, 4, 5],"float32"), )
paddle.logsumexp(Tensor([2, 3, 4, 5],"float32"), None, False, )
paddle.logsumexp(Tensor([2, 3, 4, 5],"float32"), None, True, )
paddle.logsumexp(Tensor([2, 3, 4, 5],"float64"), None, False, )
paddle.logsumexp(Tensor([3, 5],"float32"), axis=None, )
paddle.logsumexp(Tensor([3, 5],"float32"), keepdim=True, )
paddle.logsumexp(Tensor([30, 200, 40],"float32"), )
paddle.logsumexp(Tensor([30, 200, 40],"float32"), keepdim=False, )
paddle.logsumexp(Tensor([],"float32"), axis=None, )
paddle.masked_fill(Tensor([120],"float32"), Tensor([300, 120],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([168],"float16"), Tensor([168],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([168],"float32"), Tensor([168],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([3, 3],"float32"), Tensor([1, 3],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([3, 40],"float16"), Tensor([3, 1],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([3, 40],"float32"), Tensor([3, 1],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([300, 1],"float16"), Tensor([300, 40],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([300, 40],"float32"), Tensor([40],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([50, 3],"float32"), Tensor([50, 3],"bool"), Tensor([1],"float32"), )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float16"), Tensor([6, 8, 9, 18],"bool"), Tensor([1],"float16"), )
paddle.masked_fill(Tensor([6, 8, 9, 18],"float32"), Tensor([6, 8, 9, 18],"bool"), Tensor([1],"float32"), )
paddle.max(Tensor([1, 1, 192],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([1, 257, 192],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([1, 32, 8],"float32"), axis=list[0,], )
paddle.max(Tensor([1, 32, 8],"float32"), axis=list[2,], )
paddle.max(Tensor([10, 10, 9, 9],"float64"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.max(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.max(Tensor([1024],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([192, 1024],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([192, 192],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([192, 3, 14, 14],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([192, 512],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([192],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([2, 2, 2],"int32"), tuple(0,1,), False, )
paddle.max(Tensor([2, 2, 64, 64],"float16"), axis=list[0,2,3,], )
paddle.max(Tensor([2, 2],"float32"), axis=tuple(-2,-1,), )
paddle.max(Tensor([2, 3],"float32"), axis=Tensor([],"int64"), )
paddle.max(Tensor([2, 4],"float64"), None, False, )
paddle.max(Tensor([2, 8, 64, 64],"float16"), axis=list[0,2,3,], )
paddle.max(Tensor([3, 128, 96],"int32"), axis=list[2,], keepdim=False, )
paddle.max(Tensor([3, 5],"float32"), axis=None, )
paddle.max(Tensor([3, 5],"float32"), keepdim=True, )
paddle.max(Tensor([30, 200, 40],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.max(Tensor([30, 200, 40],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.max(Tensor([30, 200, 40],"float32"), axis=list[0,1,], keepdim=False, )
paddle.max(Tensor([30, 200, 40],"float32"), keepdim=False, )
paddle.max(Tensor([30, 200, 40],"float32"), keepdim=True, )
paddle.max(Tensor([30],"float32"), keepdim=True, )
paddle.max(Tensor([32],"float32"), axis=list[0,], keepdim=False, )
paddle.max(Tensor([512, 192],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([512],"float32"), axis=None, keepdim=False, name=None, )
paddle.max(Tensor([64, 128, 96],"float32"), axis=list[0,1,], )
paddle.max(Tensor([64, 128, 96],"float32"), axis=list[2,], )
paddle.max(Tensor([8, 16, 32],"float32"), axis=list[0,1,2,], keepdim=False, )
paddle.max(Tensor([],"float32"), axis=None, )
paddle.max(Tensor([],"float32"), axis=list[], )
paddle.max(Tensor([],"float64"), None, False, )
paddle.max(x=Tensor([2, 2],"float32"), axis=list[-2,1,], keepdim=False, )
paddle.max(x=Tensor([2, 3],"float32"), axis=Tensor([1],"int64"), )
paddle.mean(Tensor([10, 10],"float32"), keepdim=True, )
paddle.mean(Tensor([3, 5],"float32"), keepdim=True, )
paddle.mean(x=Tensor([2, 1, 3],"float64"), axis=Tensor([2],"int64"), )
paddle.min(Tensor([10, 10, 9, 9],"float64"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.min(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.min(Tensor([16, 32],"float32"), list[0,], )
paddle.min(Tensor([16, 32],"float32"), list[1,], )
paddle.min(Tensor([2, 2, 2],"int32"), tuple(0,1,), False, )
paddle.min(Tensor([2, 4],"float64"), None, False, )
paddle.min(Tensor([2],"float64"), axis=tuple(0,), )
paddle.min(Tensor([3, 5],"float32"), axis=None, )
paddle.min(Tensor([3, 5],"float32"), keepdim=True, )
paddle.min(Tensor([],"float32"), axis=None, )
paddle.min(Tensor([],"float32"), axis=list[], )
paddle.min(Tensor([],"float64"), None, False, )
paddle.min(x=Tensor([2, 2],"float32"), axis=list[-2,1,], keepdim=False, )
paddle.min(x=Tensor([2, 3],"float32"), axis=Tensor([1],"int32"), )
paddle.mm(Tensor([1024, 4, 49, 32],"float32"), Tensor([1024, 4, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 4, 49, 49],"float32"), Tensor([1024, 4, 49, 32],"float32"), )
paddle.mm(Tensor([1024, 6, 49, 32],"float32"), Tensor([1024, 6, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 6, 49, 49],"float32"), Tensor([1024, 6, 49, 32],"float32"), )
paddle.mm(Tensor([1024, 8, 144, 144],"float32"), Tensor([1024, 8, 144, 32],"float32"), )
paddle.mm(Tensor([1024, 8, 144, 32],"float32"), Tensor([1024, 8, 32, 144],"float32"), )
paddle.mm(Tensor([1024, 8, 49, 32],"float32"), Tensor([1024, 8, 32, 49],"float32"), )
paddle.mm(Tensor([1024, 8, 49, 49],"float32"), Tensor([1024, 8, 49, 32],"float32"), )
paddle.mm(Tensor([108, 6, 49, 32],"float32"), Tensor([108, 6, 32, 49],"float32"), )
paddle.mm(Tensor([108, 6, 49, 49],"float32"), Tensor([108, 6, 49, 32],"float32"), )
paddle.mm(Tensor([112, 24, 144, 144],"float32"), Tensor([112, 24, 144, 32],"float32"), )
paddle.mm(Tensor([112, 24, 144, 32],"float32"), Tensor([112, 24, 32, 144],"float32"), )
paddle.mm(Tensor([12, 24, 144, 144],"float32"), Tensor([12, 24, 144, 32],"float32"), )
paddle.mm(Tensor([12, 24, 144, 32],"float32"), Tensor([12, 24, 32, 144],"float32"), )
paddle.mm(Tensor([12, 32, 49, 32],"float32"), Tensor([12, 32, 32, 49],"float32"), )
paddle.mm(Tensor([12, 32, 49, 49],"float32"), Tensor([12, 32, 49, 32],"float32"), )
paddle.mm(Tensor([124, 24, 49, 32],"float32"), Tensor([124, 24, 32, 49],"float32"), )
paddle.mm(Tensor([124, 24, 49, 49],"float32"), Tensor([124, 24, 49, 32],"float32"), )
paddle.mm(Tensor([124, 48, 49, 32],"float32"), Tensor([124, 48, 32, 49],"float32"), )
paddle.mm(Tensor([124, 48, 49, 49],"float32"), Tensor([124, 48, 49, 32],"float32"), )
paddle.mm(Tensor([128, 12, 49, 32],"float32"), Tensor([128, 12, 32, 49],"float32"), )
paddle.mm(Tensor([128, 12, 49, 49],"float32"), Tensor([128, 12, 49, 32],"float32"), )
paddle.mm(Tensor([128, 24, 144, 144],"float32"), Tensor([128, 24, 144, 32],"float32"), )
paddle.mm(Tensor([128, 24, 144, 32],"float32"), Tensor([128, 24, 32, 144],"float32"), )
paddle.mm(Tensor([128, 24, 49, 32],"float32"), Tensor([128, 24, 32, 49],"float32"), )
paddle.mm(Tensor([128, 24, 49, 49],"float32"), Tensor([128, 24, 49, 32],"float32"), )
paddle.mm(Tensor([128, 48, 49, 32],"float32"), Tensor([128, 48, 32, 49],"float32"), )
paddle.mm(Tensor([128, 48, 49, 49],"float32"), Tensor([128, 48, 49, 32],"float32"), )
paddle.mm(Tensor([1536, 3, 49, 32],"float32"), Tensor([1536, 3, 32, 49],"float32"), )
paddle.mm(Tensor([1536, 3, 49, 49],"float32"), Tensor([1536, 3, 49, 32],"float32"), )
paddle.mm(Tensor([16, 16, 144, 144],"float32"), Tensor([16, 16, 144, 32],"float32"), )
paddle.mm(Tensor([16, 16, 144, 32],"float32"), Tensor([16, 16, 32, 144],"float32"), )
paddle.mm(Tensor([16, 24, 144, 144],"float32"), Tensor([16, 24, 144, 32],"float32"), )
paddle.mm(Tensor([16, 24, 144, 32],"float32"), Tensor([16, 24, 32, 144],"float32"), )
paddle.mm(Tensor([16, 24, 49, 32],"float32"), Tensor([16, 24, 32, 49],"float32"), )
paddle.mm(Tensor([16, 24, 49, 49],"float32"), Tensor([16, 24, 49, 32],"float32"), )
paddle.mm(Tensor([16, 32, 49, 32],"float32"), Tensor([16, 32, 32, 49],"float32"), )
paddle.mm(Tensor([16, 32, 49, 49],"float32"), Tensor([16, 32, 49, 32],"float32"), )
paddle.mm(Tensor([1792, 6, 144, 144],"float32"), Tensor([1792, 6, 144, 32],"float32"), )
paddle.mm(Tensor([1792, 6, 144, 32],"float32"), Tensor([1792, 6, 32, 144],"float32"), )
paddle.mm(Tensor([192, 6, 144, 144],"float32"), Tensor([192, 6, 144, 32],"float32"), )
paddle.mm(Tensor([192, 6, 144, 32],"float32"), Tensor([192, 6, 32, 144],"float32"), )
paddle.mm(Tensor([192, 8, 49, 32],"float32"), Tensor([192, 8, 32, 49],"float32"), )
paddle.mm(Tensor([192, 8, 49, 49],"float32"), Tensor([192, 8, 49, 32],"float32"), )
paddle.mm(Tensor([1984, 12, 49, 32],"float32"), Tensor([1984, 12, 32, 49],"float32"), )
paddle.mm(Tensor([1984, 12, 49, 49],"float32"), Tensor([1984, 12, 49, 32],"float32"), )
paddle.mm(Tensor([1984, 6, 49, 32],"float32"), Tensor([1984, 6, 32, 49],"float32"), )
paddle.mm(Tensor([1984, 6, 49, 49],"float32"), Tensor([1984, 6, 49, 32],"float32"), )
paddle.mm(Tensor([2048, 12, 49, 32],"float32"), Tensor([2048, 12, 32, 49],"float32"), )
paddle.mm(Tensor([2048, 12, 49, 49],"float32"), Tensor([2048, 12, 49, 32],"float32"), )
paddle.mm(Tensor([2048, 6, 144, 144],"float32"), Tensor([2048, 6, 144, 32],"float32"), )
paddle.mm(Tensor([2048, 6, 144, 32],"float32"), Tensor([2048, 6, 32, 144],"float32"), )
paddle.mm(Tensor([2048, 6, 49, 32],"float32"), Tensor([2048, 6, 32, 49],"float32"), )
paddle.mm(Tensor([2048, 6, 49, 49],"float32"), Tensor([2048, 6, 49, 32],"float32"), )
paddle.mm(Tensor([24, 1, 256],"float32"), Tensor([24, 256, 96],"float32"), )
paddle.mm(Tensor([24, 24, 49, 32],"float32"), Tensor([24, 24, 32, 49],"float32"), )
paddle.mm(Tensor([24, 24, 49, 49],"float32"), Tensor([24, 24, 49, 32],"float32"), )
paddle.mm(Tensor([240, 12, 49, 32],"float32"), Tensor([240, 12, 32, 49],"float32"), )
paddle.mm(Tensor([240, 12, 49, 49],"float32"), Tensor([240, 12, 49, 32],"float32"), )
paddle.mm(Tensor([240, 16, 144, 144],"float32"), Tensor([240, 16, 144, 32],"float32"), )
paddle.mm(Tensor([240, 16, 144, 32],"float32"), Tensor([240, 16, 32, 144],"float32"), )
paddle.mm(Tensor([240, 16, 49, 32],"float32"), Tensor([240, 16, 32, 49],"float32"), )
paddle.mm(Tensor([240, 16, 49, 49],"float32"), Tensor([240, 16, 49, 32],"float32"), )
paddle.mm(Tensor([256, 12, 49, 32],"float32"), Tensor([256, 12, 32, 49],"float32"), )
paddle.mm(Tensor([256, 12, 49, 49],"float32"), Tensor([256, 12, 49, 32],"float32"), )
paddle.mm(Tensor([256, 16, 144, 144],"float32"), Tensor([256, 16, 144, 32],"float32"), )
paddle.mm(Tensor([256, 16, 144, 32],"float32"), Tensor([256, 16, 32, 144],"float32"), )
paddle.mm(Tensor([256, 16, 49, 32],"float32"), Tensor([256, 16, 32, 49],"float32"), )
paddle.mm(Tensor([256, 16, 49, 49],"float32"), Tensor([256, 16, 49, 32],"float32"), )
paddle.mm(Tensor([256, 4, 144, 144],"float32"), Tensor([256, 4, 144, 32],"float32"), )
paddle.mm(Tensor([256, 4, 144, 32],"float32"), Tensor([256, 4, 32, 144],"float32"), )
paddle.mm(Tensor([256, 6, 144, 144],"float32"), Tensor([256, 6, 144, 32],"float32"), )
paddle.mm(Tensor([256, 6, 144, 32],"float32"), Tensor([256, 6, 32, 144],"float32"), )
paddle.mm(Tensor([256, 6, 49, 32],"float32"), Tensor([256, 6, 32, 49],"float32"), )
paddle.mm(Tensor([256, 6, 49, 49],"float32"), Tensor([256, 6, 49, 32],"float32"), )
paddle.mm(Tensor([256, 8, 49, 32],"float32"), Tensor([256, 8, 32, 49],"float32"), )
paddle.mm(Tensor([256, 8, 49, 49],"float32"), Tensor([256, 8, 49, 32],"float32"), )
paddle.mm(Tensor([28, 48, 144, 144],"float32"), Tensor([28, 48, 144, 32],"float32"), )
paddle.mm(Tensor([28, 48, 144, 32],"float32"), Tensor([28, 48, 32, 144],"float32"), )
paddle.mm(Tensor([30, 12, 49, 32],"float32"), Tensor([30, 12, 32, 49],"float32"), )
paddle.mm(Tensor([30, 12, 49, 49],"float32"), Tensor([30, 12, 49, 32],"float32"), )
paddle.mm(Tensor([32, 24, 49, 32],"float32"), Tensor([32, 24, 32, 49],"float32"), )
paddle.mm(Tensor([32, 24, 49, 49],"float32"), Tensor([32, 24, 49, 32],"float32"), )
paddle.mm(Tensor([32, 48, 144, 144],"float32"), Tensor([32, 48, 144, 32],"float32"), )
paddle.mm(Tensor([32, 48, 144, 32],"float32"), Tensor([32, 48, 32, 144],"float32"), )
paddle.mm(Tensor([384, 6, 49, 32],"float32"), Tensor([384, 6, 32, 49],"float32"), )
paddle.mm(Tensor([384, 6, 49, 49],"float32"), Tensor([384, 6, 49, 32],"float32"), )
paddle.mm(Tensor([3840, 3, 49, 32],"float32"), Tensor([3840, 3, 32, 49],"float32"), )
paddle.mm(Tensor([3840, 3, 49, 49],"float32"), Tensor([3840, 3, 49, 32],"float32"), )
paddle.mm(Tensor([3840, 4, 144, 144],"float32"), Tensor([3840, 4, 144, 32],"float32"), )
paddle.mm(Tensor([3840, 4, 144, 32],"float32"), Tensor([3840, 4, 32, 144],"float32"), )
paddle.mm(Tensor([3840, 4, 49, 32],"float32"), Tensor([3840, 4, 32, 49],"float32"), )
paddle.mm(Tensor([3840, 4, 49, 49],"float32"), Tensor([3840, 4, 49, 32],"float32"), )
paddle.mm(Tensor([4, 1, 256],"float32"), Tensor([4, 256, 512],"float32"), )
paddle.mm(Tensor([4, 32, 144, 144],"float32"), Tensor([4, 32, 144, 32],"float32"), )
paddle.mm(Tensor([4, 32, 144, 32],"float32"), Tensor([4, 32, 32, 144],"float32"), )
paddle.mm(Tensor([4, 48, 144, 144],"float32"), Tensor([4, 48, 144, 32],"float32"), )
paddle.mm(Tensor([4, 48, 144, 32],"float32"), Tensor([4, 48, 32, 144],"float32"), )
paddle.mm(Tensor([4, 48, 49, 32],"float32"), Tensor([4, 48, 32, 49],"float32"), )
paddle.mm(Tensor([4, 48, 49, 49],"float32"), Tensor([4, 48, 49, 32],"float32"), )
paddle.mm(Tensor([4096, 3, 49, 32],"float32"), Tensor([4096, 3, 32, 49],"float32"), )
paddle.mm(Tensor([4096, 3, 49, 49],"float32"), Tensor([4096, 3, 49, 32],"float32"), )
paddle.mm(Tensor([4096, 4, 144, 144],"float32"), Tensor([4096, 4, 144, 32],"float32"), )
paddle.mm(Tensor([4096, 4, 144, 32],"float32"), Tensor([4096, 4, 32, 144],"float32"), )
paddle.mm(Tensor([4096, 4, 49, 32],"float32"), Tensor([4096, 4, 32, 49],"float32"), )
paddle.mm(Tensor([4096, 4, 49, 49],"float32"), Tensor([4096, 4, 49, 32],"float32"), )
paddle.mm(Tensor([414, 3, 49, 32],"float32"), Tensor([414, 3, 32, 49],"float32"), )
paddle.mm(Tensor([414, 3, 49, 49],"float32"), Tensor([414, 3, 49, 32],"float32"), )
paddle.mm(Tensor([448, 12, 144, 144],"float32"), Tensor([448, 12, 144, 32],"float32"), )
paddle.mm(Tensor([448, 12, 144, 32],"float32"), Tensor([448, 12, 32, 144],"float32"), )
paddle.mm(Tensor([48, 12, 144, 144],"float32"), Tensor([48, 12, 144, 32],"float32"), )
paddle.mm(Tensor([48, 12, 144, 32],"float32"), Tensor([48, 12, 32, 144],"float32"), )
paddle.mm(Tensor([48, 16, 49, 32],"float32"), Tensor([48, 16, 32, 49],"float32"), )
paddle.mm(Tensor([48, 16, 49, 49],"float32"), Tensor([48, 16, 49, 32],"float32"), )
paddle.mm(Tensor([496, 12, 49, 32],"float32"), Tensor([496, 12, 32, 49],"float32"), )
paddle.mm(Tensor([496, 12, 49, 49],"float32"), Tensor([496, 12, 49, 32],"float32"), )
paddle.mm(Tensor([496, 24, 49, 32],"float32"), Tensor([496, 24, 32, 49],"float32"), )
paddle.mm(Tensor([496, 24, 49, 49],"float32"), Tensor([496, 24, 49, 32],"float32"), )
paddle.mm(Tensor([512, 12, 144, 144],"float32"), Tensor([512, 12, 144, 32],"float32"), )
paddle.mm(Tensor([512, 12, 144, 32],"float32"), Tensor([512, 12, 32, 144],"float32"), )
paddle.mm(Tensor([512, 12, 49, 32],"float32"), Tensor([512, 12, 32, 49],"float32"), )
paddle.mm(Tensor([512, 12, 49, 49],"float32"), Tensor([512, 12, 49, 32],"float32"), )
paddle.mm(Tensor([512, 24, 49, 32],"float32"), Tensor([512, 24, 32, 49],"float32"), )
paddle.mm(Tensor([512, 24, 49, 49],"float32"), Tensor([512, 24, 49, 32],"float32"), )
paddle.mm(Tensor([512, 6, 49, 32],"float32"), Tensor([512, 6, 32, 49],"float32"), )
paddle.mm(Tensor([512, 6, 49, 49],"float32"), Tensor([512, 6, 49, 32],"float32"), )
paddle.mm(Tensor([60, 24, 49, 32],"float32"), Tensor([60, 24, 32, 49],"float32"), )
paddle.mm(Tensor([60, 24, 49, 49],"float32"), Tensor([60, 24, 49, 32],"float32"), )
paddle.mm(Tensor([60, 32, 144, 144],"float32"), Tensor([60, 32, 144, 32],"float32"), )
paddle.mm(Tensor([60, 32, 144, 32],"float32"), Tensor([60, 32, 32, 144],"float32"), )
paddle.mm(Tensor([60, 32, 49, 32],"float32"), Tensor([60, 32, 32, 49],"float32"), )
paddle.mm(Tensor([60, 32, 49, 49],"float32"), Tensor([60, 32, 49, 32],"float32"), )
paddle.mm(Tensor([64, 12, 144, 144],"float32"), Tensor([64, 12, 144, 32],"float32"), )
paddle.mm(Tensor([64, 12, 144, 32],"float32"), Tensor([64, 12, 32, 144],"float32"), )
paddle.mm(Tensor([64, 12, 49, 32],"float32"), Tensor([64, 12, 32, 49],"float32"), )
paddle.mm(Tensor([64, 12, 49, 49],"float32"), Tensor([64, 12, 49, 32],"float32"), )
paddle.mm(Tensor([64, 16, 49, 32],"float32"), Tensor([64, 16, 32, 49],"float32"), )
paddle.mm(Tensor([64, 16, 49, 49],"float32"), Tensor([64, 16, 49, 32],"float32"), )
paddle.mm(Tensor([64, 24, 49, 32],"float32"), Tensor([64, 24, 32, 49],"float32"), )
paddle.mm(Tensor([64, 24, 49, 49],"float32"), Tensor([64, 24, 49, 32],"float32"), )
paddle.mm(Tensor([64, 32, 144, 144],"float32"), Tensor([64, 32, 144, 32],"float32"), )
paddle.mm(Tensor([64, 32, 144, 32],"float32"), Tensor([64, 32, 32, 144],"float32"), )
paddle.mm(Tensor([64, 32, 49, 32],"float32"), Tensor([64, 32, 32, 49],"float32"), )
paddle.mm(Tensor([64, 32, 49, 49],"float32"), Tensor([64, 32, 49, 32],"float32"), )
paddle.mm(Tensor([64, 8, 144, 144],"float32"), Tensor([64, 8, 144, 32],"float32"), )
paddle.mm(Tensor([64, 8, 144, 32],"float32"), Tensor([64, 8, 32, 144],"float32"), )
paddle.mm(Tensor([768, 4, 49, 32],"float32"), Tensor([768, 4, 32, 49],"float32"), )
paddle.mm(Tensor([768, 4, 49, 49],"float32"), Tensor([768, 4, 49, 32],"float32"), )
paddle.mm(Tensor([7936, 3, 49, 32],"float32"), Tensor([7936, 3, 32, 49],"float32"), )
paddle.mm(Tensor([7936, 3, 49, 49],"float32"), Tensor([7936, 3, 49, 32],"float32"), )
paddle.mm(Tensor([7936, 6, 49, 32],"float32"), Tensor([7936, 6, 32, 49],"float32"), )
paddle.mm(Tensor([7936, 6, 49, 49],"float32"), Tensor([7936, 6, 49, 32],"float32"), )
paddle.mm(Tensor([8, 1, 256],"float32"), Tensor([8, 256, 512],"float32"), )
paddle.mm(Tensor([8, 48, 49, 32],"float32"), Tensor([8, 48, 32, 49],"float32"), )
paddle.mm(Tensor([8, 48, 49, 49],"float32"), Tensor([8, 48, 49, 32],"float32"), )
paddle.mm(Tensor([8192, 3, 49, 32],"float32"), Tensor([8192, 3, 32, 49],"float32"), )
paddle.mm(Tensor([8192, 3, 49, 49],"float32"), Tensor([8192, 3, 49, 32],"float32"), )
paddle.mm(Tensor([8192, 6, 49, 32],"float32"), Tensor([8192, 6, 32, 49],"float32"), )
paddle.mm(Tensor([8192, 6, 49, 49],"float32"), Tensor([8192, 6, 49, 32],"float32"), )
paddle.mm(Tensor([9, 24, 49, 32],"float32"), Tensor([9, 24, 32, 49],"float32"), )
paddle.mm(Tensor([9, 24, 49, 49],"float32"), Tensor([9, 24, 49, 32],"float32"), )
paddle.mm(Tensor([96, 12, 49, 32],"float32"), Tensor([96, 12, 32, 49],"float32"), )
paddle.mm(Tensor([96, 12, 49, 49],"float32"), Tensor([96, 12, 49, 32],"float32"), )
paddle.mm(Tensor([960, 6, 49, 32],"float32"), Tensor([960, 6, 32, 49],"float32"), )
paddle.mm(Tensor([960, 6, 49, 49],"float32"), Tensor([960, 6, 49, 32],"float32"), )
paddle.mm(Tensor([960, 8, 144, 144],"float32"), Tensor([960, 8, 144, 32],"float32"), )
paddle.mm(Tensor([960, 8, 144, 32],"float32"), Tensor([960, 8, 32, 144],"float32"), )
paddle.mm(Tensor([960, 8, 49, 32],"float32"), Tensor([960, 8, 32, 49],"float32"), )
paddle.mm(Tensor([960, 8, 49, 49],"float32"), Tensor([960, 8, 49, 32],"float32"), )
paddle.mm(input=Tensor([2, 3, 1, 2],"float64"), mat2=Tensor([2, 3, 2, 3],"float64"), )
paddle.mm(input=Tensor([2, 3, 4],"float64"), mat2=Tensor([2, 4, 2],"float64"), )
paddle.mm(input=Tensor([2, 3, 4],"float64"), mat2=Tensor([4, 5],"float64"), )
paddle.mm(input=Tensor([2, 3, 4],"float64"), mat2=Tensor([4],"float64"), )
paddle.mm(input=Tensor([7],"float64"), mat2=Tensor([7],"float64"), )
paddle.nanquantile(Tensor([2, 3],"float32"), list[0.3,0.7,], 1, )
paddle.nanquantile(Tensor([4, 7, 6],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.nanquantile(Tensor([4, 7, 6],"float64"), q=0.75, axis=list[0,2,], )
paddle.nanquantile(Tensor([8],"float32"), list[0.55,0.7,], 0, )
paddle.nn.functional.affine_grid(Tensor([1, 2, 3],"float32"), Tensor([4],"int32"), align_corners=True, )
paddle.nn.functional.affine_grid(Tensor([1, 2, 3],"float64"), Tensor([4],"int32"), align_corners=True, )
paddle.nn.functional.affine_grid(Tensor([20, 2, 3],"float32"), Tensor([4],"int64"), align_corners=True, )
paddle.nn.functional.affine_grid(Tensor([4, 2, 3],"float64"), Tensor([4],"int32"), align_corners=False, )
paddle.nn.functional.affine_grid(Tensor([4, 2, 3],"float64"), Tensor([4],"int32"), align_corners=True, )
paddle.nn.functional.fold(Tensor([3, 12, 12],"float64"), output_sizes=list[4,5,], kernel_sizes=list[2,2,], strides=list[1,1,], paddings=list[0,0,0,0,], dilations=list[1,1,], name=None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 3],"float64"), 3.3, -3.3, None, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 3],"float64"), max=-3.3, min=3.3, )
paddle.nn.functional.layer_norm(Tensor([1, 2, 2],"float32"), 2, epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(Tensor([1, 2, 2],"float32"), 2, epsilon=1e-05, weight=Tensor([2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.layer_norm(Tensor([10, 20],"float16"), list[20,], Tensor([20],"float32"), Tensor([20],"float32"), )
paddle.nn.functional.layer_norm(Tensor([14, 209, 384],"float32"), 384, weight=Tensor([384],"float32"), bias=Tensor([384],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 3, 10, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=None, bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=None, bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([4, 10, 4, 4],"float32"), 4, )
paddle.nn.functional.layer_norm(Tensor([64, 64, 128],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([8192],"float32"), )
paddle.nn.functional.layer_norm(Tensor([7, 165, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 186, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 206, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 209, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 220, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 286, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 435, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.thresholded_relu(Tensor([10, 20, 1],"float32"), 1.0, )
paddle.nn.functional.thresholded_relu(Tensor([],"float32"), )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 1, 4, 3],"float64"), threshold=-1, )
paddle.nn.functional.thresholded_relu(x=Tensor([10, 1, 4, 3],"float64"), threshold=0, )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4, 3, 3],"float32"), )
paddle.nn.functional.thresholded_relu(x=Tensor([100, 4, 3, 3],"float64"), )
paddle.nn.functional.unfold(Tensor([3, 3, 20, 20],"float64"), kernel_sizes=list[3,3,], strides=list[1,1,], paddings=list[1,1,1,1,], dilations=list[1,1,], name=None, )
paddle.normal(0.0, 1.0, list[Tensor([],"int32"),Tensor([],"int32"),Tensor([],"int32"),], )
paddle.normal(1.0, Tensor([2, 3, 17],"float64"), None, )
paddle.normal(Tensor([1, 100],"complex128"), Tensor([1, 100],"float64"), None, )
paddle.normal(Tensor([1, 100],"float64"), Tensor([1, 100],"float64"), None, )
paddle.normal(Tensor([100],"complex64"), Tensor([100],"float32"), None, )
paddle.normal(Tensor([100],"float64"), Tensor([100],"float32"), None, )
paddle.normal(Tensor([2, 3, 4, 5],"float64"), 0.0, None, )
paddle.normal(Tensor([2, 3],"complex128"), 1.0, None, )
paddle.normal(complex(1.0,1.0), 1.0, list[8,12,], )
paddle.normal(complex(1.0,1.0), Tensor([2, 5],"float64"), None, )
paddle.normal(mean=0.0, shape=tuple(), )
paddle.normal(mean=0.0, shape=tuple(100000,4,), )
paddle.normal(mean=0.0, shape=tuple(1000000,4,), )
paddle.normal(mean=0.0, shape=tuple(5,10,8,), )
paddle.normal(mean=0.0, std=Tensor([1000, 2],"float64"), shape=None, name=None, )
paddle.normal(mean=Tensor([1000, 2],"float64"), std=0.5, shape=None, name=None, )
paddle.normal(mean=Tensor([1000, 2],"float64"), std=Tensor([1000, 2],"float64"), shape=None, name=None, )
paddle.normal(mean=complex(0.0,0.0), shape=tuple(100000,4,), )
paddle.normal(shape=Tensor([2],"float32"), mean=Tensor([3],"float32"), std=Tensor([3],"float32"), )
paddle.normal(shape=Tensor([2],"float64"), mean=Tensor([3],"float64"), std=Tensor([3],"float64"), )
paddle.normal(shape=list[1,2,3,], )
paddle.normal(shape=list[3,145,118,], )
paddle.normal(shape=list[3,4,], )
paddle.normal(shape=list[3,4,], mean=Tensor([3],"float32"), )
paddle.normal(shape=list[3,4,], mean=Tensor([3],"float64"), )
paddle.normal(shape=list[3,46,63,], )
paddle.normal(shape=list[3,81,212,], )
paddle.normal(shape=tuple(), )
paddle.normal(shape=tuple(10000,), )
paddle.normal(shape=tuple(10000,2,), )
paddle.normal(shape=tuple(10000,2,3,), )
paddle.normal(shape=tuple(2,), )
paddle.normal(shape=tuple(2,3,), )
paddle.normal(shape=tuple(3,4,), mean=Tensor([3],"float32"), std=Tensor([3],"float32"), )
paddle.normal(shape=tuple(3,4,), mean=Tensor([3],"float64"), std=Tensor([3],"float64"), )
paddle.normal(shape=tuple(50000,2,), )
paddle.normal(shape=tuple(50000,2,3,), )
paddle.ones_like(Tensor([1, 1, 1],"int32"), dtype=VarType(float32), )
paddle.ones_like(Tensor([1, 3, 2, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([1, 3, 2],"float64"), dtype="float64", )
paddle.ones_like(Tensor([10],"int64"), dtype="int32", )
paddle.ones_like(Tensor([12],"int64"), dtype="int32", )
paddle.ones_like(Tensor([13],"int64"), dtype="int32", )
paddle.ones_like(Tensor([14],"int64"), dtype="int32", )
paddle.ones_like(Tensor([15],"int64"), dtype="int32", )
paddle.ones_like(Tensor([16],"int64"), dtype="int32", )
paddle.ones_like(Tensor([17],"int64"), dtype="int32", )
paddle.ones_like(Tensor([18],"int64"), dtype="int32", )
paddle.ones_like(Tensor([2, 1, 5, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 128],"int64"), dtype="int64", )
paddle.ones_like(Tensor([2, 2, 2],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 2, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 2, 2],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 2, 3],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 2, 3],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 2, 3],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3, 2],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3, 2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 2],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3, 4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 4],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3, 5, 4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3, 5, 4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 5, 4],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3, 5],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3, 5],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3, 5],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3],"bfloat16"), dtype="bool", )
paddle.ones_like(Tensor([2, 3],"bool"), dtype="bool", )
paddle.ones_like(Tensor([2, 3],"float16"), dtype="bool", )
paddle.ones_like(Tensor([2, 3],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2, 3],"float32"), dtype="bool", )
paddle.ones_like(Tensor([2, 3],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2, 3],"float64"), dtype="bool", )
paddle.ones_like(Tensor([2, 3],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 3],"int16"), dtype="bool", )
paddle.ones_like(Tensor([2, 3],"int32"), dtype="bool", )
paddle.ones_like(Tensor([2, 3],"int64"), dtype="bool", )
paddle.ones_like(Tensor([2, 4, 3],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2, 5, 4],"float64"), dtype="float64", )
paddle.ones_like(Tensor([2],"float16"), dtype="float16", )
paddle.ones_like(Tensor([2],"float32"), dtype="float32", )
paddle.ones_like(Tensor([2],"float64"), dtype="float64", )
paddle.ones_like(Tensor([3],"float16"), dtype="float16", )
paddle.ones_like(Tensor([3],"float32"), dtype="float32", )
paddle.ones_like(Tensor([3],"float64"), dtype="float64", )
paddle.ones_like(Tensor([4],"float16"), dtype="float16", )
paddle.ones_like(Tensor([4],"float32"), dtype="float32", )
paddle.ones_like(Tensor([4],"float64"), dtype="float64", )
paddle.ones_like(Tensor([64, 32],"bfloat16"), dtype="bool", )
paddle.ones_like(Tensor([64, 32],"bool"), dtype="bool", )
paddle.ones_like(Tensor([64, 32],"float16"), dtype="bool", )
paddle.ones_like(Tensor([64, 32],"float32"), dtype="bool", )
paddle.ones_like(Tensor([64, 32],"float64"), dtype="bool", )
paddle.ones_like(Tensor([64, 32],"int16"), dtype="bool", )
paddle.ones_like(Tensor([64, 32],"int32"), dtype="bool", )
paddle.ones_like(Tensor([64, 32],"int64"), dtype="bool", )
paddle.ones_like(Tensor([6],"int64"), dtype="int32", )
paddle.ones_like(Tensor([7],"int64"), dtype="int32", )
paddle.ones_like(Tensor([8],"int64"), dtype="int32", )
paddle.ones_like(Tensor([9],"int64"), dtype="int32", )
paddle.ones_like(Tensor([],"bfloat16"), dtype="bool", )
paddle.ones_like(Tensor([],"bool"), dtype="bool", )
paddle.ones_like(Tensor([],"float16"), dtype="bool", )
paddle.ones_like(Tensor([],"float16"), dtype="float16", )
paddle.ones_like(Tensor([],"float32"), dtype="bool", )
paddle.ones_like(Tensor([],"float32"), dtype="float32", )
paddle.ones_like(Tensor([],"float64"), dtype="bool", )
paddle.ones_like(Tensor([],"float64"), dtype="float64", )
paddle.ones_like(Tensor([],"int16"), dtype="bool", )
paddle.ones_like(Tensor([],"int32"), dtype="bool", )
paddle.ones_like(Tensor([],"int64"), dtype="bool", )
paddle.outer(Tensor([20, 10],"float32"), Tensor([],"float32"), )
paddle.outer(Tensor([20, 50],"complex128"), Tensor([50],"complex128"), )
paddle.outer(Tensor([20, 50],"float64"), Tensor([50],"float64"), )
paddle.outer(Tensor([5, 10, 10],"complex128"), Tensor([2, 10],"complex128"), )
paddle.outer(Tensor([5, 10, 10],"float64"), Tensor([2, 10],"float64"), )
paddle.outer(Tensor([5, 10, 10],"int32"), Tensor([2, 10],"int32"), )
paddle.outer(Tensor([5, 10, 10],"int64"), Tensor([2, 10],"int64"), )
paddle.outer(x=Tensor([1, 4],"float32"), y=Tensor([1, 4],"float32"), )
paddle.outer(x=Tensor([1, 4],"float64"), y=Tensor([1, 4],"float64"), )
paddle.outer(x=Tensor([4, 1],"float64"), y=Tensor([4, 1],"float64"), )
paddle.outer(x=Tensor([4, 2, 3],"float64"), y=Tensor([4, 2, 3],"float64"), )
paddle.outer(x=Tensor([4, 2, 5, 2],"float64"), y=Tensor([2, 3, 4, 4],"float64"), )
paddle.outer(x=Tensor([4, 2],"float64"), y=Tensor([2, 3, 4],"float64"), )
paddle.poisson(Tensor([10, 10],"float32"), )
paddle.poisson(Tensor([16, 1024, 1024],"float32"), )
paddle.poisson(Tensor([2, 2],"float64"), )
paddle.poisson(Tensor([2],"float32"), )
paddle.poisson(Tensor([2],"float64"), )
paddle.poisson(Tensor([32, 3, 1024, 768],"float32"), )
paddle.poisson(Tensor([5000, 1],"float64"), )
paddle.poisson(Tensor([5000, 2],"float32"), )
paddle.poisson(Tensor([5000],"float64"), )
paddle.poisson(Tensor([],"float64"), )
paddle.prod(Tensor([10, 10, 5],"complex64"), axis=list[0,1,], )
paddle.prod(Tensor([10, 10, 5],"float32"), axis=1, dtype="int64", )
paddle.prod(Tensor([10, 10, 5],"float32"), axis=1, keepdim=True, dtype="int64", )
paddle.prod(Tensor([10, 10, 5],"float32"), axis=list[0,1,], )
paddle.prod(Tensor([10, 10, 9, 9],"float64"), list[0,Tensor([1],"int64"),Tensor([1],"int64"),], )
paddle.prod(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.prod(Tensor([2, 2],"float64"), axis=Tensor([1],"int64"), )
paddle.prod(Tensor([2, 5, 3, 2, 2, 3, 4, 2],"float16"), list[2,3,4,], False, )
paddle.prod(Tensor([2, 5, 3, 2, 2, 3, 4, 2],"float32"), list[2,3,4,], False, )
paddle.prod(Tensor([2, 5, 3, 2, 2, 3, 4, 2],"float64"), list[2,3,4,], False, )
paddle.prod(Tensor([3, 5],"float32"), axis=None, )
paddle.prod(Tensor([3, 5],"float32"), keepdim=True, )
paddle.prod(Tensor([5, 6, 10],"float16"), list[0,], False, )
paddle.prod(Tensor([5, 6, 10],"float32"), list[0,], False, )
paddle.prod(Tensor([5, 6, 10],"float64"), list[0,], False, )
paddle.prod(Tensor([5, 6, 2, 3, 4, 2],"float16"), list[2,3,4,], False, )
paddle.prod(Tensor([5, 6, 2, 3, 4, 2],"float32"), list[2,3,4,], False, )
paddle.prod(Tensor([5, 6, 2, 3, 4, 2],"float64"), list[2,3,4,], False, )
paddle.prod(Tensor([],"float32"), axis=None, )
paddle.prod(Tensor([],"float32"), axis=list[], )
paddle.prod(Tensor([],"float64"), list[], False, )
paddle.prod(x=Tensor([2, 2],"float32"), dtype="float32", )
paddle.prod(x=Tensor([2, 2],"float64"), axis=Tensor([1],"int64"), )
paddle.prod(x=Tensor([2, 2],"float64"), axis=list[0,1,], )
paddle.prod(x=Tensor([2, 2],"float64"), axis=tuple(0,1,), )
paddle.prod(x=Tensor([2, 2],"float64"), dtype="float32", )
paddle.prod(x=Tensor([2, 2],"int32"), dtype="int64", )
paddle.prod(x=Tensor([2, 2],"int64"), dtype="int64", )
paddle.quantile(Tensor([2, 3],"float32"), list[0.3,0.7,], 1, )
paddle.quantile(Tensor([4, 7, 6],"float64"), q=0.1, axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([4, 7, 6],"float64"), q=0.75, axis=list[0,2,], )
paddle.quantile(Tensor([5, 3, 4],"float64"), q=Tensor([2],"float32"), axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([5, 3, 4],"float64"), q=Tensor([],"float32"), axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([5, 3, 4],"float64"), q=list[0.1,0.2,0.3,], axis=list[1,2,], keepdim=True, )
paddle.quantile(Tensor([5, 3, 4],"float64"), q=list[0.2,0.67,], axis=list[1,-1,], )
paddle.quantile(Tensor([5, 3, 4],"float64"), q=list[0.3,0.44,], axis=-2, )
paddle.quantile(Tensor([8],"float32"), list[0.55,0.7,], 0, )
paddle.quantile(Tensor([],"float32"), 0.5, axis=list[], )
paddle.quantile(x=Tensor([3, 6, 3, 4, 2, 5],"float64"), q=list[0.25,0.5,0.75,], axis=3, keepdim=False, )
paddle.quantile(x=Tensor([3, 6, 3, 4, 2, 5],"float64"), q=tuple(0.11,0.5,0.73,0.9,), axis=4, keepdim=False, )
paddle.repeat_interleave(Tensor([16, 16],"float32"), repeats=2, axis=Tensor([],"int32"), name=None, )
paddle.repeat_interleave(Tensor([2, 3],"bfloat16"), Tensor([6],"int32"), None, )
paddle.repeat_interleave(Tensor([2, 3],"int32"), Tensor([6],"int32"), None, )
paddle.repeat_interleave(Tensor([24, 16],"float32"), repeats=2, axis=Tensor([],"int32"), name=None, )
paddle.repeat_interleave(Tensor([3, 4],"float32"), Tensor([3],"int32"), axis=0, )
paddle.repeat_interleave(Tensor([3, 4],"float32"), Tensor([4],"int32"), -1, )
paddle.repeat_interleave(Tensor([3, 4],"float32"), Tensor([4],"int32"), 1, )
paddle.repeat_interleave(x=Tensor([4, 2, 4, 4, 5],"int32"), repeats=Tensor([2],"int32"), axis=1, )
paddle.reshape(Tensor([1, 100],"float64"), Tensor([2],"int64"), )
paddle.reshape(Tensor([1, 1],"float32"), Tensor([1],"int32"), )
paddle.reshape(Tensor([1, 1],"float32"), Tensor([3],"int32"), )
paddle.reshape(Tensor([1, 1],"float32"), list[Tensor([],"int32"),Tensor([],"int32"),], )
paddle.reshape(Tensor([1, 2, 3],"float32"), Tensor([3],"int64"), )
paddle.reshape(Tensor([1, 2, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([1, 2, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([1, 4, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([1, 4, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([10, 20, 1],"float32"), Tensor([1],"int64"), )
paddle.reshape(Tensor([1000, 2],"float64"), Tensor([2],"int64"), )
paddle.reshape(Tensor([100],"float32"), Tensor([1],"int64"), )
paddle.reshape(Tensor([100],"float64"), Tensor([1],"int64"), )
paddle.reshape(Tensor([11, 4],"float32"), shape=tuple(0,-1,4,), )
paddle.reshape(Tensor([2, 1, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 1, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 1, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 64, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 8, 16],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 2, 8, 8, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 25],"float32"), shape=Tensor([3],"int32"), )
paddle.reshape(Tensor([2, 25],"float32"), shape=list[Tensor([1],"int32"),10,], )
paddle.reshape(Tensor([2, 3, 4],"complex128"), tuple(0,-1,), )
paddle.reshape(Tensor([2, 3, 4],"complex64"), tuple(0,-1,), )
paddle.reshape(Tensor([2, 4, 8, 4, 2],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 4, 8, 8],"float32"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 8, 1, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([2, 8, 64, 32, 2],"float16"), Tensor([4],"int64"), )
paddle.reshape(Tensor([21, 4],"float32"), shape=tuple(0,-1,4,), )
paddle.reshape(Tensor([22, 4],"float32"), shape=tuple(0,-1,4,), )
paddle.reshape(Tensor([3, 3, 1],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([3, 3, 3],"float32"), list[3,Tensor([],"int32"),3,], )
paddle.reshape(Tensor([3],"float32"), Tensor([1],"int64"), )
paddle.reshape(Tensor([3],"float64"), Tensor([1],"int64"), )
paddle.reshape(Tensor([4, 1],"float32"), list[Tensor([],"int64"),1,Tensor([],"int64"),], )
paddle.reshape(Tensor([4, 40, 40, 12],"float32"), list[0,-1,2,], )
paddle.reshape(Tensor([4, 40, 40, 24],"float32"), list[0,-1,4,], )
paddle.reshape(Tensor([4, 80, 80, 4],"float32"), list[0,-1,2,], )
paddle.reshape(Tensor([4, 80, 80, 8],"float32"), list[0,-1,4,], )
paddle.reshape(Tensor([5, 7],"int32"), shape=tuple(Tensor([],"int64"),Tensor([],"int64"),), )
paddle.reshape(Tensor([6, 2, 3],"float32"), list[-1,0,3,], )
paddle.reshape(Tensor([6, 2, 3],"float32"), list[0,0,-1,], )
paddle.reshape(Tensor([6, 2, 3],"float32"), list[1,0,2,-1,3,], )
paddle.reshape(Tensor([6, 2, 3],"float32"), list[2,-1,0,], )
paddle.reshape(Tensor([6, 2, 3],"float32"), list[2,3,0,-1,], )
paddle.reshape(Tensor([6, 2, 3],"int64"), list[-1,0,3,], )
paddle.reshape(Tensor([6, 2, 3],"int64"), list[0,0,-1,], )
paddle.reshape(Tensor([6, 2, 3],"int64"), list[1,0,2,-1,3,], )
paddle.reshape(Tensor([6, 2, 3],"int64"), list[2,-1,0,], )
paddle.reshape(Tensor([6, 2, 3],"int64"), list[2,3,0,-1,], )
paddle.reshape(Tensor([8, 26, 1, 40, 1],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),-1,], )
paddle.reshape(Tensor([8, 26, 40],"float32"), list[Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),Tensor([],"int64"),], )
paddle.reshape(Tensor([9, 4],"float32"), shape=tuple(0,-1,4,), )
paddle.reshape(Tensor([],"float32"), Tensor([0],"int64"), )
paddle.reshape(x=Tensor([1, 1024, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 11, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([1, 1100, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([1, 1156, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 1296, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 1444, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 1600, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 1764, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 18, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([1, 1936, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 21, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([1, 2116, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 2116, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([1, 22, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([1, 2304, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 2304, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([1, 2500, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 2704, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 2916, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 300, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([1, 3136, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 324, 8, 64],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([1, 3364, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 3600, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([1, 400, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([1, 400, 8, 64],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([1, 484, 8, 64],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([1, 492, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([1, 496, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([1, 500, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([1, 529, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([1, 529, 8, 48],"float32"), shape=list[0,0,384,], )
paddle.reshape(x=Tensor([1, 9, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([2, 100, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 100, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([2, 121, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 121, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([2, 144, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 144, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([2, 169, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 169, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([2, 196, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 196, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([2, 225, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 225, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([2, 225, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([2, 256, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 256, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([2, 289, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 289, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([2, 289, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([2, 2],"float64"), shape=Tensor([2],"int32"), )
paddle.reshape(x=Tensor([2, 2],"float64"), shape=list[2,0,], )
paddle.reshape(x=Tensor([2, 300, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([2, 324, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 324, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([2, 361, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 361, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([2, 400, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 400, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([2, 400, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([2, 400, 8, 48],"float32"), shape=list[0,0,384,], )
paddle.reshape(x=Tensor([2, 400, 8, 64],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 441, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 441, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([2, 484, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 484, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([2, 492, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([2, 498, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([2, 500, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([2, 529, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 529, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([2, 576, 4, 128],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([2, 576, 4, 256],"float32"), shape=list[0,0,1024,], )
paddle.reshape(x=Tensor([32, 4, 512],"float32"), shape=list[0,0,8,64,], )
paddle.reshape(x=Tensor([32, 4, 8, 64],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([4, 100, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([4, 256, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([4, 300, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([4, 400, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([4, 400, 8, 64],"float32"), shape=list[0,0,512,], )
paddle.reshape(x=Tensor([4, 500, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([4, 725, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([58, 140, 2, 1],"float32"), shape=list[0,0,2,], )
paddle.reshape(x=Tensor([58, 140, 2],"float32"), shape=list[0,0,2,1,], )
paddle.reshape(x=Tensor([8, 289, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.reshape(x=Tensor([8, 500, 8, 32],"float32"), shape=list[0,0,256,], )
paddle.roll(Tensor([10],"float32"), Tensor([1],"int64"), list[0,], name=None, )
paddle.roll(Tensor([10],"float64"), Tensor([1],"int64"), list[0,], name=None, )
paddle.roll(Tensor([2, 4, 2],"float64"), Tensor([3],"int64"), list[0,1,2,], name=None, )
paddle.roll(Tensor([3, 3],"int64"), shifts=Tensor([2],"int64"), axis=list[0,1,], )
paddle.roll(Tensor([4, 5, 4, 4],"complex128"), Tensor([1],"int64"), 3, name=None, )
paddle.roll(Tensor([4, 5, 4, 4],"complex128"), Tensor([2],"int64"), tuple(0,3,), name=None, )
paddle.roll(Tensor([4, 5, 4, 4],"complex128"), Tensor([2],"int64"), tuple(1,3,), name=None, )
paddle.roll(Tensor([4, 5, 4, 4],"complex128"), Tensor([4],"int64"), list[0,1,2,3,], name=None, )
paddle.roll(Tensor([4, 5, 4, 4],"float64"), Tensor([4],"int64"), list[0,1,2,3,], name=None, )
paddle.roll(Tensor([4, 5, 4],"float64"), Tensor([3],"int64"), list[0,1,2,], name=None, )
paddle.roll(Tensor([5],"float32"), Tensor([1],"int64"), list[0,], name=None, )
paddle.roll(Tensor([5],"float64"), Tensor([1],"int64"), list[0,], name=None, )
paddle.sign(Tensor([5],"complex64"), )
paddle.squeeze(Tensor([1, 2, 1, 3],"float32"), axis=Tensor([2],"int64"), )
paddle.squeeze(Tensor([5, 1, 10],"float32"), Tensor([],"int64"), )
paddle.squeeze(Tensor([],"float32"), axis=Tensor([1],"int32"), )
paddle.squeeze(x=Tensor([1, 2, 1, 3],"float64"), axis=Tensor([2],"int64"), )
paddle.sum(Tensor([0, 0],"float32"), keepdim=True, )
paddle.sum(Tensor([10, 5, 9, 9],"float64"), Tensor([2],"int64"), )
paddle.sum(Tensor([2, 2],"float64"), axis=Tensor([2],"int64"), )
paddle.sum(Tensor([2, 5],"float32"), 0, keepdim=True, dtype="float32", )
paddle.sum(Tensor([2, 5],"float32"), None, keepdim=False, dtype="float32", )
paddle.sum(Tensor([2, 5],"float64"), -1, keepdim=True, dtype="float32", )
paddle.sum(Tensor([2, 5],"float64"), 0, keepdim=True, dtype="float32", )
paddle.sum(Tensor([2, 5],"float64"), None, keepdim=False, dtype="float32", )
paddle.sum(Tensor([2, 5],"float64"), None, keepdim=True, dtype="float32", )
paddle.sum(Tensor([3, 5],"float32"), keepdim=True, )
paddle.sum(Tensor([6, 2, 10],"float64"), None, "float64", False, None, )
paddle.sum(x=Tensor([2, 2],"float32"), dtype="float64", )
paddle.sum(x=Tensor([2, 2],"float64"), dtype="float64", )
paddle.sum(x=Tensor([2, 3, 4, 5],"float64"), keepdim=True, )
paddle.take(Tensor([4, 5],"float32"), Tensor([],"int64"), )
paddle.take(Tensor([],"float32"), Tensor([],"int64"), )
paddle.take_along_axis(Tensor([1, 36828, 4],"float32"), Tensor([1, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([1, 38367, 4],"float32"), Tensor([1, 900, 4],"int64"), 1, )
paddle.take_along_axis(Tensor([1, 6380, 4],"float32"), Tensor([1, 300, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([1, 8550, 4],"float32"), Tensor([1, 300, 4],"int64"), axis=1, )
paddle.take_along_axis(Tensor([128, 8],"float32"), Tensor([128, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([168],"float64"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([1],"float32"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([2, 2],"float32"), Tensor([4, 2],"float32"), 0, )
paddle.take_along_axis(Tensor([2, 2],"float32"), Tensor([4, 2],"int64"), 0, )
paddle.take_along_axis(Tensor([2, 3, 4],"float64"), Tensor([1, 3, 4],"int32"), axis=0, )
paddle.take_along_axis(Tensor([2, 3],"float32"), Tensor([2, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([2, 3],"float64"), Tensor([1, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([2160],"float64"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([28, 5],"float32"), Tensor([28, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([3, 2, 5],"float32"), Tensor([1, 1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 3, 3],"float32"), Tensor([1, 3, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([3, 3, 3],"float64"), Tensor([1, 3, 3],"int32"), axis=0, )
paddle.take_along_axis(Tensor([3, 3],"float32"), Tensor([1, 3],"float32"), 0, )
paddle.take_along_axis(Tensor([3, 3],"float32"), Tensor([1, 3],"int64"), 0, )
paddle.take_along_axis(Tensor([3, 5],"float32"), Tensor([1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 5],"float32"), Tensor([3, 2],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 5],"float64"), Tensor([1, 3],"int64"), axis=-1, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"int32"), axis=3, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 2, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"int32"), axis=4, )
paddle.take_along_axis(Tensor([3, 6, 3, 4, 2, 5],"float64"), Tensor([3, 6, 3, 4, 2, 1],"int32"), axis=5, )
paddle.take_along_axis(Tensor([30, 5],"float32"), Tensor([30, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([38, 5],"float32"), Tensor([38, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([3],"float32"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([4, 2],"float32"), Tensor([4, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([4, 2],"float64"), Tensor([1, 1],"int64"), 1, )
paddle.take_along_axis(Tensor([4, 3, 2],"float32"), Tensor([1, 3, 2],"int64"), axis=1, )
paddle.take_along_axis(Tensor([4, 3],"float32"), Tensor([4, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([4, 4, 4, 2],"float64"), Tensor([1, 1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([4, 4, 4],"float64"), Tensor([1, 1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([4, 42],"float64"), Tensor([4, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([4, 4],"float64"), Tensor([1, 1],"int64"), 0, )
paddle.take_along_axis(Tensor([4, 7, 6],"float64"), Tensor([4, 1, 6],"int32"), axis=1, )
paddle.take_along_axis(Tensor([4, 7, 6],"float64"), Tensor([4, 7, 1],"int32"), axis=2, )
paddle.take_along_axis(Tensor([4, 7],"float32"), Tensor([4, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([4, 7],"float64"), Tensor([4, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([4],"float32"), Tensor([1],"int64"), 0, )
paddle.take_along_axis(Tensor([4],"float64"), Tensor([1],"int64"), 0, )
paddle.take_along_axis(Tensor([5, 12],"float64"), Tensor([5, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([5, 2],"float32"), Tensor([5, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([5, 3, 4],"float64"), Tensor([5, 1, 4],"int32"), axis=1, )
paddle.take_along_axis(Tensor([6],"float32"), Tensor([1],"int32"), axis=0, )
paddle.take_along_axis(Tensor([7, 24],"float64"), Tensor([7, 1],"int32"), axis=1, )
paddle.take_along_axis(Tensor([8, 3],"float32"), Tensor([8, 1],"int64"), axis=1, )
paddle.take_along_axis(Tensor([8],"float32"), Tensor([1],"int32"), axis=0, )
paddle.tensor_split(Tensor([4, 4, 4, 7],"int64"), 2, axis=3, )
paddle.tensor_split(Tensor([4, 4, 4, 7],"int64"), 3, axis=3, )
paddle.tensor_split(Tensor([4, 4, 6],"bool"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"float16"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"float32"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"float64"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"int32"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"int64"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 6],"uint8"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 4, 7, 4],"int64"), 2, axis=-2, )
paddle.tensor_split(Tensor([4, 4, 7, 4],"int64"), 3, axis=-2, )
paddle.tensor_split(Tensor([4, 4, 7],"int64"), 2, axis=2, )
paddle.tensor_split(Tensor([4, 4, 7],"int64"), 3, axis=2, )
paddle.tensor_split(Tensor([4, 6],"bool"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"float16"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"float32"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"float64"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"int32"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"int64"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 6],"uint8"), 3, axis=1, )
paddle.tensor_split(Tensor([4, 7],"int64"), 2, axis=1, )
paddle.tensor_split(Tensor([4, 7],"int64"), 3, axis=1, )
paddle.tensor_split(Tensor([6],"bool"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"float16"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"float32"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"float64"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"int32"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"int64"), 2, )
paddle.tensor_split(Tensor([6],"int64"), 3, )
paddle.tensor_split(Tensor([6],"int64"), 3, axis=0, )
paddle.tensor_split(Tensor([6],"uint8"), 3, axis=0, )
paddle.tensor_split(Tensor([7, 4, 3],"int64"), 2, )
paddle.tensor_split(Tensor([7, 4, 3],"int64"), 3, )
paddle.tensor_split(Tensor([7, 4],"int64"), 2, )
paddle.tensor_split(Tensor([7, 4],"int64"), 3, )
paddle.tensor_split(Tensor([7],"int64"), 2, )
paddle.tensor_split(Tensor([7],"int64"), 2, axis=0, )
paddle.tensor_split(Tensor([7],"int64"), 3, )
paddle.tensor_split(Tensor([7],"int64"), 3, axis=0, )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[3,0,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([1, 5, 5, 5],"float64"), Tensor([1, 1, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([2, 2],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), list[1,], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), list[Tensor([2],"int64"),Tensor([2],"int64"),], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(1,), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(Tensor([2],"int64"),Tensor([2],"int64"),), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(list[1,],), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(tuple(1,),), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), tuple(tuple(2,1,),tuple(0,),), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), Tensor([2, 2],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), list[1,], )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), list[Tensor([2],"int64"),Tensor([2],"int64"),], )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(1,), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(Tensor([2],"int64"),Tensor([2],"int64"),), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(list[1,],), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(tuple(1,),), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), tuple(tuple(2,1,),tuple(0,),), )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[0,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[3,0,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([1, 1, 1, 1],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 1],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[0,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[3,0,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float32"), Tensor([5, 5, 5, 5],"float32"), list[list[],list[0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[0,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[3,0,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[3,1,2,], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,2,3,],list[3,2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,3,2,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,3,],list[0,3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,3,],list[3,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,2,3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,2,],list[0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,3,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,0,],list[2,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,3,0,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,3,0,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,3,2,0,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,3,],list[3,1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,],list[0,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,],list[1,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[1,],list[1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,0,1,3,],list[2,0,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,0,1,3,],list[2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,0,3,],list[2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,1,0,],list[2,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,1,3,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,3,0,1,],list[0,3,2,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,3,0,],list[3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,3,],list[1,3,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[2,],list[0,1,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,0,2,1,],list[0,2,3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,2,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,1,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,2,0,1,],list[3,2,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,2,0,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,2,],list[3,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,],list[2,1,0,],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[3,],list[],], )
paddle.tensordot(Tensor([5, 5, 5, 5],"float64"), Tensor([5, 5, 5, 5],"float64"), list[list[],list[0,3,1,],], )
paddle.tensordot(x=Tensor([2, 3, 4, 2],"float64"), y=Tensor([2, 3, 8, 7],"float64"), axes=list[0,1,], )
paddle.tensordot(x=Tensor([2, 3, 4, 2],"float64"), y=Tensor([8, 7, 4, 2],"float64"), axes=list[2,3,], )
paddle.tensordot(x=Tensor([2, 4, 3, 5],"float64"), y=Tensor([2, 4, 1, 5],"float64"), axes=list[0,2,], )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float64"), y=Tensor([7, 7, 4, 2],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],list[4,5,6,],), )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float64"), y=Tensor([8, 7, 4, 2],"float64"), axes=list[tuple(1,2,3,),], )
paddle.tensordot(x=Tensor([4, 2, 3, 5, 4],"float64"), y=Tensor([2, 4, 3, 5, 8],"float64"), axes=list[list[0,1,2,3,],list[1,0,],], )
paddle.tensordot(x=Tensor([4, 3, 5],"float64"), y=Tensor([4, 1, 8],"float64"), axes=list[0,1,], )
paddle.tile(x=Tensor([3],"int64"), repeat_times=Tensor([2],"int32"), )
paddle.transpose(Tensor([1, 8, 2, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([1, 8, 4, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([2, 8, 1, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([2, 8, 2, 16],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([2, 8, 4, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 1, 2, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 1, 4, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 2, 1, 8],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 2, 2, 16],"float32"), perm=list[1,0,], )
paddle.transpose(Tensor([8, 2, 4, 8],"float32"), perm=list[1,0,], )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=Tensor([],"float32"), axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=Tensor([],"float32"), axis=0, )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float64"), x=None, dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([3, 3, 4],"float32"), x=None, dx=Tensor([],"float32"), axis=1, )
paddle.trapezoid(y=Tensor([3, 3, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
paddle.tril_indices(4, None, 2, )
paddle.triu_indices(4, None, 2, )
paddle.unflatten(x=Tensor([4, 6, 16],"float32"), axis=0, shape=Tensor([2],"int64"), )
paddle.unsqueeze(Tensor([100, 136],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([100, 152],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([100, 156],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([152, 100],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([1],"float64"), axis=list[0,2,], )
paddle.unsqueeze(Tensor([20, 30, 40],"float32"), axis=list[1,2,], )
paddle.unsqueeze(Tensor([25, 34],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([25, 38],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([25, 39],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([2],"float32"), axis=list[0,2,], )
paddle.unsqueeze(Tensor([2],"float64"), axis=list[0,2,], )
paddle.unsqueeze(Tensor([38, 25],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([3],"float64"), axis=list[0,2,], )
paddle.unsqueeze(Tensor([4, 10],"float64"), list[2,], )
paddle.unsqueeze(Tensor([4, 16],"float32"), list[1,], )
paddle.unsqueeze(Tensor([4, 32],"float32"), list[1,], )
paddle.unsqueeze(Tensor([4, 4],"float32"), list[2,], )
paddle.unsqueeze(Tensor([4, 8],"float32"), list[2,], )
paddle.unsqueeze(Tensor([4],"int64"), list[1,], )
paddle.unsqueeze(Tensor([5, 10],"float32"), Tensor([2],"int64"), )
paddle.unsqueeze(Tensor([50, 68],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([50, 76],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([50, 78],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([5],"float64"), axis=list[0,2,], )
paddle.unsqueeze(Tensor([76, 50],"float32"), list[0,1,], )
paddle.unsqueeze(Tensor([8, 26, 512],"float32"), axis=list[3,4,], )
paddle.unsqueeze(Tensor([8, 32],"float64"), list[1,], )
paddle.unsqueeze(Tensor([8, 4],"float64"), list[2,], )
paddle.unsqueeze(Tensor([8, 8],"float32"), list[1,], )
paddle.unsqueeze(Tensor([8],"int64"), list[1,], )
paddle.unsqueeze(Tensor([],"float32"), axis=Tensor([],"int32"), )
paddle.unsqueeze(Tensor([],"float32"), list[-1,1,], )
paddle.unsqueeze(Tensor([],"float32"), list[-1,], )
paddle.unsqueeze(Tensor([],"float32"), list[0,1,2,], )
paddle.unsqueeze(x=Tensor([2, 3],"float64"), axis=Tensor([3],"int64"), )
paddle.unsqueeze(x=Tensor([2, 3],"float64"), axis=list[0,1,], )
paddle.unsqueeze(x=Tensor([2, 3],"float64"), axis=tuple(0,1,), )
paddle.vander(Tensor([5],"complex128"), 0, False, )
paddle.vander(Tensor([5],"complex128"), 0, True, )
paddle.vander(Tensor([5],"complex128"), 1, False, )
paddle.vander(Tensor([5],"complex128"), 1, True, )
paddle.vander(Tensor([5],"complex128"), 2, False, )
paddle.vander(Tensor([5],"complex128"), 2, True, )
paddle.vander(Tensor([5],"complex128"), 3, False, )
paddle.vander(Tensor([5],"complex128"), 3, True, )
paddle.vander(Tensor([5],"complex128"), 4, False, )
paddle.vander(Tensor([5],"complex128"), 4, True, )
paddle.vander(Tensor([5],"float32"), 0, False, )
paddle.vander(Tensor([5],"float32"), 0, True, )
paddle.vander(Tensor([5],"float32"), 1, False, )
paddle.vander(Tensor([5],"float32"), 1, True, )
paddle.vander(Tensor([5],"float32"), 2, False, )
paddle.vander(Tensor([5],"float32"), 2, True, )
paddle.vander(Tensor([5],"float32"), 3, False, )
paddle.vander(Tensor([5],"float32"), 3, True, )
paddle.vander(Tensor([5],"float32"), 4, False, )
paddle.vander(Tensor([5],"float32"), 4, True, )
paddle.vander(Tensor([5],"float32"), 5, False, )
paddle.vander(Tensor([5],"float32"), 5, True, )
paddle.vander(Tensor([5],"float32"), 6, False, )
paddle.vander(Tensor([5],"float32"), 6, True, )
paddle.vander(Tensor([5],"float32"), 7, False, )
paddle.vander(Tensor([5],"float32"), 7, True, )
paddle.vander(Tensor([5],"float32"), 8, False, )
paddle.vander(Tensor([5],"float32"), 8, True, )
paddle.vander(Tensor([5],"float32"), None, False, )
paddle.vsplit(Tensor([6, 4, 3],"int64"), 2, )
paddle.vsplit(Tensor([6, 4, 3],"int64"), 3, )
paddle.vsplit(Tensor([6, 4],"bool"), 3, )
paddle.vsplit(Tensor([6, 4],"float16"), 3, )
paddle.vsplit(Tensor([6, 4],"float32"), 3, )
paddle.vsplit(Tensor([6, 4],"float64"), 3, )
paddle.vsplit(Tensor([6, 4],"int32"), 3, )
paddle.vsplit(Tensor([6, 4],"int64"), 2, )
paddle.vsplit(Tensor([6, 4],"int64"), 3, )
paddle.vsplit(Tensor([6, 4],"uint8"), 3, )
paddle.zeros_like(Tensor([1, 1, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 128, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 160, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 256, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 256],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 768, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 91, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 96, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1, 96, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([10, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([10, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([10, 768, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([10, 96, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([100, 256],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 1, 4, 4],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 1024, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 1024],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 16, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 16],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 2048, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 2048, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 2048],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 256],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 3072],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 3328, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 4096, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 4],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 512, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 512, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 5120, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 5632, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 6656, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024, 768, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1024],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([10],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([11, 160, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([11, 256],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([11, 96, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([112, 480, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([112, 672, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([112],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1152],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([11],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([12, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([120, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([120, 120, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([120, 120, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([120, 240, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([120, 30, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([120, 40, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([120, 480, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([120, 560, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([120, 80, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([120],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([12544, 1024],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 1, 4, 4],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 128, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 128, 2, 2],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 128, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 1280, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 168, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 192, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 208, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 256, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 32, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 320, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 384, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 448, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 512, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 512, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 64, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 64, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 640, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 768, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 96, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128, 96, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1280, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1280, 1280, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1280, 2560, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1280, 320, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1280, 640, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1280, 640, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1280, 960, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1280],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([128],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([12],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([144, 144, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([144, 144, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([144, 288, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([144, 432, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([144, 672, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([144, 96, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([144],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([15, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([15, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([15, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([15, 768, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1536, 1536],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1536, 384],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1536, 4608],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1536, 6144],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1536, 768, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1536, 768],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1536],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([15],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([16, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([16, 12, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([16, 16, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([16, 16, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([16, 3, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([16, 3, 7, 7],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([16, 32, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([16, 8, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 120, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 160, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 160, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 320, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 40, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 512, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 640, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 672, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 80, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 80, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160, 960, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([160],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([168, 672, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([168],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([169, 12],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([169, 24],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([169, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([169, 6],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([16],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([17, 40, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([176, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([176, 176, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([176, 44, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([176, 88, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([176],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([17],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([18, 72, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([184, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([184, 80, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([184],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([18],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([18],"int32"), dtype=VarType(float32), )
paddle.zeros_like(Tensor([192, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 128, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 144, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 192, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 192],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 3, 4, 4],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 352, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 384, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 48, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 512, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 512, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 576, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 576],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 768, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 768],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 896, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 96, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192, 96, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([192],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2, 256],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2, 3, 8, 8],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([2, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2, 96, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([20, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([20, 20, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([200, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([200, 80, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([200],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([200],"int64"), dtype=VarType(float32), )
paddle.zeros_like(Tensor([2048, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2048, 1024],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2048, 16],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2048, 2048, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2048, 256],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2048, 32, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2048, 384],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2048, 512, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2048, 512],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2048, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2048],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([20],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([21],"int32"), dtype=VarType(float32), )
paddle.zeros_like(Tensor([22, 88, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([22],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([22],"int32"), dtype=VarType(float32), )
paddle.zeros_like(Tensor([2304],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([24, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([24, 12, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([24, 16, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([24, 24, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([24, 24, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([24, 3, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([24, 48, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([24, 64, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([24, 72, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([240, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([240, 1120, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([240, 160, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([240, 240, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([240, 240, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([240, 40, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([240, 480, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([240, 720, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([240, 960, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([240],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([24],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 1, 16, 16],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 1, 4, 4],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 1, 8, 8],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 1024, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 1024],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 11],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 128, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 128, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 1280, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 128],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 1344, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 1536, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 1536, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 160],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 1664, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 192, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 192],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 2048, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 2048, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 2048],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 256, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 256],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 2],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 320],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 32],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 368, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 384, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 4, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 4],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 512, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 512, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 544, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 64, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 64, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 704, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 768, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 768, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 768],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 800, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 896, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 96, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256, 96],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([256],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([27, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([27, 128, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([27, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([27, 256, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([27, 512, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([27, 512, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([27, 64, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([27],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([288, 1152, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([288, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([288, 288, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([288, 288, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([288, 576, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([288, 768, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([288, 864, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([288],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([2],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([3, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([3, 28, 28],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([3, 4],"float64"), type(numpy.bool_), )
paddle.zeros_like(Tensor([3, 4],"float64"), type(numpy.float32), )
paddle.zeros_like(Tensor([3, 4],"float64"), type(numpy.float64), )
paddle.zeros_like(Tensor([3, 4],"float64"), type(numpy.int32), )
paddle.zeros_like(Tensor([3, 4],"float64"), type(numpy.int64), )
paddle.zeros_like(Tensor([3, 8, 8],"float32"), Dtype(float32), )
paddle.zeros_like(Tensor([30, 120, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([300, 256],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([3072, 1536],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([3072, 768],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([3072],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([30],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 12, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 128, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 16, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 16, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 160, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 3, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 32, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 32, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 64, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 64, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 96, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32, 96, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([320, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([320, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([320, 1280, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([320, 160, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([320, 160, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([320, 240, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([320, 320, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([320, 320, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([320, 40, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([320, 640, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([320, 80, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([320],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([32],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([33, 128, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([33],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([36, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([36, 36, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([36, 36, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([36, 72, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([36],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 1152, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 1152],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 1280, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 1536, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 1536],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 192, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 192],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 2048, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 2048],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 256, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 288, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 384, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 384],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 512, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 768, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 896, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 96, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384, 96],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([384],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 128, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 144, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 160, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 192, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 240, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 256, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 256],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 288, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 320, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 480, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 512],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 576, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 64, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 768, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 96, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 96, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4, 960, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40, 120, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40, 160, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40, 3, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40, 32, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40, 320, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40, 40, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40, 40, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40, 72, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40, 768, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40, 80, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40, 96, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([40],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([43, 128, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([43],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([44, 176, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([44],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4608],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([48, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([48, 12, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([48, 160, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([48, 192, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([48, 224, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([48, 24, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([48, 24, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([48, 32, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([48, 48, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([48, 48, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([48, 64, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([48, 96, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([480, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([480, 120, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([480, 1280, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([480, 1440, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([480, 1920, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([480, 320, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([480, 480, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([480, 480, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([480, 80, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([480, 960, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([480],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([48],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([4],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([5, 128, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([5, 192, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([5, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([5, 256],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([5, 320, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([5, 64, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([5, 96, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 1, 4, 4],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 1024, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 1088, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 128, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 1280, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 1536],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 160, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 1664, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 2048, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 2048],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 2176, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 256, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 2560, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 256],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 2816, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 3328, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 384, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 512, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 512, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 512],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512, 8, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([512],"int64"), "int64", )
paddle.zeros_like(Tensor([529, 12],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([529, 24],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([529, 48],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([529, 6],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([576, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([576, 576, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([576],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([60, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([60, 120, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([60, 60, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([60, 60, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([60],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([6144, 1536],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([6144],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 1, 4, 4],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 1, 8, 8],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 12, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 128, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 128, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 16, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 256, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 3, 7, 7],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 32, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 32, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 336, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 448, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 48, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 64, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 64, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64, 96, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([640, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([640, 1280, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([640, 160, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([640, 320, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([640, 320, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([640, 480, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([640, 640, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([640, 640, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([640],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([64],"float32"), dtype="int32", )
paddle.zeros_like(Tensor([672, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([672, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([672, 112, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([672, 168, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([672],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([68, 144, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([68, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([68, 240, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([68, 288, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([68, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([68, 480, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([68, 576, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([68, 768, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([68, 96, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([68, 960, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([68],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([72, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([72, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([72, 144, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([72, 18, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([72, 24, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([72, 336, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([72, 48, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([72, 72, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([72, 72, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([72],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 1024, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 1536, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 1792, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 192, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 192],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 2048, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 2304],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 3072],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 384, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 384],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 512, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 576, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 768, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768, 768],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([768],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([8, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([8, 3, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([80, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([80, 12, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([80, 160, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([80, 184, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([80, 200, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([80, 240, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([80, 32, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([80, 320, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([80, 40, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([80, 40, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([80, 80, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([80, 80, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([80],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([88, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([88, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([88, 22, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([88, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([88, 48, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([88, 768, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([88, 88, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([88],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([8],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([9, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([900, 256],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([900],"int64"), dtype=VarType(float32), )
paddle.zeros_like(Tensor([91, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([91, 384, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([91, 768, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([91],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 1, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 128, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 176, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 192, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 192, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 256, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 288, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 288],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 3, 4, 4],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 384, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 384],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 448, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 48, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 48, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 512, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 64, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 672, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 72, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 768, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 88, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 96, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 96, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96, 96],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([960, 1, 5, 5],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([960, 160, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([960, 240, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([960, 640, 3, 3],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([960, 960, 1, 1],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([960],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([96],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([9],"float32"), dtype="float32", )
paddle.zeros_like(Tensor([9],"int32"), dtype=VarType(float32), )
paddle.zeros_like(Tensor([],"float32"), dtype="float32", )
paddle.Tensor.__getitem__(Tensor([10285, 1],"float32"), Tensor([1122],"int64"), )
